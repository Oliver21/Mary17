Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    COMA
    NOESNADA
    BOLEANO
    BEGIN
    POW
    PUNTO
    FUNCTION
    END
    VAR
    RAIZ
    LBRACKET
    COMSIMPLE
    SQRT
    POTENCIA
    RBRACKET
    COMDOBLE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID DOSPUNTOS p2
Rule 2     p2 -> declaracion p3
Rule 3     p3 -> p2
Rule 4     p3 -> bloque
Rule 5     bloque -> LKEY b2
Rule 6     b2 -> b3
Rule 7     b2 -> RKEY
Rule 8     b3 -> estatuto b4
Rule 9     b4 -> b3
Rule 10    b4 -> RKEY
Rule 11    expresion -> exp e2
Rule 12    e2 -> e3
Rule 13    e2 -> empty
Rule 14    e3 -> GT exp
Rule 15    e3 -> LT exp
Rule 16    e3 -> LT GT exp
Rule 17    exp -> termino exp2
Rule 18    exp2 -> SUMA exp
Rule 19    exp2 -> RESTA exp
Rule 20    exp2 -> empty
Rule 21    declaracion -> tipo ID PUNTOCOMA
Rule 22    tipo -> INT
Rule 23    tipo -> FLOAT
Rule 24    tipo -> CHAR
Rule 25    tipo -> STRING
Rule 26    tipo -> BOOL
Rule 27    asignacion -> ID IGUAL expresion PUNTOCOMA
Rule 28    print -> PRINT LPARENT pr2
Rule 29    pr2 -> expresion pr3
Rule 30    pr2 -> CADENA pr3
Rule 31    pr3 -> pr2
Rule 32    pr3 -> RPARENT PUNTOCOMA
Rule 33    condicion -> IF LKEY expresion RKEY bloque c2
Rule 34    c2 -> ELSE bloque PUNTOCOMA
Rule 35    c2 -> PUNTOCOMA
Rule 36    termino -> factor te2
Rule 37    te2 -> MULT termino
Rule 38    te2 -> DIV termino
Rule 39    te2 -> empty
Rule 40    factor -> LKEY expresion RKEY
Rule 41    factor -> f2
Rule 42    f2 -> SUMA varcte
Rule 43    f2 -> RESTA varcte
Rule 44    f2 -> varcte
Rule 45    estatuto -> asignacion
Rule 46    estatuto -> print
Rule 47    estatuto -> condicion
Rule 48    estatuto -> ciclowhile
Rule 49    estatuto -> ciclodowhile
Rule 50    estatuto -> ciclofor
Rule 51    estatuto -> read
Rule 52    estatuto -> declaracion
Rule 53    estatuto -> comentario
Rule 54    comentario -> COMENTARIO
Rule 55    varcte -> ID
Rule 56    varcte -> ENTERO
Rule 57    varcte -> FLOTANTE
Rule 58    varcte -> CADENA
Rule 59    varcte -> CARACTER
Rule 60    ciclowhile -> WHILE LPARENT expresion RPARENT bloque
Rule 61    ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
Rule 62    read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA
Rule 63    ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque
Rule 64    empty -> <empty>

Terminals, with rules where they appear

BEGIN                : 
BOLEANO              : 
BOOL                 : 26
CADENA               : 30 58
CARACTER             : 59
CHAR                 : 24
COMA                 : 
COMDOBLE             : 
COMENTARIO           : 54
COMSIMPLE            : 
DIV                  : 38
DO                   : 61
DOSPUNTOS            : 1
ELSE                 : 34
END                  : 
ENTERO               : 56
FLOAT                : 23
FLOTANTE             : 57
FOR                  : 63
FUNCTION             : 
GT                   : 14 16
ID                   : 1 21 27 55 62
IF                   : 33
IGUAL                : 27 62
INT                  : 22
LBRACKET             : 
LKEY                 : 5 33 40
LPARENT              : 28 60 61 62 63
LT                   : 15 16
MULT                 : 37
NOESNADA             : 
POTENCIA             : 
POW                  : 
PRINT                : 28
PROGRAM              : 1
PUNTO                : 
PUNTOCOMA            : 21 27 32 34 35 61 62
RAIZ                 : 
RBRACKET             : 
READ                 : 62
RESTA                : 19 43
RKEY                 : 7 10 33 40
RPARENT              : 32 60 61 62 63
SQRT                 : 
STRING               : 25
SUMA                 : 18 42
VAR                  : 
WHILE                : 60 61
error                : 

Nonterminals, with rules where they appear

asignacion           : 45 63 63
b2                   : 5
b3                   : 6 9
b4                   : 8
bloque               : 4 33 34 60 61 63
c2                   : 33
ciclodowhile         : 49
ciclofor             : 50
ciclowhile           : 48
comentario           : 53
condicion            : 47
declaracion          : 2 52
e2                   : 11
e3                   : 12
empty                : 13 20 39
estatuto             : 8
exp                  : 11 14 15 16 18 19
exp2                 : 17
expresion            : 27 29 33 40 60 61 63
f2                   : 41
factor               : 36
p2                   : 1 3
p3                   : 2
pr2                  : 28 31
pr3                  : 29 30
print                : 46
program              : 0
read                 : 51
te2                  : 36
termino              : 17 37 38
tipo                 : 21
varcte               : 42 43 44

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID DOSPUNTOS p2

    PROGRAM         shift and go to state 1

    program                        shift and go to state 2

state 1

    (1) program -> PROGRAM . ID DOSPUNTOS p2

    ID              shift and go to state 3


state 2

    (0) S' -> program .



state 3

    (1) program -> PROGRAM ID . DOSPUNTOS p2

    DOSPUNTOS       shift and go to state 4


state 4

    (1) program -> PROGRAM ID DOSPUNTOS . p2
    (2) p2 -> . declaracion p3
    (21) declaracion -> . tipo ID PUNTOCOMA
    (22) tipo -> . INT
    (23) tipo -> . FLOAT
    (24) tipo -> . CHAR
    (25) tipo -> . STRING
    (26) tipo -> . BOOL

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 6
    BOOL            shift and go to state 11

    p2                             shift and go to state 5
    tipo                           shift and go to state 7
    declaracion                    shift and go to state 12

state 5

    (1) program -> PROGRAM ID DOSPUNTOS p2 .

    $end            reduce using rule 1 (program -> PROGRAM ID DOSPUNTOS p2 .)


state 6

    (25) tipo -> STRING .

    ID              reduce using rule 25 (tipo -> STRING .)


state 7

    (21) declaracion -> tipo . ID PUNTOCOMA

    ID              shift and go to state 13


state 8

    (22) tipo -> INT .

    ID              reduce using rule 22 (tipo -> INT .)


state 9

    (23) tipo -> FLOAT .

    ID              reduce using rule 23 (tipo -> FLOAT .)


state 10

    (24) tipo -> CHAR .

    ID              reduce using rule 24 (tipo -> CHAR .)


state 11

    (26) tipo -> BOOL .

    ID              reduce using rule 26 (tipo -> BOOL .)


state 12

    (2) p2 -> declaracion . p3
    (3) p3 -> . p2
    (4) p3 -> . bloque
    (2) p2 -> . declaracion p3
    (5) bloque -> . LKEY b2
    (21) declaracion -> . tipo ID PUNTOCOMA
    (22) tipo -> . INT
    (23) tipo -> . FLOAT
    (24) tipo -> . CHAR
    (25) tipo -> . STRING
    (26) tipo -> . BOOL

    LKEY            shift and go to state 16
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 6
    BOOL            shift and go to state 11

    p2                             shift and go to state 14
    p3                             shift and go to state 15
    tipo                           shift and go to state 7
    bloque                         shift and go to state 17
    declaracion                    shift and go to state 12

state 13

    (21) declaracion -> tipo ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 18


state 14

    (3) p3 -> p2 .

    $end            reduce using rule 3 (p3 -> p2 .)


state 15

    (2) p2 -> declaracion p3 .

    $end            reduce using rule 2 (p2 -> declaracion p3 .)


state 16

    (5) bloque -> LKEY . b2
    (6) b2 -> . b3
    (7) b2 -> . RKEY
    (8) b3 -> . estatuto b4
    (45) estatuto -> . asignacion
    (46) estatuto -> . print
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclowhile
    (49) estatuto -> . ciclodowhile
    (50) estatuto -> . ciclofor
    (51) estatuto -> . read
    (52) estatuto -> . declaracion
    (53) estatuto -> . comentario
    (27) asignacion -> . ID IGUAL expresion PUNTOCOMA
    (28) print -> . PRINT LPARENT pr2
    (33) condicion -> . IF LKEY expresion RKEY bloque c2
    (60) ciclowhile -> . WHILE LPARENT expresion RPARENT bloque
    (61) ciclodowhile -> . DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (63) ciclofor -> . FOR LPARENT asignacion expresion asignacion RPARENT bloque
    (62) read -> . ID IGUAL READ LPARENT RPARENT PUNTOCOMA
    (21) declaracion -> . tipo ID PUNTOCOMA
    (54) comentario -> . COMENTARIO
    (22) tipo -> . INT
    (23) tipo -> . FLOAT
    (24) tipo -> . CHAR
    (25) tipo -> . STRING
    (26) tipo -> . BOOL

    RKEY            shift and go to state 32
    ID              shift and go to state 35
    PRINT           shift and go to state 23
    IF              shift and go to state 36
    WHILE           shift and go to state 20
    DO              shift and go to state 19
    FOR             shift and go to state 30
    COMENTARIO      shift and go to state 29
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 6
    BOOL            shift and go to state 11

    tipo                           shift and go to state 7
    asignacion                     shift and go to state 37
    read                           shift and go to state 31
    estatuto                       shift and go to state 25
    ciclofor                       shift and go to state 33
    comentario                     shift and go to state 24
    condicion                      shift and go to state 27
    b2                             shift and go to state 21
    b3                             shift and go to state 22
    print                          shift and go to state 28
    ciclodowhile                   shift and go to state 34
    ciclowhile                     shift and go to state 26
    declaracion                    shift and go to state 38

state 17

    (4) p3 -> bloque .

    $end            reduce using rule 4 (p3 -> bloque .)


state 18

    (21) declaracion -> tipo ID PUNTOCOMA .

    RKEY            reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    ID              reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    PRINT           reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    IF              reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    WHILE           reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    DO              reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    FOR             reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    COMENTARIO      reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    INT             reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    FLOAT           reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    CHAR            reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    STRING          reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    BOOL            reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)
    LKEY            reduce using rule 21 (declaracion -> tipo ID PUNTOCOMA .)


state 19

    (61) ciclodowhile -> DO . bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (5) bloque -> . LKEY b2

    LKEY            shift and go to state 16

    bloque                         shift and go to state 39

state 20

    (60) ciclowhile -> WHILE . LPARENT expresion RPARENT bloque

    LPARENT         shift and go to state 40


state 21

    (5) bloque -> LKEY b2 .

    PUNTOCOMA       reduce using rule 5 (bloque -> LKEY b2 .)
    RKEY            reduce using rule 5 (bloque -> LKEY b2 .)
    ID              reduce using rule 5 (bloque -> LKEY b2 .)
    PRINT           reduce using rule 5 (bloque -> LKEY b2 .)
    IF              reduce using rule 5 (bloque -> LKEY b2 .)
    WHILE           reduce using rule 5 (bloque -> LKEY b2 .)
    DO              reduce using rule 5 (bloque -> LKEY b2 .)
    FOR             reduce using rule 5 (bloque -> LKEY b2 .)
    COMENTARIO      reduce using rule 5 (bloque -> LKEY b2 .)
    INT             reduce using rule 5 (bloque -> LKEY b2 .)
    FLOAT           reduce using rule 5 (bloque -> LKEY b2 .)
    CHAR            reduce using rule 5 (bloque -> LKEY b2 .)
    STRING          reduce using rule 5 (bloque -> LKEY b2 .)
    BOOL            reduce using rule 5 (bloque -> LKEY b2 .)
    ELSE            reduce using rule 5 (bloque -> LKEY b2 .)
    $end            reduce using rule 5 (bloque -> LKEY b2 .)


state 22

    (6) b2 -> b3 .

    $end            reduce using rule 6 (b2 -> b3 .)
    WHILE           reduce using rule 6 (b2 -> b3 .)
    RKEY            reduce using rule 6 (b2 -> b3 .)
    ID              reduce using rule 6 (b2 -> b3 .)
    PRINT           reduce using rule 6 (b2 -> b3 .)
    IF              reduce using rule 6 (b2 -> b3 .)
    DO              reduce using rule 6 (b2 -> b3 .)
    FOR             reduce using rule 6 (b2 -> b3 .)
    COMENTARIO      reduce using rule 6 (b2 -> b3 .)
    INT             reduce using rule 6 (b2 -> b3 .)
    FLOAT           reduce using rule 6 (b2 -> b3 .)
    CHAR            reduce using rule 6 (b2 -> b3 .)
    STRING          reduce using rule 6 (b2 -> b3 .)
    BOOL            reduce using rule 6 (b2 -> b3 .)
    ELSE            reduce using rule 6 (b2 -> b3 .)
    PUNTOCOMA       reduce using rule 6 (b2 -> b3 .)


state 23

    (28) print -> PRINT . LPARENT pr2

    LPARENT         shift and go to state 41


state 24

    (53) estatuto -> comentario .

    RKEY            reduce using rule 53 (estatuto -> comentario .)
    ID              reduce using rule 53 (estatuto -> comentario .)
    PRINT           reduce using rule 53 (estatuto -> comentario .)
    IF              reduce using rule 53 (estatuto -> comentario .)
    WHILE           reduce using rule 53 (estatuto -> comentario .)
    DO              reduce using rule 53 (estatuto -> comentario .)
    FOR             reduce using rule 53 (estatuto -> comentario .)
    COMENTARIO      reduce using rule 53 (estatuto -> comentario .)
    INT             reduce using rule 53 (estatuto -> comentario .)
    FLOAT           reduce using rule 53 (estatuto -> comentario .)
    CHAR            reduce using rule 53 (estatuto -> comentario .)
    STRING          reduce using rule 53 (estatuto -> comentario .)
    BOOL            reduce using rule 53 (estatuto -> comentario .)


state 25

    (8) b3 -> estatuto . b4
    (9) b4 -> . b3
    (10) b4 -> . RKEY
    (8) b3 -> . estatuto b4
    (45) estatuto -> . asignacion
    (46) estatuto -> . print
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclowhile
    (49) estatuto -> . ciclodowhile
    (50) estatuto -> . ciclofor
    (51) estatuto -> . read
    (52) estatuto -> . declaracion
    (53) estatuto -> . comentario
    (27) asignacion -> . ID IGUAL expresion PUNTOCOMA
    (28) print -> . PRINT LPARENT pr2
    (33) condicion -> . IF LKEY expresion RKEY bloque c2
    (60) ciclowhile -> . WHILE LPARENT expresion RPARENT bloque
    (61) ciclodowhile -> . DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (63) ciclofor -> . FOR LPARENT asignacion expresion asignacion RPARENT bloque
    (62) read -> . ID IGUAL READ LPARENT RPARENT PUNTOCOMA
    (21) declaracion -> . tipo ID PUNTOCOMA
    (54) comentario -> . COMENTARIO
    (22) tipo -> . INT
    (23) tipo -> . FLOAT
    (24) tipo -> . CHAR
    (25) tipo -> . STRING
    (26) tipo -> . BOOL

    RKEY            shift and go to state 44
    ID              shift and go to state 35
    PRINT           shift and go to state 23
    IF              shift and go to state 36
    WHILE           shift and go to state 20
    DO              shift and go to state 19
    FOR             shift and go to state 30
    COMENTARIO      shift and go to state 29
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 6
    BOOL            shift and go to state 11

    tipo                           shift and go to state 7
    asignacion                     shift and go to state 37
    read                           shift and go to state 31
    estatuto                       shift and go to state 25
    ciclofor                       shift and go to state 33
    comentario                     shift and go to state 24
    b4                             shift and go to state 42
    condicion                      shift and go to state 27
    b3                             shift and go to state 43
    print                          shift and go to state 28
    ciclodowhile                   shift and go to state 34
    ciclowhile                     shift and go to state 26
    declaracion                    shift and go to state 38

state 26

    (48) estatuto -> ciclowhile .

    RKEY            reduce using rule 48 (estatuto -> ciclowhile .)
    ID              reduce using rule 48 (estatuto -> ciclowhile .)
    PRINT           reduce using rule 48 (estatuto -> ciclowhile .)
    IF              reduce using rule 48 (estatuto -> ciclowhile .)
    WHILE           reduce using rule 48 (estatuto -> ciclowhile .)
    DO              reduce using rule 48 (estatuto -> ciclowhile .)
    FOR             reduce using rule 48 (estatuto -> ciclowhile .)
    COMENTARIO      reduce using rule 48 (estatuto -> ciclowhile .)
    INT             reduce using rule 48 (estatuto -> ciclowhile .)
    FLOAT           reduce using rule 48 (estatuto -> ciclowhile .)
    CHAR            reduce using rule 48 (estatuto -> ciclowhile .)
    STRING          reduce using rule 48 (estatuto -> ciclowhile .)
    BOOL            reduce using rule 48 (estatuto -> ciclowhile .)


state 27

    (47) estatuto -> condicion .

    RKEY            reduce using rule 47 (estatuto -> condicion .)
    ID              reduce using rule 47 (estatuto -> condicion .)
    PRINT           reduce using rule 47 (estatuto -> condicion .)
    IF              reduce using rule 47 (estatuto -> condicion .)
    WHILE           reduce using rule 47 (estatuto -> condicion .)
    DO              reduce using rule 47 (estatuto -> condicion .)
    FOR             reduce using rule 47 (estatuto -> condicion .)
    COMENTARIO      reduce using rule 47 (estatuto -> condicion .)
    INT             reduce using rule 47 (estatuto -> condicion .)
    FLOAT           reduce using rule 47 (estatuto -> condicion .)
    CHAR            reduce using rule 47 (estatuto -> condicion .)
    STRING          reduce using rule 47 (estatuto -> condicion .)
    BOOL            reduce using rule 47 (estatuto -> condicion .)


state 28

    (46) estatuto -> print .

    RKEY            reduce using rule 46 (estatuto -> print .)
    ID              reduce using rule 46 (estatuto -> print .)
    PRINT           reduce using rule 46 (estatuto -> print .)
    IF              reduce using rule 46 (estatuto -> print .)
    WHILE           reduce using rule 46 (estatuto -> print .)
    DO              reduce using rule 46 (estatuto -> print .)
    FOR             reduce using rule 46 (estatuto -> print .)
    COMENTARIO      reduce using rule 46 (estatuto -> print .)
    INT             reduce using rule 46 (estatuto -> print .)
    FLOAT           reduce using rule 46 (estatuto -> print .)
    CHAR            reduce using rule 46 (estatuto -> print .)
    STRING          reduce using rule 46 (estatuto -> print .)
    BOOL            reduce using rule 46 (estatuto -> print .)


state 29

    (54) comentario -> COMENTARIO .

    RKEY            reduce using rule 54 (comentario -> COMENTARIO .)
    ID              reduce using rule 54 (comentario -> COMENTARIO .)
    PRINT           reduce using rule 54 (comentario -> COMENTARIO .)
    IF              reduce using rule 54 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 54 (comentario -> COMENTARIO .)
    DO              reduce using rule 54 (comentario -> COMENTARIO .)
    FOR             reduce using rule 54 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 54 (comentario -> COMENTARIO .)
    INT             reduce using rule 54 (comentario -> COMENTARIO .)
    FLOAT           reduce using rule 54 (comentario -> COMENTARIO .)
    CHAR            reduce using rule 54 (comentario -> COMENTARIO .)
    STRING          reduce using rule 54 (comentario -> COMENTARIO .)
    BOOL            reduce using rule 54 (comentario -> COMENTARIO .)


state 30

    (63) ciclofor -> FOR . LPARENT asignacion expresion asignacion RPARENT bloque

    LPARENT         shift and go to state 45


state 31

    (51) estatuto -> read .

    RKEY            reduce using rule 51 (estatuto -> read .)
    ID              reduce using rule 51 (estatuto -> read .)
    PRINT           reduce using rule 51 (estatuto -> read .)
    IF              reduce using rule 51 (estatuto -> read .)
    WHILE           reduce using rule 51 (estatuto -> read .)
    DO              reduce using rule 51 (estatuto -> read .)
    FOR             reduce using rule 51 (estatuto -> read .)
    COMENTARIO      reduce using rule 51 (estatuto -> read .)
    INT             reduce using rule 51 (estatuto -> read .)
    FLOAT           reduce using rule 51 (estatuto -> read .)
    CHAR            reduce using rule 51 (estatuto -> read .)
    STRING          reduce using rule 51 (estatuto -> read .)
    BOOL            reduce using rule 51 (estatuto -> read .)


state 32

    (7) b2 -> RKEY .

    $end            reduce using rule 7 (b2 -> RKEY .)
    WHILE           reduce using rule 7 (b2 -> RKEY .)
    RKEY            reduce using rule 7 (b2 -> RKEY .)
    ID              reduce using rule 7 (b2 -> RKEY .)
    PRINT           reduce using rule 7 (b2 -> RKEY .)
    IF              reduce using rule 7 (b2 -> RKEY .)
    DO              reduce using rule 7 (b2 -> RKEY .)
    FOR             reduce using rule 7 (b2 -> RKEY .)
    COMENTARIO      reduce using rule 7 (b2 -> RKEY .)
    INT             reduce using rule 7 (b2 -> RKEY .)
    FLOAT           reduce using rule 7 (b2 -> RKEY .)
    CHAR            reduce using rule 7 (b2 -> RKEY .)
    STRING          reduce using rule 7 (b2 -> RKEY .)
    BOOL            reduce using rule 7 (b2 -> RKEY .)
    ELSE            reduce using rule 7 (b2 -> RKEY .)
    PUNTOCOMA       reduce using rule 7 (b2 -> RKEY .)


state 33

    (50) estatuto -> ciclofor .

    RKEY            reduce using rule 50 (estatuto -> ciclofor .)
    ID              reduce using rule 50 (estatuto -> ciclofor .)
    PRINT           reduce using rule 50 (estatuto -> ciclofor .)
    IF              reduce using rule 50 (estatuto -> ciclofor .)
    WHILE           reduce using rule 50 (estatuto -> ciclofor .)
    DO              reduce using rule 50 (estatuto -> ciclofor .)
    FOR             reduce using rule 50 (estatuto -> ciclofor .)
    COMENTARIO      reduce using rule 50 (estatuto -> ciclofor .)
    INT             reduce using rule 50 (estatuto -> ciclofor .)
    FLOAT           reduce using rule 50 (estatuto -> ciclofor .)
    CHAR            reduce using rule 50 (estatuto -> ciclofor .)
    STRING          reduce using rule 50 (estatuto -> ciclofor .)
    BOOL            reduce using rule 50 (estatuto -> ciclofor .)


state 34

    (49) estatuto -> ciclodowhile .

    RKEY            reduce using rule 49 (estatuto -> ciclodowhile .)
    ID              reduce using rule 49 (estatuto -> ciclodowhile .)
    PRINT           reduce using rule 49 (estatuto -> ciclodowhile .)
    IF              reduce using rule 49 (estatuto -> ciclodowhile .)
    WHILE           reduce using rule 49 (estatuto -> ciclodowhile .)
    DO              reduce using rule 49 (estatuto -> ciclodowhile .)
    FOR             reduce using rule 49 (estatuto -> ciclodowhile .)
    COMENTARIO      reduce using rule 49 (estatuto -> ciclodowhile .)
    INT             reduce using rule 49 (estatuto -> ciclodowhile .)
    FLOAT           reduce using rule 49 (estatuto -> ciclodowhile .)
    CHAR            reduce using rule 49 (estatuto -> ciclodowhile .)
    STRING          reduce using rule 49 (estatuto -> ciclodowhile .)
    BOOL            reduce using rule 49 (estatuto -> ciclodowhile .)


state 35

    (27) asignacion -> ID . IGUAL expresion PUNTOCOMA
    (62) read -> ID . IGUAL READ LPARENT RPARENT PUNTOCOMA

    IGUAL           shift and go to state 46


state 36

    (33) condicion -> IF . LKEY expresion RKEY bloque c2

    LKEY            shift and go to state 47


state 37

    (45) estatuto -> asignacion .

    RKEY            reduce using rule 45 (estatuto -> asignacion .)
    ID              reduce using rule 45 (estatuto -> asignacion .)
    PRINT           reduce using rule 45 (estatuto -> asignacion .)
    IF              reduce using rule 45 (estatuto -> asignacion .)
    WHILE           reduce using rule 45 (estatuto -> asignacion .)
    DO              reduce using rule 45 (estatuto -> asignacion .)
    FOR             reduce using rule 45 (estatuto -> asignacion .)
    COMENTARIO      reduce using rule 45 (estatuto -> asignacion .)
    INT             reduce using rule 45 (estatuto -> asignacion .)
    FLOAT           reduce using rule 45 (estatuto -> asignacion .)
    CHAR            reduce using rule 45 (estatuto -> asignacion .)
    STRING          reduce using rule 45 (estatuto -> asignacion .)
    BOOL            reduce using rule 45 (estatuto -> asignacion .)


state 38

    (52) estatuto -> declaracion .

    RKEY            reduce using rule 52 (estatuto -> declaracion .)
    ID              reduce using rule 52 (estatuto -> declaracion .)
    PRINT           reduce using rule 52 (estatuto -> declaracion .)
    IF              reduce using rule 52 (estatuto -> declaracion .)
    WHILE           reduce using rule 52 (estatuto -> declaracion .)
    DO              reduce using rule 52 (estatuto -> declaracion .)
    FOR             reduce using rule 52 (estatuto -> declaracion .)
    COMENTARIO      reduce using rule 52 (estatuto -> declaracion .)
    INT             reduce using rule 52 (estatuto -> declaracion .)
    FLOAT           reduce using rule 52 (estatuto -> declaracion .)
    CHAR            reduce using rule 52 (estatuto -> declaracion .)
    STRING          reduce using rule 52 (estatuto -> declaracion .)
    BOOL            reduce using rule 52 (estatuto -> declaracion .)


state 39

    (61) ciclodowhile -> DO bloque . WHILE LPARENT expresion RPARENT PUNTOCOMA

    WHILE           shift and go to state 48


state 40

    (60) ciclowhile -> WHILE LPARENT . expresion RPARENT bloque
    (11) expresion -> . exp e2
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    expresion                      shift and go to state 60
    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 61
    factor                         shift and go to state 55

state 41

    (28) print -> PRINT LPARENT . pr2
    (29) pr2 -> . expresion pr3
    (30) pr2 -> . CADENA pr3
    (11) expresion -> . exp e2
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    CADENA          shift and go to state 63
    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CARACTER        shift and go to state 58

    expresion                      shift and go to state 65
    varcte                         shift and go to state 53
    f2                             shift and go to state 49
    factor                         shift and go to state 55
    termino                        shift and go to state 50
    exp                            shift and go to state 61
    pr2                            shift and go to state 64

state 42

    (8) b3 -> estatuto b4 .

    $end            reduce using rule 8 (b3 -> estatuto b4 .)
    WHILE           reduce using rule 8 (b3 -> estatuto b4 .)
    RKEY            reduce using rule 8 (b3 -> estatuto b4 .)
    ID              reduce using rule 8 (b3 -> estatuto b4 .)
    PRINT           reduce using rule 8 (b3 -> estatuto b4 .)
    IF              reduce using rule 8 (b3 -> estatuto b4 .)
    DO              reduce using rule 8 (b3 -> estatuto b4 .)
    FOR             reduce using rule 8 (b3 -> estatuto b4 .)
    COMENTARIO      reduce using rule 8 (b3 -> estatuto b4 .)
    INT             reduce using rule 8 (b3 -> estatuto b4 .)
    FLOAT           reduce using rule 8 (b3 -> estatuto b4 .)
    CHAR            reduce using rule 8 (b3 -> estatuto b4 .)
    STRING          reduce using rule 8 (b3 -> estatuto b4 .)
    BOOL            reduce using rule 8 (b3 -> estatuto b4 .)
    ELSE            reduce using rule 8 (b3 -> estatuto b4 .)
    PUNTOCOMA       reduce using rule 8 (b3 -> estatuto b4 .)


state 43

    (9) b4 -> b3 .

    $end            reduce using rule 9 (b4 -> b3 .)
    WHILE           reduce using rule 9 (b4 -> b3 .)
    RKEY            reduce using rule 9 (b4 -> b3 .)
    ID              reduce using rule 9 (b4 -> b3 .)
    PRINT           reduce using rule 9 (b4 -> b3 .)
    IF              reduce using rule 9 (b4 -> b3 .)
    DO              reduce using rule 9 (b4 -> b3 .)
    FOR             reduce using rule 9 (b4 -> b3 .)
    COMENTARIO      reduce using rule 9 (b4 -> b3 .)
    INT             reduce using rule 9 (b4 -> b3 .)
    FLOAT           reduce using rule 9 (b4 -> b3 .)
    CHAR            reduce using rule 9 (b4 -> b3 .)
    STRING          reduce using rule 9 (b4 -> b3 .)
    BOOL            reduce using rule 9 (b4 -> b3 .)
    ELSE            reduce using rule 9 (b4 -> b3 .)
    PUNTOCOMA       reduce using rule 9 (b4 -> b3 .)


state 44

    (10) b4 -> RKEY .

    $end            reduce using rule 10 (b4 -> RKEY .)
    WHILE           reduce using rule 10 (b4 -> RKEY .)
    RKEY            reduce using rule 10 (b4 -> RKEY .)
    ID              reduce using rule 10 (b4 -> RKEY .)
    PRINT           reduce using rule 10 (b4 -> RKEY .)
    IF              reduce using rule 10 (b4 -> RKEY .)
    DO              reduce using rule 10 (b4 -> RKEY .)
    FOR             reduce using rule 10 (b4 -> RKEY .)
    COMENTARIO      reduce using rule 10 (b4 -> RKEY .)
    INT             reduce using rule 10 (b4 -> RKEY .)
    FLOAT           reduce using rule 10 (b4 -> RKEY .)
    CHAR            reduce using rule 10 (b4 -> RKEY .)
    STRING          reduce using rule 10 (b4 -> RKEY .)
    BOOL            reduce using rule 10 (b4 -> RKEY .)
    ELSE            reduce using rule 10 (b4 -> RKEY .)
    PUNTOCOMA       reduce using rule 10 (b4 -> RKEY .)


state 45

    (63) ciclofor -> FOR LPARENT . asignacion expresion asignacion RPARENT bloque
    (27) asignacion -> . ID IGUAL expresion PUNTOCOMA

    ID              shift and go to state 67

    asignacion                     shift and go to state 66

state 46

    (27) asignacion -> ID IGUAL . expresion PUNTOCOMA
    (62) read -> ID IGUAL . READ LPARENT RPARENT PUNTOCOMA
    (11) expresion -> . exp e2
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    READ            shift and go to state 68
    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    expresion                      shift and go to state 69
    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 61
    factor                         shift and go to state 55

state 47

    (33) condicion -> IF LKEY . expresion RKEY bloque c2
    (11) expresion -> . exp e2
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    expresion                      shift and go to state 70
    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 61
    factor                         shift and go to state 55

state 48

    (61) ciclodowhile -> DO bloque WHILE . LPARENT expresion RPARENT PUNTOCOMA

    LPARENT         shift and go to state 71


state 49

    (41) factor -> f2 .

    MULT            reduce using rule 41 (factor -> f2 .)
    DIV             reduce using rule 41 (factor -> f2 .)
    SUMA            reduce using rule 41 (factor -> f2 .)
    RESTA           reduce using rule 41 (factor -> f2 .)
    GT              reduce using rule 41 (factor -> f2 .)
    LT              reduce using rule 41 (factor -> f2 .)
    RPARENT         reduce using rule 41 (factor -> f2 .)
    CADENA          reduce using rule 41 (factor -> f2 .)
    LKEY            reduce using rule 41 (factor -> f2 .)
    ID              reduce using rule 41 (factor -> f2 .)
    ENTERO          reduce using rule 41 (factor -> f2 .)
    FLOTANTE        reduce using rule 41 (factor -> f2 .)
    CARACTER        reduce using rule 41 (factor -> f2 .)
    PUNTOCOMA       reduce using rule 41 (factor -> f2 .)
    RKEY            reduce using rule 41 (factor -> f2 .)


state 50

    (17) exp -> termino . exp2
    (18) exp2 -> . SUMA exp
    (19) exp2 -> . RESTA exp
    (20) exp2 -> . empty
    (64) empty -> .

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
    SUMA            shift and go to state 73
    RESTA           shift and go to state 74
    GT              reduce using rule 64 (empty -> .)
    LT              reduce using rule 64 (empty -> .)
    RPARENT         reduce using rule 64 (empty -> .)
    CADENA          reduce using rule 64 (empty -> .)
    LKEY            reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)
    ENTERO          reduce using rule 64 (empty -> .)
    FLOTANTE        reduce using rule 64 (empty -> .)
    CARACTER        reduce using rule 64 (empty -> .)
    PUNTOCOMA       reduce using rule 64 (empty -> .)
    RKEY            reduce using rule 64 (empty -> .)

  ! SUMA            [ reduce using rule 64 (empty -> .) ]
  ! RESTA           [ reduce using rule 64 (empty -> .) ]

    exp2                           shift and go to state 72
    empty                          shift and go to state 75

state 51

    (43) f2 -> RESTA . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    varcte                         shift and go to state 76

state 52

    (42) f2 -> SUMA . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    varcte                         shift and go to state 77

state 53

    (44) f2 -> varcte .

    MULT            reduce using rule 44 (f2 -> varcte .)
    DIV             reduce using rule 44 (f2 -> varcte .)
    SUMA            reduce using rule 44 (f2 -> varcte .)
    RESTA           reduce using rule 44 (f2 -> varcte .)
    RPARENT         reduce using rule 44 (f2 -> varcte .)
    CADENA          reduce using rule 44 (f2 -> varcte .)
    LKEY            reduce using rule 44 (f2 -> varcte .)
    ID              reduce using rule 44 (f2 -> varcte .)
    ENTERO          reduce using rule 44 (f2 -> varcte .)
    FLOTANTE        reduce using rule 44 (f2 -> varcte .)
    CARACTER        reduce using rule 44 (f2 -> varcte .)
    PUNTOCOMA       reduce using rule 44 (f2 -> varcte .)
    RKEY            reduce using rule 44 (f2 -> varcte .)
    GT              reduce using rule 44 (f2 -> varcte .)
    LT              reduce using rule 44 (f2 -> varcte .)


state 54

    (58) varcte -> CADENA .

    MULT            reduce using rule 58 (varcte -> CADENA .)
    DIV             reduce using rule 58 (varcte -> CADENA .)
    SUMA            reduce using rule 58 (varcte -> CADENA .)
    RESTA           reduce using rule 58 (varcte -> CADENA .)
    RPARENT         reduce using rule 58 (varcte -> CADENA .)
    CADENA          reduce using rule 58 (varcte -> CADENA .)
    LKEY            reduce using rule 58 (varcte -> CADENA .)
    ID              reduce using rule 58 (varcte -> CADENA .)
    ENTERO          reduce using rule 58 (varcte -> CADENA .)
    FLOTANTE        reduce using rule 58 (varcte -> CADENA .)
    CARACTER        reduce using rule 58 (varcte -> CADENA .)
    PUNTOCOMA       reduce using rule 58 (varcte -> CADENA .)
    RKEY            reduce using rule 58 (varcte -> CADENA .)
    GT              reduce using rule 58 (varcte -> CADENA .)
    LT              reduce using rule 58 (varcte -> CADENA .)


state 55

    (36) termino -> factor . te2
    (37) te2 -> . MULT termino
    (38) te2 -> . DIV termino
    (39) te2 -> . empty
    (64) empty -> .

    MULT            shift and go to state 78
    DIV             shift and go to state 79
    SUMA            reduce using rule 64 (empty -> .)
    RESTA           reduce using rule 64 (empty -> .)
    GT              reduce using rule 64 (empty -> .)
    LT              reduce using rule 64 (empty -> .)
    RPARENT         reduce using rule 64 (empty -> .)
    CADENA          reduce using rule 64 (empty -> .)
    LKEY            reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)
    ENTERO          reduce using rule 64 (empty -> .)
    FLOTANTE        reduce using rule 64 (empty -> .)
    CARACTER        reduce using rule 64 (empty -> .)
    PUNTOCOMA       reduce using rule 64 (empty -> .)
    RKEY            reduce using rule 64 (empty -> .)

    te2                            shift and go to state 80
    empty                          shift and go to state 81

state 56

    (56) varcte -> ENTERO .

    MULT            reduce using rule 56 (varcte -> ENTERO .)
    DIV             reduce using rule 56 (varcte -> ENTERO .)
    SUMA            reduce using rule 56 (varcte -> ENTERO .)
    RESTA           reduce using rule 56 (varcte -> ENTERO .)
    RPARENT         reduce using rule 56 (varcte -> ENTERO .)
    CADENA          reduce using rule 56 (varcte -> ENTERO .)
    LKEY            reduce using rule 56 (varcte -> ENTERO .)
    ID              reduce using rule 56 (varcte -> ENTERO .)
    ENTERO          reduce using rule 56 (varcte -> ENTERO .)
    FLOTANTE        reduce using rule 56 (varcte -> ENTERO .)
    CARACTER        reduce using rule 56 (varcte -> ENTERO .)
    PUNTOCOMA       reduce using rule 56 (varcte -> ENTERO .)
    RKEY            reduce using rule 56 (varcte -> ENTERO .)
    GT              reduce using rule 56 (varcte -> ENTERO .)
    LT              reduce using rule 56 (varcte -> ENTERO .)


state 57

    (40) factor -> LKEY . expresion RKEY
    (11) expresion -> . exp e2
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    expresion                      shift and go to state 82
    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 61
    factor                         shift and go to state 55

state 58

    (59) varcte -> CARACTER .

    MULT            reduce using rule 59 (varcte -> CARACTER .)
    DIV             reduce using rule 59 (varcte -> CARACTER .)
    SUMA            reduce using rule 59 (varcte -> CARACTER .)
    RESTA           reduce using rule 59 (varcte -> CARACTER .)
    RPARENT         reduce using rule 59 (varcte -> CARACTER .)
    CADENA          reduce using rule 59 (varcte -> CARACTER .)
    LKEY            reduce using rule 59 (varcte -> CARACTER .)
    ID              reduce using rule 59 (varcte -> CARACTER .)
    ENTERO          reduce using rule 59 (varcte -> CARACTER .)
    FLOTANTE        reduce using rule 59 (varcte -> CARACTER .)
    CARACTER        reduce using rule 59 (varcte -> CARACTER .)
    PUNTOCOMA       reduce using rule 59 (varcte -> CARACTER .)
    RKEY            reduce using rule 59 (varcte -> CARACTER .)
    GT              reduce using rule 59 (varcte -> CARACTER .)
    LT              reduce using rule 59 (varcte -> CARACTER .)


state 59

    (55) varcte -> ID .

    MULT            reduce using rule 55 (varcte -> ID .)
    DIV             reduce using rule 55 (varcte -> ID .)
    SUMA            reduce using rule 55 (varcte -> ID .)
    RESTA           reduce using rule 55 (varcte -> ID .)
    RPARENT         reduce using rule 55 (varcte -> ID .)
    CADENA          reduce using rule 55 (varcte -> ID .)
    LKEY            reduce using rule 55 (varcte -> ID .)
    ID              reduce using rule 55 (varcte -> ID .)
    ENTERO          reduce using rule 55 (varcte -> ID .)
    FLOTANTE        reduce using rule 55 (varcte -> ID .)
    CARACTER        reduce using rule 55 (varcte -> ID .)
    PUNTOCOMA       reduce using rule 55 (varcte -> ID .)
    RKEY            reduce using rule 55 (varcte -> ID .)
    GT              reduce using rule 55 (varcte -> ID .)
    LT              reduce using rule 55 (varcte -> ID .)


state 60

    (60) ciclowhile -> WHILE LPARENT expresion . RPARENT bloque

    RPARENT         shift and go to state 83


state 61

    (11) expresion -> exp . e2
    (12) e2 -> . e3
    (13) e2 -> . empty
    (14) e3 -> . GT exp
    (15) e3 -> . LT exp
    (16) e3 -> . LT GT exp
    (64) empty -> .

    GT              shift and go to state 84
    LT              shift and go to state 85
    RPARENT         reduce using rule 64 (empty -> .)
    CADENA          reduce using rule 64 (empty -> .)
    LKEY            reduce using rule 64 (empty -> .)
    SUMA            reduce using rule 64 (empty -> .)
    RESTA           reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)
    ENTERO          reduce using rule 64 (empty -> .)
    FLOTANTE        reduce using rule 64 (empty -> .)
    CARACTER        reduce using rule 64 (empty -> .)
    PUNTOCOMA       reduce using rule 64 (empty -> .)
    RKEY            reduce using rule 64 (empty -> .)

    empty                          shift and go to state 87
    e3                             shift and go to state 86
    e2                             shift and go to state 88

state 62

    (57) varcte -> FLOTANTE .

    MULT            reduce using rule 57 (varcte -> FLOTANTE .)
    DIV             reduce using rule 57 (varcte -> FLOTANTE .)
    SUMA            reduce using rule 57 (varcte -> FLOTANTE .)
    RESTA           reduce using rule 57 (varcte -> FLOTANTE .)
    RPARENT         reduce using rule 57 (varcte -> FLOTANTE .)
    CADENA          reduce using rule 57 (varcte -> FLOTANTE .)
    LKEY            reduce using rule 57 (varcte -> FLOTANTE .)
    ID              reduce using rule 57 (varcte -> FLOTANTE .)
    ENTERO          reduce using rule 57 (varcte -> FLOTANTE .)
    FLOTANTE        reduce using rule 57 (varcte -> FLOTANTE .)
    CARACTER        reduce using rule 57 (varcte -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 57 (varcte -> FLOTANTE .)
    RKEY            reduce using rule 57 (varcte -> FLOTANTE .)
    GT              reduce using rule 57 (varcte -> FLOTANTE .)
    LT              reduce using rule 57 (varcte -> FLOTANTE .)


state 63

    (30) pr2 -> CADENA . pr3
    (58) varcte -> CADENA .
    (31) pr3 -> . pr2
    (32) pr3 -> . RPARENT PUNTOCOMA
    (29) pr2 -> . expresion pr3
    (30) pr2 -> . CADENA pr3
    (11) expresion -> . exp e2
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for LKEY resolved as shift
  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
    MULT            reduce using rule 58 (varcte -> CADENA .)
    DIV             reduce using rule 58 (varcte -> CADENA .)
    GT              reduce using rule 58 (varcte -> CADENA .)
    LT              reduce using rule 58 (varcte -> CADENA .)
    RPARENT         shift and go to state 89
    CADENA          shift and go to state 63
    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CARACTER        shift and go to state 58

  ! SUMA            [ reduce using rule 58 (varcte -> CADENA .) ]
  ! RESTA           [ reduce using rule 58 (varcte -> CADENA .) ]
  ! RPARENT         [ reduce using rule 58 (varcte -> CADENA .) ]
  ! CADENA          [ reduce using rule 58 (varcte -> CADENA .) ]
  ! LKEY            [ reduce using rule 58 (varcte -> CADENA .) ]
  ! ID              [ reduce using rule 58 (varcte -> CADENA .) ]
  ! ENTERO          [ reduce using rule 58 (varcte -> CADENA .) ]
  ! FLOTANTE        [ reduce using rule 58 (varcte -> CADENA .) ]
  ! CARACTER        [ reduce using rule 58 (varcte -> CADENA .) ]

    expresion                      shift and go to state 65
    varcte                         shift and go to state 53
    f2                             shift and go to state 49
    pr3                            shift and go to state 90
    factor                         shift and go to state 55
    termino                        shift and go to state 50
    exp                            shift and go to state 61
    pr2                            shift and go to state 91

state 64

    (28) print -> PRINT LPARENT pr2 .

    RKEY            reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    ID              reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    PRINT           reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    IF              reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    WHILE           reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    DO              reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    FOR             reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    COMENTARIO      reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    INT             reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    FLOAT           reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    CHAR            reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    STRING          reduce using rule 28 (print -> PRINT LPARENT pr2 .)
    BOOL            reduce using rule 28 (print -> PRINT LPARENT pr2 .)


state 65

    (29) pr2 -> expresion . pr3
    (31) pr3 -> . pr2
    (32) pr3 -> . RPARENT PUNTOCOMA
    (29) pr2 -> . expresion pr3
    (30) pr2 -> . CADENA pr3
    (11) expresion -> . exp e2
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    RPARENT         shift and go to state 89
    CADENA          shift and go to state 63
    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CARACTER        shift and go to state 58

    expresion                      shift and go to state 65
    varcte                         shift and go to state 53
    f2                             shift and go to state 49
    pr3                            shift and go to state 92
    factor                         shift and go to state 55
    termino                        shift and go to state 50
    exp                            shift and go to state 61
    pr2                            shift and go to state 91

state 66

    (63) ciclofor -> FOR LPARENT asignacion . expresion asignacion RPARENT bloque
    (11) expresion -> . exp e2
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    expresion                      shift and go to state 93
    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 61
    factor                         shift and go to state 55

state 67

    (27) asignacion -> ID . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 94


state 68

    (62) read -> ID IGUAL READ . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 95


state 69

    (27) asignacion -> ID IGUAL expresion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 96


state 70

    (33) condicion -> IF LKEY expresion . RKEY bloque c2

    RKEY            shift and go to state 97


state 71

    (61) ciclodowhile -> DO bloque WHILE LPARENT . expresion RPARENT PUNTOCOMA
    (11) expresion -> . exp e2
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    expresion                      shift and go to state 98
    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 61
    factor                         shift and go to state 55

state 72

    (17) exp -> termino exp2 .

    GT              reduce using rule 17 (exp -> termino exp2 .)
    LT              reduce using rule 17 (exp -> termino exp2 .)
    RPARENT         reduce using rule 17 (exp -> termino exp2 .)
    CADENA          reduce using rule 17 (exp -> termino exp2 .)
    LKEY            reduce using rule 17 (exp -> termino exp2 .)
    SUMA            reduce using rule 17 (exp -> termino exp2 .)
    RESTA           reduce using rule 17 (exp -> termino exp2 .)
    ID              reduce using rule 17 (exp -> termino exp2 .)
    ENTERO          reduce using rule 17 (exp -> termino exp2 .)
    FLOTANTE        reduce using rule 17 (exp -> termino exp2 .)
    CARACTER        reduce using rule 17 (exp -> termino exp2 .)
    PUNTOCOMA       reduce using rule 17 (exp -> termino exp2 .)
    RKEY            reduce using rule 17 (exp -> termino exp2 .)


state 73

    (18) exp2 -> SUMA . exp
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 99
    factor                         shift and go to state 55

state 74

    (19) exp2 -> RESTA . exp
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 100
    factor                         shift and go to state 55

state 75

    (20) exp2 -> empty .

    GT              reduce using rule 20 (exp2 -> empty .)
    LT              reduce using rule 20 (exp2 -> empty .)
    RPARENT         reduce using rule 20 (exp2 -> empty .)
    CADENA          reduce using rule 20 (exp2 -> empty .)
    LKEY            reduce using rule 20 (exp2 -> empty .)
    SUMA            reduce using rule 20 (exp2 -> empty .)
    RESTA           reduce using rule 20 (exp2 -> empty .)
    ID              reduce using rule 20 (exp2 -> empty .)
    ENTERO          reduce using rule 20 (exp2 -> empty .)
    FLOTANTE        reduce using rule 20 (exp2 -> empty .)
    CARACTER        reduce using rule 20 (exp2 -> empty .)
    PUNTOCOMA       reduce using rule 20 (exp2 -> empty .)
    RKEY            reduce using rule 20 (exp2 -> empty .)


state 76

    (43) f2 -> RESTA varcte .

    MULT            reduce using rule 43 (f2 -> RESTA varcte .)
    DIV             reduce using rule 43 (f2 -> RESTA varcte .)
    SUMA            reduce using rule 43 (f2 -> RESTA varcte .)
    RESTA           reduce using rule 43 (f2 -> RESTA varcte .)
    RPARENT         reduce using rule 43 (f2 -> RESTA varcte .)
    CADENA          reduce using rule 43 (f2 -> RESTA varcte .)
    LKEY            reduce using rule 43 (f2 -> RESTA varcte .)
    ID              reduce using rule 43 (f2 -> RESTA varcte .)
    ENTERO          reduce using rule 43 (f2 -> RESTA varcte .)
    FLOTANTE        reduce using rule 43 (f2 -> RESTA varcte .)
    CARACTER        reduce using rule 43 (f2 -> RESTA varcte .)
    PUNTOCOMA       reduce using rule 43 (f2 -> RESTA varcte .)
    RKEY            reduce using rule 43 (f2 -> RESTA varcte .)
    GT              reduce using rule 43 (f2 -> RESTA varcte .)
    LT              reduce using rule 43 (f2 -> RESTA varcte .)


state 77

    (42) f2 -> SUMA varcte .

    MULT            reduce using rule 42 (f2 -> SUMA varcte .)
    DIV             reduce using rule 42 (f2 -> SUMA varcte .)
    SUMA            reduce using rule 42 (f2 -> SUMA varcte .)
    RESTA           reduce using rule 42 (f2 -> SUMA varcte .)
    RPARENT         reduce using rule 42 (f2 -> SUMA varcte .)
    CADENA          reduce using rule 42 (f2 -> SUMA varcte .)
    LKEY            reduce using rule 42 (f2 -> SUMA varcte .)
    ID              reduce using rule 42 (f2 -> SUMA varcte .)
    ENTERO          reduce using rule 42 (f2 -> SUMA varcte .)
    FLOTANTE        reduce using rule 42 (f2 -> SUMA varcte .)
    CARACTER        reduce using rule 42 (f2 -> SUMA varcte .)
    PUNTOCOMA       reduce using rule 42 (f2 -> SUMA varcte .)
    RKEY            reduce using rule 42 (f2 -> SUMA varcte .)
    GT              reduce using rule 42 (f2 -> SUMA varcte .)
    LT              reduce using rule 42 (f2 -> SUMA varcte .)


state 78

    (37) te2 -> MULT . termino
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 101
    factor                         shift and go to state 55

state 79

    (38) te2 -> DIV . termino
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 102
    factor                         shift and go to state 55

state 80

    (36) termino -> factor te2 .

    SUMA            reduce using rule 36 (termino -> factor te2 .)
    RESTA           reduce using rule 36 (termino -> factor te2 .)
    GT              reduce using rule 36 (termino -> factor te2 .)
    LT              reduce using rule 36 (termino -> factor te2 .)
    RPARENT         reduce using rule 36 (termino -> factor te2 .)
    CADENA          reduce using rule 36 (termino -> factor te2 .)
    LKEY            reduce using rule 36 (termino -> factor te2 .)
    ID              reduce using rule 36 (termino -> factor te2 .)
    ENTERO          reduce using rule 36 (termino -> factor te2 .)
    FLOTANTE        reduce using rule 36 (termino -> factor te2 .)
    CARACTER        reduce using rule 36 (termino -> factor te2 .)
    PUNTOCOMA       reduce using rule 36 (termino -> factor te2 .)
    RKEY            reduce using rule 36 (termino -> factor te2 .)


state 81

    (39) te2 -> empty .

    SUMA            reduce using rule 39 (te2 -> empty .)
    RESTA           reduce using rule 39 (te2 -> empty .)
    GT              reduce using rule 39 (te2 -> empty .)
    LT              reduce using rule 39 (te2 -> empty .)
    RPARENT         reduce using rule 39 (te2 -> empty .)
    CADENA          reduce using rule 39 (te2 -> empty .)
    LKEY            reduce using rule 39 (te2 -> empty .)
    ID              reduce using rule 39 (te2 -> empty .)
    ENTERO          reduce using rule 39 (te2 -> empty .)
    FLOTANTE        reduce using rule 39 (te2 -> empty .)
    CARACTER        reduce using rule 39 (te2 -> empty .)
    PUNTOCOMA       reduce using rule 39 (te2 -> empty .)
    RKEY            reduce using rule 39 (te2 -> empty .)


state 82

    (40) factor -> LKEY expresion . RKEY

    RKEY            shift and go to state 103


state 83

    (60) ciclowhile -> WHILE LPARENT expresion RPARENT . bloque
    (5) bloque -> . LKEY b2

    LKEY            shift and go to state 16

    bloque                         shift and go to state 104

state 84

    (14) e3 -> GT . exp
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 105
    factor                         shift and go to state 55

state 85

    (15) e3 -> LT . exp
    (16) e3 -> LT . GT exp
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    GT              shift and go to state 106
    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 107
    factor                         shift and go to state 55

state 86

    (12) e2 -> e3 .

    RPARENT         reduce using rule 12 (e2 -> e3 .)
    CADENA          reduce using rule 12 (e2 -> e3 .)
    LKEY            reduce using rule 12 (e2 -> e3 .)
    SUMA            reduce using rule 12 (e2 -> e3 .)
    RESTA           reduce using rule 12 (e2 -> e3 .)
    ID              reduce using rule 12 (e2 -> e3 .)
    ENTERO          reduce using rule 12 (e2 -> e3 .)
    FLOTANTE        reduce using rule 12 (e2 -> e3 .)
    CARACTER        reduce using rule 12 (e2 -> e3 .)
    PUNTOCOMA       reduce using rule 12 (e2 -> e3 .)
    RKEY            reduce using rule 12 (e2 -> e3 .)


state 87

    (13) e2 -> empty .

    RPARENT         reduce using rule 13 (e2 -> empty .)
    CADENA          reduce using rule 13 (e2 -> empty .)
    LKEY            reduce using rule 13 (e2 -> empty .)
    SUMA            reduce using rule 13 (e2 -> empty .)
    RESTA           reduce using rule 13 (e2 -> empty .)
    ID              reduce using rule 13 (e2 -> empty .)
    ENTERO          reduce using rule 13 (e2 -> empty .)
    FLOTANTE        reduce using rule 13 (e2 -> empty .)
    CARACTER        reduce using rule 13 (e2 -> empty .)
    PUNTOCOMA       reduce using rule 13 (e2 -> empty .)
    RKEY            reduce using rule 13 (e2 -> empty .)


state 88

    (11) expresion -> exp e2 .

    RKEY            reduce using rule 11 (expresion -> exp e2 .)
    RPARENT         reduce using rule 11 (expresion -> exp e2 .)
    CADENA          reduce using rule 11 (expresion -> exp e2 .)
    LKEY            reduce using rule 11 (expresion -> exp e2 .)
    SUMA            reduce using rule 11 (expresion -> exp e2 .)
    RESTA           reduce using rule 11 (expresion -> exp e2 .)
    ID              reduce using rule 11 (expresion -> exp e2 .)
    ENTERO          reduce using rule 11 (expresion -> exp e2 .)
    FLOTANTE        reduce using rule 11 (expresion -> exp e2 .)
    CARACTER        reduce using rule 11 (expresion -> exp e2 .)
    PUNTOCOMA       reduce using rule 11 (expresion -> exp e2 .)


state 89

    (32) pr3 -> RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 108


state 90

    (30) pr2 -> CADENA pr3 .

    RKEY            reduce using rule 30 (pr2 -> CADENA pr3 .)
    ID              reduce using rule 30 (pr2 -> CADENA pr3 .)
    PRINT           reduce using rule 30 (pr2 -> CADENA pr3 .)
    IF              reduce using rule 30 (pr2 -> CADENA pr3 .)
    WHILE           reduce using rule 30 (pr2 -> CADENA pr3 .)
    DO              reduce using rule 30 (pr2 -> CADENA pr3 .)
    FOR             reduce using rule 30 (pr2 -> CADENA pr3 .)
    COMENTARIO      reduce using rule 30 (pr2 -> CADENA pr3 .)
    INT             reduce using rule 30 (pr2 -> CADENA pr3 .)
    FLOAT           reduce using rule 30 (pr2 -> CADENA pr3 .)
    CHAR            reduce using rule 30 (pr2 -> CADENA pr3 .)
    STRING          reduce using rule 30 (pr2 -> CADENA pr3 .)
    BOOL            reduce using rule 30 (pr2 -> CADENA pr3 .)


state 91

    (31) pr3 -> pr2 .

    RKEY            reduce using rule 31 (pr3 -> pr2 .)
    ID              reduce using rule 31 (pr3 -> pr2 .)
    PRINT           reduce using rule 31 (pr3 -> pr2 .)
    IF              reduce using rule 31 (pr3 -> pr2 .)
    WHILE           reduce using rule 31 (pr3 -> pr2 .)
    DO              reduce using rule 31 (pr3 -> pr2 .)
    FOR             reduce using rule 31 (pr3 -> pr2 .)
    COMENTARIO      reduce using rule 31 (pr3 -> pr2 .)
    INT             reduce using rule 31 (pr3 -> pr2 .)
    FLOAT           reduce using rule 31 (pr3 -> pr2 .)
    CHAR            reduce using rule 31 (pr3 -> pr2 .)
    STRING          reduce using rule 31 (pr3 -> pr2 .)
    BOOL            reduce using rule 31 (pr3 -> pr2 .)


state 92

    (29) pr2 -> expresion pr3 .

    RKEY            reduce using rule 29 (pr2 -> expresion pr3 .)
    ID              reduce using rule 29 (pr2 -> expresion pr3 .)
    PRINT           reduce using rule 29 (pr2 -> expresion pr3 .)
    IF              reduce using rule 29 (pr2 -> expresion pr3 .)
    WHILE           reduce using rule 29 (pr2 -> expresion pr3 .)
    DO              reduce using rule 29 (pr2 -> expresion pr3 .)
    FOR             reduce using rule 29 (pr2 -> expresion pr3 .)
    COMENTARIO      reduce using rule 29 (pr2 -> expresion pr3 .)
    INT             reduce using rule 29 (pr2 -> expresion pr3 .)
    FLOAT           reduce using rule 29 (pr2 -> expresion pr3 .)
    CHAR            reduce using rule 29 (pr2 -> expresion pr3 .)
    STRING          reduce using rule 29 (pr2 -> expresion pr3 .)
    BOOL            reduce using rule 29 (pr2 -> expresion pr3 .)


state 93

    (63) ciclofor -> FOR LPARENT asignacion expresion . asignacion RPARENT bloque
    (27) asignacion -> . ID IGUAL expresion PUNTOCOMA

    ID              shift and go to state 67

    asignacion                     shift and go to state 109

state 94

    (27) asignacion -> ID IGUAL . expresion PUNTOCOMA
    (11) expresion -> . exp e2
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    expresion                      shift and go to state 69
    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 61
    factor                         shift and go to state 55

state 95

    (62) read -> ID IGUAL READ LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 110


state 96

    (27) asignacion -> ID IGUAL expresion PUNTOCOMA .

    RKEY            reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    PRINT           reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    WHILE           reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    DO              reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    FOR             reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    COMENTARIO      reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    INT             reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    FLOAT           reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    CHAR            reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    STRING          reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    BOOL            reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    RPARENT         reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    LKEY            reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    SUMA            reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    RESTA           reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    ENTERO          reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    FLOTANTE        reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    CADENA          reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    CARACTER        reduce using rule 27 (asignacion -> ID IGUAL expresion PUNTOCOMA .)


state 97

    (33) condicion -> IF LKEY expresion RKEY . bloque c2
    (5) bloque -> . LKEY b2

    LKEY            shift and go to state 16

    bloque                         shift and go to state 111

state 98

    (61) ciclodowhile -> DO bloque WHILE LPARENT expresion . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 112


state 99

    (18) exp2 -> SUMA exp .

    GT              reduce using rule 18 (exp2 -> SUMA exp .)
    LT              reduce using rule 18 (exp2 -> SUMA exp .)
    RPARENT         reduce using rule 18 (exp2 -> SUMA exp .)
    CADENA          reduce using rule 18 (exp2 -> SUMA exp .)
    LKEY            reduce using rule 18 (exp2 -> SUMA exp .)
    SUMA            reduce using rule 18 (exp2 -> SUMA exp .)
    RESTA           reduce using rule 18 (exp2 -> SUMA exp .)
    ID              reduce using rule 18 (exp2 -> SUMA exp .)
    ENTERO          reduce using rule 18 (exp2 -> SUMA exp .)
    FLOTANTE        reduce using rule 18 (exp2 -> SUMA exp .)
    CARACTER        reduce using rule 18 (exp2 -> SUMA exp .)
    PUNTOCOMA       reduce using rule 18 (exp2 -> SUMA exp .)
    RKEY            reduce using rule 18 (exp2 -> SUMA exp .)


state 100

    (19) exp2 -> RESTA exp .

    GT              reduce using rule 19 (exp2 -> RESTA exp .)
    LT              reduce using rule 19 (exp2 -> RESTA exp .)
    RPARENT         reduce using rule 19 (exp2 -> RESTA exp .)
    CADENA          reduce using rule 19 (exp2 -> RESTA exp .)
    LKEY            reduce using rule 19 (exp2 -> RESTA exp .)
    SUMA            reduce using rule 19 (exp2 -> RESTA exp .)
    RESTA           reduce using rule 19 (exp2 -> RESTA exp .)
    ID              reduce using rule 19 (exp2 -> RESTA exp .)
    ENTERO          reduce using rule 19 (exp2 -> RESTA exp .)
    FLOTANTE        reduce using rule 19 (exp2 -> RESTA exp .)
    CARACTER        reduce using rule 19 (exp2 -> RESTA exp .)
    PUNTOCOMA       reduce using rule 19 (exp2 -> RESTA exp .)
    RKEY            reduce using rule 19 (exp2 -> RESTA exp .)


state 101

    (37) te2 -> MULT termino .

    SUMA            reduce using rule 37 (te2 -> MULT termino .)
    RESTA           reduce using rule 37 (te2 -> MULT termino .)
    GT              reduce using rule 37 (te2 -> MULT termino .)
    LT              reduce using rule 37 (te2 -> MULT termino .)
    RPARENT         reduce using rule 37 (te2 -> MULT termino .)
    CADENA          reduce using rule 37 (te2 -> MULT termino .)
    LKEY            reduce using rule 37 (te2 -> MULT termino .)
    ID              reduce using rule 37 (te2 -> MULT termino .)
    ENTERO          reduce using rule 37 (te2 -> MULT termino .)
    FLOTANTE        reduce using rule 37 (te2 -> MULT termino .)
    CARACTER        reduce using rule 37 (te2 -> MULT termino .)
    PUNTOCOMA       reduce using rule 37 (te2 -> MULT termino .)
    RKEY            reduce using rule 37 (te2 -> MULT termino .)


state 102

    (38) te2 -> DIV termino .

    SUMA            reduce using rule 38 (te2 -> DIV termino .)
    RESTA           reduce using rule 38 (te2 -> DIV termino .)
    GT              reduce using rule 38 (te2 -> DIV termino .)
    LT              reduce using rule 38 (te2 -> DIV termino .)
    RPARENT         reduce using rule 38 (te2 -> DIV termino .)
    CADENA          reduce using rule 38 (te2 -> DIV termino .)
    LKEY            reduce using rule 38 (te2 -> DIV termino .)
    ID              reduce using rule 38 (te2 -> DIV termino .)
    ENTERO          reduce using rule 38 (te2 -> DIV termino .)
    FLOTANTE        reduce using rule 38 (te2 -> DIV termino .)
    CARACTER        reduce using rule 38 (te2 -> DIV termino .)
    PUNTOCOMA       reduce using rule 38 (te2 -> DIV termino .)
    RKEY            reduce using rule 38 (te2 -> DIV termino .)


state 103

    (40) factor -> LKEY expresion RKEY .

    MULT            reduce using rule 40 (factor -> LKEY expresion RKEY .)
    DIV             reduce using rule 40 (factor -> LKEY expresion RKEY .)
    SUMA            reduce using rule 40 (factor -> LKEY expresion RKEY .)
    RESTA           reduce using rule 40 (factor -> LKEY expresion RKEY .)
    GT              reduce using rule 40 (factor -> LKEY expresion RKEY .)
    LT              reduce using rule 40 (factor -> LKEY expresion RKEY .)
    RPARENT         reduce using rule 40 (factor -> LKEY expresion RKEY .)
    CADENA          reduce using rule 40 (factor -> LKEY expresion RKEY .)
    LKEY            reduce using rule 40 (factor -> LKEY expresion RKEY .)
    ID              reduce using rule 40 (factor -> LKEY expresion RKEY .)
    ENTERO          reduce using rule 40 (factor -> LKEY expresion RKEY .)
    FLOTANTE        reduce using rule 40 (factor -> LKEY expresion RKEY .)
    CARACTER        reduce using rule 40 (factor -> LKEY expresion RKEY .)
    PUNTOCOMA       reduce using rule 40 (factor -> LKEY expresion RKEY .)
    RKEY            reduce using rule 40 (factor -> LKEY expresion RKEY .)


state 104

    (60) ciclowhile -> WHILE LPARENT expresion RPARENT bloque .

    RKEY            reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    ID              reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    PRINT           reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    IF              reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    WHILE           reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    DO              reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    FOR             reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    COMENTARIO      reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    INT             reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    FLOAT           reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    CHAR            reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    STRING          reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    BOOL            reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)


state 105

    (14) e3 -> GT exp .

    RPARENT         reduce using rule 14 (e3 -> GT exp .)
    CADENA          reduce using rule 14 (e3 -> GT exp .)
    LKEY            reduce using rule 14 (e3 -> GT exp .)
    SUMA            reduce using rule 14 (e3 -> GT exp .)
    RESTA           reduce using rule 14 (e3 -> GT exp .)
    ID              reduce using rule 14 (e3 -> GT exp .)
    ENTERO          reduce using rule 14 (e3 -> GT exp .)
    FLOTANTE        reduce using rule 14 (e3 -> GT exp .)
    CARACTER        reduce using rule 14 (e3 -> GT exp .)
    PUNTOCOMA       reduce using rule 14 (e3 -> GT exp .)
    RKEY            reduce using rule 14 (e3 -> GT exp .)


state 106

    (16) e3 -> LT GT . exp
    (17) exp -> . termino exp2
    (36) termino -> . factor te2
    (40) factor -> . LKEY expresion RKEY
    (41) factor -> . f2
    (42) f2 -> . SUMA varcte
    (43) f2 -> . RESTA varcte
    (44) f2 -> . varcte
    (55) varcte -> . ID
    (56) varcte -> . ENTERO
    (57) varcte -> . FLOTANTE
    (58) varcte -> . CADENA
    (59) varcte -> . CARACTER

    LKEY            shift and go to state 57
    SUMA            shift and go to state 52
    RESTA           shift and go to state 51
    ID              shift and go to state 59
    ENTERO          shift and go to state 56
    FLOTANTE        shift and go to state 62
    CADENA          shift and go to state 54
    CARACTER        shift and go to state 58

    f2                             shift and go to state 49
    varcte                         shift and go to state 53
    termino                        shift and go to state 50
    exp                            shift and go to state 113
    factor                         shift and go to state 55

state 107

    (15) e3 -> LT exp .

    RPARENT         reduce using rule 15 (e3 -> LT exp .)
    CADENA          reduce using rule 15 (e3 -> LT exp .)
    LKEY            reduce using rule 15 (e3 -> LT exp .)
    SUMA            reduce using rule 15 (e3 -> LT exp .)
    RESTA           reduce using rule 15 (e3 -> LT exp .)
    ID              reduce using rule 15 (e3 -> LT exp .)
    ENTERO          reduce using rule 15 (e3 -> LT exp .)
    FLOTANTE        reduce using rule 15 (e3 -> LT exp .)
    CARACTER        reduce using rule 15 (e3 -> LT exp .)
    PUNTOCOMA       reduce using rule 15 (e3 -> LT exp .)
    RKEY            reduce using rule 15 (e3 -> LT exp .)


state 108

    (32) pr3 -> RPARENT PUNTOCOMA .

    RKEY            reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    ID              reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    IF              reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    DO              reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    FOR             reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    INT             reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    FLOAT           reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    CHAR            reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    STRING          reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)
    BOOL            reduce using rule 32 (pr3 -> RPARENT PUNTOCOMA .)


state 109

    (63) ciclofor -> FOR LPARENT asignacion expresion asignacion . RPARENT bloque

    RPARENT         shift and go to state 114


state 110

    (62) read -> ID IGUAL READ LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 115


state 111

    (33) condicion -> IF LKEY expresion RKEY bloque . c2
    (34) c2 -> . ELSE bloque PUNTOCOMA
    (35) c2 -> . PUNTOCOMA

    ELSE            shift and go to state 117
    PUNTOCOMA       shift and go to state 116

    c2                             shift and go to state 118

state 112

    (61) ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 119


state 113

    (16) e3 -> LT GT exp .

    RPARENT         reduce using rule 16 (e3 -> LT GT exp .)
    CADENA          reduce using rule 16 (e3 -> LT GT exp .)
    LKEY            reduce using rule 16 (e3 -> LT GT exp .)
    SUMA            reduce using rule 16 (e3 -> LT GT exp .)
    RESTA           reduce using rule 16 (e3 -> LT GT exp .)
    ID              reduce using rule 16 (e3 -> LT GT exp .)
    ENTERO          reduce using rule 16 (e3 -> LT GT exp .)
    FLOTANTE        reduce using rule 16 (e3 -> LT GT exp .)
    CARACTER        reduce using rule 16 (e3 -> LT GT exp .)
    PUNTOCOMA       reduce using rule 16 (e3 -> LT GT exp .)
    RKEY            reduce using rule 16 (e3 -> LT GT exp .)


state 114

    (63) ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT . bloque
    (5) bloque -> . LKEY b2

    LKEY            shift and go to state 16

    bloque                         shift and go to state 120

state 115

    (62) read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .

    RKEY            reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    ID              reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    INT             reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    FLOAT           reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    CHAR            reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    STRING          reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    BOOL            reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)


state 116

    (35) c2 -> PUNTOCOMA .

    RKEY            reduce using rule 35 (c2 -> PUNTOCOMA .)
    ID              reduce using rule 35 (c2 -> PUNTOCOMA .)
    PRINT           reduce using rule 35 (c2 -> PUNTOCOMA .)
    IF              reduce using rule 35 (c2 -> PUNTOCOMA .)
    WHILE           reduce using rule 35 (c2 -> PUNTOCOMA .)
    DO              reduce using rule 35 (c2 -> PUNTOCOMA .)
    FOR             reduce using rule 35 (c2 -> PUNTOCOMA .)
    COMENTARIO      reduce using rule 35 (c2 -> PUNTOCOMA .)
    INT             reduce using rule 35 (c2 -> PUNTOCOMA .)
    FLOAT           reduce using rule 35 (c2 -> PUNTOCOMA .)
    CHAR            reduce using rule 35 (c2 -> PUNTOCOMA .)
    STRING          reduce using rule 35 (c2 -> PUNTOCOMA .)
    BOOL            reduce using rule 35 (c2 -> PUNTOCOMA .)


state 117

    (34) c2 -> ELSE . bloque PUNTOCOMA
    (5) bloque -> . LKEY b2

    LKEY            shift and go to state 16

    bloque                         shift and go to state 121

state 118

    (33) condicion -> IF LKEY expresion RKEY bloque c2 .

    RKEY            reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    ID              reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    PRINT           reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    IF              reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    WHILE           reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    DO              reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    FOR             reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    COMENTARIO      reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    INT             reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    FLOAT           reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    CHAR            reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    STRING          reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    BOOL            reduce using rule 33 (condicion -> IF LKEY expresion RKEY bloque c2 .)


state 119

    (61) ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .

    RKEY            reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    ID              reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    IF              reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    DO              reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    FOR             reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    INT             reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    FLOAT           reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    CHAR            reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    STRING          reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    BOOL            reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)


state 120

    (63) ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .

    RKEY            reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    ID              reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    PRINT           reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    IF              reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    WHILE           reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    DO              reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    FOR             reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    COMENTARIO      reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    INT             reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    FLOAT           reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    CHAR            reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    STRING          reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    BOOL            reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)


state 121

    (34) c2 -> ELSE bloque . PUNTOCOMA

    PUNTOCOMA       shift and go to state 122


state 122

    (34) c2 -> ELSE bloque PUNTOCOMA .

    RKEY            reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    ID              reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    PRINT           reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    IF              reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    WHILE           reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    DO              reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    FOR             reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    COMENTARIO      reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    INT             reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    FLOAT           reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    CHAR            reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    STRING          reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)
    BOOL            reduce using rule 34 (c2 -> ELSE bloque PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUMA in state 50 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 50 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 63 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 63 resolved as shift
WARNING: shift/reduce conflict for LKEY in state 63 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 63 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 63 resolved as shift
WARNING: shift/reduce conflict for ID in state 63 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 63 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 63 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 63 resolved as shift
