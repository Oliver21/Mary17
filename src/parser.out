Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    NOESNADA
    PUNTO
    BEGIN
    POW
    BOLEANO
    FUNCTION
    END
    VAR
    RAIZ
    COMSIMPLE
    SQRT
    POTENCIA
    COMDOBLE
    CIRCULO

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2
Rule 2     initTop -> empty
Rule 3     p2 -> p3
Rule 4     p2 -> p4
Rule 5     p2 -> p5
Rule 6     p3 -> declaracion p3
Rule 7     p3 -> p4
Rule 8     p4 -> function p4
Rule 9     p4 -> p5
Rule 10    p5 -> cuadrupro2 bloque
Rule 11    cuadrupro -> empty
Rule 12    cuadrupro2 -> empty
Rule 13    bloque -> LKEY iniEnv b3 b4 b5
Rule 14    iniEnv -> empty
Rule 15    b3 -> declaracion b3
Rule 16    b3 -> empty
Rule 17    b4 -> estatuto b4
Rule 18    b4 -> empty
Rule 19    b5 -> RKEY
Rule 20    expresion -> expresion2 expre
Rule 21    expre -> expre2
Rule 22    expre -> empty
Rule 23    expre2 -> AND tagmetelog expresion tagsacalog
Rule 24    expre2 -> OR tagmetelog expresion tagsacalog
Rule 25    tagmetelog -> empty
Rule 26    tagsacalog -> empty
Rule 27    expresion2 -> exp e2
Rule 28    e2 -> e3
Rule 29    e2 -> empty
Rule 30    e3 -> GT tagrel exp tagsacrel
Rule 31    e3 -> LT tagrel exp tagsacrel
Rule 32    e3 -> LE tagrel exp tagsacrel
Rule 33    e3 -> GE tagrel exp tagsacrel
Rule 34    e3 -> DIF tagrel exp tagsacrel
Rule 35    e3 -> SAME tagrel exp tagsacrel
Rule 36    tagrel -> empty
Rule 37    tagsacrel -> empty
Rule 38    exp -> termino tagsacops exp2
Rule 39    exp2 -> SUMA tagop exp
Rule 40    exp2 -> RESTA tagop exp
Rule 41    exp2 -> empty
Rule 42    tagop -> empty
Rule 43    tagsacops -> empty
Rule 44    declaracion -> tipo ID decla1
Rule 45    decla1 -> declafinal
Rule 46    decla1 -> LBRACKET exp decla2
Rule 47    decla2 -> RBRACKET declafinal
Rule 48    decla2 -> COMA exp decla2
Rule 49    declafinal -> PUNTOCOMA
Rule 50    tipo -> INT
Rule 51    tipo -> FLOAT
Rule 52    tipo -> CHAR
Rule 53    tipo -> STRING
Rule 54    tipo -> BOOL
Rule 55    asignacion -> ID asig2
Rule 56    asig2 -> LBRACKET exp asig3
Rule 57    asig2 -> asigfinal
Rule 58    asig3 -> COMA exp asig3
Rule 59    asig3 -> RBRACKET asigfinal
Rule 60    asigfinal -> IGUAL expresion PUNTOCOMA
Rule 61    print -> PRINT LPARENT pr2
Rule 62    pr2 -> expresion pr3
Rule 63    pr2 -> CADENA pr3
Rule 64    pr3 -> pr2
Rule 65    pr3 -> RPARENT PUNTOCOMA
Rule 66    condicion -> IF LKEY expresion RKEY bloque c2
Rule 67    c2 -> ELSE bloque PUNTOCOMA
Rule 68    c2 -> PUNTOCOMA
Rule 69    termino -> factor tagsacopm te2
Rule 70    te2 -> MULT termino
Rule 71    te2 -> DIV termino
Rule 72    te2 -> empty
Rule 73    tagsacopm -> empty
Rule 74    factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo
Rule 75    factor -> f2
Rule 76    factor -> f3
Rule 77    factor -> f6
Rule 78    factor -> f7
Rule 79    f2 -> varcte
Rule 80    f3 -> ID
Rule 81    tagfondofalso -> empty
Rule 82    tagsacafondo -> empty
Rule 83    f7 -> ID LBRACKET exp f8
Rule 84    f8 -> COMA exp f8
Rule 85    f8 -> RBRACKET
Rule 86    f6 -> llamafuncion
Rule 87    estatuto -> asignacion
Rule 88    estatuto -> print
Rule 89    estatuto -> condicion
Rule 90    estatuto -> ciclowhile
Rule 91    estatuto -> ciclodowhile
Rule 92    estatuto -> ciclofor
Rule 93    estatuto -> read
Rule 94    estatuto -> comentario
Rule 95    estatuto -> cuadrado
Rule 96    estatuto -> triangulo
Rule 97    estatuto -> casa
Rule 98    estatuto -> rectangulo
Rule 99    estatuto -> cubo
Rule 100   estatuto -> trapecio
Rule 101   estatuto -> estrella
Rule 102   estatuto -> mueve
Rule 103   estatuto -> levanta
Rule 104   estatuto -> apoya
Rule 105   estatuto -> dimension
Rule 106   estatuto -> llamafuncion
Rule 107   estatuto -> if
Rule 108   comentario -> COMENTARIO
Rule 109   varcte -> ENTERO tagint
Rule 110   varcte -> FLOTANTE tagfloat
Rule 111   varcte -> CADENA tagcad
Rule 112   varcte -> CARACTER tagcar
Rule 113   tagint -> empty
Rule 114   tagfloat -> empty
Rule 115   tagcad -> empty
Rule 116   tagcar -> empty
Rule 117   ciclowhile -> WHILE LPARENT expresion RPARENT bloque
Rule 118   ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
Rule 119   read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA
Rule 120   ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque
Rule 121   if -> IF LPARENT expresion RPARENT bloque if2
Rule 122   if2 -> empty
Rule 123   if2 -> ELSE bloque
Rule 124   cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA
Rule 125   triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA
Rule 126   rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 127   casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 128   estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA
Rule 129   cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA
Rule 130   mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 131   levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA
Rule 132   apoya -> APOYA LPARENT RPARENT PUNTOCOMA
Rule 133   trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 134   dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA
Rule 135   function -> tipo ID LPARENT funct11
Rule 136   function -> VOID ID LPARENT funct11
Rule 137   funct11 -> function4
Rule 138   funct11 -> funct2
Rule 139   funct2 -> tipo ID funct3
Rule 140   funct3 -> COMA funct2
Rule 141   funct3 -> function4
Rule 142   function4 -> RPARENT noinitFunc bloque initFunc
Rule 143   noinitFunc -> empty
Rule 144   initFunc -> empty
Rule 145   llamafuncion -> ID LPARENT llamaf11
Rule 146   llamaf11 -> llamaf2
Rule 147   llamaf11 -> llamaf4
Rule 148   llamaf2 -> exp llamaf3
Rule 149   llamaf3 -> COMA llamaf2
Rule 150   llamaf3 -> llamaf4
Rule 151   llamaf4 -> RPARENT
Rule 152   empty -> <empty>

Terminals, with rules where they appear

AND                  : 23
APOYA                : 132
BEGIN                : 
BOLEANO              : 
BOOL                 : 54
CADENA               : 63 111
CARACTER             : 112
CASA                 : 127
CHAR                 : 52
CIRCULO              : 
COMA                 : 48 58 84 126 127 130 133 140 149
COMDOBLE             : 
COMENTARIO           : 108
COMSIMPLE            : 
CUADRADO             : 124
CUBO                 : 129
DIF                  : 34
DIMENSION            : 134
DIV                  : 71
DO                   : 118
DOSPUNTOS            : 1
ELSE                 : 67 123
END                  : 
ENTERO               : 109
ESTRELLA             : 128
FLOAT                : 51
FLOTANTE             : 110
FOR                  : 120
FUNCTION             : 
GE                   : 33
GT                   : 30
ID                   : 1 44 55 80 83 119 135 136 139 145
IF                   : 66 121
IGUAL                : 60 119
INT                  : 50
LBRACKET             : 46 56 83
LE                   : 32
LEVANTA              : 131
LKEY                 : 13 66
LPARENT              : 61 74 117 118 119 120 121 124 125 126 127 128 129 130 131 132 133 134 135 136 145
LT                   : 31
MUEVE                : 130
MULT                 : 70
NOESNADA             : 
OR                   : 24
POTENCIA             : 
POW                  : 
PRINT                : 61
PROGRAM              : 1
PUNTO                : 
PUNTOCOMA            : 49 60 65 67 68 118 119 124 125 126 127 128 129 130 131 132 133 134
RAIZ                 : 
RBRACKET             : 47 59 85
READ                 : 119
RECTANGULO           : 126
RESTA                : 40
RKEY                 : 19 66
RPARENT              : 65 74 117 118 119 120 121 124 125 126 127 128 129 130 131 132 133 134 142 151
SAME                 : 35
SQRT                 : 
STRING               : 53
SUMA                 : 39
TRAPECIO             : 133
TRIANGULO            : 125
VAR                  : 
VOID                 : 136
WHILE                : 117 118
error                : 

Nonterminals, with rules where they appear

apoya                : 104
asig2                : 55
asig3                : 56 58
asigfinal            : 57 59
asignacion           : 87 120 120
b3                   : 13 15
b4                   : 13 17
b5                   : 13
bloque               : 10 66 67 117 118 120 121 123 142
c2                   : 66
casa                 : 97
ciclodowhile         : 91
ciclofor             : 92
ciclowhile           : 90
comentario           : 94
condicion            : 89
cuadrado             : 95
cuadrupro            : 1
cuadrupro2           : 10
cubo                 : 99
decla1               : 44
decla2               : 46 48
declafinal           : 45 47
declaracion          : 6 15
dimension            : 105
e2                   : 27
e3                   : 28
empty                : 2 11 12 14 16 18 22 25 26 29 36 37 41 42 43 72 73 81 82 113 114 115 116 122 143 144
estatuto             : 17
estrella             : 101
exp                  : 27 30 31 32 33 34 35 39 40 46 48 56 58 83 84 124 125 126 126 127 127 128 129 130 130 133 133 134 148
exp2                 : 38
expre                : 20
expre2               : 21
expresion            : 23 24 60 62 66 74 117 118 120 121
expresion2           : 20
f2                   : 75
f3                   : 76
f6                   : 77
f7                   : 78
f8                   : 83 84
factor               : 69
funct11              : 135 136
funct2               : 138 140
funct3               : 139
function             : 8
function4            : 137 141
if                   : 107
if2                  : 121
iniEnv               : 13
initFunc             : 142
initTop              : 1
levanta              : 103
llamaf11             : 145
llamaf2              : 146 149
llamaf3              : 148
llamaf4              : 147 150
llamafuncion         : 86 106
mueve                : 102
noinitFunc           : 142
p2                   : 1
p3                   : 3 6
p4                   : 4 7 8
p5                   : 5 9
pr2                  : 61 64
pr3                  : 62 63
print                : 88
program              : 0
read                 : 93
rectangulo           : 98
tagcad               : 111
tagcar               : 112
tagfloat             : 110
tagfondofalso        : 74
tagint               : 109
tagmetelog           : 23 24
tagop                : 39 40
tagrel               : 30 31 32 33 34 35
tagsacafondo         : 74
tagsacalog           : 23 24
tagsacopm            : 69
tagsacops            : 38
tagsacrel            : 30 31 32 33 34 35
te2                  : 69
termino              : 38 70 71
tipo                 : 44 135 139
trapecio             : 100
triangulo            : 96
varcte               : 79

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM cuadrupro ID initTop DOSPUNTOS p2

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . cuadrupro ID initTop DOSPUNTOS p2
    (11) cuadrupro -> . empty
    (152) empty -> .

    ID              reduce using rule 152 (empty -> .)

    cuadrupro                      shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) program -> PROGRAM cuadrupro . ID initTop DOSPUNTOS p2

    ID              shift and go to state 5


state 4

    (11) cuadrupro -> empty .

    ID              reduce using rule 11 (cuadrupro -> empty .)


state 5

    (1) program -> PROGRAM cuadrupro ID . initTop DOSPUNTOS p2
    (2) initTop -> . empty
    (152) empty -> .

    DOSPUNTOS       reduce using rule 152 (empty -> .)

    initTop                        shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) program -> PROGRAM cuadrupro ID initTop . DOSPUNTOS p2

    DOSPUNTOS       shift and go to state 8


state 7

    (2) initTop -> empty .

    DOSPUNTOS       reduce using rule 2 (initTop -> empty .)


state 8

    (1) program -> PROGRAM cuadrupro ID initTop DOSPUNTOS . p2
    (3) p2 -> . p3
    (4) p2 -> . p4
    (5) p2 -> . p5
    (6) p3 -> . declaracion p3
    (7) p3 -> . p4
    (8) p4 -> . function p4
    (9) p4 -> . p5
    (10) p5 -> . cuadrupro2 bloque
    (44) declaracion -> . tipo ID decla1
    (135) function -> . tipo ID LPARENT funct11
    (136) function -> . VOID ID LPARENT funct11
    (12) cuadrupro2 -> . empty
    (50) tipo -> . INT
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . STRING
    (54) tipo -> . BOOL
    (152) empty -> .

    VOID            shift and go to state 10
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22
    LKEY            reduce using rule 152 (empty -> .)

    p2                             shift and go to state 15
    p3                             shift and go to state 16
    tipo                           shift and go to state 11
    p4                             shift and go to state 18
    p5                             shift and go to state 19
    function                       shift and go to state 13
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 12
    declaracion                    shift and go to state 23

state 9

    (10) p5 -> cuadrupro2 . bloque
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 25

state 10

    (136) function -> VOID . ID LPARENT funct11

    ID              shift and go to state 26


state 11

    (44) declaracion -> tipo . ID decla1
    (135) function -> tipo . ID LPARENT funct11

    ID              shift and go to state 27


state 12

    (12) cuadrupro2 -> empty .

    LKEY            reduce using rule 12 (cuadrupro2 -> empty .)


state 13

    (8) p4 -> function . p4
    (8) p4 -> . function p4
    (9) p4 -> . p5
    (135) function -> . tipo ID LPARENT funct11
    (136) function -> . VOID ID LPARENT funct11
    (10) p5 -> . cuadrupro2 bloque
    (50) tipo -> . INT
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . STRING
    (54) tipo -> . BOOL
    (12) cuadrupro2 -> . empty
    (152) empty -> .

    VOID            shift and go to state 10
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22
    LKEY            reduce using rule 152 (empty -> .)

    function                       shift and go to state 13
    p4                             shift and go to state 28
    tipo                           shift and go to state 29
    cuadrupro2                     shift and go to state 9
    p5                             shift and go to state 30
    empty                          shift and go to state 12

state 14

    (53) tipo -> STRING .

    ID              reduce using rule 53 (tipo -> STRING .)


state 15

    (1) program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2 .

    $end            reduce using rule 1 (program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2 .)


state 16

    (3) p2 -> p3 .

    $end            reduce using rule 3 (p2 -> p3 .)


state 17

    (52) tipo -> CHAR .

    ID              reduce using rule 52 (tipo -> CHAR .)


state 18

    (4) p2 -> p4 .
    (7) p3 -> p4 .

  ! reduce/reduce conflict for $end resolved using rule 4 (p2 -> p4 .)
    $end            reduce using rule 4 (p2 -> p4 .)

  ! $end            [ reduce using rule 7 (p3 -> p4 .) ]


state 19

    (5) p2 -> p5 .
    (9) p4 -> p5 .

  ! reduce/reduce conflict for $end resolved using rule 5 (p2 -> p5 .)
    $end            reduce using rule 5 (p2 -> p5 .)

  ! $end            [ reduce using rule 9 (p4 -> p5 .) ]


state 20

    (50) tipo -> INT .

    ID              reduce using rule 50 (tipo -> INT .)


state 21

    (51) tipo -> FLOAT .

    ID              reduce using rule 51 (tipo -> FLOAT .)


state 22

    (54) tipo -> BOOL .

    ID              reduce using rule 54 (tipo -> BOOL .)


state 23

    (6) p3 -> declaracion . p3
    (6) p3 -> . declaracion p3
    (7) p3 -> . p4
    (44) declaracion -> . tipo ID decla1
    (8) p4 -> . function p4
    (9) p4 -> . p5
    (50) tipo -> . INT
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . STRING
    (54) tipo -> . BOOL
    (135) function -> . tipo ID LPARENT funct11
    (136) function -> . VOID ID LPARENT funct11
    (10) p5 -> . cuadrupro2 bloque
    (12) cuadrupro2 -> . empty
    (152) empty -> .

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22
    VOID            shift and go to state 10
    LKEY            reduce using rule 152 (empty -> .)

    function                       shift and go to state 13
    p3                             shift and go to state 31
    tipo                           shift and go to state 11
    p4                             shift and go to state 32
    p5                             shift and go to state 30
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 12
    declaracion                    shift and go to state 23

state 24

    (13) bloque -> LKEY . iniEnv b3 b4 b5
    (14) iniEnv -> . empty
    (152) empty -> .

    INT             reduce using rule 152 (empty -> .)
    FLOAT           reduce using rule 152 (empty -> .)
    CHAR            reduce using rule 152 (empty -> .)
    STRING          reduce using rule 152 (empty -> .)
    BOOL            reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    PRINT           reduce using rule 152 (empty -> .)
    IF              reduce using rule 152 (empty -> .)
    WHILE           reduce using rule 152 (empty -> .)
    DO              reduce using rule 152 (empty -> .)
    FOR             reduce using rule 152 (empty -> .)
    COMENTARIO      reduce using rule 152 (empty -> .)
    CUADRADO        reduce using rule 152 (empty -> .)
    TRIANGULO       reduce using rule 152 (empty -> .)
    CASA            reduce using rule 152 (empty -> .)
    RECTANGULO      reduce using rule 152 (empty -> .)
    CUBO            reduce using rule 152 (empty -> .)
    TRAPECIO        reduce using rule 152 (empty -> .)
    ESTRELLA        reduce using rule 152 (empty -> .)
    MUEVE           reduce using rule 152 (empty -> .)
    LEVANTA         reduce using rule 152 (empty -> .)
    APOYA           reduce using rule 152 (empty -> .)
    DIMENSION       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    iniEnv                         shift and go to state 33
    empty                          shift and go to state 34

state 25

    (10) p5 -> cuadrupro2 bloque .

    $end            reduce using rule 10 (p5 -> cuadrupro2 bloque .)


state 26

    (136) function -> VOID ID . LPARENT funct11

    LPARENT         shift and go to state 35


state 27

    (44) declaracion -> tipo ID . decla1
    (135) function -> tipo ID . LPARENT funct11
    (45) decla1 -> . declafinal
    (46) decla1 -> . LBRACKET exp decla2
    (49) declafinal -> . PUNTOCOMA

    LPARENT         shift and go to state 37
    LBRACKET        shift and go to state 36
    PUNTOCOMA       shift and go to state 38

    decla1                         shift and go to state 39
    declafinal                     shift and go to state 40

state 28

    (8) p4 -> function p4 .

    $end            reduce using rule 8 (p4 -> function p4 .)


state 29

    (135) function -> tipo . ID LPARENT funct11

    ID              shift and go to state 41


state 30

    (9) p4 -> p5 .

    $end            reduce using rule 9 (p4 -> p5 .)


state 31

    (6) p3 -> declaracion p3 .

    $end            reduce using rule 6 (p3 -> declaracion p3 .)


state 32

    (7) p3 -> p4 .

    $end            reduce using rule 7 (p3 -> p4 .)


state 33

    (13) bloque -> LKEY iniEnv . b3 b4 b5
    (15) b3 -> . declaracion b3
    (16) b3 -> . empty
    (44) declaracion -> . tipo ID decla1
    (152) empty -> .
    (50) tipo -> . INT
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . STRING
    (54) tipo -> . BOOL

    ID              reduce using rule 152 (empty -> .)
    PRINT           reduce using rule 152 (empty -> .)
    IF              reduce using rule 152 (empty -> .)
    WHILE           reduce using rule 152 (empty -> .)
    DO              reduce using rule 152 (empty -> .)
    FOR             reduce using rule 152 (empty -> .)
    COMENTARIO      reduce using rule 152 (empty -> .)
    CUADRADO        reduce using rule 152 (empty -> .)
    TRIANGULO       reduce using rule 152 (empty -> .)
    CASA            reduce using rule 152 (empty -> .)
    RECTANGULO      reduce using rule 152 (empty -> .)
    CUBO            reduce using rule 152 (empty -> .)
    TRAPECIO        reduce using rule 152 (empty -> .)
    ESTRELLA        reduce using rule 152 (empty -> .)
    MUEVE           reduce using rule 152 (empty -> .)
    LEVANTA         reduce using rule 152 (empty -> .)
    APOYA           reduce using rule 152 (empty -> .)
    DIMENSION       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22

    tipo                           shift and go to state 42
    declaracion                    shift and go to state 45
    b3                             shift and go to state 44
    empty                          shift and go to state 43

state 34

    (14) iniEnv -> empty .

    INT             reduce using rule 14 (iniEnv -> empty .)
    FLOAT           reduce using rule 14 (iniEnv -> empty .)
    CHAR            reduce using rule 14 (iniEnv -> empty .)
    STRING          reduce using rule 14 (iniEnv -> empty .)
    BOOL            reduce using rule 14 (iniEnv -> empty .)
    ID              reduce using rule 14 (iniEnv -> empty .)
    PRINT           reduce using rule 14 (iniEnv -> empty .)
    IF              reduce using rule 14 (iniEnv -> empty .)
    WHILE           reduce using rule 14 (iniEnv -> empty .)
    DO              reduce using rule 14 (iniEnv -> empty .)
    FOR             reduce using rule 14 (iniEnv -> empty .)
    COMENTARIO      reduce using rule 14 (iniEnv -> empty .)
    CUADRADO        reduce using rule 14 (iniEnv -> empty .)
    TRIANGULO       reduce using rule 14 (iniEnv -> empty .)
    CASA            reduce using rule 14 (iniEnv -> empty .)
    RECTANGULO      reduce using rule 14 (iniEnv -> empty .)
    CUBO            reduce using rule 14 (iniEnv -> empty .)
    TRAPECIO        reduce using rule 14 (iniEnv -> empty .)
    ESTRELLA        reduce using rule 14 (iniEnv -> empty .)
    MUEVE           reduce using rule 14 (iniEnv -> empty .)
    LEVANTA         reduce using rule 14 (iniEnv -> empty .)
    APOYA           reduce using rule 14 (iniEnv -> empty .)
    DIMENSION       reduce using rule 14 (iniEnv -> empty .)
    RKEY            reduce using rule 14 (iniEnv -> empty .)


state 35

    (136) function -> VOID ID LPARENT . funct11
    (137) funct11 -> . function4
    (138) funct11 -> . funct2
    (142) function4 -> . RPARENT noinitFunc bloque initFunc
    (139) funct2 -> . tipo ID funct3
    (50) tipo -> . INT
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . STRING
    (54) tipo -> . BOOL

    RPARENT         shift and go to state 50
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22

    function4                      shift and go to state 46
    tipo                           shift and go to state 47
    funct2                         shift and go to state 48
    funct11                        shift and go to state 49

state 36

    (46) decla1 -> LBRACKET . exp decla2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 64

state 37

    (135) function -> tipo ID LPARENT . funct11
    (137) funct11 -> . function4
    (138) funct11 -> . funct2
    (142) function4 -> . RPARENT noinitFunc bloque initFunc
    (139) funct2 -> . tipo ID funct3
    (50) tipo -> . INT
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . STRING
    (54) tipo -> . BOOL

    RPARENT         shift and go to state 50
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22

    function4                      shift and go to state 46
    tipo                           shift and go to state 47
    funct2                         shift and go to state 48
    funct11                        shift and go to state 66

state 38

    (49) declafinal -> PUNTOCOMA .

    INT             reduce using rule 49 (declafinal -> PUNTOCOMA .)
    FLOAT           reduce using rule 49 (declafinal -> PUNTOCOMA .)
    CHAR            reduce using rule 49 (declafinal -> PUNTOCOMA .)
    STRING          reduce using rule 49 (declafinal -> PUNTOCOMA .)
    BOOL            reduce using rule 49 (declafinal -> PUNTOCOMA .)
    ID              reduce using rule 49 (declafinal -> PUNTOCOMA .)
    PRINT           reduce using rule 49 (declafinal -> PUNTOCOMA .)
    IF              reduce using rule 49 (declafinal -> PUNTOCOMA .)
    WHILE           reduce using rule 49 (declafinal -> PUNTOCOMA .)
    DO              reduce using rule 49 (declafinal -> PUNTOCOMA .)
    FOR             reduce using rule 49 (declafinal -> PUNTOCOMA .)
    COMENTARIO      reduce using rule 49 (declafinal -> PUNTOCOMA .)
    CUADRADO        reduce using rule 49 (declafinal -> PUNTOCOMA .)
    TRIANGULO       reduce using rule 49 (declafinal -> PUNTOCOMA .)
    CASA            reduce using rule 49 (declafinal -> PUNTOCOMA .)
    RECTANGULO      reduce using rule 49 (declafinal -> PUNTOCOMA .)
    CUBO            reduce using rule 49 (declafinal -> PUNTOCOMA .)
    TRAPECIO        reduce using rule 49 (declafinal -> PUNTOCOMA .)
    ESTRELLA        reduce using rule 49 (declafinal -> PUNTOCOMA .)
    MUEVE           reduce using rule 49 (declafinal -> PUNTOCOMA .)
    LEVANTA         reduce using rule 49 (declafinal -> PUNTOCOMA .)
    APOYA           reduce using rule 49 (declafinal -> PUNTOCOMA .)
    DIMENSION       reduce using rule 49 (declafinal -> PUNTOCOMA .)
    RKEY            reduce using rule 49 (declafinal -> PUNTOCOMA .)
    VOID            reduce using rule 49 (declafinal -> PUNTOCOMA .)
    LKEY            reduce using rule 49 (declafinal -> PUNTOCOMA .)


state 39

    (44) declaracion -> tipo ID decla1 .

    INT             reduce using rule 44 (declaracion -> tipo ID decla1 .)
    FLOAT           reduce using rule 44 (declaracion -> tipo ID decla1 .)
    CHAR            reduce using rule 44 (declaracion -> tipo ID decla1 .)
    STRING          reduce using rule 44 (declaracion -> tipo ID decla1 .)
    BOOL            reduce using rule 44 (declaracion -> tipo ID decla1 .)
    ID              reduce using rule 44 (declaracion -> tipo ID decla1 .)
    PRINT           reduce using rule 44 (declaracion -> tipo ID decla1 .)
    IF              reduce using rule 44 (declaracion -> tipo ID decla1 .)
    WHILE           reduce using rule 44 (declaracion -> tipo ID decla1 .)
    DO              reduce using rule 44 (declaracion -> tipo ID decla1 .)
    FOR             reduce using rule 44 (declaracion -> tipo ID decla1 .)
    COMENTARIO      reduce using rule 44 (declaracion -> tipo ID decla1 .)
    CUADRADO        reduce using rule 44 (declaracion -> tipo ID decla1 .)
    TRIANGULO       reduce using rule 44 (declaracion -> tipo ID decla1 .)
    CASA            reduce using rule 44 (declaracion -> tipo ID decla1 .)
    RECTANGULO      reduce using rule 44 (declaracion -> tipo ID decla1 .)
    CUBO            reduce using rule 44 (declaracion -> tipo ID decla1 .)
    TRAPECIO        reduce using rule 44 (declaracion -> tipo ID decla1 .)
    ESTRELLA        reduce using rule 44 (declaracion -> tipo ID decla1 .)
    MUEVE           reduce using rule 44 (declaracion -> tipo ID decla1 .)
    LEVANTA         reduce using rule 44 (declaracion -> tipo ID decla1 .)
    APOYA           reduce using rule 44 (declaracion -> tipo ID decla1 .)
    DIMENSION       reduce using rule 44 (declaracion -> tipo ID decla1 .)
    RKEY            reduce using rule 44 (declaracion -> tipo ID decla1 .)
    VOID            reduce using rule 44 (declaracion -> tipo ID decla1 .)
    LKEY            reduce using rule 44 (declaracion -> tipo ID decla1 .)


state 40

    (45) decla1 -> declafinal .

    INT             reduce using rule 45 (decla1 -> declafinal .)
    FLOAT           reduce using rule 45 (decla1 -> declafinal .)
    CHAR            reduce using rule 45 (decla1 -> declafinal .)
    STRING          reduce using rule 45 (decla1 -> declafinal .)
    BOOL            reduce using rule 45 (decla1 -> declafinal .)
    VOID            reduce using rule 45 (decla1 -> declafinal .)
    LKEY            reduce using rule 45 (decla1 -> declafinal .)
    ID              reduce using rule 45 (decla1 -> declafinal .)
    PRINT           reduce using rule 45 (decla1 -> declafinal .)
    IF              reduce using rule 45 (decla1 -> declafinal .)
    WHILE           reduce using rule 45 (decla1 -> declafinal .)
    DO              reduce using rule 45 (decla1 -> declafinal .)
    FOR             reduce using rule 45 (decla1 -> declafinal .)
    COMENTARIO      reduce using rule 45 (decla1 -> declafinal .)
    CUADRADO        reduce using rule 45 (decla1 -> declafinal .)
    TRIANGULO       reduce using rule 45 (decla1 -> declafinal .)
    CASA            reduce using rule 45 (decla1 -> declafinal .)
    RECTANGULO      reduce using rule 45 (decla1 -> declafinal .)
    CUBO            reduce using rule 45 (decla1 -> declafinal .)
    TRAPECIO        reduce using rule 45 (decla1 -> declafinal .)
    ESTRELLA        reduce using rule 45 (decla1 -> declafinal .)
    MUEVE           reduce using rule 45 (decla1 -> declafinal .)
    LEVANTA         reduce using rule 45 (decla1 -> declafinal .)
    APOYA           reduce using rule 45 (decla1 -> declafinal .)
    DIMENSION       reduce using rule 45 (decla1 -> declafinal .)
    RKEY            reduce using rule 45 (decla1 -> declafinal .)


state 41

    (135) function -> tipo ID . LPARENT funct11

    LPARENT         shift and go to state 37


state 42

    (44) declaracion -> tipo . ID decla1

    ID              shift and go to state 67


state 43

    (16) b3 -> empty .

    ID              reduce using rule 16 (b3 -> empty .)
    PRINT           reduce using rule 16 (b3 -> empty .)
    IF              reduce using rule 16 (b3 -> empty .)
    WHILE           reduce using rule 16 (b3 -> empty .)
    DO              reduce using rule 16 (b3 -> empty .)
    FOR             reduce using rule 16 (b3 -> empty .)
    COMENTARIO      reduce using rule 16 (b3 -> empty .)
    CUADRADO        reduce using rule 16 (b3 -> empty .)
    TRIANGULO       reduce using rule 16 (b3 -> empty .)
    CASA            reduce using rule 16 (b3 -> empty .)
    RECTANGULO      reduce using rule 16 (b3 -> empty .)
    CUBO            reduce using rule 16 (b3 -> empty .)
    TRAPECIO        reduce using rule 16 (b3 -> empty .)
    ESTRELLA        reduce using rule 16 (b3 -> empty .)
    MUEVE           reduce using rule 16 (b3 -> empty .)
    LEVANTA         reduce using rule 16 (b3 -> empty .)
    APOYA           reduce using rule 16 (b3 -> empty .)
    DIMENSION       reduce using rule 16 (b3 -> empty .)
    RKEY            reduce using rule 16 (b3 -> empty .)


state 44

    (13) bloque -> LKEY iniEnv b3 . b4 b5
    (17) b4 -> . estatuto b4
    (18) b4 -> . empty
    (87) estatuto -> . asignacion
    (88) estatuto -> . print
    (89) estatuto -> . condicion
    (90) estatuto -> . ciclowhile
    (91) estatuto -> . ciclodowhile
    (92) estatuto -> . ciclofor
    (93) estatuto -> . read
    (94) estatuto -> . comentario
    (95) estatuto -> . cuadrado
    (96) estatuto -> . triangulo
    (97) estatuto -> . casa
    (98) estatuto -> . rectangulo
    (99) estatuto -> . cubo
    (100) estatuto -> . trapecio
    (101) estatuto -> . estrella
    (102) estatuto -> . mueve
    (103) estatuto -> . levanta
    (104) estatuto -> . apoya
    (105) estatuto -> . dimension
    (106) estatuto -> . llamafuncion
    (107) estatuto -> . if
    (152) empty -> .
    (55) asignacion -> . ID asig2
    (61) print -> . PRINT LPARENT pr2
    (66) condicion -> . IF LKEY expresion RKEY bloque c2
    (117) ciclowhile -> . WHILE LPARENT expresion RPARENT bloque
    (118) ciclodowhile -> . DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (120) ciclofor -> . FOR LPARENT asignacion expresion asignacion RPARENT bloque
    (119) read -> . ID IGUAL READ LPARENT RPARENT PUNTOCOMA
    (108) comentario -> . COMENTARIO
    (124) cuadrado -> . CUADRADO LPARENT exp RPARENT PUNTOCOMA
    (125) triangulo -> . TRIANGULO LPARENT exp RPARENT PUNTOCOMA
    (127) casa -> . CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
    (126) rectangulo -> . RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (129) cubo -> . CUBO LPARENT exp RPARENT PUNTOCOMA
    (133) trapecio -> . TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (128) estrella -> . ESTRELLA LPARENT exp RPARENT PUNTOCOMA
    (130) mueve -> . MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA
    (131) levanta -> . LEVANTA LPARENT RPARENT PUNTOCOMA
    (132) apoya -> . APOYA LPARENT RPARENT PUNTOCOMA
    (134) dimension -> . DIMENSION LPARENT exp RPARENT PUNTOCOMA
    (145) llamafuncion -> . ID LPARENT llamaf11
    (121) if -> . IF LPARENT expresion RPARENT bloque if2

    RKEY            reduce using rule 152 (empty -> .)
    ID              shift and go to state 101
    PRINT           shift and go to state 74
    IF              shift and go to state 103
    WHILE           shift and go to state 71
    DO              shift and go to state 68
    FOR             shift and go to state 94
    COMENTARIO      shift and go to state 93
    CUADRADO        shift and go to state 107
    TRIANGULO       shift and go to state 92
    CASA            shift and go to state 80
    RECTANGULO      shift and go to state 81
    CUBO            shift and go to state 88
    TRAPECIO        shift and go to state 73
    ESTRELLA        shift and go to state 104
    MUEVE           shift and go to state 69
    LEVANTA         shift and go to state 108
    APOYA           shift and go to state 91
    DIMENSION       shift and go to state 102

    b4                             shift and go to state 70
    apoya                          shift and go to state 72
    trapecio                       shift and go to state 75
    comentario                     shift and go to state 76
    levanta                        shift and go to state 77
    if                             shift and go to state 78
    triangulo                      shift and go to state 79
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 83
    ciclowhile                     shift and go to state 84
    llamafuncion                   shift and go to state 85
    condicion                      shift and go to state 86
    rectangulo                     shift and go to state 87
    print                          shift and go to state 89
    empty                          shift and go to state 90
    read                           shift and go to state 95
    cubo                           shift and go to state 96
    ciclofor                       shift and go to state 97
    estrella                       shift and go to state 98
    cuadrado                       shift and go to state 99
    ciclodowhile                   shift and go to state 100
    casa                           shift and go to state 105
    asignacion                     shift and go to state 106
    dimension                      shift and go to state 109

state 45

    (15) b3 -> declaracion . b3
    (15) b3 -> . declaracion b3
    (16) b3 -> . empty
    (44) declaracion -> . tipo ID decla1
    (152) empty -> .
    (50) tipo -> . INT
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . STRING
    (54) tipo -> . BOOL

    ID              reduce using rule 152 (empty -> .)
    PRINT           reduce using rule 152 (empty -> .)
    IF              reduce using rule 152 (empty -> .)
    WHILE           reduce using rule 152 (empty -> .)
    DO              reduce using rule 152 (empty -> .)
    FOR             reduce using rule 152 (empty -> .)
    COMENTARIO      reduce using rule 152 (empty -> .)
    CUADRADO        reduce using rule 152 (empty -> .)
    TRIANGULO       reduce using rule 152 (empty -> .)
    CASA            reduce using rule 152 (empty -> .)
    RECTANGULO      reduce using rule 152 (empty -> .)
    CUBO            reduce using rule 152 (empty -> .)
    TRAPECIO        reduce using rule 152 (empty -> .)
    ESTRELLA        reduce using rule 152 (empty -> .)
    MUEVE           reduce using rule 152 (empty -> .)
    LEVANTA         reduce using rule 152 (empty -> .)
    APOYA           reduce using rule 152 (empty -> .)
    DIMENSION       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22

    tipo                           shift and go to state 42
    empty                          shift and go to state 43
    declaracion                    shift and go to state 45
    b3                             shift and go to state 110

state 46

    (137) funct11 -> function4 .

    VOID            reduce using rule 137 (funct11 -> function4 .)
    INT             reduce using rule 137 (funct11 -> function4 .)
    FLOAT           reduce using rule 137 (funct11 -> function4 .)
    CHAR            reduce using rule 137 (funct11 -> function4 .)
    STRING          reduce using rule 137 (funct11 -> function4 .)
    BOOL            reduce using rule 137 (funct11 -> function4 .)
    LKEY            reduce using rule 137 (funct11 -> function4 .)


state 47

    (139) funct2 -> tipo . ID funct3

    ID              shift and go to state 111


state 48

    (138) funct11 -> funct2 .

    VOID            reduce using rule 138 (funct11 -> funct2 .)
    INT             reduce using rule 138 (funct11 -> funct2 .)
    FLOAT           reduce using rule 138 (funct11 -> funct2 .)
    CHAR            reduce using rule 138 (funct11 -> funct2 .)
    STRING          reduce using rule 138 (funct11 -> funct2 .)
    BOOL            reduce using rule 138 (funct11 -> funct2 .)
    LKEY            reduce using rule 138 (funct11 -> funct2 .)


state 49

    (136) function -> VOID ID LPARENT funct11 .

    VOID            reduce using rule 136 (function -> VOID ID LPARENT funct11 .)
    INT             reduce using rule 136 (function -> VOID ID LPARENT funct11 .)
    FLOAT           reduce using rule 136 (function -> VOID ID LPARENT funct11 .)
    CHAR            reduce using rule 136 (function -> VOID ID LPARENT funct11 .)
    STRING          reduce using rule 136 (function -> VOID ID LPARENT funct11 .)
    BOOL            reduce using rule 136 (function -> VOID ID LPARENT funct11 .)
    LKEY            reduce using rule 136 (function -> VOID ID LPARENT funct11 .)


state 50

    (142) function4 -> RPARENT . noinitFunc bloque initFunc
    (143) noinitFunc -> . empty
    (152) empty -> .

    LKEY            reduce using rule 152 (empty -> .)

    noinitFunc                     shift and go to state 112
    empty                          shift and go to state 113

state 51

    (75) factor -> f2 .

    MULT            reduce using rule 75 (factor -> f2 .)
    DIV             reduce using rule 75 (factor -> f2 .)
    SUMA            reduce using rule 75 (factor -> f2 .)
    RESTA           reduce using rule 75 (factor -> f2 .)
    RPARENT         reduce using rule 75 (factor -> f2 .)
    GT              reduce using rule 75 (factor -> f2 .)
    LT              reduce using rule 75 (factor -> f2 .)
    LE              reduce using rule 75 (factor -> f2 .)
    GE              reduce using rule 75 (factor -> f2 .)
    DIF             reduce using rule 75 (factor -> f2 .)
    SAME            reduce using rule 75 (factor -> f2 .)
    AND             reduce using rule 75 (factor -> f2 .)
    OR              reduce using rule 75 (factor -> f2 .)
    CADENA          reduce using rule 75 (factor -> f2 .)
    LPARENT         reduce using rule 75 (factor -> f2 .)
    ID              reduce using rule 75 (factor -> f2 .)
    ENTERO          reduce using rule 75 (factor -> f2 .)
    FLOTANTE        reduce using rule 75 (factor -> f2 .)
    CARACTER        reduce using rule 75 (factor -> f2 .)
    COMA            reduce using rule 75 (factor -> f2 .)
    RBRACKET        reduce using rule 75 (factor -> f2 .)
    RKEY            reduce using rule 75 (factor -> f2 .)
    PUNTOCOMA       reduce using rule 75 (factor -> f2 .)


state 52

    (76) factor -> f3 .

    MULT            reduce using rule 76 (factor -> f3 .)
    DIV             reduce using rule 76 (factor -> f3 .)
    SUMA            reduce using rule 76 (factor -> f3 .)
    RESTA           reduce using rule 76 (factor -> f3 .)
    RPARENT         reduce using rule 76 (factor -> f3 .)
    GT              reduce using rule 76 (factor -> f3 .)
    LT              reduce using rule 76 (factor -> f3 .)
    LE              reduce using rule 76 (factor -> f3 .)
    GE              reduce using rule 76 (factor -> f3 .)
    DIF             reduce using rule 76 (factor -> f3 .)
    SAME            reduce using rule 76 (factor -> f3 .)
    AND             reduce using rule 76 (factor -> f3 .)
    OR              reduce using rule 76 (factor -> f3 .)
    CADENA          reduce using rule 76 (factor -> f3 .)
    LPARENT         reduce using rule 76 (factor -> f3 .)
    ID              reduce using rule 76 (factor -> f3 .)
    ENTERO          reduce using rule 76 (factor -> f3 .)
    FLOTANTE        reduce using rule 76 (factor -> f3 .)
    CARACTER        reduce using rule 76 (factor -> f3 .)
    COMA            reduce using rule 76 (factor -> f3 .)
    RBRACKET        reduce using rule 76 (factor -> f3 .)
    RKEY            reduce using rule 76 (factor -> f3 .)
    PUNTOCOMA       reduce using rule 76 (factor -> f3 .)


state 53

    (77) factor -> f6 .

    MULT            reduce using rule 77 (factor -> f6 .)
    DIV             reduce using rule 77 (factor -> f6 .)
    SUMA            reduce using rule 77 (factor -> f6 .)
    RESTA           reduce using rule 77 (factor -> f6 .)
    RPARENT         reduce using rule 77 (factor -> f6 .)
    GT              reduce using rule 77 (factor -> f6 .)
    LT              reduce using rule 77 (factor -> f6 .)
    LE              reduce using rule 77 (factor -> f6 .)
    GE              reduce using rule 77 (factor -> f6 .)
    DIF             reduce using rule 77 (factor -> f6 .)
    SAME            reduce using rule 77 (factor -> f6 .)
    AND             reduce using rule 77 (factor -> f6 .)
    OR              reduce using rule 77 (factor -> f6 .)
    CADENA          reduce using rule 77 (factor -> f6 .)
    LPARENT         reduce using rule 77 (factor -> f6 .)
    ID              reduce using rule 77 (factor -> f6 .)
    ENTERO          reduce using rule 77 (factor -> f6 .)
    FLOTANTE        reduce using rule 77 (factor -> f6 .)
    CARACTER        reduce using rule 77 (factor -> f6 .)
    COMA            reduce using rule 77 (factor -> f6 .)
    RBRACKET        reduce using rule 77 (factor -> f6 .)
    RKEY            reduce using rule 77 (factor -> f6 .)
    PUNTOCOMA       reduce using rule 77 (factor -> f6 .)


state 54

    (78) factor -> f7 .

    MULT            reduce using rule 78 (factor -> f7 .)
    DIV             reduce using rule 78 (factor -> f7 .)
    SUMA            reduce using rule 78 (factor -> f7 .)
    RESTA           reduce using rule 78 (factor -> f7 .)
    RPARENT         reduce using rule 78 (factor -> f7 .)
    GT              reduce using rule 78 (factor -> f7 .)
    LT              reduce using rule 78 (factor -> f7 .)
    LE              reduce using rule 78 (factor -> f7 .)
    GE              reduce using rule 78 (factor -> f7 .)
    DIF             reduce using rule 78 (factor -> f7 .)
    SAME            reduce using rule 78 (factor -> f7 .)
    AND             reduce using rule 78 (factor -> f7 .)
    OR              reduce using rule 78 (factor -> f7 .)
    CADENA          reduce using rule 78 (factor -> f7 .)
    LPARENT         reduce using rule 78 (factor -> f7 .)
    ID              reduce using rule 78 (factor -> f7 .)
    ENTERO          reduce using rule 78 (factor -> f7 .)
    FLOTANTE        reduce using rule 78 (factor -> f7 .)
    CARACTER        reduce using rule 78 (factor -> f7 .)
    COMA            reduce using rule 78 (factor -> f7 .)
    RBRACKET        reduce using rule 78 (factor -> f7 .)
    RKEY            reduce using rule 78 (factor -> f7 .)
    PUNTOCOMA       reduce using rule 78 (factor -> f7 .)


state 55

    (38) exp -> termino . tagsacops exp2
    (43) tagsacops -> . empty
    (152) empty -> .

    SUMA            reduce using rule 152 (empty -> .)
    RESTA           reduce using rule 152 (empty -> .)
    RBRACKET        reduce using rule 152 (empty -> .)
    COMA            reduce using rule 152 (empty -> .)
    GT              reduce using rule 152 (empty -> .)
    LT              reduce using rule 152 (empty -> .)
    LE              reduce using rule 152 (empty -> .)
    GE              reduce using rule 152 (empty -> .)
    DIF             reduce using rule 152 (empty -> .)
    SAME            reduce using rule 152 (empty -> .)
    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagsacops                      shift and go to state 114
    empty                          shift and go to state 115

state 56

    (74) factor -> LPARENT . tagfondofalso expresion RPARENT tagsacafondo
    (81) tagfondofalso -> . empty
    (152) empty -> .

    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagfondofalso                  shift and go to state 116
    empty                          shift and go to state 117

state 57

    (79) f2 -> varcte .

    MULT            reduce using rule 79 (f2 -> varcte .)
    DIV             reduce using rule 79 (f2 -> varcte .)
    SUMA            reduce using rule 79 (f2 -> varcte .)
    RESTA           reduce using rule 79 (f2 -> varcte .)
    RPARENT         reduce using rule 79 (f2 -> varcte .)
    COMA            reduce using rule 79 (f2 -> varcte .)
    RBRACKET        reduce using rule 79 (f2 -> varcte .)
    GT              reduce using rule 79 (f2 -> varcte .)
    LT              reduce using rule 79 (f2 -> varcte .)
    LE              reduce using rule 79 (f2 -> varcte .)
    GE              reduce using rule 79 (f2 -> varcte .)
    DIF             reduce using rule 79 (f2 -> varcte .)
    SAME            reduce using rule 79 (f2 -> varcte .)
    AND             reduce using rule 79 (f2 -> varcte .)
    OR              reduce using rule 79 (f2 -> varcte .)
    CADENA          reduce using rule 79 (f2 -> varcte .)
    LPARENT         reduce using rule 79 (f2 -> varcte .)
    ID              reduce using rule 79 (f2 -> varcte .)
    ENTERO          reduce using rule 79 (f2 -> varcte .)
    FLOTANTE        reduce using rule 79 (f2 -> varcte .)
    CARACTER        reduce using rule 79 (f2 -> varcte .)
    PUNTOCOMA       reduce using rule 79 (f2 -> varcte .)
    RKEY            reduce using rule 79 (f2 -> varcte .)


state 58

    (86) f6 -> llamafuncion .

    MULT            reduce using rule 86 (f6 -> llamafuncion .)
    DIV             reduce using rule 86 (f6 -> llamafuncion .)
    SUMA            reduce using rule 86 (f6 -> llamafuncion .)
    RESTA           reduce using rule 86 (f6 -> llamafuncion .)
    RPARENT         reduce using rule 86 (f6 -> llamafuncion .)
    COMA            reduce using rule 86 (f6 -> llamafuncion .)
    AND             reduce using rule 86 (f6 -> llamafuncion .)
    OR              reduce using rule 86 (f6 -> llamafuncion .)
    CADENA          reduce using rule 86 (f6 -> llamafuncion .)
    LPARENT         reduce using rule 86 (f6 -> llamafuncion .)
    ID              reduce using rule 86 (f6 -> llamafuncion .)
    ENTERO          reduce using rule 86 (f6 -> llamafuncion .)
    FLOTANTE        reduce using rule 86 (f6 -> llamafuncion .)
    CARACTER        reduce using rule 86 (f6 -> llamafuncion .)
    PUNTOCOMA       reduce using rule 86 (f6 -> llamafuncion .)
    RKEY            reduce using rule 86 (f6 -> llamafuncion .)
    GT              reduce using rule 86 (f6 -> llamafuncion .)
    LT              reduce using rule 86 (f6 -> llamafuncion .)
    LE              reduce using rule 86 (f6 -> llamafuncion .)
    GE              reduce using rule 86 (f6 -> llamafuncion .)
    DIF             reduce using rule 86 (f6 -> llamafuncion .)
    SAME            reduce using rule 86 (f6 -> llamafuncion .)
    RBRACKET        reduce using rule 86 (f6 -> llamafuncion .)


state 59

    (111) varcte -> CADENA . tagcad
    (115) tagcad -> . empty
    (152) empty -> .

    MULT            reduce using rule 152 (empty -> .)
    DIV             reduce using rule 152 (empty -> .)
    SUMA            reduce using rule 152 (empty -> .)
    RESTA           reduce using rule 152 (empty -> .)
    RBRACKET        reduce using rule 152 (empty -> .)
    COMA            reduce using rule 152 (empty -> .)
    GT              reduce using rule 152 (empty -> .)
    LT              reduce using rule 152 (empty -> .)
    LE              reduce using rule 152 (empty -> .)
    GE              reduce using rule 152 (empty -> .)
    DIF             reduce using rule 152 (empty -> .)
    SAME            reduce using rule 152 (empty -> .)
    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagcad                         shift and go to state 118
    empty                          shift and go to state 119

state 60

    (69) termino -> factor . tagsacopm te2
    (73) tagsacopm -> . empty
    (152) empty -> .

    MULT            reduce using rule 152 (empty -> .)
    DIV             reduce using rule 152 (empty -> .)
    SUMA            reduce using rule 152 (empty -> .)
    RESTA           reduce using rule 152 (empty -> .)
    RBRACKET        reduce using rule 152 (empty -> .)
    COMA            reduce using rule 152 (empty -> .)
    GT              reduce using rule 152 (empty -> .)
    LT              reduce using rule 152 (empty -> .)
    LE              reduce using rule 152 (empty -> .)
    GE              reduce using rule 152 (empty -> .)
    DIF             reduce using rule 152 (empty -> .)
    SAME            reduce using rule 152 (empty -> .)
    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagsacopm                      shift and go to state 120
    empty                          shift and go to state 121

state 61

    (109) varcte -> ENTERO . tagint
    (113) tagint -> . empty
    (152) empty -> .

    MULT            reduce using rule 152 (empty -> .)
    DIV             reduce using rule 152 (empty -> .)
    SUMA            reduce using rule 152 (empty -> .)
    RESTA           reduce using rule 152 (empty -> .)
    RBRACKET        reduce using rule 152 (empty -> .)
    COMA            reduce using rule 152 (empty -> .)
    GT              reduce using rule 152 (empty -> .)
    LT              reduce using rule 152 (empty -> .)
    LE              reduce using rule 152 (empty -> .)
    GE              reduce using rule 152 (empty -> .)
    DIF             reduce using rule 152 (empty -> .)
    SAME            reduce using rule 152 (empty -> .)
    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagint                         shift and go to state 122
    empty                          shift and go to state 123

state 62

    (112) varcte -> CARACTER . tagcar
    (116) tagcar -> . empty
    (152) empty -> .

    MULT            reduce using rule 152 (empty -> .)
    DIV             reduce using rule 152 (empty -> .)
    SUMA            reduce using rule 152 (empty -> .)
    RESTA           reduce using rule 152 (empty -> .)
    RBRACKET        reduce using rule 152 (empty -> .)
    COMA            reduce using rule 152 (empty -> .)
    GT              reduce using rule 152 (empty -> .)
    LT              reduce using rule 152 (empty -> .)
    LE              reduce using rule 152 (empty -> .)
    GE              reduce using rule 152 (empty -> .)
    DIF             reduce using rule 152 (empty -> .)
    SAME            reduce using rule 152 (empty -> .)
    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagcar                         shift and go to state 124
    empty                          shift and go to state 125

state 63

    (80) f3 -> ID .
    (83) f7 -> ID . LBRACKET exp f8
    (145) llamafuncion -> ID . LPARENT llamaf11

  ! shift/reduce conflict for LPARENT resolved as shift
    MULT            reduce using rule 80 (f3 -> ID .)
    DIV             reduce using rule 80 (f3 -> ID .)
    SUMA            reduce using rule 80 (f3 -> ID .)
    RESTA           reduce using rule 80 (f3 -> ID .)
    AND             reduce using rule 80 (f3 -> ID .)
    OR              reduce using rule 80 (f3 -> ID .)
    RPARENT         reduce using rule 80 (f3 -> ID .)
    CADENA          reduce using rule 80 (f3 -> ID .)
    ID              reduce using rule 80 (f3 -> ID .)
    ENTERO          reduce using rule 80 (f3 -> ID .)
    FLOTANTE        reduce using rule 80 (f3 -> ID .)
    CARACTER        reduce using rule 80 (f3 -> ID .)
    PUNTOCOMA       reduce using rule 80 (f3 -> ID .)
    RKEY            reduce using rule 80 (f3 -> ID .)
    GT              reduce using rule 80 (f3 -> ID .)
    LT              reduce using rule 80 (f3 -> ID .)
    LE              reduce using rule 80 (f3 -> ID .)
    GE              reduce using rule 80 (f3 -> ID .)
    DIF             reduce using rule 80 (f3 -> ID .)
    SAME            reduce using rule 80 (f3 -> ID .)
    RBRACKET        reduce using rule 80 (f3 -> ID .)
    COMA            reduce using rule 80 (f3 -> ID .)
    LBRACKET        shift and go to state 127
    LPARENT         shift and go to state 126

  ! LPARENT         [ reduce using rule 80 (f3 -> ID .) ]


state 64

    (46) decla1 -> LBRACKET exp . decla2
    (47) decla2 -> . RBRACKET declafinal
    (48) decla2 -> . COMA exp decla2

    RBRACKET        shift and go to state 130
    COMA            shift and go to state 129

    decla2                         shift and go to state 128

state 65

    (110) varcte -> FLOTANTE . tagfloat
    (114) tagfloat -> . empty
    (152) empty -> .

    MULT            reduce using rule 152 (empty -> .)
    DIV             reduce using rule 152 (empty -> .)
    SUMA            reduce using rule 152 (empty -> .)
    RESTA           reduce using rule 152 (empty -> .)
    RBRACKET        reduce using rule 152 (empty -> .)
    COMA            reduce using rule 152 (empty -> .)
    GT              reduce using rule 152 (empty -> .)
    LT              reduce using rule 152 (empty -> .)
    LE              reduce using rule 152 (empty -> .)
    GE              reduce using rule 152 (empty -> .)
    DIF             reduce using rule 152 (empty -> .)
    SAME            reduce using rule 152 (empty -> .)
    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    empty                          shift and go to state 131
    tagfloat                       shift and go to state 132

state 66

    (135) function -> tipo ID LPARENT funct11 .

    VOID            reduce using rule 135 (function -> tipo ID LPARENT funct11 .)
    INT             reduce using rule 135 (function -> tipo ID LPARENT funct11 .)
    FLOAT           reduce using rule 135 (function -> tipo ID LPARENT funct11 .)
    CHAR            reduce using rule 135 (function -> tipo ID LPARENT funct11 .)
    STRING          reduce using rule 135 (function -> tipo ID LPARENT funct11 .)
    BOOL            reduce using rule 135 (function -> tipo ID LPARENT funct11 .)
    LKEY            reduce using rule 135 (function -> tipo ID LPARENT funct11 .)


state 67

    (44) declaracion -> tipo ID . decla1
    (45) decla1 -> . declafinal
    (46) decla1 -> . LBRACKET exp decla2
    (49) declafinal -> . PUNTOCOMA

    LBRACKET        shift and go to state 36
    PUNTOCOMA       shift and go to state 38

    decla1                         shift and go to state 39
    declafinal                     shift and go to state 40

state 68

    (118) ciclodowhile -> DO . bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 133

state 69

    (130) mueve -> MUEVE . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 134


state 70

    (13) bloque -> LKEY iniEnv b3 b4 . b5
    (19) b5 -> . RKEY

    RKEY            shift and go to state 135

    b5                             shift and go to state 136

state 71

    (117) ciclowhile -> WHILE . LPARENT expresion RPARENT bloque

    LPARENT         shift and go to state 137


state 72

    (104) estatuto -> apoya .

    ID              reduce using rule 104 (estatuto -> apoya .)
    PRINT           reduce using rule 104 (estatuto -> apoya .)
    IF              reduce using rule 104 (estatuto -> apoya .)
    WHILE           reduce using rule 104 (estatuto -> apoya .)
    DO              reduce using rule 104 (estatuto -> apoya .)
    FOR             reduce using rule 104 (estatuto -> apoya .)
    COMENTARIO      reduce using rule 104 (estatuto -> apoya .)
    CUADRADO        reduce using rule 104 (estatuto -> apoya .)
    TRIANGULO       reduce using rule 104 (estatuto -> apoya .)
    CASA            reduce using rule 104 (estatuto -> apoya .)
    RECTANGULO      reduce using rule 104 (estatuto -> apoya .)
    CUBO            reduce using rule 104 (estatuto -> apoya .)
    TRAPECIO        reduce using rule 104 (estatuto -> apoya .)
    ESTRELLA        reduce using rule 104 (estatuto -> apoya .)
    MUEVE           reduce using rule 104 (estatuto -> apoya .)
    LEVANTA         reduce using rule 104 (estatuto -> apoya .)
    APOYA           reduce using rule 104 (estatuto -> apoya .)
    DIMENSION       reduce using rule 104 (estatuto -> apoya .)
    RKEY            reduce using rule 104 (estatuto -> apoya .)


state 73

    (133) trapecio -> TRAPECIO . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 138


state 74

    (61) print -> PRINT . LPARENT pr2

    LPARENT         shift and go to state 139


state 75

    (100) estatuto -> trapecio .

    ID              reduce using rule 100 (estatuto -> trapecio .)
    PRINT           reduce using rule 100 (estatuto -> trapecio .)
    IF              reduce using rule 100 (estatuto -> trapecio .)
    WHILE           reduce using rule 100 (estatuto -> trapecio .)
    DO              reduce using rule 100 (estatuto -> trapecio .)
    FOR             reduce using rule 100 (estatuto -> trapecio .)
    COMENTARIO      reduce using rule 100 (estatuto -> trapecio .)
    CUADRADO        reduce using rule 100 (estatuto -> trapecio .)
    TRIANGULO       reduce using rule 100 (estatuto -> trapecio .)
    CASA            reduce using rule 100 (estatuto -> trapecio .)
    RECTANGULO      reduce using rule 100 (estatuto -> trapecio .)
    CUBO            reduce using rule 100 (estatuto -> trapecio .)
    TRAPECIO        reduce using rule 100 (estatuto -> trapecio .)
    ESTRELLA        reduce using rule 100 (estatuto -> trapecio .)
    MUEVE           reduce using rule 100 (estatuto -> trapecio .)
    LEVANTA         reduce using rule 100 (estatuto -> trapecio .)
    APOYA           reduce using rule 100 (estatuto -> trapecio .)
    DIMENSION       reduce using rule 100 (estatuto -> trapecio .)
    RKEY            reduce using rule 100 (estatuto -> trapecio .)


state 76

    (94) estatuto -> comentario .

    ID              reduce using rule 94 (estatuto -> comentario .)
    PRINT           reduce using rule 94 (estatuto -> comentario .)
    IF              reduce using rule 94 (estatuto -> comentario .)
    WHILE           reduce using rule 94 (estatuto -> comentario .)
    DO              reduce using rule 94 (estatuto -> comentario .)
    FOR             reduce using rule 94 (estatuto -> comentario .)
    COMENTARIO      reduce using rule 94 (estatuto -> comentario .)
    CUADRADO        reduce using rule 94 (estatuto -> comentario .)
    TRIANGULO       reduce using rule 94 (estatuto -> comentario .)
    CASA            reduce using rule 94 (estatuto -> comentario .)
    RECTANGULO      reduce using rule 94 (estatuto -> comentario .)
    CUBO            reduce using rule 94 (estatuto -> comentario .)
    TRAPECIO        reduce using rule 94 (estatuto -> comentario .)
    ESTRELLA        reduce using rule 94 (estatuto -> comentario .)
    MUEVE           reduce using rule 94 (estatuto -> comentario .)
    LEVANTA         reduce using rule 94 (estatuto -> comentario .)
    APOYA           reduce using rule 94 (estatuto -> comentario .)
    DIMENSION       reduce using rule 94 (estatuto -> comentario .)
    RKEY            reduce using rule 94 (estatuto -> comentario .)


state 77

    (103) estatuto -> levanta .

    ID              reduce using rule 103 (estatuto -> levanta .)
    PRINT           reduce using rule 103 (estatuto -> levanta .)
    IF              reduce using rule 103 (estatuto -> levanta .)
    WHILE           reduce using rule 103 (estatuto -> levanta .)
    DO              reduce using rule 103 (estatuto -> levanta .)
    FOR             reduce using rule 103 (estatuto -> levanta .)
    COMENTARIO      reduce using rule 103 (estatuto -> levanta .)
    CUADRADO        reduce using rule 103 (estatuto -> levanta .)
    TRIANGULO       reduce using rule 103 (estatuto -> levanta .)
    CASA            reduce using rule 103 (estatuto -> levanta .)
    RECTANGULO      reduce using rule 103 (estatuto -> levanta .)
    CUBO            reduce using rule 103 (estatuto -> levanta .)
    TRAPECIO        reduce using rule 103 (estatuto -> levanta .)
    ESTRELLA        reduce using rule 103 (estatuto -> levanta .)
    MUEVE           reduce using rule 103 (estatuto -> levanta .)
    LEVANTA         reduce using rule 103 (estatuto -> levanta .)
    APOYA           reduce using rule 103 (estatuto -> levanta .)
    DIMENSION       reduce using rule 103 (estatuto -> levanta .)
    RKEY            reduce using rule 103 (estatuto -> levanta .)


state 78

    (107) estatuto -> if .

    ID              reduce using rule 107 (estatuto -> if .)
    PRINT           reduce using rule 107 (estatuto -> if .)
    IF              reduce using rule 107 (estatuto -> if .)
    WHILE           reduce using rule 107 (estatuto -> if .)
    DO              reduce using rule 107 (estatuto -> if .)
    FOR             reduce using rule 107 (estatuto -> if .)
    COMENTARIO      reduce using rule 107 (estatuto -> if .)
    CUADRADO        reduce using rule 107 (estatuto -> if .)
    TRIANGULO       reduce using rule 107 (estatuto -> if .)
    CASA            reduce using rule 107 (estatuto -> if .)
    RECTANGULO      reduce using rule 107 (estatuto -> if .)
    CUBO            reduce using rule 107 (estatuto -> if .)
    TRAPECIO        reduce using rule 107 (estatuto -> if .)
    ESTRELLA        reduce using rule 107 (estatuto -> if .)
    MUEVE           reduce using rule 107 (estatuto -> if .)
    LEVANTA         reduce using rule 107 (estatuto -> if .)
    APOYA           reduce using rule 107 (estatuto -> if .)
    DIMENSION       reduce using rule 107 (estatuto -> if .)
    RKEY            reduce using rule 107 (estatuto -> if .)


state 79

    (96) estatuto -> triangulo .

    ID              reduce using rule 96 (estatuto -> triangulo .)
    PRINT           reduce using rule 96 (estatuto -> triangulo .)
    IF              reduce using rule 96 (estatuto -> triangulo .)
    WHILE           reduce using rule 96 (estatuto -> triangulo .)
    DO              reduce using rule 96 (estatuto -> triangulo .)
    FOR             reduce using rule 96 (estatuto -> triangulo .)
    COMENTARIO      reduce using rule 96 (estatuto -> triangulo .)
    CUADRADO        reduce using rule 96 (estatuto -> triangulo .)
    TRIANGULO       reduce using rule 96 (estatuto -> triangulo .)
    CASA            reduce using rule 96 (estatuto -> triangulo .)
    RECTANGULO      reduce using rule 96 (estatuto -> triangulo .)
    CUBO            reduce using rule 96 (estatuto -> triangulo .)
    TRAPECIO        reduce using rule 96 (estatuto -> triangulo .)
    ESTRELLA        reduce using rule 96 (estatuto -> triangulo .)
    MUEVE           reduce using rule 96 (estatuto -> triangulo .)
    LEVANTA         reduce using rule 96 (estatuto -> triangulo .)
    APOYA           reduce using rule 96 (estatuto -> triangulo .)
    DIMENSION       reduce using rule 96 (estatuto -> triangulo .)
    RKEY            reduce using rule 96 (estatuto -> triangulo .)


state 80

    (127) casa -> CASA . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 140


state 81

    (126) rectangulo -> RECTANGULO . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 141


state 82

    (17) b4 -> estatuto . b4
    (17) b4 -> . estatuto b4
    (18) b4 -> . empty
    (87) estatuto -> . asignacion
    (88) estatuto -> . print
    (89) estatuto -> . condicion
    (90) estatuto -> . ciclowhile
    (91) estatuto -> . ciclodowhile
    (92) estatuto -> . ciclofor
    (93) estatuto -> . read
    (94) estatuto -> . comentario
    (95) estatuto -> . cuadrado
    (96) estatuto -> . triangulo
    (97) estatuto -> . casa
    (98) estatuto -> . rectangulo
    (99) estatuto -> . cubo
    (100) estatuto -> . trapecio
    (101) estatuto -> . estrella
    (102) estatuto -> . mueve
    (103) estatuto -> . levanta
    (104) estatuto -> . apoya
    (105) estatuto -> . dimension
    (106) estatuto -> . llamafuncion
    (107) estatuto -> . if
    (152) empty -> .
    (55) asignacion -> . ID asig2
    (61) print -> . PRINT LPARENT pr2
    (66) condicion -> . IF LKEY expresion RKEY bloque c2
    (117) ciclowhile -> . WHILE LPARENT expresion RPARENT bloque
    (118) ciclodowhile -> . DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (120) ciclofor -> . FOR LPARENT asignacion expresion asignacion RPARENT bloque
    (119) read -> . ID IGUAL READ LPARENT RPARENT PUNTOCOMA
    (108) comentario -> . COMENTARIO
    (124) cuadrado -> . CUADRADO LPARENT exp RPARENT PUNTOCOMA
    (125) triangulo -> . TRIANGULO LPARENT exp RPARENT PUNTOCOMA
    (127) casa -> . CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
    (126) rectangulo -> . RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (129) cubo -> . CUBO LPARENT exp RPARENT PUNTOCOMA
    (133) trapecio -> . TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (128) estrella -> . ESTRELLA LPARENT exp RPARENT PUNTOCOMA
    (130) mueve -> . MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA
    (131) levanta -> . LEVANTA LPARENT RPARENT PUNTOCOMA
    (132) apoya -> . APOYA LPARENT RPARENT PUNTOCOMA
    (134) dimension -> . DIMENSION LPARENT exp RPARENT PUNTOCOMA
    (145) llamafuncion -> . ID LPARENT llamaf11
    (121) if -> . IF LPARENT expresion RPARENT bloque if2

    RKEY            reduce using rule 152 (empty -> .)
    ID              shift and go to state 101
    PRINT           shift and go to state 74
    IF              shift and go to state 103
    WHILE           shift and go to state 71
    DO              shift and go to state 68
    FOR             shift and go to state 94
    COMENTARIO      shift and go to state 93
    CUADRADO        shift and go to state 107
    TRIANGULO       shift and go to state 92
    CASA            shift and go to state 80
    RECTANGULO      shift and go to state 81
    CUBO            shift and go to state 88
    TRAPECIO        shift and go to state 73
    ESTRELLA        shift and go to state 104
    MUEVE           shift and go to state 69
    LEVANTA         shift and go to state 108
    APOYA           shift and go to state 91
    DIMENSION       shift and go to state 102

    b4                             shift and go to state 142
    apoya                          shift and go to state 72
    trapecio                       shift and go to state 75
    comentario                     shift and go to state 76
    levanta                        shift and go to state 77
    if                             shift and go to state 78
    triangulo                      shift and go to state 79
    estatuto                       shift and go to state 82
    mueve                          shift and go to state 83
    ciclowhile                     shift and go to state 84
    llamafuncion                   shift and go to state 85
    cuadrado                       shift and go to state 99
    rectangulo                     shift and go to state 87
    print                          shift and go to state 89
    empty                          shift and go to state 90
    read                           shift and go to state 95
    cubo                           shift and go to state 96
    ciclofor                       shift and go to state 97
    estrella                       shift and go to state 98
    condicion                      shift and go to state 86
    ciclodowhile                   shift and go to state 100
    casa                           shift and go to state 105
    asignacion                     shift and go to state 106
    dimension                      shift and go to state 109

state 83

    (102) estatuto -> mueve .

    ID              reduce using rule 102 (estatuto -> mueve .)
    PRINT           reduce using rule 102 (estatuto -> mueve .)
    IF              reduce using rule 102 (estatuto -> mueve .)
    WHILE           reduce using rule 102 (estatuto -> mueve .)
    DO              reduce using rule 102 (estatuto -> mueve .)
    FOR             reduce using rule 102 (estatuto -> mueve .)
    COMENTARIO      reduce using rule 102 (estatuto -> mueve .)
    CUADRADO        reduce using rule 102 (estatuto -> mueve .)
    TRIANGULO       reduce using rule 102 (estatuto -> mueve .)
    CASA            reduce using rule 102 (estatuto -> mueve .)
    RECTANGULO      reduce using rule 102 (estatuto -> mueve .)
    CUBO            reduce using rule 102 (estatuto -> mueve .)
    TRAPECIO        reduce using rule 102 (estatuto -> mueve .)
    ESTRELLA        reduce using rule 102 (estatuto -> mueve .)
    MUEVE           reduce using rule 102 (estatuto -> mueve .)
    LEVANTA         reduce using rule 102 (estatuto -> mueve .)
    APOYA           reduce using rule 102 (estatuto -> mueve .)
    DIMENSION       reduce using rule 102 (estatuto -> mueve .)
    RKEY            reduce using rule 102 (estatuto -> mueve .)


state 84

    (90) estatuto -> ciclowhile .

    ID              reduce using rule 90 (estatuto -> ciclowhile .)
    PRINT           reduce using rule 90 (estatuto -> ciclowhile .)
    IF              reduce using rule 90 (estatuto -> ciclowhile .)
    WHILE           reduce using rule 90 (estatuto -> ciclowhile .)
    DO              reduce using rule 90 (estatuto -> ciclowhile .)
    FOR             reduce using rule 90 (estatuto -> ciclowhile .)
    COMENTARIO      reduce using rule 90 (estatuto -> ciclowhile .)
    CUADRADO        reduce using rule 90 (estatuto -> ciclowhile .)
    TRIANGULO       reduce using rule 90 (estatuto -> ciclowhile .)
    CASA            reduce using rule 90 (estatuto -> ciclowhile .)
    RECTANGULO      reduce using rule 90 (estatuto -> ciclowhile .)
    CUBO            reduce using rule 90 (estatuto -> ciclowhile .)
    TRAPECIO        reduce using rule 90 (estatuto -> ciclowhile .)
    ESTRELLA        reduce using rule 90 (estatuto -> ciclowhile .)
    MUEVE           reduce using rule 90 (estatuto -> ciclowhile .)
    LEVANTA         reduce using rule 90 (estatuto -> ciclowhile .)
    APOYA           reduce using rule 90 (estatuto -> ciclowhile .)
    DIMENSION       reduce using rule 90 (estatuto -> ciclowhile .)
    RKEY            reduce using rule 90 (estatuto -> ciclowhile .)


state 85

    (106) estatuto -> llamafuncion .

    ID              reduce using rule 106 (estatuto -> llamafuncion .)
    PRINT           reduce using rule 106 (estatuto -> llamafuncion .)
    IF              reduce using rule 106 (estatuto -> llamafuncion .)
    WHILE           reduce using rule 106 (estatuto -> llamafuncion .)
    DO              reduce using rule 106 (estatuto -> llamafuncion .)
    FOR             reduce using rule 106 (estatuto -> llamafuncion .)
    COMENTARIO      reduce using rule 106 (estatuto -> llamafuncion .)
    CUADRADO        reduce using rule 106 (estatuto -> llamafuncion .)
    TRIANGULO       reduce using rule 106 (estatuto -> llamafuncion .)
    CASA            reduce using rule 106 (estatuto -> llamafuncion .)
    RECTANGULO      reduce using rule 106 (estatuto -> llamafuncion .)
    CUBO            reduce using rule 106 (estatuto -> llamafuncion .)
    TRAPECIO        reduce using rule 106 (estatuto -> llamafuncion .)
    ESTRELLA        reduce using rule 106 (estatuto -> llamafuncion .)
    MUEVE           reduce using rule 106 (estatuto -> llamafuncion .)
    LEVANTA         reduce using rule 106 (estatuto -> llamafuncion .)
    APOYA           reduce using rule 106 (estatuto -> llamafuncion .)
    DIMENSION       reduce using rule 106 (estatuto -> llamafuncion .)
    RKEY            reduce using rule 106 (estatuto -> llamafuncion .)


state 86

    (89) estatuto -> condicion .

    ID              reduce using rule 89 (estatuto -> condicion .)
    PRINT           reduce using rule 89 (estatuto -> condicion .)
    IF              reduce using rule 89 (estatuto -> condicion .)
    WHILE           reduce using rule 89 (estatuto -> condicion .)
    DO              reduce using rule 89 (estatuto -> condicion .)
    FOR             reduce using rule 89 (estatuto -> condicion .)
    COMENTARIO      reduce using rule 89 (estatuto -> condicion .)
    CUADRADO        reduce using rule 89 (estatuto -> condicion .)
    TRIANGULO       reduce using rule 89 (estatuto -> condicion .)
    CASA            reduce using rule 89 (estatuto -> condicion .)
    RECTANGULO      reduce using rule 89 (estatuto -> condicion .)
    CUBO            reduce using rule 89 (estatuto -> condicion .)
    TRAPECIO        reduce using rule 89 (estatuto -> condicion .)
    ESTRELLA        reduce using rule 89 (estatuto -> condicion .)
    MUEVE           reduce using rule 89 (estatuto -> condicion .)
    LEVANTA         reduce using rule 89 (estatuto -> condicion .)
    APOYA           reduce using rule 89 (estatuto -> condicion .)
    DIMENSION       reduce using rule 89 (estatuto -> condicion .)
    RKEY            reduce using rule 89 (estatuto -> condicion .)


state 87

    (98) estatuto -> rectangulo .

    ID              reduce using rule 98 (estatuto -> rectangulo .)
    PRINT           reduce using rule 98 (estatuto -> rectangulo .)
    IF              reduce using rule 98 (estatuto -> rectangulo .)
    WHILE           reduce using rule 98 (estatuto -> rectangulo .)
    DO              reduce using rule 98 (estatuto -> rectangulo .)
    FOR             reduce using rule 98 (estatuto -> rectangulo .)
    COMENTARIO      reduce using rule 98 (estatuto -> rectangulo .)
    CUADRADO        reduce using rule 98 (estatuto -> rectangulo .)
    TRIANGULO       reduce using rule 98 (estatuto -> rectangulo .)
    CASA            reduce using rule 98 (estatuto -> rectangulo .)
    RECTANGULO      reduce using rule 98 (estatuto -> rectangulo .)
    CUBO            reduce using rule 98 (estatuto -> rectangulo .)
    TRAPECIO        reduce using rule 98 (estatuto -> rectangulo .)
    ESTRELLA        reduce using rule 98 (estatuto -> rectangulo .)
    MUEVE           reduce using rule 98 (estatuto -> rectangulo .)
    LEVANTA         reduce using rule 98 (estatuto -> rectangulo .)
    APOYA           reduce using rule 98 (estatuto -> rectangulo .)
    DIMENSION       reduce using rule 98 (estatuto -> rectangulo .)
    RKEY            reduce using rule 98 (estatuto -> rectangulo .)


state 88

    (129) cubo -> CUBO . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 143


state 89

    (88) estatuto -> print .

    ID              reduce using rule 88 (estatuto -> print .)
    PRINT           reduce using rule 88 (estatuto -> print .)
    IF              reduce using rule 88 (estatuto -> print .)
    WHILE           reduce using rule 88 (estatuto -> print .)
    DO              reduce using rule 88 (estatuto -> print .)
    FOR             reduce using rule 88 (estatuto -> print .)
    COMENTARIO      reduce using rule 88 (estatuto -> print .)
    CUADRADO        reduce using rule 88 (estatuto -> print .)
    TRIANGULO       reduce using rule 88 (estatuto -> print .)
    CASA            reduce using rule 88 (estatuto -> print .)
    RECTANGULO      reduce using rule 88 (estatuto -> print .)
    CUBO            reduce using rule 88 (estatuto -> print .)
    TRAPECIO        reduce using rule 88 (estatuto -> print .)
    ESTRELLA        reduce using rule 88 (estatuto -> print .)
    MUEVE           reduce using rule 88 (estatuto -> print .)
    LEVANTA         reduce using rule 88 (estatuto -> print .)
    APOYA           reduce using rule 88 (estatuto -> print .)
    DIMENSION       reduce using rule 88 (estatuto -> print .)
    RKEY            reduce using rule 88 (estatuto -> print .)


state 90

    (18) b4 -> empty .

    RKEY            reduce using rule 18 (b4 -> empty .)


state 91

    (132) apoya -> APOYA . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 144


state 92

    (125) triangulo -> TRIANGULO . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 145


state 93

    (108) comentario -> COMENTARIO .

    ID              reduce using rule 108 (comentario -> COMENTARIO .)
    PRINT           reduce using rule 108 (comentario -> COMENTARIO .)
    IF              reduce using rule 108 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 108 (comentario -> COMENTARIO .)
    DO              reduce using rule 108 (comentario -> COMENTARIO .)
    FOR             reduce using rule 108 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 108 (comentario -> COMENTARIO .)
    CUADRADO        reduce using rule 108 (comentario -> COMENTARIO .)
    TRIANGULO       reduce using rule 108 (comentario -> COMENTARIO .)
    CASA            reduce using rule 108 (comentario -> COMENTARIO .)
    RECTANGULO      reduce using rule 108 (comentario -> COMENTARIO .)
    CUBO            reduce using rule 108 (comentario -> COMENTARIO .)
    TRAPECIO        reduce using rule 108 (comentario -> COMENTARIO .)
    ESTRELLA        reduce using rule 108 (comentario -> COMENTARIO .)
    MUEVE           reduce using rule 108 (comentario -> COMENTARIO .)
    LEVANTA         reduce using rule 108 (comentario -> COMENTARIO .)
    APOYA           reduce using rule 108 (comentario -> COMENTARIO .)
    DIMENSION       reduce using rule 108 (comentario -> COMENTARIO .)
    RKEY            reduce using rule 108 (comentario -> COMENTARIO .)


state 94

    (120) ciclofor -> FOR . LPARENT asignacion expresion asignacion RPARENT bloque

    LPARENT         shift and go to state 146


state 95

    (93) estatuto -> read .

    ID              reduce using rule 93 (estatuto -> read .)
    PRINT           reduce using rule 93 (estatuto -> read .)
    IF              reduce using rule 93 (estatuto -> read .)
    WHILE           reduce using rule 93 (estatuto -> read .)
    DO              reduce using rule 93 (estatuto -> read .)
    FOR             reduce using rule 93 (estatuto -> read .)
    COMENTARIO      reduce using rule 93 (estatuto -> read .)
    CUADRADO        reduce using rule 93 (estatuto -> read .)
    TRIANGULO       reduce using rule 93 (estatuto -> read .)
    CASA            reduce using rule 93 (estatuto -> read .)
    RECTANGULO      reduce using rule 93 (estatuto -> read .)
    CUBO            reduce using rule 93 (estatuto -> read .)
    TRAPECIO        reduce using rule 93 (estatuto -> read .)
    ESTRELLA        reduce using rule 93 (estatuto -> read .)
    MUEVE           reduce using rule 93 (estatuto -> read .)
    LEVANTA         reduce using rule 93 (estatuto -> read .)
    APOYA           reduce using rule 93 (estatuto -> read .)
    DIMENSION       reduce using rule 93 (estatuto -> read .)
    RKEY            reduce using rule 93 (estatuto -> read .)


state 96

    (99) estatuto -> cubo .

    ID              reduce using rule 99 (estatuto -> cubo .)
    PRINT           reduce using rule 99 (estatuto -> cubo .)
    IF              reduce using rule 99 (estatuto -> cubo .)
    WHILE           reduce using rule 99 (estatuto -> cubo .)
    DO              reduce using rule 99 (estatuto -> cubo .)
    FOR             reduce using rule 99 (estatuto -> cubo .)
    COMENTARIO      reduce using rule 99 (estatuto -> cubo .)
    CUADRADO        reduce using rule 99 (estatuto -> cubo .)
    TRIANGULO       reduce using rule 99 (estatuto -> cubo .)
    CASA            reduce using rule 99 (estatuto -> cubo .)
    RECTANGULO      reduce using rule 99 (estatuto -> cubo .)
    CUBO            reduce using rule 99 (estatuto -> cubo .)
    TRAPECIO        reduce using rule 99 (estatuto -> cubo .)
    ESTRELLA        reduce using rule 99 (estatuto -> cubo .)
    MUEVE           reduce using rule 99 (estatuto -> cubo .)
    LEVANTA         reduce using rule 99 (estatuto -> cubo .)
    APOYA           reduce using rule 99 (estatuto -> cubo .)
    DIMENSION       reduce using rule 99 (estatuto -> cubo .)
    RKEY            reduce using rule 99 (estatuto -> cubo .)


state 97

    (92) estatuto -> ciclofor .

    ID              reduce using rule 92 (estatuto -> ciclofor .)
    PRINT           reduce using rule 92 (estatuto -> ciclofor .)
    IF              reduce using rule 92 (estatuto -> ciclofor .)
    WHILE           reduce using rule 92 (estatuto -> ciclofor .)
    DO              reduce using rule 92 (estatuto -> ciclofor .)
    FOR             reduce using rule 92 (estatuto -> ciclofor .)
    COMENTARIO      reduce using rule 92 (estatuto -> ciclofor .)
    CUADRADO        reduce using rule 92 (estatuto -> ciclofor .)
    TRIANGULO       reduce using rule 92 (estatuto -> ciclofor .)
    CASA            reduce using rule 92 (estatuto -> ciclofor .)
    RECTANGULO      reduce using rule 92 (estatuto -> ciclofor .)
    CUBO            reduce using rule 92 (estatuto -> ciclofor .)
    TRAPECIO        reduce using rule 92 (estatuto -> ciclofor .)
    ESTRELLA        reduce using rule 92 (estatuto -> ciclofor .)
    MUEVE           reduce using rule 92 (estatuto -> ciclofor .)
    LEVANTA         reduce using rule 92 (estatuto -> ciclofor .)
    APOYA           reduce using rule 92 (estatuto -> ciclofor .)
    DIMENSION       reduce using rule 92 (estatuto -> ciclofor .)
    RKEY            reduce using rule 92 (estatuto -> ciclofor .)


state 98

    (101) estatuto -> estrella .

    ID              reduce using rule 101 (estatuto -> estrella .)
    PRINT           reduce using rule 101 (estatuto -> estrella .)
    IF              reduce using rule 101 (estatuto -> estrella .)
    WHILE           reduce using rule 101 (estatuto -> estrella .)
    DO              reduce using rule 101 (estatuto -> estrella .)
    FOR             reduce using rule 101 (estatuto -> estrella .)
    COMENTARIO      reduce using rule 101 (estatuto -> estrella .)
    CUADRADO        reduce using rule 101 (estatuto -> estrella .)
    TRIANGULO       reduce using rule 101 (estatuto -> estrella .)
    CASA            reduce using rule 101 (estatuto -> estrella .)
    RECTANGULO      reduce using rule 101 (estatuto -> estrella .)
    CUBO            reduce using rule 101 (estatuto -> estrella .)
    TRAPECIO        reduce using rule 101 (estatuto -> estrella .)
    ESTRELLA        reduce using rule 101 (estatuto -> estrella .)
    MUEVE           reduce using rule 101 (estatuto -> estrella .)
    LEVANTA         reduce using rule 101 (estatuto -> estrella .)
    APOYA           reduce using rule 101 (estatuto -> estrella .)
    DIMENSION       reduce using rule 101 (estatuto -> estrella .)
    RKEY            reduce using rule 101 (estatuto -> estrella .)


state 99

    (95) estatuto -> cuadrado .

    ID              reduce using rule 95 (estatuto -> cuadrado .)
    PRINT           reduce using rule 95 (estatuto -> cuadrado .)
    IF              reduce using rule 95 (estatuto -> cuadrado .)
    WHILE           reduce using rule 95 (estatuto -> cuadrado .)
    DO              reduce using rule 95 (estatuto -> cuadrado .)
    FOR             reduce using rule 95 (estatuto -> cuadrado .)
    COMENTARIO      reduce using rule 95 (estatuto -> cuadrado .)
    CUADRADO        reduce using rule 95 (estatuto -> cuadrado .)
    TRIANGULO       reduce using rule 95 (estatuto -> cuadrado .)
    CASA            reduce using rule 95 (estatuto -> cuadrado .)
    RECTANGULO      reduce using rule 95 (estatuto -> cuadrado .)
    CUBO            reduce using rule 95 (estatuto -> cuadrado .)
    TRAPECIO        reduce using rule 95 (estatuto -> cuadrado .)
    ESTRELLA        reduce using rule 95 (estatuto -> cuadrado .)
    MUEVE           reduce using rule 95 (estatuto -> cuadrado .)
    LEVANTA         reduce using rule 95 (estatuto -> cuadrado .)
    APOYA           reduce using rule 95 (estatuto -> cuadrado .)
    DIMENSION       reduce using rule 95 (estatuto -> cuadrado .)
    RKEY            reduce using rule 95 (estatuto -> cuadrado .)


state 100

    (91) estatuto -> ciclodowhile .

    ID              reduce using rule 91 (estatuto -> ciclodowhile .)
    PRINT           reduce using rule 91 (estatuto -> ciclodowhile .)
    IF              reduce using rule 91 (estatuto -> ciclodowhile .)
    WHILE           reduce using rule 91 (estatuto -> ciclodowhile .)
    DO              reduce using rule 91 (estatuto -> ciclodowhile .)
    FOR             reduce using rule 91 (estatuto -> ciclodowhile .)
    COMENTARIO      reduce using rule 91 (estatuto -> ciclodowhile .)
    CUADRADO        reduce using rule 91 (estatuto -> ciclodowhile .)
    TRIANGULO       reduce using rule 91 (estatuto -> ciclodowhile .)
    CASA            reduce using rule 91 (estatuto -> ciclodowhile .)
    RECTANGULO      reduce using rule 91 (estatuto -> ciclodowhile .)
    CUBO            reduce using rule 91 (estatuto -> ciclodowhile .)
    TRAPECIO        reduce using rule 91 (estatuto -> ciclodowhile .)
    ESTRELLA        reduce using rule 91 (estatuto -> ciclodowhile .)
    MUEVE           reduce using rule 91 (estatuto -> ciclodowhile .)
    LEVANTA         reduce using rule 91 (estatuto -> ciclodowhile .)
    APOYA           reduce using rule 91 (estatuto -> ciclodowhile .)
    DIMENSION       reduce using rule 91 (estatuto -> ciclodowhile .)
    RKEY            reduce using rule 91 (estatuto -> ciclodowhile .)


state 101

    (55) asignacion -> ID . asig2
    (119) read -> ID . IGUAL READ LPARENT RPARENT PUNTOCOMA
    (145) llamafuncion -> ID . LPARENT llamaf11
    (56) asig2 -> . LBRACKET exp asig3
    (57) asig2 -> . asigfinal
    (60) asigfinal -> . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 147
    LPARENT         shift and go to state 126
    LBRACKET        shift and go to state 148

    asigfinal                      shift and go to state 150
    asig2                          shift and go to state 149

state 102

    (134) dimension -> DIMENSION . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 151


state 103

    (66) condicion -> IF . LKEY expresion RKEY bloque c2
    (121) if -> IF . LPARENT expresion RPARENT bloque if2

    LKEY            shift and go to state 153
    LPARENT         shift and go to state 152


state 104

    (128) estrella -> ESTRELLA . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 154


state 105

    (97) estatuto -> casa .

    ID              reduce using rule 97 (estatuto -> casa .)
    PRINT           reduce using rule 97 (estatuto -> casa .)
    IF              reduce using rule 97 (estatuto -> casa .)
    WHILE           reduce using rule 97 (estatuto -> casa .)
    DO              reduce using rule 97 (estatuto -> casa .)
    FOR             reduce using rule 97 (estatuto -> casa .)
    COMENTARIO      reduce using rule 97 (estatuto -> casa .)
    CUADRADO        reduce using rule 97 (estatuto -> casa .)
    TRIANGULO       reduce using rule 97 (estatuto -> casa .)
    CASA            reduce using rule 97 (estatuto -> casa .)
    RECTANGULO      reduce using rule 97 (estatuto -> casa .)
    CUBO            reduce using rule 97 (estatuto -> casa .)
    TRAPECIO        reduce using rule 97 (estatuto -> casa .)
    ESTRELLA        reduce using rule 97 (estatuto -> casa .)
    MUEVE           reduce using rule 97 (estatuto -> casa .)
    LEVANTA         reduce using rule 97 (estatuto -> casa .)
    APOYA           reduce using rule 97 (estatuto -> casa .)
    DIMENSION       reduce using rule 97 (estatuto -> casa .)
    RKEY            reduce using rule 97 (estatuto -> casa .)


state 106

    (87) estatuto -> asignacion .

    ID              reduce using rule 87 (estatuto -> asignacion .)
    PRINT           reduce using rule 87 (estatuto -> asignacion .)
    IF              reduce using rule 87 (estatuto -> asignacion .)
    WHILE           reduce using rule 87 (estatuto -> asignacion .)
    DO              reduce using rule 87 (estatuto -> asignacion .)
    FOR             reduce using rule 87 (estatuto -> asignacion .)
    COMENTARIO      reduce using rule 87 (estatuto -> asignacion .)
    CUADRADO        reduce using rule 87 (estatuto -> asignacion .)
    TRIANGULO       reduce using rule 87 (estatuto -> asignacion .)
    CASA            reduce using rule 87 (estatuto -> asignacion .)
    RECTANGULO      reduce using rule 87 (estatuto -> asignacion .)
    CUBO            reduce using rule 87 (estatuto -> asignacion .)
    TRAPECIO        reduce using rule 87 (estatuto -> asignacion .)
    ESTRELLA        reduce using rule 87 (estatuto -> asignacion .)
    MUEVE           reduce using rule 87 (estatuto -> asignacion .)
    LEVANTA         reduce using rule 87 (estatuto -> asignacion .)
    APOYA           reduce using rule 87 (estatuto -> asignacion .)
    DIMENSION       reduce using rule 87 (estatuto -> asignacion .)
    RKEY            reduce using rule 87 (estatuto -> asignacion .)


state 107

    (124) cuadrado -> CUADRADO . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 155


state 108

    (131) levanta -> LEVANTA . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 156


state 109

    (105) estatuto -> dimension .

    ID              reduce using rule 105 (estatuto -> dimension .)
    PRINT           reduce using rule 105 (estatuto -> dimension .)
    IF              reduce using rule 105 (estatuto -> dimension .)
    WHILE           reduce using rule 105 (estatuto -> dimension .)
    DO              reduce using rule 105 (estatuto -> dimension .)
    FOR             reduce using rule 105 (estatuto -> dimension .)
    COMENTARIO      reduce using rule 105 (estatuto -> dimension .)
    CUADRADO        reduce using rule 105 (estatuto -> dimension .)
    TRIANGULO       reduce using rule 105 (estatuto -> dimension .)
    CASA            reduce using rule 105 (estatuto -> dimension .)
    RECTANGULO      reduce using rule 105 (estatuto -> dimension .)
    CUBO            reduce using rule 105 (estatuto -> dimension .)
    TRAPECIO        reduce using rule 105 (estatuto -> dimension .)
    ESTRELLA        reduce using rule 105 (estatuto -> dimension .)
    MUEVE           reduce using rule 105 (estatuto -> dimension .)
    LEVANTA         reduce using rule 105 (estatuto -> dimension .)
    APOYA           reduce using rule 105 (estatuto -> dimension .)
    DIMENSION       reduce using rule 105 (estatuto -> dimension .)
    RKEY            reduce using rule 105 (estatuto -> dimension .)


state 110

    (15) b3 -> declaracion b3 .

    ID              reduce using rule 15 (b3 -> declaracion b3 .)
    PRINT           reduce using rule 15 (b3 -> declaracion b3 .)
    IF              reduce using rule 15 (b3 -> declaracion b3 .)
    WHILE           reduce using rule 15 (b3 -> declaracion b3 .)
    DO              reduce using rule 15 (b3 -> declaracion b3 .)
    FOR             reduce using rule 15 (b3 -> declaracion b3 .)
    COMENTARIO      reduce using rule 15 (b3 -> declaracion b3 .)
    CUADRADO        reduce using rule 15 (b3 -> declaracion b3 .)
    TRIANGULO       reduce using rule 15 (b3 -> declaracion b3 .)
    CASA            reduce using rule 15 (b3 -> declaracion b3 .)
    RECTANGULO      reduce using rule 15 (b3 -> declaracion b3 .)
    CUBO            reduce using rule 15 (b3 -> declaracion b3 .)
    TRAPECIO        reduce using rule 15 (b3 -> declaracion b3 .)
    ESTRELLA        reduce using rule 15 (b3 -> declaracion b3 .)
    MUEVE           reduce using rule 15 (b3 -> declaracion b3 .)
    LEVANTA         reduce using rule 15 (b3 -> declaracion b3 .)
    APOYA           reduce using rule 15 (b3 -> declaracion b3 .)
    DIMENSION       reduce using rule 15 (b3 -> declaracion b3 .)
    RKEY            reduce using rule 15 (b3 -> declaracion b3 .)


state 111

    (139) funct2 -> tipo ID . funct3
    (140) funct3 -> . COMA funct2
    (141) funct3 -> . function4
    (142) function4 -> . RPARENT noinitFunc bloque initFunc

    COMA            shift and go to state 159
    RPARENT         shift and go to state 50

    function4                      shift and go to state 157
    funct3                         shift and go to state 158

state 112

    (142) function4 -> RPARENT noinitFunc . bloque initFunc
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 160

state 113

    (143) noinitFunc -> empty .

    LKEY            reduce using rule 143 (noinitFunc -> empty .)


state 114

    (38) exp -> termino tagsacops . exp2
    (39) exp2 -> . SUMA tagop exp
    (40) exp2 -> . RESTA tagop exp
    (41) exp2 -> . empty
    (152) empty -> .

    SUMA            shift and go to state 164
    RESTA           shift and go to state 163
    RBRACKET        reduce using rule 152 (empty -> .)
    COMA            reduce using rule 152 (empty -> .)
    GT              reduce using rule 152 (empty -> .)
    LT              reduce using rule 152 (empty -> .)
    LE              reduce using rule 152 (empty -> .)
    GE              reduce using rule 152 (empty -> .)
    DIF             reduce using rule 152 (empty -> .)
    SAME            reduce using rule 152 (empty -> .)
    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    exp2                           shift and go to state 161
    empty                          shift and go to state 162

state 115

    (43) tagsacops -> empty .

    SUMA            reduce using rule 43 (tagsacops -> empty .)
    RESTA           reduce using rule 43 (tagsacops -> empty .)
    RBRACKET        reduce using rule 43 (tagsacops -> empty .)
    COMA            reduce using rule 43 (tagsacops -> empty .)
    GT              reduce using rule 43 (tagsacops -> empty .)
    LT              reduce using rule 43 (tagsacops -> empty .)
    LE              reduce using rule 43 (tagsacops -> empty .)
    GE              reduce using rule 43 (tagsacops -> empty .)
    DIF             reduce using rule 43 (tagsacops -> empty .)
    SAME            reduce using rule 43 (tagsacops -> empty .)
    AND             reduce using rule 43 (tagsacops -> empty .)
    OR              reduce using rule 43 (tagsacops -> empty .)
    RPARENT         reduce using rule 43 (tagsacops -> empty .)
    CADENA          reduce using rule 43 (tagsacops -> empty .)
    LPARENT         reduce using rule 43 (tagsacops -> empty .)
    ID              reduce using rule 43 (tagsacops -> empty .)
    ENTERO          reduce using rule 43 (tagsacops -> empty .)
    FLOTANTE        reduce using rule 43 (tagsacops -> empty .)
    CARACTER        reduce using rule 43 (tagsacops -> empty .)
    PUNTOCOMA       reduce using rule 43 (tagsacops -> empty .)
    RKEY            reduce using rule 43 (tagsacops -> empty .)


state 116

    (74) factor -> LPARENT tagfondofalso . expresion RPARENT tagsacafondo
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    expresion2                     shift and go to state 165
    expresion                      shift and go to state 166
    exp                            shift and go to state 167

state 117

    (81) tagfondofalso -> empty .

    LPARENT         reduce using rule 81 (tagfondofalso -> empty .)
    ID              reduce using rule 81 (tagfondofalso -> empty .)
    ENTERO          reduce using rule 81 (tagfondofalso -> empty .)
    FLOTANTE        reduce using rule 81 (tagfondofalso -> empty .)
    CADENA          reduce using rule 81 (tagfondofalso -> empty .)
    CARACTER        reduce using rule 81 (tagfondofalso -> empty .)


state 118

    (111) varcte -> CADENA tagcad .

    MULT            reduce using rule 111 (varcte -> CADENA tagcad .)
    DIV             reduce using rule 111 (varcte -> CADENA tagcad .)
    SUMA            reduce using rule 111 (varcte -> CADENA tagcad .)
    RESTA           reduce using rule 111 (varcte -> CADENA tagcad .)
    GT              reduce using rule 111 (varcte -> CADENA tagcad .)
    LT              reduce using rule 111 (varcte -> CADENA tagcad .)
    LE              reduce using rule 111 (varcte -> CADENA tagcad .)
    GE              reduce using rule 111 (varcte -> CADENA tagcad .)
    DIF             reduce using rule 111 (varcte -> CADENA tagcad .)
    SAME            reduce using rule 111 (varcte -> CADENA tagcad .)
    AND             reduce using rule 111 (varcte -> CADENA tagcad .)
    OR              reduce using rule 111 (varcte -> CADENA tagcad .)
    RPARENT         reduce using rule 111 (varcte -> CADENA tagcad .)
    COMA            reduce using rule 111 (varcte -> CADENA tagcad .)
    RBRACKET        reduce using rule 111 (varcte -> CADENA tagcad .)
    CADENA          reduce using rule 111 (varcte -> CADENA tagcad .)
    LPARENT         reduce using rule 111 (varcte -> CADENA tagcad .)
    ID              reduce using rule 111 (varcte -> CADENA tagcad .)
    ENTERO          reduce using rule 111 (varcte -> CADENA tagcad .)
    FLOTANTE        reduce using rule 111 (varcte -> CADENA tagcad .)
    CARACTER        reduce using rule 111 (varcte -> CADENA tagcad .)
    PUNTOCOMA       reduce using rule 111 (varcte -> CADENA tagcad .)
    RKEY            reduce using rule 111 (varcte -> CADENA tagcad .)


state 119

    (115) tagcad -> empty .

    MULT            reduce using rule 115 (tagcad -> empty .)
    DIV             reduce using rule 115 (tagcad -> empty .)
    SUMA            reduce using rule 115 (tagcad -> empty .)
    RESTA           reduce using rule 115 (tagcad -> empty .)
    RBRACKET        reduce using rule 115 (tagcad -> empty .)
    COMA            reduce using rule 115 (tagcad -> empty .)
    GT              reduce using rule 115 (tagcad -> empty .)
    LT              reduce using rule 115 (tagcad -> empty .)
    LE              reduce using rule 115 (tagcad -> empty .)
    GE              reduce using rule 115 (tagcad -> empty .)
    DIF             reduce using rule 115 (tagcad -> empty .)
    SAME            reduce using rule 115 (tagcad -> empty .)
    AND             reduce using rule 115 (tagcad -> empty .)
    OR              reduce using rule 115 (tagcad -> empty .)
    RPARENT         reduce using rule 115 (tagcad -> empty .)
    PUNTOCOMA       reduce using rule 115 (tagcad -> empty .)
    RKEY            reduce using rule 115 (tagcad -> empty .)
    CADENA          reduce using rule 115 (tagcad -> empty .)
    LPARENT         reduce using rule 115 (tagcad -> empty .)
    ID              reduce using rule 115 (tagcad -> empty .)
    ENTERO          reduce using rule 115 (tagcad -> empty .)
    FLOTANTE        reduce using rule 115 (tagcad -> empty .)
    CARACTER        reduce using rule 115 (tagcad -> empty .)


state 120

    (69) termino -> factor tagsacopm . te2
    (70) te2 -> . MULT termino
    (71) te2 -> . DIV termino
    (72) te2 -> . empty
    (152) empty -> .

    MULT            shift and go to state 171
    DIV             shift and go to state 170
    SUMA            reduce using rule 152 (empty -> .)
    RESTA           reduce using rule 152 (empty -> .)
    RBRACKET        reduce using rule 152 (empty -> .)
    COMA            reduce using rule 152 (empty -> .)
    GT              reduce using rule 152 (empty -> .)
    LT              reduce using rule 152 (empty -> .)
    LE              reduce using rule 152 (empty -> .)
    GE              reduce using rule 152 (empty -> .)
    DIF             reduce using rule 152 (empty -> .)
    SAME            reduce using rule 152 (empty -> .)
    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    te2                            shift and go to state 169
    empty                          shift and go to state 168

state 121

    (73) tagsacopm -> empty .

    MULT            reduce using rule 73 (tagsacopm -> empty .)
    DIV             reduce using rule 73 (tagsacopm -> empty .)
    SUMA            reduce using rule 73 (tagsacopm -> empty .)
    RESTA           reduce using rule 73 (tagsacopm -> empty .)
    RBRACKET        reduce using rule 73 (tagsacopm -> empty .)
    COMA            reduce using rule 73 (tagsacopm -> empty .)
    GT              reduce using rule 73 (tagsacopm -> empty .)
    LT              reduce using rule 73 (tagsacopm -> empty .)
    LE              reduce using rule 73 (tagsacopm -> empty .)
    GE              reduce using rule 73 (tagsacopm -> empty .)
    DIF             reduce using rule 73 (tagsacopm -> empty .)
    SAME            reduce using rule 73 (tagsacopm -> empty .)
    AND             reduce using rule 73 (tagsacopm -> empty .)
    OR              reduce using rule 73 (tagsacopm -> empty .)
    RPARENT         reduce using rule 73 (tagsacopm -> empty .)
    CADENA          reduce using rule 73 (tagsacopm -> empty .)
    LPARENT         reduce using rule 73 (tagsacopm -> empty .)
    ID              reduce using rule 73 (tagsacopm -> empty .)
    ENTERO          reduce using rule 73 (tagsacopm -> empty .)
    FLOTANTE        reduce using rule 73 (tagsacopm -> empty .)
    CARACTER        reduce using rule 73 (tagsacopm -> empty .)
    PUNTOCOMA       reduce using rule 73 (tagsacopm -> empty .)
    RKEY            reduce using rule 73 (tagsacopm -> empty .)


state 122

    (109) varcte -> ENTERO tagint .

    MULT            reduce using rule 109 (varcte -> ENTERO tagint .)
    DIV             reduce using rule 109 (varcte -> ENTERO tagint .)
    SUMA            reduce using rule 109 (varcte -> ENTERO tagint .)
    RESTA           reduce using rule 109 (varcte -> ENTERO tagint .)
    GT              reduce using rule 109 (varcte -> ENTERO tagint .)
    LT              reduce using rule 109 (varcte -> ENTERO tagint .)
    LE              reduce using rule 109 (varcte -> ENTERO tagint .)
    GE              reduce using rule 109 (varcte -> ENTERO tagint .)
    DIF             reduce using rule 109 (varcte -> ENTERO tagint .)
    SAME            reduce using rule 109 (varcte -> ENTERO tagint .)
    AND             reduce using rule 109 (varcte -> ENTERO tagint .)
    OR              reduce using rule 109 (varcte -> ENTERO tagint .)
    RPARENT         reduce using rule 109 (varcte -> ENTERO tagint .)
    COMA            reduce using rule 109 (varcte -> ENTERO tagint .)
    RBRACKET        reduce using rule 109 (varcte -> ENTERO tagint .)
    CADENA          reduce using rule 109 (varcte -> ENTERO tagint .)
    LPARENT         reduce using rule 109 (varcte -> ENTERO tagint .)
    ID              reduce using rule 109 (varcte -> ENTERO tagint .)
    ENTERO          reduce using rule 109 (varcte -> ENTERO tagint .)
    FLOTANTE        reduce using rule 109 (varcte -> ENTERO tagint .)
    CARACTER        reduce using rule 109 (varcte -> ENTERO tagint .)
    PUNTOCOMA       reduce using rule 109 (varcte -> ENTERO tagint .)
    RKEY            reduce using rule 109 (varcte -> ENTERO tagint .)


state 123

    (113) tagint -> empty .

    MULT            reduce using rule 113 (tagint -> empty .)
    DIV             reduce using rule 113 (tagint -> empty .)
    SUMA            reduce using rule 113 (tagint -> empty .)
    RESTA           reduce using rule 113 (tagint -> empty .)
    RBRACKET        reduce using rule 113 (tagint -> empty .)
    COMA            reduce using rule 113 (tagint -> empty .)
    GT              reduce using rule 113 (tagint -> empty .)
    LT              reduce using rule 113 (tagint -> empty .)
    LE              reduce using rule 113 (tagint -> empty .)
    GE              reduce using rule 113 (tagint -> empty .)
    DIF             reduce using rule 113 (tagint -> empty .)
    SAME            reduce using rule 113 (tagint -> empty .)
    AND             reduce using rule 113 (tagint -> empty .)
    OR              reduce using rule 113 (tagint -> empty .)
    RPARENT         reduce using rule 113 (tagint -> empty .)
    CADENA          reduce using rule 113 (tagint -> empty .)
    LPARENT         reduce using rule 113 (tagint -> empty .)
    ID              reduce using rule 113 (tagint -> empty .)
    ENTERO          reduce using rule 113 (tagint -> empty .)
    FLOTANTE        reduce using rule 113 (tagint -> empty .)
    CARACTER        reduce using rule 113 (tagint -> empty .)
    PUNTOCOMA       reduce using rule 113 (tagint -> empty .)
    RKEY            reduce using rule 113 (tagint -> empty .)


state 124

    (112) varcte -> CARACTER tagcar .

    MULT            reduce using rule 112 (varcte -> CARACTER tagcar .)
    DIV             reduce using rule 112 (varcte -> CARACTER tagcar .)
    SUMA            reduce using rule 112 (varcte -> CARACTER tagcar .)
    RESTA           reduce using rule 112 (varcte -> CARACTER tagcar .)
    GT              reduce using rule 112 (varcte -> CARACTER tagcar .)
    LT              reduce using rule 112 (varcte -> CARACTER tagcar .)
    LE              reduce using rule 112 (varcte -> CARACTER tagcar .)
    GE              reduce using rule 112 (varcte -> CARACTER tagcar .)
    DIF             reduce using rule 112 (varcte -> CARACTER tagcar .)
    SAME            reduce using rule 112 (varcte -> CARACTER tagcar .)
    AND             reduce using rule 112 (varcte -> CARACTER tagcar .)
    OR              reduce using rule 112 (varcte -> CARACTER tagcar .)
    RPARENT         reduce using rule 112 (varcte -> CARACTER tagcar .)
    COMA            reduce using rule 112 (varcte -> CARACTER tagcar .)
    RBRACKET        reduce using rule 112 (varcte -> CARACTER tagcar .)
    CADENA          reduce using rule 112 (varcte -> CARACTER tagcar .)
    LPARENT         reduce using rule 112 (varcte -> CARACTER tagcar .)
    ID              reduce using rule 112 (varcte -> CARACTER tagcar .)
    ENTERO          reduce using rule 112 (varcte -> CARACTER tagcar .)
    FLOTANTE        reduce using rule 112 (varcte -> CARACTER tagcar .)
    CARACTER        reduce using rule 112 (varcte -> CARACTER tagcar .)
    PUNTOCOMA       reduce using rule 112 (varcte -> CARACTER tagcar .)
    RKEY            reduce using rule 112 (varcte -> CARACTER tagcar .)


state 125

    (116) tagcar -> empty .

    MULT            reduce using rule 116 (tagcar -> empty .)
    DIV             reduce using rule 116 (tagcar -> empty .)
    SUMA            reduce using rule 116 (tagcar -> empty .)
    RESTA           reduce using rule 116 (tagcar -> empty .)
    RBRACKET        reduce using rule 116 (tagcar -> empty .)
    COMA            reduce using rule 116 (tagcar -> empty .)
    GT              reduce using rule 116 (tagcar -> empty .)
    LT              reduce using rule 116 (tagcar -> empty .)
    LE              reduce using rule 116 (tagcar -> empty .)
    GE              reduce using rule 116 (tagcar -> empty .)
    DIF             reduce using rule 116 (tagcar -> empty .)
    SAME            reduce using rule 116 (tagcar -> empty .)
    AND             reduce using rule 116 (tagcar -> empty .)
    OR              reduce using rule 116 (tagcar -> empty .)
    RPARENT         reduce using rule 116 (tagcar -> empty .)
    CADENA          reduce using rule 116 (tagcar -> empty .)
    LPARENT         reduce using rule 116 (tagcar -> empty .)
    ID              reduce using rule 116 (tagcar -> empty .)
    ENTERO          reduce using rule 116 (tagcar -> empty .)
    FLOTANTE        reduce using rule 116 (tagcar -> empty .)
    CARACTER        reduce using rule 116 (tagcar -> empty .)
    PUNTOCOMA       reduce using rule 116 (tagcar -> empty .)
    RKEY            reduce using rule 116 (tagcar -> empty .)


state 126

    (145) llamafuncion -> ID LPARENT . llamaf11
    (146) llamaf11 -> . llamaf2
    (147) llamaf11 -> . llamaf4
    (148) llamaf2 -> . exp llamaf3
    (151) llamaf4 -> . RPARENT
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    RPARENT         shift and go to state 172
    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    llamaf2                        shift and go to state 173
    llamaf4                        shift and go to state 174
    exp                            shift and go to state 175
    llamaf11                       shift and go to state 176

state 127

    (83) f7 -> ID LBRACKET . exp f8
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 177

state 128

    (46) decla1 -> LBRACKET exp decla2 .

    INT             reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    FLOAT           reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    CHAR            reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    STRING          reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    BOOL            reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    VOID            reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    LKEY            reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    ID              reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    PRINT           reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    IF              reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    WHILE           reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    DO              reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    FOR             reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    COMENTARIO      reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    CUADRADO        reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    TRIANGULO       reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    CASA            reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    RECTANGULO      reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    CUBO            reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    TRAPECIO        reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    ESTRELLA        reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    MUEVE           reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    LEVANTA         reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    APOYA           reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    DIMENSION       reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)
    RKEY            reduce using rule 46 (decla1 -> LBRACKET exp decla2 .)


state 129

    (48) decla2 -> COMA . exp decla2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 178

state 130

    (47) decla2 -> RBRACKET . declafinal
    (49) declafinal -> . PUNTOCOMA

    PUNTOCOMA       shift and go to state 38

    declafinal                     shift and go to state 179

state 131

    (114) tagfloat -> empty .

    MULT            reduce using rule 114 (tagfloat -> empty .)
    DIV             reduce using rule 114 (tagfloat -> empty .)
    SUMA            reduce using rule 114 (tagfloat -> empty .)
    RESTA           reduce using rule 114 (tagfloat -> empty .)
    RBRACKET        reduce using rule 114 (tagfloat -> empty .)
    COMA            reduce using rule 114 (tagfloat -> empty .)
    GT              reduce using rule 114 (tagfloat -> empty .)
    LT              reduce using rule 114 (tagfloat -> empty .)
    LE              reduce using rule 114 (tagfloat -> empty .)
    GE              reduce using rule 114 (tagfloat -> empty .)
    DIF             reduce using rule 114 (tagfloat -> empty .)
    SAME            reduce using rule 114 (tagfloat -> empty .)
    AND             reduce using rule 114 (tagfloat -> empty .)
    OR              reduce using rule 114 (tagfloat -> empty .)
    RPARENT         reduce using rule 114 (tagfloat -> empty .)
    CADENA          reduce using rule 114 (tagfloat -> empty .)
    LPARENT         reduce using rule 114 (tagfloat -> empty .)
    ID              reduce using rule 114 (tagfloat -> empty .)
    ENTERO          reduce using rule 114 (tagfloat -> empty .)
    FLOTANTE        reduce using rule 114 (tagfloat -> empty .)
    CARACTER        reduce using rule 114 (tagfloat -> empty .)
    PUNTOCOMA       reduce using rule 114 (tagfloat -> empty .)
    RKEY            reduce using rule 114 (tagfloat -> empty .)


state 132

    (110) varcte -> FLOTANTE tagfloat .

    MULT            reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    DIV             reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    SUMA            reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    RESTA           reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    GT              reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    LT              reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    LE              reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    GE              reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    DIF             reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    SAME            reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    AND             reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    OR              reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    RPARENT         reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    COMA            reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    RBRACKET        reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    CADENA          reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    LPARENT         reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    ID              reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    ENTERO          reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    FLOTANTE        reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    CARACTER        reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    PUNTOCOMA       reduce using rule 110 (varcte -> FLOTANTE tagfloat .)
    RKEY            reduce using rule 110 (varcte -> FLOTANTE tagfloat .)


state 133

    (118) ciclodowhile -> DO bloque . WHILE LPARENT expresion RPARENT PUNTOCOMA

    WHILE           shift and go to state 180


state 134

    (130) mueve -> MUEVE LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 181

state 135

    (19) b5 -> RKEY .

    $end            reduce using rule 19 (b5 -> RKEY .)
    WHILE           reduce using rule 19 (b5 -> RKEY .)
    VOID            reduce using rule 19 (b5 -> RKEY .)
    INT             reduce using rule 19 (b5 -> RKEY .)
    FLOAT           reduce using rule 19 (b5 -> RKEY .)
    CHAR            reduce using rule 19 (b5 -> RKEY .)
    STRING          reduce using rule 19 (b5 -> RKEY .)
    BOOL            reduce using rule 19 (b5 -> RKEY .)
    LKEY            reduce using rule 19 (b5 -> RKEY .)
    ID              reduce using rule 19 (b5 -> RKEY .)
    PRINT           reduce using rule 19 (b5 -> RKEY .)
    IF              reduce using rule 19 (b5 -> RKEY .)
    DO              reduce using rule 19 (b5 -> RKEY .)
    FOR             reduce using rule 19 (b5 -> RKEY .)
    COMENTARIO      reduce using rule 19 (b5 -> RKEY .)
    CUADRADO        reduce using rule 19 (b5 -> RKEY .)
    TRIANGULO       reduce using rule 19 (b5 -> RKEY .)
    CASA            reduce using rule 19 (b5 -> RKEY .)
    RECTANGULO      reduce using rule 19 (b5 -> RKEY .)
    CUBO            reduce using rule 19 (b5 -> RKEY .)
    TRAPECIO        reduce using rule 19 (b5 -> RKEY .)
    ESTRELLA        reduce using rule 19 (b5 -> RKEY .)
    MUEVE           reduce using rule 19 (b5 -> RKEY .)
    LEVANTA         reduce using rule 19 (b5 -> RKEY .)
    APOYA           reduce using rule 19 (b5 -> RKEY .)
    DIMENSION       reduce using rule 19 (b5 -> RKEY .)
    RKEY            reduce using rule 19 (b5 -> RKEY .)
    ELSE            reduce using rule 19 (b5 -> RKEY .)
    PUNTOCOMA       reduce using rule 19 (b5 -> RKEY .)


state 136

    (13) bloque -> LKEY iniEnv b3 b4 b5 .

    $end            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    VOID            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    INT             reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    FLOAT           reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    CHAR            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    STRING          reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    BOOL            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    LKEY            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    PUNTOCOMA       reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    ID              reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    PRINT           reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    IF              reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    WHILE           reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    DO              reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    FOR             reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    COMENTARIO      reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    CUADRADO        reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    TRIANGULO       reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    CASA            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    RECTANGULO      reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    CUBO            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    TRAPECIO        reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    ESTRELLA        reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    MUEVE           reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    LEVANTA         reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    APOYA           reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    DIMENSION       reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    RKEY            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    ELSE            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)


state 137

    (117) ciclowhile -> WHILE LPARENT . expresion RPARENT bloque
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    expresion2                     shift and go to state 165
    expresion                      shift and go to state 182
    exp                            shift and go to state 167

state 138

    (133) trapecio -> TRAPECIO LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 183

state 139

    (61) print -> PRINT LPARENT . pr2
    (62) pr2 -> . expresion pr3
    (63) pr2 -> . CADENA pr3
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    CADENA          shift and go to state 184
    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    expresion2                     shift and go to state 165
    pr2                            shift and go to state 185
    expresion                      shift and go to state 186
    exp                            shift and go to state 167

state 140

    (127) casa -> CASA LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 187

state 141

    (126) rectangulo -> RECTANGULO LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 188

state 142

    (17) b4 -> estatuto b4 .

    RKEY            reduce using rule 17 (b4 -> estatuto b4 .)


state 143

    (129) cubo -> CUBO LPARENT . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 189

state 144

    (132) apoya -> APOYA LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 190


state 145

    (125) triangulo -> TRIANGULO LPARENT . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 191

state 146

    (120) ciclofor -> FOR LPARENT . asignacion expresion asignacion RPARENT bloque
    (55) asignacion -> . ID asig2

    ID              shift and go to state 193

    asignacion                     shift and go to state 192

state 147

    (119) read -> ID IGUAL . READ LPARENT RPARENT PUNTOCOMA
    (60) asigfinal -> IGUAL . expresion PUNTOCOMA
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    READ            shift and go to state 194
    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    expresion2                     shift and go to state 165
    expresion                      shift and go to state 195
    exp                            shift and go to state 167

state 148

    (56) asig2 -> LBRACKET . exp asig3
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 196

state 149

    (55) asignacion -> ID asig2 .

    ID              reduce using rule 55 (asignacion -> ID asig2 .)
    PRINT           reduce using rule 55 (asignacion -> ID asig2 .)
    IF              reduce using rule 55 (asignacion -> ID asig2 .)
    WHILE           reduce using rule 55 (asignacion -> ID asig2 .)
    DO              reduce using rule 55 (asignacion -> ID asig2 .)
    FOR             reduce using rule 55 (asignacion -> ID asig2 .)
    COMENTARIO      reduce using rule 55 (asignacion -> ID asig2 .)
    CUADRADO        reduce using rule 55 (asignacion -> ID asig2 .)
    TRIANGULO       reduce using rule 55 (asignacion -> ID asig2 .)
    CASA            reduce using rule 55 (asignacion -> ID asig2 .)
    RECTANGULO      reduce using rule 55 (asignacion -> ID asig2 .)
    CUBO            reduce using rule 55 (asignacion -> ID asig2 .)
    TRAPECIO        reduce using rule 55 (asignacion -> ID asig2 .)
    ESTRELLA        reduce using rule 55 (asignacion -> ID asig2 .)
    MUEVE           reduce using rule 55 (asignacion -> ID asig2 .)
    LEVANTA         reduce using rule 55 (asignacion -> ID asig2 .)
    APOYA           reduce using rule 55 (asignacion -> ID asig2 .)
    DIMENSION       reduce using rule 55 (asignacion -> ID asig2 .)
    RKEY            reduce using rule 55 (asignacion -> ID asig2 .)
    RPARENT         reduce using rule 55 (asignacion -> ID asig2 .)
    LPARENT         reduce using rule 55 (asignacion -> ID asig2 .)
    ENTERO          reduce using rule 55 (asignacion -> ID asig2 .)
    FLOTANTE        reduce using rule 55 (asignacion -> ID asig2 .)
    CADENA          reduce using rule 55 (asignacion -> ID asig2 .)
    CARACTER        reduce using rule 55 (asignacion -> ID asig2 .)


state 150

    (57) asig2 -> asigfinal .

    ID              reduce using rule 57 (asig2 -> asigfinal .)
    PRINT           reduce using rule 57 (asig2 -> asigfinal .)
    IF              reduce using rule 57 (asig2 -> asigfinal .)
    WHILE           reduce using rule 57 (asig2 -> asigfinal .)
    DO              reduce using rule 57 (asig2 -> asigfinal .)
    FOR             reduce using rule 57 (asig2 -> asigfinal .)
    COMENTARIO      reduce using rule 57 (asig2 -> asigfinal .)
    CUADRADO        reduce using rule 57 (asig2 -> asigfinal .)
    TRIANGULO       reduce using rule 57 (asig2 -> asigfinal .)
    CASA            reduce using rule 57 (asig2 -> asigfinal .)
    RECTANGULO      reduce using rule 57 (asig2 -> asigfinal .)
    CUBO            reduce using rule 57 (asig2 -> asigfinal .)
    TRAPECIO        reduce using rule 57 (asig2 -> asigfinal .)
    ESTRELLA        reduce using rule 57 (asig2 -> asigfinal .)
    MUEVE           reduce using rule 57 (asig2 -> asigfinal .)
    LEVANTA         reduce using rule 57 (asig2 -> asigfinal .)
    APOYA           reduce using rule 57 (asig2 -> asigfinal .)
    DIMENSION       reduce using rule 57 (asig2 -> asigfinal .)
    RKEY            reduce using rule 57 (asig2 -> asigfinal .)
    LPARENT         reduce using rule 57 (asig2 -> asigfinal .)
    ENTERO          reduce using rule 57 (asig2 -> asigfinal .)
    FLOTANTE        reduce using rule 57 (asig2 -> asigfinal .)
    CADENA          reduce using rule 57 (asig2 -> asigfinal .)
    CARACTER        reduce using rule 57 (asig2 -> asigfinal .)
    RPARENT         reduce using rule 57 (asig2 -> asigfinal .)


state 151

    (134) dimension -> DIMENSION LPARENT . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 197

state 152

    (121) if -> IF LPARENT . expresion RPARENT bloque if2
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    expresion2                     shift and go to state 165
    factor                         shift and go to state 60
    expresion                      shift and go to state 198
    exp                            shift and go to state 167

state 153

    (66) condicion -> IF LKEY . expresion RKEY bloque c2
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    expresion2                     shift and go to state 165
    expresion                      shift and go to state 199
    exp                            shift and go to state 167

state 154

    (128) estrella -> ESTRELLA LPARENT . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 200

state 155

    (124) cuadrado -> CUADRADO LPARENT . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 201

state 156

    (131) levanta -> LEVANTA LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 202


state 157

    (141) funct3 -> function4 .

    VOID            reduce using rule 141 (funct3 -> function4 .)
    INT             reduce using rule 141 (funct3 -> function4 .)
    FLOAT           reduce using rule 141 (funct3 -> function4 .)
    CHAR            reduce using rule 141 (funct3 -> function4 .)
    STRING          reduce using rule 141 (funct3 -> function4 .)
    BOOL            reduce using rule 141 (funct3 -> function4 .)
    LKEY            reduce using rule 141 (funct3 -> function4 .)


state 158

    (139) funct2 -> tipo ID funct3 .

    VOID            reduce using rule 139 (funct2 -> tipo ID funct3 .)
    INT             reduce using rule 139 (funct2 -> tipo ID funct3 .)
    FLOAT           reduce using rule 139 (funct2 -> tipo ID funct3 .)
    CHAR            reduce using rule 139 (funct2 -> tipo ID funct3 .)
    STRING          reduce using rule 139 (funct2 -> tipo ID funct3 .)
    BOOL            reduce using rule 139 (funct2 -> tipo ID funct3 .)
    LKEY            reduce using rule 139 (funct2 -> tipo ID funct3 .)


state 159

    (140) funct3 -> COMA . funct2
    (139) funct2 -> . tipo ID funct3
    (50) tipo -> . INT
    (51) tipo -> . FLOAT
    (52) tipo -> . CHAR
    (53) tipo -> . STRING
    (54) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22

    funct2                         shift and go to state 203
    tipo                           shift and go to state 47

state 160

    (142) function4 -> RPARENT noinitFunc bloque . initFunc
    (144) initFunc -> . empty
    (152) empty -> .

    VOID            reduce using rule 152 (empty -> .)
    INT             reduce using rule 152 (empty -> .)
    FLOAT           reduce using rule 152 (empty -> .)
    CHAR            reduce using rule 152 (empty -> .)
    STRING          reduce using rule 152 (empty -> .)
    BOOL            reduce using rule 152 (empty -> .)
    LKEY            reduce using rule 152 (empty -> .)

    initFunc                       shift and go to state 204
    empty                          shift and go to state 205

state 161

    (38) exp -> termino tagsacops exp2 .

    COMA            reduce using rule 38 (exp -> termino tagsacops exp2 .)
    RPARENT         reduce using rule 38 (exp -> termino tagsacops exp2 .)
    RBRACKET        reduce using rule 38 (exp -> termino tagsacops exp2 .)
    GT              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    LT              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    LE              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    GE              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    DIF             reduce using rule 38 (exp -> termino tagsacops exp2 .)
    SAME            reduce using rule 38 (exp -> termino tagsacops exp2 .)
    AND             reduce using rule 38 (exp -> termino tagsacops exp2 .)
    OR              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    CADENA          reduce using rule 38 (exp -> termino tagsacops exp2 .)
    LPARENT         reduce using rule 38 (exp -> termino tagsacops exp2 .)
    ID              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    ENTERO          reduce using rule 38 (exp -> termino tagsacops exp2 .)
    FLOTANTE        reduce using rule 38 (exp -> termino tagsacops exp2 .)
    CARACTER        reduce using rule 38 (exp -> termino tagsacops exp2 .)
    PUNTOCOMA       reduce using rule 38 (exp -> termino tagsacops exp2 .)
    RKEY            reduce using rule 38 (exp -> termino tagsacops exp2 .)


state 162

    (41) exp2 -> empty .

    RBRACKET        reduce using rule 41 (exp2 -> empty .)
    COMA            reduce using rule 41 (exp2 -> empty .)
    GT              reduce using rule 41 (exp2 -> empty .)
    LT              reduce using rule 41 (exp2 -> empty .)
    LE              reduce using rule 41 (exp2 -> empty .)
    GE              reduce using rule 41 (exp2 -> empty .)
    DIF             reduce using rule 41 (exp2 -> empty .)
    SAME            reduce using rule 41 (exp2 -> empty .)
    AND             reduce using rule 41 (exp2 -> empty .)
    OR              reduce using rule 41 (exp2 -> empty .)
    RPARENT         reduce using rule 41 (exp2 -> empty .)
    CADENA          reduce using rule 41 (exp2 -> empty .)
    LPARENT         reduce using rule 41 (exp2 -> empty .)
    ID              reduce using rule 41 (exp2 -> empty .)
    ENTERO          reduce using rule 41 (exp2 -> empty .)
    FLOTANTE        reduce using rule 41 (exp2 -> empty .)
    CARACTER        reduce using rule 41 (exp2 -> empty .)
    PUNTOCOMA       reduce using rule 41 (exp2 -> empty .)
    RKEY            reduce using rule 41 (exp2 -> empty .)


state 163

    (40) exp2 -> RESTA . tagop exp
    (42) tagop -> . empty
    (152) empty -> .

    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagop                          shift and go to state 206
    empty                          shift and go to state 207

state 164

    (39) exp2 -> SUMA . tagop exp
    (42) tagop -> . empty
    (152) empty -> .

    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagop                          shift and go to state 208
    empty                          shift and go to state 207

state 165

    (20) expresion -> expresion2 . expre
    (21) expre -> . expre2
    (22) expre -> . empty
    (23) expre2 -> . AND tagmetelog expresion tagsacalog
    (24) expre2 -> . OR tagmetelog expresion tagsacalog
    (152) empty -> .

    AND             shift and go to state 209
    OR              shift and go to state 212
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    expre                          shift and go to state 210
    expre2                         shift and go to state 211
    empty                          shift and go to state 213

state 166

    (74) factor -> LPARENT tagfondofalso expresion . RPARENT tagsacafondo

    RPARENT         shift and go to state 214


state 167

    (27) expresion2 -> exp . e2
    (28) e2 -> . e3
    (29) e2 -> . empty
    (30) e3 -> . GT tagrel exp tagsacrel
    (31) e3 -> . LT tagrel exp tagsacrel
    (32) e3 -> . LE tagrel exp tagsacrel
    (33) e3 -> . GE tagrel exp tagsacrel
    (34) e3 -> . DIF tagrel exp tagsacrel
    (35) e3 -> . SAME tagrel exp tagsacrel
    (152) empty -> .

    GT              shift and go to state 220
    LT              shift and go to state 219
    LE              shift and go to state 217
    GE              shift and go to state 215
    DIF             shift and go to state 216
    SAME            shift and go to state 218
    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    e3                             shift and go to state 221
    empty                          shift and go to state 222
    e2                             shift and go to state 223

state 168

    (72) te2 -> empty .

    SUMA            reduce using rule 72 (te2 -> empty .)
    RESTA           reduce using rule 72 (te2 -> empty .)
    RBRACKET        reduce using rule 72 (te2 -> empty .)
    COMA            reduce using rule 72 (te2 -> empty .)
    GT              reduce using rule 72 (te2 -> empty .)
    LT              reduce using rule 72 (te2 -> empty .)
    LE              reduce using rule 72 (te2 -> empty .)
    GE              reduce using rule 72 (te2 -> empty .)
    DIF             reduce using rule 72 (te2 -> empty .)
    SAME            reduce using rule 72 (te2 -> empty .)
    AND             reduce using rule 72 (te2 -> empty .)
    OR              reduce using rule 72 (te2 -> empty .)
    RPARENT         reduce using rule 72 (te2 -> empty .)
    CADENA          reduce using rule 72 (te2 -> empty .)
    LPARENT         reduce using rule 72 (te2 -> empty .)
    ID              reduce using rule 72 (te2 -> empty .)
    ENTERO          reduce using rule 72 (te2 -> empty .)
    FLOTANTE        reduce using rule 72 (te2 -> empty .)
    CARACTER        reduce using rule 72 (te2 -> empty .)
    PUNTOCOMA       reduce using rule 72 (te2 -> empty .)
    RKEY            reduce using rule 72 (te2 -> empty .)


state 169

    (69) termino -> factor tagsacopm te2 .

    SUMA            reduce using rule 69 (termino -> factor tagsacopm te2 .)
    RESTA           reduce using rule 69 (termino -> factor tagsacopm te2 .)
    GT              reduce using rule 69 (termino -> factor tagsacopm te2 .)
    LT              reduce using rule 69 (termino -> factor tagsacopm te2 .)
    LE              reduce using rule 69 (termino -> factor tagsacopm te2 .)
    GE              reduce using rule 69 (termino -> factor tagsacopm te2 .)
    DIF             reduce using rule 69 (termino -> factor tagsacopm te2 .)
    SAME            reduce using rule 69 (termino -> factor tagsacopm te2 .)
    AND             reduce using rule 69 (termino -> factor tagsacopm te2 .)
    OR              reduce using rule 69 (termino -> factor tagsacopm te2 .)
    RPARENT         reduce using rule 69 (termino -> factor tagsacopm te2 .)
    COMA            reduce using rule 69 (termino -> factor tagsacopm te2 .)
    CADENA          reduce using rule 69 (termino -> factor tagsacopm te2 .)
    LPARENT         reduce using rule 69 (termino -> factor tagsacopm te2 .)
    ID              reduce using rule 69 (termino -> factor tagsacopm te2 .)
    ENTERO          reduce using rule 69 (termino -> factor tagsacopm te2 .)
    FLOTANTE        reduce using rule 69 (termino -> factor tagsacopm te2 .)
    CARACTER        reduce using rule 69 (termino -> factor tagsacopm te2 .)
    PUNTOCOMA       reduce using rule 69 (termino -> factor tagsacopm te2 .)
    RKEY            reduce using rule 69 (termino -> factor tagsacopm te2 .)
    RBRACKET        reduce using rule 69 (termino -> factor tagsacopm te2 .)


state 170

    (71) te2 -> DIV . termino
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    varcte                         shift and go to state 57
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    llamafuncion                   shift and go to state 58
    termino                        shift and go to state 224
    factor                         shift and go to state 60

state 171

    (70) te2 -> MULT . termino
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    varcte                         shift and go to state 57
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    llamafuncion                   shift and go to state 58
    termino                        shift and go to state 225
    factor                         shift and go to state 60

state 172

    (151) llamaf4 -> RPARENT .

    MULT            reduce using rule 151 (llamaf4 -> RPARENT .)
    DIV             reduce using rule 151 (llamaf4 -> RPARENT .)
    SUMA            reduce using rule 151 (llamaf4 -> RPARENT .)
    RESTA           reduce using rule 151 (llamaf4 -> RPARENT .)
    RBRACKET        reduce using rule 151 (llamaf4 -> RPARENT .)
    COMA            reduce using rule 151 (llamaf4 -> RPARENT .)
    ID              reduce using rule 151 (llamaf4 -> RPARENT .)
    PRINT           reduce using rule 151 (llamaf4 -> RPARENT .)
    IF              reduce using rule 151 (llamaf4 -> RPARENT .)
    WHILE           reduce using rule 151 (llamaf4 -> RPARENT .)
    DO              reduce using rule 151 (llamaf4 -> RPARENT .)
    FOR             reduce using rule 151 (llamaf4 -> RPARENT .)
    COMENTARIO      reduce using rule 151 (llamaf4 -> RPARENT .)
    CUADRADO        reduce using rule 151 (llamaf4 -> RPARENT .)
    TRIANGULO       reduce using rule 151 (llamaf4 -> RPARENT .)
    CASA            reduce using rule 151 (llamaf4 -> RPARENT .)
    RECTANGULO      reduce using rule 151 (llamaf4 -> RPARENT .)
    CUBO            reduce using rule 151 (llamaf4 -> RPARENT .)
    TRAPECIO        reduce using rule 151 (llamaf4 -> RPARENT .)
    ESTRELLA        reduce using rule 151 (llamaf4 -> RPARENT .)
    MUEVE           reduce using rule 151 (llamaf4 -> RPARENT .)
    LEVANTA         reduce using rule 151 (llamaf4 -> RPARENT .)
    APOYA           reduce using rule 151 (llamaf4 -> RPARENT .)
    DIMENSION       reduce using rule 151 (llamaf4 -> RPARENT .)
    RKEY            reduce using rule 151 (llamaf4 -> RPARENT .)
    GT              reduce using rule 151 (llamaf4 -> RPARENT .)
    LT              reduce using rule 151 (llamaf4 -> RPARENT .)
    LE              reduce using rule 151 (llamaf4 -> RPARENT .)
    GE              reduce using rule 151 (llamaf4 -> RPARENT .)
    DIF             reduce using rule 151 (llamaf4 -> RPARENT .)
    SAME            reduce using rule 151 (llamaf4 -> RPARENT .)
    AND             reduce using rule 151 (llamaf4 -> RPARENT .)
    OR              reduce using rule 151 (llamaf4 -> RPARENT .)
    RPARENT         reduce using rule 151 (llamaf4 -> RPARENT .)
    CADENA          reduce using rule 151 (llamaf4 -> RPARENT .)
    LPARENT         reduce using rule 151 (llamaf4 -> RPARENT .)
    ENTERO          reduce using rule 151 (llamaf4 -> RPARENT .)
    FLOTANTE        reduce using rule 151 (llamaf4 -> RPARENT .)
    CARACTER        reduce using rule 151 (llamaf4 -> RPARENT .)
    PUNTOCOMA       reduce using rule 151 (llamaf4 -> RPARENT .)


state 173

    (146) llamaf11 -> llamaf2 .

    MULT            reduce using rule 146 (llamaf11 -> llamaf2 .)
    DIV             reduce using rule 146 (llamaf11 -> llamaf2 .)
    SUMA            reduce using rule 146 (llamaf11 -> llamaf2 .)
    RESTA           reduce using rule 146 (llamaf11 -> llamaf2 .)
    RBRACKET        reduce using rule 146 (llamaf11 -> llamaf2 .)
    COMA            reduce using rule 146 (llamaf11 -> llamaf2 .)
    ID              reduce using rule 146 (llamaf11 -> llamaf2 .)
    PRINT           reduce using rule 146 (llamaf11 -> llamaf2 .)
    IF              reduce using rule 146 (llamaf11 -> llamaf2 .)
    WHILE           reduce using rule 146 (llamaf11 -> llamaf2 .)
    DO              reduce using rule 146 (llamaf11 -> llamaf2 .)
    FOR             reduce using rule 146 (llamaf11 -> llamaf2 .)
    COMENTARIO      reduce using rule 146 (llamaf11 -> llamaf2 .)
    CUADRADO        reduce using rule 146 (llamaf11 -> llamaf2 .)
    TRIANGULO       reduce using rule 146 (llamaf11 -> llamaf2 .)
    CASA            reduce using rule 146 (llamaf11 -> llamaf2 .)
    RECTANGULO      reduce using rule 146 (llamaf11 -> llamaf2 .)
    CUBO            reduce using rule 146 (llamaf11 -> llamaf2 .)
    TRAPECIO        reduce using rule 146 (llamaf11 -> llamaf2 .)
    ESTRELLA        reduce using rule 146 (llamaf11 -> llamaf2 .)
    MUEVE           reduce using rule 146 (llamaf11 -> llamaf2 .)
    LEVANTA         reduce using rule 146 (llamaf11 -> llamaf2 .)
    APOYA           reduce using rule 146 (llamaf11 -> llamaf2 .)
    DIMENSION       reduce using rule 146 (llamaf11 -> llamaf2 .)
    RKEY            reduce using rule 146 (llamaf11 -> llamaf2 .)
    GT              reduce using rule 146 (llamaf11 -> llamaf2 .)
    LT              reduce using rule 146 (llamaf11 -> llamaf2 .)
    LE              reduce using rule 146 (llamaf11 -> llamaf2 .)
    GE              reduce using rule 146 (llamaf11 -> llamaf2 .)
    DIF             reduce using rule 146 (llamaf11 -> llamaf2 .)
    SAME            reduce using rule 146 (llamaf11 -> llamaf2 .)
    AND             reduce using rule 146 (llamaf11 -> llamaf2 .)
    OR              reduce using rule 146 (llamaf11 -> llamaf2 .)
    RPARENT         reduce using rule 146 (llamaf11 -> llamaf2 .)
    CADENA          reduce using rule 146 (llamaf11 -> llamaf2 .)
    LPARENT         reduce using rule 146 (llamaf11 -> llamaf2 .)
    ENTERO          reduce using rule 146 (llamaf11 -> llamaf2 .)
    FLOTANTE        reduce using rule 146 (llamaf11 -> llamaf2 .)
    CARACTER        reduce using rule 146 (llamaf11 -> llamaf2 .)
    PUNTOCOMA       reduce using rule 146 (llamaf11 -> llamaf2 .)


state 174

    (147) llamaf11 -> llamaf4 .

    MULT            reduce using rule 147 (llamaf11 -> llamaf4 .)
    DIV             reduce using rule 147 (llamaf11 -> llamaf4 .)
    SUMA            reduce using rule 147 (llamaf11 -> llamaf4 .)
    RESTA           reduce using rule 147 (llamaf11 -> llamaf4 .)
    RBRACKET        reduce using rule 147 (llamaf11 -> llamaf4 .)
    COMA            reduce using rule 147 (llamaf11 -> llamaf4 .)
    ID              reduce using rule 147 (llamaf11 -> llamaf4 .)
    PRINT           reduce using rule 147 (llamaf11 -> llamaf4 .)
    IF              reduce using rule 147 (llamaf11 -> llamaf4 .)
    WHILE           reduce using rule 147 (llamaf11 -> llamaf4 .)
    DO              reduce using rule 147 (llamaf11 -> llamaf4 .)
    FOR             reduce using rule 147 (llamaf11 -> llamaf4 .)
    COMENTARIO      reduce using rule 147 (llamaf11 -> llamaf4 .)
    CUADRADO        reduce using rule 147 (llamaf11 -> llamaf4 .)
    TRIANGULO       reduce using rule 147 (llamaf11 -> llamaf4 .)
    CASA            reduce using rule 147 (llamaf11 -> llamaf4 .)
    RECTANGULO      reduce using rule 147 (llamaf11 -> llamaf4 .)
    CUBO            reduce using rule 147 (llamaf11 -> llamaf4 .)
    TRAPECIO        reduce using rule 147 (llamaf11 -> llamaf4 .)
    ESTRELLA        reduce using rule 147 (llamaf11 -> llamaf4 .)
    MUEVE           reduce using rule 147 (llamaf11 -> llamaf4 .)
    LEVANTA         reduce using rule 147 (llamaf11 -> llamaf4 .)
    APOYA           reduce using rule 147 (llamaf11 -> llamaf4 .)
    DIMENSION       reduce using rule 147 (llamaf11 -> llamaf4 .)
    RKEY            reduce using rule 147 (llamaf11 -> llamaf4 .)
    GT              reduce using rule 147 (llamaf11 -> llamaf4 .)
    LT              reduce using rule 147 (llamaf11 -> llamaf4 .)
    LE              reduce using rule 147 (llamaf11 -> llamaf4 .)
    GE              reduce using rule 147 (llamaf11 -> llamaf4 .)
    DIF             reduce using rule 147 (llamaf11 -> llamaf4 .)
    SAME            reduce using rule 147 (llamaf11 -> llamaf4 .)
    AND             reduce using rule 147 (llamaf11 -> llamaf4 .)
    OR              reduce using rule 147 (llamaf11 -> llamaf4 .)
    RPARENT         reduce using rule 147 (llamaf11 -> llamaf4 .)
    CADENA          reduce using rule 147 (llamaf11 -> llamaf4 .)
    LPARENT         reduce using rule 147 (llamaf11 -> llamaf4 .)
    ENTERO          reduce using rule 147 (llamaf11 -> llamaf4 .)
    FLOTANTE        reduce using rule 147 (llamaf11 -> llamaf4 .)
    CARACTER        reduce using rule 147 (llamaf11 -> llamaf4 .)
    PUNTOCOMA       reduce using rule 147 (llamaf11 -> llamaf4 .)


state 175

    (148) llamaf2 -> exp . llamaf3
    (149) llamaf3 -> . COMA llamaf2
    (150) llamaf3 -> . llamaf4
    (151) llamaf4 -> . RPARENT

    COMA            shift and go to state 228
    RPARENT         shift and go to state 172

    llamaf3                        shift and go to state 226
    llamaf4                        shift and go to state 227

state 176

    (145) llamafuncion -> ID LPARENT llamaf11 .

    ID              reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    PRINT           reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    IF              reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    WHILE           reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    DO              reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    FOR             reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    COMENTARIO      reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    CUADRADO        reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    TRIANGULO       reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    CASA            reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    RECTANGULO      reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    CUBO            reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    TRAPECIO        reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    ESTRELLA        reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    MUEVE           reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    LEVANTA         reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    APOYA           reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    DIMENSION       reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    RKEY            reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    MULT            reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    DIV             reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    SUMA            reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    RESTA           reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    COMA            reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    RBRACKET        reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    GT              reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    LT              reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    LE              reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    GE              reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    DIF             reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    SAME            reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    AND             reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    OR              reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    RPARENT         reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    CADENA          reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    LPARENT         reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    ENTERO          reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    FLOTANTE        reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    CARACTER        reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)
    PUNTOCOMA       reduce using rule 145 (llamafuncion -> ID LPARENT llamaf11 .)


state 177

    (83) f7 -> ID LBRACKET exp . f8
    (84) f8 -> . COMA exp f8
    (85) f8 -> . RBRACKET

    COMA            shift and go to state 230
    RBRACKET        shift and go to state 231

    f8                             shift and go to state 229

state 178

    (48) decla2 -> COMA exp . decla2
    (47) decla2 -> . RBRACKET declafinal
    (48) decla2 -> . COMA exp decla2

    RBRACKET        shift and go to state 130
    COMA            shift and go to state 129

    decla2                         shift and go to state 232

state 179

    (47) decla2 -> RBRACKET declafinal .

    INT             reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    FLOAT           reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    CHAR            reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    STRING          reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    BOOL            reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    VOID            reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    LKEY            reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    ID              reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    PRINT           reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    IF              reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    WHILE           reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    DO              reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    FOR             reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    COMENTARIO      reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    CUADRADO        reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    TRIANGULO       reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    CASA            reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    RECTANGULO      reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    CUBO            reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    TRAPECIO        reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    ESTRELLA        reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    MUEVE           reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    LEVANTA         reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    APOYA           reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    DIMENSION       reduce using rule 47 (decla2 -> RBRACKET declafinal .)
    RKEY            reduce using rule 47 (decla2 -> RBRACKET declafinal .)


state 180

    (118) ciclodowhile -> DO bloque WHILE . LPARENT expresion RPARENT PUNTOCOMA

    LPARENT         shift and go to state 233


state 181

    (130) mueve -> MUEVE LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 234


state 182

    (117) ciclowhile -> WHILE LPARENT expresion . RPARENT bloque

    RPARENT         shift and go to state 235


state 183

    (133) trapecio -> TRAPECIO LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 236


state 184

    (63) pr2 -> CADENA . pr3
    (111) varcte -> CADENA . tagcad
    (64) pr3 -> . pr2
    (65) pr3 -> . RPARENT PUNTOCOMA
    (115) tagcad -> . empty
    (62) pr2 -> . expresion pr3
    (63) pr2 -> . CADENA pr3
    (152) empty -> .
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for LPARENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
    RPARENT         shift and go to state 237
    CADENA          shift and go to state 184
    MULT            reduce using rule 152 (empty -> .)
    DIV             reduce using rule 152 (empty -> .)
    SUMA            reduce using rule 152 (empty -> .)
    RESTA           reduce using rule 152 (empty -> .)
    GT              reduce using rule 152 (empty -> .)
    LT              reduce using rule 152 (empty -> .)
    LE              reduce using rule 152 (empty -> .)
    GE              reduce using rule 152 (empty -> .)
    DIF             reduce using rule 152 (empty -> .)
    SAME            reduce using rule 152 (empty -> .)
    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CARACTER        shift and go to state 62

  ! RPARENT         [ reduce using rule 152 (empty -> .) ]
  ! CADENA          [ reduce using rule 152 (empty -> .) ]
  ! LPARENT         [ reduce using rule 152 (empty -> .) ]
  ! ID              [ reduce using rule 152 (empty -> .) ]
  ! ENTERO          [ reduce using rule 152 (empty -> .) ]
  ! FLOTANTE        [ reduce using rule 152 (empty -> .) ]
  ! CARACTER        [ reduce using rule 152 (empty -> .) ]

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    empty                          shift and go to state 119
    expresion2                     shift and go to state 165
    pr3                            shift and go to state 238
    pr2                            shift and go to state 239
    expresion                      shift and go to state 186
    tagcad                         shift and go to state 118
    exp                            shift and go to state 167

state 185

    (61) print -> PRINT LPARENT pr2 .

    ID              reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    PRINT           reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    IF              reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    WHILE           reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    DO              reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    FOR             reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    COMENTARIO      reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    CUADRADO        reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    TRIANGULO       reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    CASA            reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    RECTANGULO      reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    CUBO            reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    TRAPECIO        reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    ESTRELLA        reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    MUEVE           reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    LEVANTA         reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    APOYA           reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    DIMENSION       reduce using rule 61 (print -> PRINT LPARENT pr2 .)
    RKEY            reduce using rule 61 (print -> PRINT LPARENT pr2 .)


state 186

    (62) pr2 -> expresion . pr3
    (64) pr3 -> . pr2
    (65) pr3 -> . RPARENT PUNTOCOMA
    (62) pr2 -> . expresion pr3
    (63) pr2 -> . CADENA pr3
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    RPARENT         shift and go to state 237
    CADENA          shift and go to state 184
    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    expresion2                     shift and go to state 165
    pr3                            shift and go to state 240
    pr2                            shift and go to state 239
    expresion                      shift and go to state 186
    exp                            shift and go to state 167

state 187

    (127) casa -> CASA LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 241


state 188

    (126) rectangulo -> RECTANGULO LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 242


state 189

    (129) cubo -> CUBO LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 243


state 190

    (132) apoya -> APOYA LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 244


state 191

    (125) triangulo -> TRIANGULO LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 245


state 192

    (120) ciclofor -> FOR LPARENT asignacion . expresion asignacion RPARENT bloque
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    expresion2                     shift and go to state 165
    factor                         shift and go to state 60
    expresion                      shift and go to state 246
    exp                            shift and go to state 167

state 193

    (55) asignacion -> ID . asig2
    (56) asig2 -> . LBRACKET exp asig3
    (57) asig2 -> . asigfinal
    (60) asigfinal -> . IGUAL expresion PUNTOCOMA

    LBRACKET        shift and go to state 148
    IGUAL           shift and go to state 247

    asig2                          shift and go to state 149
    asigfinal                      shift and go to state 150

state 194

    (119) read -> ID IGUAL READ . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 248


state 195

    (60) asigfinal -> IGUAL expresion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 249


state 196

    (56) asig2 -> LBRACKET exp . asig3
    (58) asig3 -> . COMA exp asig3
    (59) asig3 -> . RBRACKET asigfinal

    COMA            shift and go to state 251
    RBRACKET        shift and go to state 252

    asig3                          shift and go to state 250

state 197

    (134) dimension -> DIMENSION LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 253


state 198

    (121) if -> IF LPARENT expresion . RPARENT bloque if2

    RPARENT         shift and go to state 254


state 199

    (66) condicion -> IF LKEY expresion . RKEY bloque c2

    RKEY            shift and go to state 255


state 200

    (128) estrella -> ESTRELLA LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 256


state 201

    (124) cuadrado -> CUADRADO LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 257


state 202

    (131) levanta -> LEVANTA LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 258


state 203

    (140) funct3 -> COMA funct2 .

    VOID            reduce using rule 140 (funct3 -> COMA funct2 .)
    INT             reduce using rule 140 (funct3 -> COMA funct2 .)
    FLOAT           reduce using rule 140 (funct3 -> COMA funct2 .)
    CHAR            reduce using rule 140 (funct3 -> COMA funct2 .)
    STRING          reduce using rule 140 (funct3 -> COMA funct2 .)
    BOOL            reduce using rule 140 (funct3 -> COMA funct2 .)
    LKEY            reduce using rule 140 (funct3 -> COMA funct2 .)


state 204

    (142) function4 -> RPARENT noinitFunc bloque initFunc .

    VOID            reduce using rule 142 (function4 -> RPARENT noinitFunc bloque initFunc .)
    INT             reduce using rule 142 (function4 -> RPARENT noinitFunc bloque initFunc .)
    FLOAT           reduce using rule 142 (function4 -> RPARENT noinitFunc bloque initFunc .)
    CHAR            reduce using rule 142 (function4 -> RPARENT noinitFunc bloque initFunc .)
    STRING          reduce using rule 142 (function4 -> RPARENT noinitFunc bloque initFunc .)
    BOOL            reduce using rule 142 (function4 -> RPARENT noinitFunc bloque initFunc .)
    LKEY            reduce using rule 142 (function4 -> RPARENT noinitFunc bloque initFunc .)


state 205

    (144) initFunc -> empty .

    VOID            reduce using rule 144 (initFunc -> empty .)
    INT             reduce using rule 144 (initFunc -> empty .)
    FLOAT           reduce using rule 144 (initFunc -> empty .)
    CHAR            reduce using rule 144 (initFunc -> empty .)
    STRING          reduce using rule 144 (initFunc -> empty .)
    BOOL            reduce using rule 144 (initFunc -> empty .)
    LKEY            reduce using rule 144 (initFunc -> empty .)


state 206

    (40) exp2 -> RESTA tagop . exp
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 259

state 207

    (42) tagop -> empty .

    LPARENT         reduce using rule 42 (tagop -> empty .)
    ID              reduce using rule 42 (tagop -> empty .)
    ENTERO          reduce using rule 42 (tagop -> empty .)
    FLOTANTE        reduce using rule 42 (tagop -> empty .)
    CADENA          reduce using rule 42 (tagop -> empty .)
    CARACTER        reduce using rule 42 (tagop -> empty .)


state 208

    (39) exp2 -> SUMA tagop . exp
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 260

state 209

    (23) expre2 -> AND . tagmetelog expresion tagsacalog
    (25) tagmetelog -> . empty
    (152) empty -> .

    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagmetelog                     shift and go to state 261
    empty                          shift and go to state 262

state 210

    (20) expresion -> expresion2 expre .

    RPARENT         reduce using rule 20 (expresion -> expresion2 expre .)
    ID              reduce using rule 20 (expresion -> expresion2 expre .)
    CADENA          reduce using rule 20 (expresion -> expresion2 expre .)
    LPARENT         reduce using rule 20 (expresion -> expresion2 expre .)
    ENTERO          reduce using rule 20 (expresion -> expresion2 expre .)
    FLOTANTE        reduce using rule 20 (expresion -> expresion2 expre .)
    CARACTER        reduce using rule 20 (expresion -> expresion2 expre .)
    RKEY            reduce using rule 20 (expresion -> expresion2 expre .)
    PUNTOCOMA       reduce using rule 20 (expresion -> expresion2 expre .)


state 211

    (21) expre -> expre2 .

    RPARENT         reduce using rule 21 (expre -> expre2 .)
    CADENA          reduce using rule 21 (expre -> expre2 .)
    LPARENT         reduce using rule 21 (expre -> expre2 .)
    ID              reduce using rule 21 (expre -> expre2 .)
    ENTERO          reduce using rule 21 (expre -> expre2 .)
    FLOTANTE        reduce using rule 21 (expre -> expre2 .)
    CARACTER        reduce using rule 21 (expre -> expre2 .)
    PUNTOCOMA       reduce using rule 21 (expre -> expre2 .)
    RKEY            reduce using rule 21 (expre -> expre2 .)


state 212

    (24) expre2 -> OR . tagmetelog expresion tagsacalog
    (25) tagmetelog -> . empty
    (152) empty -> .

    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagmetelog                     shift and go to state 263
    empty                          shift and go to state 262

state 213

    (22) expre -> empty .

    RPARENT         reduce using rule 22 (expre -> empty .)
    CADENA          reduce using rule 22 (expre -> empty .)
    LPARENT         reduce using rule 22 (expre -> empty .)
    ID              reduce using rule 22 (expre -> empty .)
    ENTERO          reduce using rule 22 (expre -> empty .)
    FLOTANTE        reduce using rule 22 (expre -> empty .)
    CARACTER        reduce using rule 22 (expre -> empty .)
    PUNTOCOMA       reduce using rule 22 (expre -> empty .)
    RKEY            reduce using rule 22 (expre -> empty .)


state 214

    (74) factor -> LPARENT tagfondofalso expresion RPARENT . tagsacafondo
    (82) tagsacafondo -> . empty
    (152) empty -> .

    MULT            reduce using rule 152 (empty -> .)
    DIV             reduce using rule 152 (empty -> .)
    SUMA            reduce using rule 152 (empty -> .)
    RESTA           reduce using rule 152 (empty -> .)
    RBRACKET        reduce using rule 152 (empty -> .)
    COMA            reduce using rule 152 (empty -> .)
    GT              reduce using rule 152 (empty -> .)
    LT              reduce using rule 152 (empty -> .)
    LE              reduce using rule 152 (empty -> .)
    GE              reduce using rule 152 (empty -> .)
    DIF             reduce using rule 152 (empty -> .)
    SAME            reduce using rule 152 (empty -> .)
    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    empty                          shift and go to state 265
    tagsacafondo                   shift and go to state 264

state 215

    (33) e3 -> GE . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (152) empty -> .

    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagrel                         shift and go to state 266
    empty                          shift and go to state 267

state 216

    (34) e3 -> DIF . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (152) empty -> .

    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagrel                         shift and go to state 268
    empty                          shift and go to state 267

state 217

    (32) e3 -> LE . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (152) empty -> .

    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagrel                         shift and go to state 269
    empty                          shift and go to state 267

state 218

    (35) e3 -> SAME . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (152) empty -> .

    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagrel                         shift and go to state 270
    empty                          shift and go to state 267

state 219

    (31) e3 -> LT . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (152) empty -> .

    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagrel                         shift and go to state 271
    empty                          shift and go to state 267

state 220

    (30) e3 -> GT . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (152) empty -> .

    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)

    tagrel                         shift and go to state 272
    empty                          shift and go to state 267

state 221

    (28) e2 -> e3 .

    AND             reduce using rule 28 (e2 -> e3 .)
    OR              reduce using rule 28 (e2 -> e3 .)
    RPARENT         reduce using rule 28 (e2 -> e3 .)
    CADENA          reduce using rule 28 (e2 -> e3 .)
    LPARENT         reduce using rule 28 (e2 -> e3 .)
    ID              reduce using rule 28 (e2 -> e3 .)
    ENTERO          reduce using rule 28 (e2 -> e3 .)
    FLOTANTE        reduce using rule 28 (e2 -> e3 .)
    CARACTER        reduce using rule 28 (e2 -> e3 .)
    PUNTOCOMA       reduce using rule 28 (e2 -> e3 .)
    RKEY            reduce using rule 28 (e2 -> e3 .)


state 222

    (29) e2 -> empty .

    AND             reduce using rule 29 (e2 -> empty .)
    OR              reduce using rule 29 (e2 -> empty .)
    RPARENT         reduce using rule 29 (e2 -> empty .)
    CADENA          reduce using rule 29 (e2 -> empty .)
    LPARENT         reduce using rule 29 (e2 -> empty .)
    ID              reduce using rule 29 (e2 -> empty .)
    ENTERO          reduce using rule 29 (e2 -> empty .)
    FLOTANTE        reduce using rule 29 (e2 -> empty .)
    CARACTER        reduce using rule 29 (e2 -> empty .)
    PUNTOCOMA       reduce using rule 29 (e2 -> empty .)
    RKEY            reduce using rule 29 (e2 -> empty .)


state 223

    (27) expresion2 -> exp e2 .

    AND             reduce using rule 27 (expresion2 -> exp e2 .)
    OR              reduce using rule 27 (expresion2 -> exp e2 .)
    RKEY            reduce using rule 27 (expresion2 -> exp e2 .)
    RPARENT         reduce using rule 27 (expresion2 -> exp e2 .)
    CADENA          reduce using rule 27 (expresion2 -> exp e2 .)
    LPARENT         reduce using rule 27 (expresion2 -> exp e2 .)
    ID              reduce using rule 27 (expresion2 -> exp e2 .)
    ENTERO          reduce using rule 27 (expresion2 -> exp e2 .)
    FLOTANTE        reduce using rule 27 (expresion2 -> exp e2 .)
    CARACTER        reduce using rule 27 (expresion2 -> exp e2 .)
    PUNTOCOMA       reduce using rule 27 (expresion2 -> exp e2 .)


state 224

    (71) te2 -> DIV termino .

    SUMA            reduce using rule 71 (te2 -> DIV termino .)
    RESTA           reduce using rule 71 (te2 -> DIV termino .)
    RBRACKET        reduce using rule 71 (te2 -> DIV termino .)
    COMA            reduce using rule 71 (te2 -> DIV termino .)
    GT              reduce using rule 71 (te2 -> DIV termino .)
    LT              reduce using rule 71 (te2 -> DIV termino .)
    LE              reduce using rule 71 (te2 -> DIV termino .)
    GE              reduce using rule 71 (te2 -> DIV termino .)
    DIF             reduce using rule 71 (te2 -> DIV termino .)
    SAME            reduce using rule 71 (te2 -> DIV termino .)
    AND             reduce using rule 71 (te2 -> DIV termino .)
    OR              reduce using rule 71 (te2 -> DIV termino .)
    RPARENT         reduce using rule 71 (te2 -> DIV termino .)
    CADENA          reduce using rule 71 (te2 -> DIV termino .)
    LPARENT         reduce using rule 71 (te2 -> DIV termino .)
    ID              reduce using rule 71 (te2 -> DIV termino .)
    ENTERO          reduce using rule 71 (te2 -> DIV termino .)
    FLOTANTE        reduce using rule 71 (te2 -> DIV termino .)
    CARACTER        reduce using rule 71 (te2 -> DIV termino .)
    PUNTOCOMA       reduce using rule 71 (te2 -> DIV termino .)
    RKEY            reduce using rule 71 (te2 -> DIV termino .)


state 225

    (70) te2 -> MULT termino .

    SUMA            reduce using rule 70 (te2 -> MULT termino .)
    RESTA           reduce using rule 70 (te2 -> MULT termino .)
    RBRACKET        reduce using rule 70 (te2 -> MULT termino .)
    COMA            reduce using rule 70 (te2 -> MULT termino .)
    GT              reduce using rule 70 (te2 -> MULT termino .)
    LT              reduce using rule 70 (te2 -> MULT termino .)
    LE              reduce using rule 70 (te2 -> MULT termino .)
    GE              reduce using rule 70 (te2 -> MULT termino .)
    DIF             reduce using rule 70 (te2 -> MULT termino .)
    SAME            reduce using rule 70 (te2 -> MULT termino .)
    AND             reduce using rule 70 (te2 -> MULT termino .)
    OR              reduce using rule 70 (te2 -> MULT termino .)
    RPARENT         reduce using rule 70 (te2 -> MULT termino .)
    CADENA          reduce using rule 70 (te2 -> MULT termino .)
    LPARENT         reduce using rule 70 (te2 -> MULT termino .)
    ID              reduce using rule 70 (te2 -> MULT termino .)
    ENTERO          reduce using rule 70 (te2 -> MULT termino .)
    FLOTANTE        reduce using rule 70 (te2 -> MULT termino .)
    CARACTER        reduce using rule 70 (te2 -> MULT termino .)
    PUNTOCOMA       reduce using rule 70 (te2 -> MULT termino .)
    RKEY            reduce using rule 70 (te2 -> MULT termino .)


state 226

    (148) llamaf2 -> exp llamaf3 .

    MULT            reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    DIV             reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    SUMA            reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    RESTA           reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    RBRACKET        reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    COMA            reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    ID              reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    PRINT           reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    IF              reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    WHILE           reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    DO              reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    FOR             reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    COMENTARIO      reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    CUADRADO        reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    TRIANGULO       reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    CASA            reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    RECTANGULO      reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    CUBO            reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    TRAPECIO        reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    ESTRELLA        reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    MUEVE           reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    LEVANTA         reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    APOYA           reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    DIMENSION       reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    RKEY            reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    GT              reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    LT              reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    LE              reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    GE              reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    DIF             reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    SAME            reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    AND             reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    OR              reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    RPARENT         reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    CADENA          reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    LPARENT         reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    ENTERO          reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    FLOTANTE        reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    CARACTER        reduce using rule 148 (llamaf2 -> exp llamaf3 .)
    PUNTOCOMA       reduce using rule 148 (llamaf2 -> exp llamaf3 .)


state 227

    (150) llamaf3 -> llamaf4 .

    MULT            reduce using rule 150 (llamaf3 -> llamaf4 .)
    DIV             reduce using rule 150 (llamaf3 -> llamaf4 .)
    SUMA            reduce using rule 150 (llamaf3 -> llamaf4 .)
    RESTA           reduce using rule 150 (llamaf3 -> llamaf4 .)
    RBRACKET        reduce using rule 150 (llamaf3 -> llamaf4 .)
    COMA            reduce using rule 150 (llamaf3 -> llamaf4 .)
    ID              reduce using rule 150 (llamaf3 -> llamaf4 .)
    PRINT           reduce using rule 150 (llamaf3 -> llamaf4 .)
    IF              reduce using rule 150 (llamaf3 -> llamaf4 .)
    WHILE           reduce using rule 150 (llamaf3 -> llamaf4 .)
    DO              reduce using rule 150 (llamaf3 -> llamaf4 .)
    FOR             reduce using rule 150 (llamaf3 -> llamaf4 .)
    COMENTARIO      reduce using rule 150 (llamaf3 -> llamaf4 .)
    CUADRADO        reduce using rule 150 (llamaf3 -> llamaf4 .)
    TRIANGULO       reduce using rule 150 (llamaf3 -> llamaf4 .)
    CASA            reduce using rule 150 (llamaf3 -> llamaf4 .)
    RECTANGULO      reduce using rule 150 (llamaf3 -> llamaf4 .)
    CUBO            reduce using rule 150 (llamaf3 -> llamaf4 .)
    TRAPECIO        reduce using rule 150 (llamaf3 -> llamaf4 .)
    ESTRELLA        reduce using rule 150 (llamaf3 -> llamaf4 .)
    MUEVE           reduce using rule 150 (llamaf3 -> llamaf4 .)
    LEVANTA         reduce using rule 150 (llamaf3 -> llamaf4 .)
    APOYA           reduce using rule 150 (llamaf3 -> llamaf4 .)
    DIMENSION       reduce using rule 150 (llamaf3 -> llamaf4 .)
    RKEY            reduce using rule 150 (llamaf3 -> llamaf4 .)
    GT              reduce using rule 150 (llamaf3 -> llamaf4 .)
    LT              reduce using rule 150 (llamaf3 -> llamaf4 .)
    LE              reduce using rule 150 (llamaf3 -> llamaf4 .)
    GE              reduce using rule 150 (llamaf3 -> llamaf4 .)
    DIF             reduce using rule 150 (llamaf3 -> llamaf4 .)
    SAME            reduce using rule 150 (llamaf3 -> llamaf4 .)
    AND             reduce using rule 150 (llamaf3 -> llamaf4 .)
    OR              reduce using rule 150 (llamaf3 -> llamaf4 .)
    RPARENT         reduce using rule 150 (llamaf3 -> llamaf4 .)
    CADENA          reduce using rule 150 (llamaf3 -> llamaf4 .)
    LPARENT         reduce using rule 150 (llamaf3 -> llamaf4 .)
    ENTERO          reduce using rule 150 (llamaf3 -> llamaf4 .)
    FLOTANTE        reduce using rule 150 (llamaf3 -> llamaf4 .)
    CARACTER        reduce using rule 150 (llamaf3 -> llamaf4 .)
    PUNTOCOMA       reduce using rule 150 (llamaf3 -> llamaf4 .)


state 228

    (149) llamaf3 -> COMA . llamaf2
    (148) llamaf2 -> . exp llamaf3
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    llamaf2                        shift and go to state 273
    exp                            shift and go to state 175

state 229

    (83) f7 -> ID LBRACKET exp f8 .

    MULT            reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    DIV             reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    SUMA            reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    RESTA           reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    GT              reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    LT              reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    LE              reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    GE              reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    DIF             reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    SAME            reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    AND             reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    OR              reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    RPARENT         reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    CADENA          reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    LPARENT         reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    ID              reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    ENTERO          reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    FLOTANTE        reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    CARACTER        reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    PUNTOCOMA       reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    RKEY            reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    COMA            reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)
    RBRACKET        reduce using rule 83 (f7 -> ID LBRACKET exp f8 .)


state 230

    (84) f8 -> COMA . exp f8
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 274

state 231

    (85) f8 -> RBRACKET .

    MULT            reduce using rule 85 (f8 -> RBRACKET .)
    DIV             reduce using rule 85 (f8 -> RBRACKET .)
    SUMA            reduce using rule 85 (f8 -> RBRACKET .)
    RESTA           reduce using rule 85 (f8 -> RBRACKET .)
    RBRACKET        reduce using rule 85 (f8 -> RBRACKET .)
    COMA            reduce using rule 85 (f8 -> RBRACKET .)
    GT              reduce using rule 85 (f8 -> RBRACKET .)
    LT              reduce using rule 85 (f8 -> RBRACKET .)
    LE              reduce using rule 85 (f8 -> RBRACKET .)
    GE              reduce using rule 85 (f8 -> RBRACKET .)
    DIF             reduce using rule 85 (f8 -> RBRACKET .)
    SAME            reduce using rule 85 (f8 -> RBRACKET .)
    AND             reduce using rule 85 (f8 -> RBRACKET .)
    OR              reduce using rule 85 (f8 -> RBRACKET .)
    RPARENT         reduce using rule 85 (f8 -> RBRACKET .)
    CADENA          reduce using rule 85 (f8 -> RBRACKET .)
    LPARENT         reduce using rule 85 (f8 -> RBRACKET .)
    ID              reduce using rule 85 (f8 -> RBRACKET .)
    ENTERO          reduce using rule 85 (f8 -> RBRACKET .)
    FLOTANTE        reduce using rule 85 (f8 -> RBRACKET .)
    CARACTER        reduce using rule 85 (f8 -> RBRACKET .)
    PUNTOCOMA       reduce using rule 85 (f8 -> RBRACKET .)
    RKEY            reduce using rule 85 (f8 -> RBRACKET .)


state 232

    (48) decla2 -> COMA exp decla2 .

    INT             reduce using rule 48 (decla2 -> COMA exp decla2 .)
    FLOAT           reduce using rule 48 (decla2 -> COMA exp decla2 .)
    CHAR            reduce using rule 48 (decla2 -> COMA exp decla2 .)
    STRING          reduce using rule 48 (decla2 -> COMA exp decla2 .)
    BOOL            reduce using rule 48 (decla2 -> COMA exp decla2 .)
    VOID            reduce using rule 48 (decla2 -> COMA exp decla2 .)
    LKEY            reduce using rule 48 (decla2 -> COMA exp decla2 .)
    ID              reduce using rule 48 (decla2 -> COMA exp decla2 .)
    PRINT           reduce using rule 48 (decla2 -> COMA exp decla2 .)
    IF              reduce using rule 48 (decla2 -> COMA exp decla2 .)
    WHILE           reduce using rule 48 (decla2 -> COMA exp decla2 .)
    DO              reduce using rule 48 (decla2 -> COMA exp decla2 .)
    FOR             reduce using rule 48 (decla2 -> COMA exp decla2 .)
    COMENTARIO      reduce using rule 48 (decla2 -> COMA exp decla2 .)
    CUADRADO        reduce using rule 48 (decla2 -> COMA exp decla2 .)
    TRIANGULO       reduce using rule 48 (decla2 -> COMA exp decla2 .)
    CASA            reduce using rule 48 (decla2 -> COMA exp decla2 .)
    RECTANGULO      reduce using rule 48 (decla2 -> COMA exp decla2 .)
    CUBO            reduce using rule 48 (decla2 -> COMA exp decla2 .)
    TRAPECIO        reduce using rule 48 (decla2 -> COMA exp decla2 .)
    ESTRELLA        reduce using rule 48 (decla2 -> COMA exp decla2 .)
    MUEVE           reduce using rule 48 (decla2 -> COMA exp decla2 .)
    LEVANTA         reduce using rule 48 (decla2 -> COMA exp decla2 .)
    APOYA           reduce using rule 48 (decla2 -> COMA exp decla2 .)
    DIMENSION       reduce using rule 48 (decla2 -> COMA exp decla2 .)
    RKEY            reduce using rule 48 (decla2 -> COMA exp decla2 .)


state 233

    (118) ciclodowhile -> DO bloque WHILE LPARENT . expresion RPARENT PUNTOCOMA
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    expresion2                     shift and go to state 165
    expresion                      shift and go to state 275
    exp                            shift and go to state 167

state 234

    (130) mueve -> MUEVE LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 276

state 235

    (117) ciclowhile -> WHILE LPARENT expresion RPARENT . bloque
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 277

state 236

    (133) trapecio -> TRAPECIO LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 278

state 237

    (65) pr3 -> RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 279


state 238

    (63) pr2 -> CADENA pr3 .

    ID              reduce using rule 63 (pr2 -> CADENA pr3 .)
    PRINT           reduce using rule 63 (pr2 -> CADENA pr3 .)
    IF              reduce using rule 63 (pr2 -> CADENA pr3 .)
    WHILE           reduce using rule 63 (pr2 -> CADENA pr3 .)
    DO              reduce using rule 63 (pr2 -> CADENA pr3 .)
    FOR             reduce using rule 63 (pr2 -> CADENA pr3 .)
    COMENTARIO      reduce using rule 63 (pr2 -> CADENA pr3 .)
    CUADRADO        reduce using rule 63 (pr2 -> CADENA pr3 .)
    TRIANGULO       reduce using rule 63 (pr2 -> CADENA pr3 .)
    CASA            reduce using rule 63 (pr2 -> CADENA pr3 .)
    RECTANGULO      reduce using rule 63 (pr2 -> CADENA pr3 .)
    CUBO            reduce using rule 63 (pr2 -> CADENA pr3 .)
    TRAPECIO        reduce using rule 63 (pr2 -> CADENA pr3 .)
    ESTRELLA        reduce using rule 63 (pr2 -> CADENA pr3 .)
    MUEVE           reduce using rule 63 (pr2 -> CADENA pr3 .)
    LEVANTA         reduce using rule 63 (pr2 -> CADENA pr3 .)
    APOYA           reduce using rule 63 (pr2 -> CADENA pr3 .)
    DIMENSION       reduce using rule 63 (pr2 -> CADENA pr3 .)
    RKEY            reduce using rule 63 (pr2 -> CADENA pr3 .)


state 239

    (64) pr3 -> pr2 .

    ID              reduce using rule 64 (pr3 -> pr2 .)
    PRINT           reduce using rule 64 (pr3 -> pr2 .)
    IF              reduce using rule 64 (pr3 -> pr2 .)
    WHILE           reduce using rule 64 (pr3 -> pr2 .)
    DO              reduce using rule 64 (pr3 -> pr2 .)
    FOR             reduce using rule 64 (pr3 -> pr2 .)
    COMENTARIO      reduce using rule 64 (pr3 -> pr2 .)
    CUADRADO        reduce using rule 64 (pr3 -> pr2 .)
    TRIANGULO       reduce using rule 64 (pr3 -> pr2 .)
    CASA            reduce using rule 64 (pr3 -> pr2 .)
    RECTANGULO      reduce using rule 64 (pr3 -> pr2 .)
    CUBO            reduce using rule 64 (pr3 -> pr2 .)
    TRAPECIO        reduce using rule 64 (pr3 -> pr2 .)
    ESTRELLA        reduce using rule 64 (pr3 -> pr2 .)
    MUEVE           reduce using rule 64 (pr3 -> pr2 .)
    LEVANTA         reduce using rule 64 (pr3 -> pr2 .)
    APOYA           reduce using rule 64 (pr3 -> pr2 .)
    DIMENSION       reduce using rule 64 (pr3 -> pr2 .)
    RKEY            reduce using rule 64 (pr3 -> pr2 .)


state 240

    (62) pr2 -> expresion pr3 .

    ID              reduce using rule 62 (pr2 -> expresion pr3 .)
    PRINT           reduce using rule 62 (pr2 -> expresion pr3 .)
    IF              reduce using rule 62 (pr2 -> expresion pr3 .)
    WHILE           reduce using rule 62 (pr2 -> expresion pr3 .)
    DO              reduce using rule 62 (pr2 -> expresion pr3 .)
    FOR             reduce using rule 62 (pr2 -> expresion pr3 .)
    COMENTARIO      reduce using rule 62 (pr2 -> expresion pr3 .)
    CUADRADO        reduce using rule 62 (pr2 -> expresion pr3 .)
    TRIANGULO       reduce using rule 62 (pr2 -> expresion pr3 .)
    CASA            reduce using rule 62 (pr2 -> expresion pr3 .)
    RECTANGULO      reduce using rule 62 (pr2 -> expresion pr3 .)
    CUBO            reduce using rule 62 (pr2 -> expresion pr3 .)
    TRAPECIO        reduce using rule 62 (pr2 -> expresion pr3 .)
    ESTRELLA        reduce using rule 62 (pr2 -> expresion pr3 .)
    MUEVE           reduce using rule 62 (pr2 -> expresion pr3 .)
    LEVANTA         reduce using rule 62 (pr2 -> expresion pr3 .)
    APOYA           reduce using rule 62 (pr2 -> expresion pr3 .)
    DIMENSION       reduce using rule 62 (pr2 -> expresion pr3 .)
    RKEY            reduce using rule 62 (pr2 -> expresion pr3 .)


state 241

    (127) casa -> CASA LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 280

state 242

    (126) rectangulo -> RECTANGULO LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 281

state 243

    (129) cubo -> CUBO LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 282


state 244

    (132) apoya -> APOYA LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 132 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)


state 245

    (125) triangulo -> TRIANGULO LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 283


state 246

    (120) ciclofor -> FOR LPARENT asignacion expresion . asignacion RPARENT bloque
    (55) asignacion -> . ID asig2

    ID              shift and go to state 193

    asignacion                     shift and go to state 284

state 247

    (60) asigfinal -> IGUAL . expresion PUNTOCOMA
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    expresion2                     shift and go to state 165
    expresion                      shift and go to state 195
    exp                            shift and go to state 167

state 248

    (119) read -> ID IGUAL READ LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 285


state 249

    (60) asigfinal -> IGUAL expresion PUNTOCOMA .

    ID              reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    PRINT           reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    WHILE           reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    DO              reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    FOR             reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    COMENTARIO      reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    CUADRADO        reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    TRIANGULO       reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    CASA            reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    RECTANGULO      reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    CUBO            reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    TRAPECIO        reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    ESTRELLA        reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    MUEVE           reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    LEVANTA         reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    APOYA           reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    DIMENSION       reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    RKEY            reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    LPARENT         reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    ENTERO          reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    FLOTANTE        reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    CADENA          reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    CARACTER        reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    RPARENT         reduce using rule 60 (asigfinal -> IGUAL expresion PUNTOCOMA .)


state 250

    (56) asig2 -> LBRACKET exp asig3 .

    ID              reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    PRINT           reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    IF              reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    WHILE           reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    DO              reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    FOR             reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    COMENTARIO      reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    CUADRADO        reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    TRIANGULO       reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    CASA            reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    RECTANGULO      reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    CUBO            reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    TRAPECIO        reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    ESTRELLA        reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    MUEVE           reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    LEVANTA         reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    APOYA           reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    DIMENSION       reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    RKEY            reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    LPARENT         reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    ENTERO          reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    FLOTANTE        reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    CADENA          reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    CARACTER        reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)
    RPARENT         reduce using rule 56 (asig2 -> LBRACKET exp asig3 .)


state 251

    (58) asig3 -> COMA . exp asig3
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 286

state 252

    (59) asig3 -> RBRACKET . asigfinal
    (60) asigfinal -> . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 247

    asigfinal                      shift and go to state 287

state 253

    (134) dimension -> DIMENSION LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 288


state 254

    (121) if -> IF LPARENT expresion RPARENT . bloque if2
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 289

state 255

    (66) condicion -> IF LKEY expresion RKEY . bloque c2
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 290

state 256

    (128) estrella -> ESTRELLA LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 291


state 257

    (124) cuadrado -> CUADRADO LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 292


state 258

    (131) levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 131 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)


state 259

    (40) exp2 -> RESTA tagop exp .

    RBRACKET        reduce using rule 40 (exp2 -> RESTA tagop exp .)
    COMA            reduce using rule 40 (exp2 -> RESTA tagop exp .)
    GT              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    LT              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    LE              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    GE              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    DIF             reduce using rule 40 (exp2 -> RESTA tagop exp .)
    SAME            reduce using rule 40 (exp2 -> RESTA tagop exp .)
    AND             reduce using rule 40 (exp2 -> RESTA tagop exp .)
    OR              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    RPARENT         reduce using rule 40 (exp2 -> RESTA tagop exp .)
    CADENA          reduce using rule 40 (exp2 -> RESTA tagop exp .)
    LPARENT         reduce using rule 40 (exp2 -> RESTA tagop exp .)
    ID              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    ENTERO          reduce using rule 40 (exp2 -> RESTA tagop exp .)
    FLOTANTE        reduce using rule 40 (exp2 -> RESTA tagop exp .)
    CARACTER        reduce using rule 40 (exp2 -> RESTA tagop exp .)
    PUNTOCOMA       reduce using rule 40 (exp2 -> RESTA tagop exp .)
    RKEY            reduce using rule 40 (exp2 -> RESTA tagop exp .)


state 260

    (39) exp2 -> SUMA tagop exp .

    RBRACKET        reduce using rule 39 (exp2 -> SUMA tagop exp .)
    COMA            reduce using rule 39 (exp2 -> SUMA tagop exp .)
    GT              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    LT              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    LE              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    GE              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    DIF             reduce using rule 39 (exp2 -> SUMA tagop exp .)
    SAME            reduce using rule 39 (exp2 -> SUMA tagop exp .)
    AND             reduce using rule 39 (exp2 -> SUMA tagop exp .)
    OR              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    RPARENT         reduce using rule 39 (exp2 -> SUMA tagop exp .)
    CADENA          reduce using rule 39 (exp2 -> SUMA tagop exp .)
    LPARENT         reduce using rule 39 (exp2 -> SUMA tagop exp .)
    ID              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    ENTERO          reduce using rule 39 (exp2 -> SUMA tagop exp .)
    FLOTANTE        reduce using rule 39 (exp2 -> SUMA tagop exp .)
    CARACTER        reduce using rule 39 (exp2 -> SUMA tagop exp .)
    PUNTOCOMA       reduce using rule 39 (exp2 -> SUMA tagop exp .)
    RKEY            reduce using rule 39 (exp2 -> SUMA tagop exp .)


state 261

    (23) expre2 -> AND tagmetelog . expresion tagsacalog
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    expresion2                     shift and go to state 165
    expresion                      shift and go to state 293
    exp                            shift and go to state 167

state 262

    (25) tagmetelog -> empty .

    LPARENT         reduce using rule 25 (tagmetelog -> empty .)
    ID              reduce using rule 25 (tagmetelog -> empty .)
    ENTERO          reduce using rule 25 (tagmetelog -> empty .)
    FLOTANTE        reduce using rule 25 (tagmetelog -> empty .)
    CADENA          reduce using rule 25 (tagmetelog -> empty .)
    CARACTER        reduce using rule 25 (tagmetelog -> empty .)


state 263

    (24) expre2 -> OR tagmetelog . expresion tagsacalog
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    expresion2                     shift and go to state 165
    expresion                      shift and go to state 294
    exp                            shift and go to state 167

state 264

    (74) factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .

    MULT            reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    DIV             reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    SUMA            reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RESTA           reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RPARENT         reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    GT              reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    LT              reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    LE              reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    GE              reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    DIF             reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    SAME            reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    AND             reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    OR              reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    CADENA          reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    LPARENT         reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    ID              reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    ENTERO          reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    FLOTANTE        reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    CARACTER        reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    COMA            reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RBRACKET        reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RKEY            reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    PUNTOCOMA       reduce using rule 74 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)


state 265

    (82) tagsacafondo -> empty .

    MULT            reduce using rule 82 (tagsacafondo -> empty .)
    DIV             reduce using rule 82 (tagsacafondo -> empty .)
    SUMA            reduce using rule 82 (tagsacafondo -> empty .)
    RESTA           reduce using rule 82 (tagsacafondo -> empty .)
    RBRACKET        reduce using rule 82 (tagsacafondo -> empty .)
    COMA            reduce using rule 82 (tagsacafondo -> empty .)
    GT              reduce using rule 82 (tagsacafondo -> empty .)
    LT              reduce using rule 82 (tagsacafondo -> empty .)
    LE              reduce using rule 82 (tagsacafondo -> empty .)
    GE              reduce using rule 82 (tagsacafondo -> empty .)
    DIF             reduce using rule 82 (tagsacafondo -> empty .)
    SAME            reduce using rule 82 (tagsacafondo -> empty .)
    AND             reduce using rule 82 (tagsacafondo -> empty .)
    OR              reduce using rule 82 (tagsacafondo -> empty .)
    RPARENT         reduce using rule 82 (tagsacafondo -> empty .)
    CADENA          reduce using rule 82 (tagsacafondo -> empty .)
    LPARENT         reduce using rule 82 (tagsacafondo -> empty .)
    ID              reduce using rule 82 (tagsacafondo -> empty .)
    ENTERO          reduce using rule 82 (tagsacafondo -> empty .)
    FLOTANTE        reduce using rule 82 (tagsacafondo -> empty .)
    CARACTER        reduce using rule 82 (tagsacafondo -> empty .)
    PUNTOCOMA       reduce using rule 82 (tagsacafondo -> empty .)
    RKEY            reduce using rule 82 (tagsacafondo -> empty .)


state 266

    (33) e3 -> GE tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 295

state 267

    (36) tagrel -> empty .

    LPARENT         reduce using rule 36 (tagrel -> empty .)
    ID              reduce using rule 36 (tagrel -> empty .)
    ENTERO          reduce using rule 36 (tagrel -> empty .)
    FLOTANTE        reduce using rule 36 (tagrel -> empty .)
    CADENA          reduce using rule 36 (tagrel -> empty .)
    CARACTER        reduce using rule 36 (tagrel -> empty .)


state 268

    (34) e3 -> DIF tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 296

state 269

    (32) e3 -> LE tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 297

state 270

    (35) e3 -> SAME tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 298

state 271

    (31) e3 -> LT tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 299

state 272

    (30) e3 -> GT tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (69) termino -> . factor tagsacopm te2
    (74) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (75) factor -> . f2
    (76) factor -> . f3
    (77) factor -> . f6
    (78) factor -> . f7
    (79) f2 -> . varcte
    (80) f3 -> . ID
    (86) f6 -> . llamafuncion
    (83) f7 -> . ID LBRACKET exp f8
    (109) varcte -> . ENTERO tagint
    (110) varcte -> . FLOTANTE tagfloat
    (111) varcte -> . CADENA tagcad
    (112) varcte -> . CARACTER tagcar
    (145) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 56
    ID              shift and go to state 63
    ENTERO          shift and go to state 61
    FLOTANTE        shift and go to state 65
    CADENA          shift and go to state 59
    CARACTER        shift and go to state 62

    f2                             shift and go to state 51
    f3                             shift and go to state 52
    f6                             shift and go to state 53
    f7                             shift and go to state 54
    termino                        shift and go to state 55
    varcte                         shift and go to state 57
    llamafuncion                   shift and go to state 58
    factor                         shift and go to state 60
    exp                            shift and go to state 300

state 273

    (149) llamaf3 -> COMA llamaf2 .

    MULT            reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    DIV             reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    SUMA            reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    RESTA           reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    RBRACKET        reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    COMA            reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    ID              reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    PRINT           reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    IF              reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    WHILE           reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    DO              reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    FOR             reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    COMENTARIO      reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    CUADRADO        reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    TRIANGULO       reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    CASA            reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    RECTANGULO      reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    CUBO            reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    TRAPECIO        reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    ESTRELLA        reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    MUEVE           reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    LEVANTA         reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    APOYA           reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    DIMENSION       reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    RKEY            reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    GT              reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    LT              reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    LE              reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    GE              reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    DIF             reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    SAME            reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    AND             reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    OR              reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    RPARENT         reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    CADENA          reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    LPARENT         reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    ENTERO          reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    FLOTANTE        reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    CARACTER        reduce using rule 149 (llamaf3 -> COMA llamaf2 .)
    PUNTOCOMA       reduce using rule 149 (llamaf3 -> COMA llamaf2 .)


state 274

    (84) f8 -> COMA exp . f8
    (84) f8 -> . COMA exp f8
    (85) f8 -> . RBRACKET

    COMA            shift and go to state 230
    RBRACKET        shift and go to state 231

    f8                             shift and go to state 301

state 275

    (118) ciclodowhile -> DO bloque WHILE LPARENT expresion . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 302


state 276

    (130) mueve -> MUEVE LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 303


state 277

    (117) ciclowhile -> WHILE LPARENT expresion RPARENT bloque .

    ID              reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    PRINT           reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    IF              reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    WHILE           reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    DO              reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    FOR             reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    COMENTARIO      reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    CUADRADO        reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    TRIANGULO       reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    CASA            reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    RECTANGULO      reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    CUBO            reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    TRAPECIO        reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    ESTRELLA        reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    MUEVE           reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    LEVANTA         reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    APOYA           reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    DIMENSION       reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    RKEY            reduce using rule 117 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)


state 278

    (133) trapecio -> TRAPECIO LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 304


state 279

    (65) pr3 -> RPARENT PUNTOCOMA .

    ID              reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    IF              reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    DO              reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    FOR             reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    CASA            reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 65 (pr3 -> RPARENT PUNTOCOMA .)


state 280

    (127) casa -> CASA LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 305


state 281

    (126) rectangulo -> RECTANGULO LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 306


state 282

    (129) cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 129 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)


state 283

    (125) triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 125 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)


state 284

    (120) ciclofor -> FOR LPARENT asignacion expresion asignacion . RPARENT bloque

    RPARENT         shift and go to state 307


state 285

    (119) read -> ID IGUAL READ LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 308


state 286

    (58) asig3 -> COMA exp . asig3
    (58) asig3 -> . COMA exp asig3
    (59) asig3 -> . RBRACKET asigfinal

    COMA            shift and go to state 251
    RBRACKET        shift and go to state 252

    asig3                          shift and go to state 309

state 287

    (59) asig3 -> RBRACKET asigfinal .

    ID              reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    PRINT           reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    IF              reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    WHILE           reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    DO              reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    FOR             reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    COMENTARIO      reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    CUADRADO        reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    TRIANGULO       reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    CASA            reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    RECTANGULO      reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    CUBO            reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    TRAPECIO        reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    ESTRELLA        reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    MUEVE           reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    LEVANTA         reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    APOYA           reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    DIMENSION       reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    RKEY            reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    LPARENT         reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    ENTERO          reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    FLOTANTE        reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    CADENA          reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    CARACTER        reduce using rule 59 (asig3 -> RBRACKET asigfinal .)
    RPARENT         reduce using rule 59 (asig3 -> RBRACKET asigfinal .)


state 288

    (134) dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 134 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)


state 289

    (121) if -> IF LPARENT expresion RPARENT bloque . if2
    (122) if2 -> . empty
    (123) if2 -> . ELSE bloque
    (152) empty -> .

    ELSE            shift and go to state 311
    ID              reduce using rule 152 (empty -> .)
    PRINT           reduce using rule 152 (empty -> .)
    IF              reduce using rule 152 (empty -> .)
    WHILE           reduce using rule 152 (empty -> .)
    DO              reduce using rule 152 (empty -> .)
    FOR             reduce using rule 152 (empty -> .)
    COMENTARIO      reduce using rule 152 (empty -> .)
    CUADRADO        reduce using rule 152 (empty -> .)
    TRIANGULO       reduce using rule 152 (empty -> .)
    CASA            reduce using rule 152 (empty -> .)
    RECTANGULO      reduce using rule 152 (empty -> .)
    CUBO            reduce using rule 152 (empty -> .)
    TRAPECIO        reduce using rule 152 (empty -> .)
    ESTRELLA        reduce using rule 152 (empty -> .)
    MUEVE           reduce using rule 152 (empty -> .)
    LEVANTA         reduce using rule 152 (empty -> .)
    APOYA           reduce using rule 152 (empty -> .)
    DIMENSION       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    empty                          shift and go to state 312
    if2                            shift and go to state 310

state 290

    (66) condicion -> IF LKEY expresion RKEY bloque . c2
    (67) c2 -> . ELSE bloque PUNTOCOMA
    (68) c2 -> . PUNTOCOMA

    ELSE            shift and go to state 314
    PUNTOCOMA       shift and go to state 313

    c2                             shift and go to state 315

state 291

    (128) estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 128 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)


state 292

    (124) cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 124 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)


state 293

    (23) expre2 -> AND tagmetelog expresion . tagsacalog
    (26) tagsacalog -> . empty
    (152) empty -> .

    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagsacalog                     shift and go to state 316
    empty                          shift and go to state 317

state 294

    (24) expre2 -> OR tagmetelog expresion . tagsacalog
    (26) tagsacalog -> . empty
    (152) empty -> .

    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagsacalog                     shift and go to state 318
    empty                          shift and go to state 317

state 295

    (33) e3 -> GE tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (152) empty -> .

    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagsacrel                      shift and go to state 319
    empty                          shift and go to state 320

state 296

    (34) e3 -> DIF tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (152) empty -> .

    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagsacrel                      shift and go to state 321
    empty                          shift and go to state 320

state 297

    (32) e3 -> LE tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (152) empty -> .

    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagsacrel                      shift and go to state 322
    empty                          shift and go to state 320

state 298

    (35) e3 -> SAME tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (152) empty -> .

    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagsacrel                      shift and go to state 323
    empty                          shift and go to state 320

state 299

    (31) e3 -> LT tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (152) empty -> .

    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagsacrel                      shift and go to state 324
    empty                          shift and go to state 320

state 300

    (30) e3 -> GT tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (152) empty -> .

    AND             reduce using rule 152 (empty -> .)
    OR              reduce using rule 152 (empty -> .)
    RPARENT         reduce using rule 152 (empty -> .)
    CADENA          reduce using rule 152 (empty -> .)
    LPARENT         reduce using rule 152 (empty -> .)
    ID              reduce using rule 152 (empty -> .)
    ENTERO          reduce using rule 152 (empty -> .)
    FLOTANTE        reduce using rule 152 (empty -> .)
    CARACTER        reduce using rule 152 (empty -> .)
    PUNTOCOMA       reduce using rule 152 (empty -> .)
    RKEY            reduce using rule 152 (empty -> .)

    tagsacrel                      shift and go to state 325
    empty                          shift and go to state 320

state 301

    (84) f8 -> COMA exp f8 .

    MULT            reduce using rule 84 (f8 -> COMA exp f8 .)
    DIV             reduce using rule 84 (f8 -> COMA exp f8 .)
    SUMA            reduce using rule 84 (f8 -> COMA exp f8 .)
    RESTA           reduce using rule 84 (f8 -> COMA exp f8 .)
    RBRACKET        reduce using rule 84 (f8 -> COMA exp f8 .)
    COMA            reduce using rule 84 (f8 -> COMA exp f8 .)
    GT              reduce using rule 84 (f8 -> COMA exp f8 .)
    LT              reduce using rule 84 (f8 -> COMA exp f8 .)
    LE              reduce using rule 84 (f8 -> COMA exp f8 .)
    GE              reduce using rule 84 (f8 -> COMA exp f8 .)
    DIF             reduce using rule 84 (f8 -> COMA exp f8 .)
    SAME            reduce using rule 84 (f8 -> COMA exp f8 .)
    AND             reduce using rule 84 (f8 -> COMA exp f8 .)
    OR              reduce using rule 84 (f8 -> COMA exp f8 .)
    RPARENT         reduce using rule 84 (f8 -> COMA exp f8 .)
    CADENA          reduce using rule 84 (f8 -> COMA exp f8 .)
    LPARENT         reduce using rule 84 (f8 -> COMA exp f8 .)
    ID              reduce using rule 84 (f8 -> COMA exp f8 .)
    ENTERO          reduce using rule 84 (f8 -> COMA exp f8 .)
    FLOTANTE        reduce using rule 84 (f8 -> COMA exp f8 .)
    CARACTER        reduce using rule 84 (f8 -> COMA exp f8 .)
    PUNTOCOMA       reduce using rule 84 (f8 -> COMA exp f8 .)
    RKEY            reduce using rule 84 (f8 -> COMA exp f8 .)


state 302

    (118) ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 326


state 303

    (130) mueve -> MUEVE LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 327


state 304

    (133) trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 328


state 305

    (127) casa -> CASA LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 329


state 306

    (126) rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 330


state 307

    (120) ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT . bloque
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 331

state 308

    (119) read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 119 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)


state 309

    (58) asig3 -> COMA exp asig3 .

    ID              reduce using rule 58 (asig3 -> COMA exp asig3 .)
    PRINT           reduce using rule 58 (asig3 -> COMA exp asig3 .)
    IF              reduce using rule 58 (asig3 -> COMA exp asig3 .)
    WHILE           reduce using rule 58 (asig3 -> COMA exp asig3 .)
    DO              reduce using rule 58 (asig3 -> COMA exp asig3 .)
    FOR             reduce using rule 58 (asig3 -> COMA exp asig3 .)
    COMENTARIO      reduce using rule 58 (asig3 -> COMA exp asig3 .)
    CUADRADO        reduce using rule 58 (asig3 -> COMA exp asig3 .)
    TRIANGULO       reduce using rule 58 (asig3 -> COMA exp asig3 .)
    CASA            reduce using rule 58 (asig3 -> COMA exp asig3 .)
    RECTANGULO      reduce using rule 58 (asig3 -> COMA exp asig3 .)
    CUBO            reduce using rule 58 (asig3 -> COMA exp asig3 .)
    TRAPECIO        reduce using rule 58 (asig3 -> COMA exp asig3 .)
    ESTRELLA        reduce using rule 58 (asig3 -> COMA exp asig3 .)
    MUEVE           reduce using rule 58 (asig3 -> COMA exp asig3 .)
    LEVANTA         reduce using rule 58 (asig3 -> COMA exp asig3 .)
    APOYA           reduce using rule 58 (asig3 -> COMA exp asig3 .)
    DIMENSION       reduce using rule 58 (asig3 -> COMA exp asig3 .)
    RKEY            reduce using rule 58 (asig3 -> COMA exp asig3 .)
    LPARENT         reduce using rule 58 (asig3 -> COMA exp asig3 .)
    ENTERO          reduce using rule 58 (asig3 -> COMA exp asig3 .)
    FLOTANTE        reduce using rule 58 (asig3 -> COMA exp asig3 .)
    CADENA          reduce using rule 58 (asig3 -> COMA exp asig3 .)
    CARACTER        reduce using rule 58 (asig3 -> COMA exp asig3 .)
    RPARENT         reduce using rule 58 (asig3 -> COMA exp asig3 .)


state 310

    (121) if -> IF LPARENT expresion RPARENT bloque if2 .

    ID              reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    PRINT           reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    IF              reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    WHILE           reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    DO              reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    FOR             reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    COMENTARIO      reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    CUADRADO        reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    TRIANGULO       reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    CASA            reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    RECTANGULO      reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    CUBO            reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    TRAPECIO        reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    ESTRELLA        reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    MUEVE           reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    LEVANTA         reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    APOYA           reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    DIMENSION       reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    RKEY            reduce using rule 121 (if -> IF LPARENT expresion RPARENT bloque if2 .)


state 311

    (123) if2 -> ELSE . bloque
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 332

state 312

    (122) if2 -> empty .

    ID              reduce using rule 122 (if2 -> empty .)
    PRINT           reduce using rule 122 (if2 -> empty .)
    IF              reduce using rule 122 (if2 -> empty .)
    WHILE           reduce using rule 122 (if2 -> empty .)
    DO              reduce using rule 122 (if2 -> empty .)
    FOR             reduce using rule 122 (if2 -> empty .)
    COMENTARIO      reduce using rule 122 (if2 -> empty .)
    CUADRADO        reduce using rule 122 (if2 -> empty .)
    TRIANGULO       reduce using rule 122 (if2 -> empty .)
    CASA            reduce using rule 122 (if2 -> empty .)
    RECTANGULO      reduce using rule 122 (if2 -> empty .)
    CUBO            reduce using rule 122 (if2 -> empty .)
    TRAPECIO        reduce using rule 122 (if2 -> empty .)
    ESTRELLA        reduce using rule 122 (if2 -> empty .)
    MUEVE           reduce using rule 122 (if2 -> empty .)
    LEVANTA         reduce using rule 122 (if2 -> empty .)
    APOYA           reduce using rule 122 (if2 -> empty .)
    DIMENSION       reduce using rule 122 (if2 -> empty .)
    RKEY            reduce using rule 122 (if2 -> empty .)


state 313

    (68) c2 -> PUNTOCOMA .

    ID              reduce using rule 68 (c2 -> PUNTOCOMA .)
    PRINT           reduce using rule 68 (c2 -> PUNTOCOMA .)
    IF              reduce using rule 68 (c2 -> PUNTOCOMA .)
    WHILE           reduce using rule 68 (c2 -> PUNTOCOMA .)
    DO              reduce using rule 68 (c2 -> PUNTOCOMA .)
    FOR             reduce using rule 68 (c2 -> PUNTOCOMA .)
    COMENTARIO      reduce using rule 68 (c2 -> PUNTOCOMA .)
    CUADRADO        reduce using rule 68 (c2 -> PUNTOCOMA .)
    TRIANGULO       reduce using rule 68 (c2 -> PUNTOCOMA .)
    CASA            reduce using rule 68 (c2 -> PUNTOCOMA .)
    RECTANGULO      reduce using rule 68 (c2 -> PUNTOCOMA .)
    CUBO            reduce using rule 68 (c2 -> PUNTOCOMA .)
    TRAPECIO        reduce using rule 68 (c2 -> PUNTOCOMA .)
    ESTRELLA        reduce using rule 68 (c2 -> PUNTOCOMA .)
    MUEVE           reduce using rule 68 (c2 -> PUNTOCOMA .)
    LEVANTA         reduce using rule 68 (c2 -> PUNTOCOMA .)
    APOYA           reduce using rule 68 (c2 -> PUNTOCOMA .)
    DIMENSION       reduce using rule 68 (c2 -> PUNTOCOMA .)
    RKEY            reduce using rule 68 (c2 -> PUNTOCOMA .)


state 314

    (67) c2 -> ELSE . bloque PUNTOCOMA
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 333

state 315

    (66) condicion -> IF LKEY expresion RKEY bloque c2 .

    ID              reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    PRINT           reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    IF              reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    WHILE           reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    DO              reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    FOR             reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    COMENTARIO      reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    CUADRADO        reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    TRIANGULO       reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    CASA            reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    RECTANGULO      reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    CUBO            reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    TRAPECIO        reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    ESTRELLA        reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    MUEVE           reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    LEVANTA         reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    APOYA           reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    DIMENSION       reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    RKEY            reduce using rule 66 (condicion -> IF LKEY expresion RKEY bloque c2 .)


state 316

    (23) expre2 -> AND tagmetelog expresion tagsacalog .

    RPARENT         reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    CADENA          reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    LPARENT         reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    ID              reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    ENTERO          reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    FLOTANTE        reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    CARACTER        reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    PUNTOCOMA       reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    RKEY            reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)


state 317

    (26) tagsacalog -> empty .

    RPARENT         reduce using rule 26 (tagsacalog -> empty .)
    CADENA          reduce using rule 26 (tagsacalog -> empty .)
    LPARENT         reduce using rule 26 (tagsacalog -> empty .)
    ID              reduce using rule 26 (tagsacalog -> empty .)
    ENTERO          reduce using rule 26 (tagsacalog -> empty .)
    FLOTANTE        reduce using rule 26 (tagsacalog -> empty .)
    CARACTER        reduce using rule 26 (tagsacalog -> empty .)
    PUNTOCOMA       reduce using rule 26 (tagsacalog -> empty .)
    RKEY            reduce using rule 26 (tagsacalog -> empty .)


state 318

    (24) expre2 -> OR tagmetelog expresion tagsacalog .

    RPARENT         reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    CADENA          reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    LPARENT         reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    ID              reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    ENTERO          reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    FLOTANTE        reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    CARACTER        reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    PUNTOCOMA       reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    RKEY            reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)


state 319

    (33) e3 -> GE tagrel exp tagsacrel .

    AND             reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    OR              reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    RPARENT         reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    CADENA          reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    LPARENT         reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    ID              reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    ENTERO          reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    CARACTER        reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    RKEY            reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)


state 320

    (37) tagsacrel -> empty .

    AND             reduce using rule 37 (tagsacrel -> empty .)
    OR              reduce using rule 37 (tagsacrel -> empty .)
    RPARENT         reduce using rule 37 (tagsacrel -> empty .)
    CADENA          reduce using rule 37 (tagsacrel -> empty .)
    LPARENT         reduce using rule 37 (tagsacrel -> empty .)
    ID              reduce using rule 37 (tagsacrel -> empty .)
    ENTERO          reduce using rule 37 (tagsacrel -> empty .)
    FLOTANTE        reduce using rule 37 (tagsacrel -> empty .)
    CARACTER        reduce using rule 37 (tagsacrel -> empty .)
    PUNTOCOMA       reduce using rule 37 (tagsacrel -> empty .)
    RKEY            reduce using rule 37 (tagsacrel -> empty .)


state 321

    (34) e3 -> DIF tagrel exp tagsacrel .

    AND             reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    OR              reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    RPARENT         reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    CADENA          reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    LPARENT         reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    ID              reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    ENTERO          reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    CARACTER        reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    RKEY            reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)


state 322

    (32) e3 -> LE tagrel exp tagsacrel .

    AND             reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    OR              reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    RPARENT         reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    CADENA          reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    LPARENT         reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    ID              reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    ENTERO          reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    CARACTER        reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    RKEY            reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)


state 323

    (35) e3 -> SAME tagrel exp tagsacrel .

    AND             reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    OR              reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    RPARENT         reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    CADENA          reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    LPARENT         reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    ID              reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    ENTERO          reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    CARACTER        reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    RKEY            reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)


state 324

    (31) e3 -> LT tagrel exp tagsacrel .

    AND             reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    OR              reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    RPARENT         reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    CADENA          reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    LPARENT         reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    ID              reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    ENTERO          reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    CARACTER        reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    RKEY            reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)


state 325

    (30) e3 -> GT tagrel exp tagsacrel .

    AND             reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    OR              reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    RPARENT         reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    CADENA          reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    LPARENT         reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    ID              reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    ENTERO          reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    CARACTER        reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    RKEY            reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)


state 326

    (118) ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .

    ID              reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    IF              reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    DO              reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    FOR             reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    CASA            reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 118 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)


state 327

    (130) mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 130 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 328

    (133) trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 133 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 329

    (127) casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 127 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 330

    (126) rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 126 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 331

    (120) ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .

    ID              reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    PRINT           reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    IF              reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    WHILE           reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    DO              reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    FOR             reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    COMENTARIO      reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    CUADRADO        reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    TRIANGULO       reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    CASA            reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    RECTANGULO      reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    CUBO            reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    TRAPECIO        reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    ESTRELLA        reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    MUEVE           reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    LEVANTA         reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    APOYA           reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    DIMENSION       reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    RKEY            reduce using rule 120 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)


state 332

    (123) if2 -> ELSE bloque .

    ID              reduce using rule 123 (if2 -> ELSE bloque .)
    PRINT           reduce using rule 123 (if2 -> ELSE bloque .)
    IF              reduce using rule 123 (if2 -> ELSE bloque .)
    WHILE           reduce using rule 123 (if2 -> ELSE bloque .)
    DO              reduce using rule 123 (if2 -> ELSE bloque .)
    FOR             reduce using rule 123 (if2 -> ELSE bloque .)
    COMENTARIO      reduce using rule 123 (if2 -> ELSE bloque .)
    CUADRADO        reduce using rule 123 (if2 -> ELSE bloque .)
    TRIANGULO       reduce using rule 123 (if2 -> ELSE bloque .)
    CASA            reduce using rule 123 (if2 -> ELSE bloque .)
    RECTANGULO      reduce using rule 123 (if2 -> ELSE bloque .)
    CUBO            reduce using rule 123 (if2 -> ELSE bloque .)
    TRAPECIO        reduce using rule 123 (if2 -> ELSE bloque .)
    ESTRELLA        reduce using rule 123 (if2 -> ELSE bloque .)
    MUEVE           reduce using rule 123 (if2 -> ELSE bloque .)
    LEVANTA         reduce using rule 123 (if2 -> ELSE bloque .)
    APOYA           reduce using rule 123 (if2 -> ELSE bloque .)
    DIMENSION       reduce using rule 123 (if2 -> ELSE bloque .)
    RKEY            reduce using rule 123 (if2 -> ELSE bloque .)


state 333

    (67) c2 -> ELSE bloque . PUNTOCOMA

    PUNTOCOMA       shift and go to state 334


state 334

    (67) c2 -> ELSE bloque PUNTOCOMA .

    ID              reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    PRINT           reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    IF              reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    WHILE           reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    DO              reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    FOR             reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    COMENTARIO      reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    CUADRADO        reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    TRIANGULO       reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    CASA            reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    RECTANGULO      reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    CUBO            reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    TRAPECIO        reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    ESTRELLA        reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    MUEVE           reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    LEVANTA         reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    APOYA           reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    DIMENSION       reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)
    RKEY            reduce using rule 67 (c2 -> ELSE bloque PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPARENT in state 63 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 184 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 184 resolved as shift
WARNING: shift/reduce conflict for LPARENT in state 184 resolved as shift
WARNING: shift/reduce conflict for ID in state 184 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 184 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 184 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 184 resolved as shift
WARNING: reduce/reduce conflict in state 18 resolved using rule (p2 -> p4)
WARNING: rejected rule (p3 -> p4) in state 18
WARNING: reduce/reduce conflict in state 19 resolved using rule (p2 -> p5)
WARNING: rejected rule (p4 -> p5) in state 19
