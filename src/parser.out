Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    NOESNADA
    PUNTO
    BEGIN
    POW
    BOLEANO
    END
    VAR
    COMSIMPLE
    RAIZ
    SQRT
    POTENCIA
    COMDOBLE
    CIRCULO

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2
Rule 2     initTop -> empty
Rule 3     p2 -> p3
Rule 4     p2 -> initFunctions p4
Rule 5     p2 -> p5
Rule 6     p3 -> declaracion p3
Rule 7     p3 -> initFunctions p4
Rule 8     initFunctions -> empty
Rule 9     p4 -> function p4
Rule 10    p4 -> p5
Rule 11    p5 -> cuadrupro2 bloque delMem
Rule 12    cuadrupro -> empty
Rule 13    cuadrupro2 -> empty
Rule 14    delMem -> empty
Rule 15    bloque -> iniEnv LKEY b3 b4 b5
Rule 16    iniEnv -> empty
Rule 17    b3 -> declaracion b3
Rule 18    b3 -> empty
Rule 19    b4 -> estatuto b4
Rule 20    b4 -> empty
Rule 21    b5 -> recEnv RKEY
Rule 22    recEnv -> empty
Rule 23    expresion -> expresion2 expre
Rule 24    expre -> expre2
Rule 25    expre -> empty
Rule 26    expre2 -> AND tagmetelog expresion tagsacalog
Rule 27    expre2 -> OR tagmetelog expresion tagsacalog
Rule 28    tagmetelog -> empty
Rule 29    tagsacalog -> empty
Rule 30    expresion2 -> exp e2
Rule 31    e2 -> e3
Rule 32    e2 -> empty
Rule 33    e3 -> GT tagrel exp tagsacrel
Rule 34    e3 -> LT tagrel exp tagsacrel
Rule 35    e3 -> LE tagrel exp tagsacrel
Rule 36    e3 -> GE tagrel exp tagsacrel
Rule 37    e3 -> DIF tagrel exp tagsacrel
Rule 38    e3 -> SAME tagrel exp tagsacrel
Rule 39    tagrel -> empty
Rule 40    tagsacrel -> empty
Rule 41    exp -> termino tagsacops exp2
Rule 42    exp2 -> SUMA tagop exp
Rule 43    exp2 -> RESTA tagop exp
Rule 44    exp2 -> empty
Rule 45    tagop -> empty
Rule 46    tagsacops -> empty
Rule 47    declaracion -> tipo ID savevar decla1
Rule 48    savevar -> empty
Rule 49    decla1 -> saveMemNormal declafinal
Rule 50    decla1 -> LBRACKET decDimensionada exp saveLimSup decla2
Rule 51    saveMemNormal -> empty
Rule 52    decDimensionada -> empty
Rule 53    saveLimSup -> empty
Rule 54    decla2 -> RBRACKET guardaMemDimen declafinal
Rule 55    decla2 -> COMA SigDimension exp saveLimSup decla2
Rule 56    SigDimension -> empty
Rule 57    guardaMemDimen -> empty
Rule 58    declafinal -> PUNTOCOMA
Rule 59    tipo -> INT
Rule 60    tipo -> FLOAT
Rule 61    tipo -> CHAR
Rule 62    tipo -> STRING
Rule 63    tipo -> BOOL
Rule 64    asignacion -> ID meteid asig2
Rule 65    meteid -> empty
Rule 66    asig2 -> LBRACKET exp asig3
Rule 67    asig2 -> asigfinal
Rule 68    asig3 -> COMA exp asig3
Rule 69    asig3 -> RBRACKET asigfinal
Rule 70    asigfinal -> IGUAL tagmeteig asigf2
Rule 71    asigf2 -> expresion tagig PUNTOCOMA
Rule 72    asigf2 -> read tagig
Rule 73    asigf2 -> readint tagig
Rule 74    tagmeteig -> empty
Rule 75    tagig -> empty
Rule 76    print -> PRINT LPARENT pr2
Rule 77    pr2 -> expresion pr3
Rule 78    pr3 -> tagimprime RPARENT PUNTOCOMA
Rule 79    tagimprime -> empty
Rule 80    termino -> factor tagsacopm te2
Rule 81    te2 -> MULT tagm termino
Rule 82    te2 -> DIV tagm termino
Rule 83    te2 -> empty
Rule 84    tagm -> empty
Rule 85    tagsacopm -> empty
Rule 86    factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo
Rule 87    factor -> f2
Rule 88    factor -> f3
Rule 89    factor -> f6
Rule 90    f2 -> varcte
Rule 91    f3 -> ID
Rule 92    tagfondofalso -> empty
Rule 93    tagsacafondo -> empty
Rule 94    f8 -> COMA exp f8
Rule 95    f8 -> RBRACKET
Rule 96    f6 -> llamafuncion
Rule 97    estatuto -> asignacion
Rule 98    estatuto -> print
Rule 99    estatuto -> ciclowhile
Rule 100   estatuto -> ciclodowhile
Rule 101   estatuto -> ciclofor
Rule 102   estatuto -> read
Rule 103   estatuto -> readint
Rule 104   estatuto -> comentario
Rule 105   estatuto -> cuadrado
Rule 106   estatuto -> triangulo
Rule 107   estatuto -> casa
Rule 108   estatuto -> rectangulo
Rule 109   estatuto -> cubo
Rule 110   estatuto -> trapecio
Rule 111   estatuto -> estrella
Rule 112   estatuto -> mueve
Rule 113   estatuto -> levanta
Rule 114   estatuto -> apoya
Rule 115   estatuto -> dimension
Rule 116   estatuto -> llamafuncion
Rule 117   estatuto -> return
Rule 118   estatuto -> if
Rule 119   comentario -> COMENTARIO
Rule 120   varcte -> ENTERO tagint
Rule 121   varcte -> FLOTANTE tagfloat
Rule 122   varcte -> CADENA tagcad
Rule 123   varcte -> CARACTER tagcar
Rule 124   varcte -> TRUE tagbol
Rule 125   varcte -> FALSE tagbol
Rule 126   tagint -> empty
Rule 127   tagfloat -> empty
Rule 128   tagcad -> empty
Rule 129   tagcar -> empty
Rule 130   tagbol -> empty
Rule 131   ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile
Rule 132   taginiciawhile -> empty
Rule 133   tagwhile -> empty
Rule 134   tagregresawhile -> empty
Rule 135   ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA
Rule 136   taginiciado -> empty
Rule 137   tagcondiciondo -> empty
Rule 138   read -> READ LPARENT RPARENT PUNTOCOMA
Rule 139   readint -> READINT LPARENT RPARENT PUNTOCOMA
Rule 140   ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor
Rule 141   tagevaluafor -> empty
Rule 142   tagterminafor -> empty
Rule 143   tagasigna -> empty
Rule 144   if -> IF LPARENT expresion tagif RPARENT bloque if2
Rule 145   if2 -> tagterminaif
Rule 146   if2 -> ELSE tagelse bloque tagterminaif
Rule 147   tagif -> empty
Rule 148   tagelse -> empty
Rule 149   tagterminaif -> empty
Rule 150   return -> RETURN llegoRet expresion PUNTOCOMA
Rule 151   llegoRet -> empty
Rule 152   cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA
Rule 153   tagcuadro -> empty
Rule 154   triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA
Rule 155   tagtriangulo -> empty
Rule 156   rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 157   casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 158   estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA
Rule 159   cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA
Rule 160   tagcubo -> empty
Rule 161   mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA
Rule 162   tagmueve -> empty
Rule 163   levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA
Rule 164   apoya -> APOYA LPARENT RPARENT PUNTOCOMA
Rule 165   trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 166   dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA
Rule 167   function -> FUNCTION pfunc
Rule 168   pfunc -> tipo ID buildFunc LPARENT funct11
Rule 169   pfunc -> VOID ID buildFunc LPARENT funct11
Rule 170   buildFunc -> empty
Rule 171   funct11 -> function4
Rule 172   funct11 -> initParamTable funct2
Rule 173   initParamTable -> empty
Rule 174   funct2 -> tipo ID initParams funct3
Rule 175   initParams -> empty
Rule 176   funct3 -> COMA funct2
Rule 177   funct3 -> function4
Rule 178   function4 -> RPARENT initFunc bloque noinitFunc
Rule 179   initFunc -> empty
Rule 180   noinitFunc -> empty
Rule 181   llamafuncion -> ID LPARENT tagverificafuncion llamaf11
Rule 182   llamaf11 -> llamaf2
Rule 183   llamaf11 -> llamaf4
Rule 184   llamaf2 -> exp tagrevisaparam llamaf3
Rule 185   llamaf3 -> COMA tagotroargumento llamaf2
Rule 186   llamaf3 -> llamaf4
Rule 187   llamaf4 -> RPARENT tagterminallamada PUNTOCOMA
Rule 188   tagverificafuncion -> empty
Rule 189   tagrevisaparam -> empty
Rule 190   tagotroargumento -> empty
Rule 191   tagterminallamada -> empty
Rule 192   empty -> <empty>

Terminals, with rules where they appear

AND                  : 26
APOYA                : 164
BEGIN                : 
BOLEANO              : 
BOOL                 : 63
CADENA               : 122
CARACTER             : 123
CASA                 : 157
CHAR                 : 61
CIRCULO              : 
COMA                 : 55 68 94 152 152 154 154 156 157 159 159 161 165 176 185
COMDOBLE             : 
COMENTARIO           : 119
COMSIMPLE            : 
CUADRADO             : 152
CUBO                 : 159
DIF                  : 37
DIMENSION            : 166
DIV                  : 82
DO                   : 135
DOSPUNTOS            : 1
ELSE                 : 146
END                  : 
ENTERO               : 120
ESTRELLA             : 158
FALSE                : 125
FLOAT                : 60
FLOTANTE             : 121
FOR                  : 140
FUNCTION             : 167
GE                   : 36
GT                   : 33
ID                   : 1 47 64 91 168 169 174 181
IF                   : 144
IGUAL                : 70
INT                  : 59
LBRACKET             : 50 66
LE                   : 35
LEVANTA              : 163
LKEY                 : 15
LPARENT              : 76 86 131 135 138 139 140 144 152 154 156 157 158 159 161 163 164 165 166 168 169 181
LT                   : 34
MUEVE                : 161
MULT                 : 81
NOESNADA             : 
OR                   : 27
POTENCIA             : 
POW                  : 
PRINT                : 76
PROGRAM              : 1
PUNTO                : 
PUNTOCOMA            : 58 71 78 135 138 139 150 152 154 156 157 158 159 161 163 164 165 166 187
RAIZ                 : 
RBRACKET             : 54 69 95
READ                 : 138
READINT              : 139
RECTANGULO           : 156
RESTA                : 43
RETURN               : 150
RKEY                 : 21
RPARENT              : 78 86 131 135 138 139 140 144 152 154 156 157 158 159 161 163 164 165 166 178 187
SAME                 : 38
SQRT                 : 
STRING               : 62
SUMA                 : 42
TRAPECIO             : 165
TRIANGULO            : 154
TRUE                 : 124
VAR                  : 
VOID                 : 169
WHILE                : 131 135
error                : 

Nonterminals, with rules where they appear

SigDimension         : 55
apoya                : 114
asig2                : 64
asig3                : 66 68
asigf2               : 70
asigfinal            : 67 69
asignacion           : 97 140 140
b3                   : 15 17
b4                   : 15 19
b5                   : 15
bloque               : 11 131 135 140 144 146 178
buildFunc            : 168 169
casa                 : 107
ciclodowhile         : 100
ciclofor             : 101
ciclowhile           : 99
comentario           : 104
cuadrado             : 105
cuadrupro            : 1
cuadrupro2           : 11
cubo                 : 109
decDimensionada      : 50
decla1               : 47
decla2               : 50 55
declafinal           : 49 54
declaracion          : 6 17
delMem               : 11
dimension            : 115
e2                   : 30
e3                   : 31
empty                : 2 8 12 13 14 16 18 20 22 25 28 29 32 39 40 44 45 46 48 51 52 53 56 57 65 74 75 79 83 84 85 92 93 126 127 128 129 130 132 133 134 136 137 141 142 143 147 148 149 151 153 155 160 162 170 173 175 179 180 188 189 190 191
estatuto             : 19
estrella             : 111
exp                  : 30 33 34 35 36 37 38 42 43 50 55 66 68 94 152 152 152 154 154 154 156 156 157 157 158 159 159 159 161 161 165 165 166 184
exp2                 : 41
expre                : 23
expre2               : 24
expresion            : 26 27 71 77 86 131 135 140 144 150
expresion2           : 23
f2                   : 87
f3                   : 88
f6                   : 89
f8                   : 94
factor               : 80
funct11              : 168 169
funct2               : 172 176
funct3               : 174
function             : 9
function4            : 171 177
guardaMemDimen       : 54
if                   : 118
if2                  : 144
iniEnv               : 15
initFunc             : 178
initFunctions        : 4 7
initParamTable       : 172
initParams           : 174
initTop              : 1
levanta              : 113
llamaf11             : 181
llamaf2              : 182 185
llamaf3              : 184
llamaf4              : 183 186
llamafuncion         : 96 116
llegoRet             : 150
meteid               : 64
mueve                : 112
noinitFunc           : 178
p2                   : 1
p3                   : 3 6
p4                   : 4 7 9
p5                   : 5 10
pfunc                : 167
pr2                  : 76
pr3                  : 77
print                : 98
program              : 0
read                 : 72 102
readint              : 73 103
recEnv               : 21
rectangulo           : 108
return               : 117
saveLimSup           : 50 55
saveMemNormal        : 49
savevar              : 47
tagasigna            : 140
tagbol               : 124 125
tagcad               : 122
tagcar               : 123
tagcondiciondo       : 135
tagcuadro            : 152
tagcubo              : 159
tagelse              : 146
tagevaluafor         : 140
tagfloat             : 121
tagfondofalso        : 86
tagif                : 144
tagig                : 71 72 73
tagimprime           : 78
taginiciado          : 135
taginiciawhile       : 131
tagint               : 120
tagm                 : 81 82
tagmeteig            : 70
tagmetelog           : 26 27
tagmueve             : 161
tagop                : 42 43
tagotroargumento     : 185
tagregresawhile      : 131
tagrel               : 33 34 35 36 37 38
tagrevisaparam       : 184
tagsacafondo         : 86
tagsacalog           : 26 27
tagsacopm            : 80
tagsacops            : 41
tagsacrel            : 33 34 35 36 37 38
tagterminafor        : 140
tagterminaif         : 145 146
tagterminallamada    : 187
tagtriangulo         : 154
tagverificafuncion   : 181
tagwhile             : 131
te2                  : 80
termino              : 41 81 82
tipo                 : 47 168 174
trapecio             : 110
triangulo            : 106
varcte               : 90

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM cuadrupro ID initTop DOSPUNTOS p2

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . cuadrupro ID initTop DOSPUNTOS p2
    (12) cuadrupro -> . empty
    (192) empty -> .

    ID              reduce using rule 192 (empty -> .)

    cuadrupro                      shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) program -> PROGRAM cuadrupro . ID initTop DOSPUNTOS p2

    ID              shift and go to state 5


state 4

    (12) cuadrupro -> empty .

    ID              reduce using rule 12 (cuadrupro -> empty .)


state 5

    (1) program -> PROGRAM cuadrupro ID . initTop DOSPUNTOS p2
    (2) initTop -> . empty
    (192) empty -> .

    DOSPUNTOS       reduce using rule 192 (empty -> .)

    initTop                        shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) program -> PROGRAM cuadrupro ID initTop . DOSPUNTOS p2

    DOSPUNTOS       shift and go to state 8


state 7

    (2) initTop -> empty .

    DOSPUNTOS       reduce using rule 2 (initTop -> empty .)


state 8

    (1) program -> PROGRAM cuadrupro ID initTop DOSPUNTOS . p2
    (3) p2 -> . p3
    (4) p2 -> . initFunctions p4
    (5) p2 -> . p5
    (6) p3 -> . declaracion p3
    (7) p3 -> . initFunctions p4
    (8) initFunctions -> . empty
    (11) p5 -> . cuadrupro2 bloque delMem
    (47) declaracion -> . tipo ID savevar decla1
    (192) empty -> .
    (13) cuadrupro2 -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    FUNCTION        reduce using rule 192 (empty -> .)
    LKEY            reduce using rule 192 (empty -> .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 15
    STRING          shift and go to state 12
    BOOL            shift and go to state 19

    p2                             shift and go to state 13
    p3                             shift and go to state 14
    tipo                           shift and go to state 10
    p5                             shift and go to state 16
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 11
    initFunctions                  shift and go to state 20
    declaracion                    shift and go to state 21

state 9

    (11) p5 -> cuadrupro2 . bloque delMem
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (192) empty -> .

    LKEY            reduce using rule 192 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 23
    empty                          shift and go to state 24

state 10

    (47) declaracion -> tipo . ID savevar decla1

    ID              shift and go to state 25


state 11

    (8) initFunctions -> empty .
    (13) cuadrupro2 -> empty .

  ! reduce/reduce conflict for LKEY resolved using rule 8 (initFunctions -> empty .)
    FUNCTION        reduce using rule 8 (initFunctions -> empty .)
    LKEY            reduce using rule 8 (initFunctions -> empty .)

  ! LKEY            [ reduce using rule 13 (cuadrupro2 -> empty .) ]


state 12

    (62) tipo -> STRING .

    ID              reduce using rule 62 (tipo -> STRING .)


state 13

    (1) program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2 .

    $end            reduce using rule 1 (program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2 .)


state 14

    (3) p2 -> p3 .

    $end            reduce using rule 3 (p2 -> p3 .)


state 15

    (61) tipo -> CHAR .

    ID              reduce using rule 61 (tipo -> CHAR .)


state 16

    (5) p2 -> p5 .

    $end            reduce using rule 5 (p2 -> p5 .)


state 17

    (59) tipo -> INT .

    ID              reduce using rule 59 (tipo -> INT .)


state 18

    (60) tipo -> FLOAT .

    ID              reduce using rule 60 (tipo -> FLOAT .)


state 19

    (63) tipo -> BOOL .

    ID              reduce using rule 63 (tipo -> BOOL .)


state 20

    (4) p2 -> initFunctions . p4
    (7) p3 -> initFunctions . p4
    (9) p4 -> . function p4
    (10) p4 -> . p5
    (167) function -> . FUNCTION pfunc
    (11) p5 -> . cuadrupro2 bloque delMem
    (13) cuadrupro2 -> . empty
    (192) empty -> .

    FUNCTION        shift and go to state 27
    LKEY            reduce using rule 192 (empty -> .)

    function                       shift and go to state 26
    p5                             shift and go to state 29
    p4                             shift and go to state 28
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 30

state 21

    (6) p3 -> declaracion . p3
    (6) p3 -> . declaracion p3
    (7) p3 -> . initFunctions p4
    (47) declaracion -> . tipo ID savevar decla1
    (8) initFunctions -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL
    (192) empty -> .

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 15
    STRING          shift and go to state 12
    BOOL            shift and go to state 19
    FUNCTION        reduce using rule 192 (empty -> .)
    LKEY            reduce using rule 192 (empty -> .)

    p3                             shift and go to state 31
    tipo                           shift and go to state 10
    empty                          shift and go to state 32
    initFunctions                  shift and go to state 33
    declaracion                    shift and go to state 21

state 22

    (15) bloque -> iniEnv . LKEY b3 b4 b5

    LKEY            shift and go to state 34


state 23

    (11) p5 -> cuadrupro2 bloque . delMem
    (14) delMem -> . empty
    (192) empty -> .

    $end            reduce using rule 192 (empty -> .)

    delMem                         shift and go to state 35
    empty                          shift and go to state 36

state 24

    (16) iniEnv -> empty .

    LKEY            reduce using rule 16 (iniEnv -> empty .)


state 25

    (47) declaracion -> tipo ID . savevar decla1
    (48) savevar -> . empty
    (192) empty -> .

    LBRACKET        reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)

    empty                          shift and go to state 37
    savevar                        shift and go to state 38

state 26

    (9) p4 -> function . p4
    (9) p4 -> . function p4
    (10) p4 -> . p5
    (167) function -> . FUNCTION pfunc
    (11) p5 -> . cuadrupro2 bloque delMem
    (13) cuadrupro2 -> . empty
    (192) empty -> .

    FUNCTION        shift and go to state 27
    LKEY            reduce using rule 192 (empty -> .)

    function                       shift and go to state 26
    p5                             shift and go to state 29
    p4                             shift and go to state 39
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 30

state 27

    (167) function -> FUNCTION . pfunc
    (168) pfunc -> . tipo ID buildFunc LPARENT funct11
    (169) pfunc -> . VOID ID buildFunc LPARENT funct11
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    VOID            shift and go to state 42
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 15
    STRING          shift and go to state 12
    BOOL            shift and go to state 19

    tipo                           shift and go to state 40
    pfunc                          shift and go to state 41

state 28

    (4) p2 -> initFunctions p4 .
    (7) p3 -> initFunctions p4 .

  ! reduce/reduce conflict for $end resolved using rule 4 (p2 -> initFunctions p4 .)
    $end            reduce using rule 4 (p2 -> initFunctions p4 .)

  ! $end            [ reduce using rule 7 (p3 -> initFunctions p4 .) ]


state 29

    (10) p4 -> p5 .

    $end            reduce using rule 10 (p4 -> p5 .)


state 30

    (13) cuadrupro2 -> empty .

    LKEY            reduce using rule 13 (cuadrupro2 -> empty .)


state 31

    (6) p3 -> declaracion p3 .

    $end            reduce using rule 6 (p3 -> declaracion p3 .)


state 32

    (8) initFunctions -> empty .

    FUNCTION        reduce using rule 8 (initFunctions -> empty .)
    LKEY            reduce using rule 8 (initFunctions -> empty .)


state 33

    (7) p3 -> initFunctions . p4
    (9) p4 -> . function p4
    (10) p4 -> . p5
    (167) function -> . FUNCTION pfunc
    (11) p5 -> . cuadrupro2 bloque delMem
    (13) cuadrupro2 -> . empty
    (192) empty -> .

    FUNCTION        shift and go to state 27
    LKEY            reduce using rule 192 (empty -> .)

    function                       shift and go to state 26
    p5                             shift and go to state 29
    p4                             shift and go to state 43
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 30

state 34

    (15) bloque -> iniEnv LKEY . b3 b4 b5
    (17) b3 -> . declaracion b3
    (18) b3 -> . empty
    (47) declaracion -> . tipo ID savevar decla1
    (192) empty -> .
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    ID              reduce using rule 192 (empty -> .)
    PRINT           reduce using rule 192 (empty -> .)
    WHILE           reduce using rule 192 (empty -> .)
    DO              reduce using rule 192 (empty -> .)
    FOR             reduce using rule 192 (empty -> .)
    READ            reduce using rule 192 (empty -> .)
    READINT         reduce using rule 192 (empty -> .)
    COMENTARIO      reduce using rule 192 (empty -> .)
    CUADRADO        reduce using rule 192 (empty -> .)
    TRIANGULO       reduce using rule 192 (empty -> .)
    CASA            reduce using rule 192 (empty -> .)
    RECTANGULO      reduce using rule 192 (empty -> .)
    CUBO            reduce using rule 192 (empty -> .)
    TRAPECIO        reduce using rule 192 (empty -> .)
    ESTRELLA        reduce using rule 192 (empty -> .)
    MUEVE           reduce using rule 192 (empty -> .)
    LEVANTA         reduce using rule 192 (empty -> .)
    APOYA           reduce using rule 192 (empty -> .)
    DIMENSION       reduce using rule 192 (empty -> .)
    RETURN          reduce using rule 192 (empty -> .)
    IF              reduce using rule 192 (empty -> .)
    RKEY            reduce using rule 192 (empty -> .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 15
    STRING          shift and go to state 12
    BOOL            shift and go to state 19

    tipo                           shift and go to state 10
    declaracion                    shift and go to state 46
    b3                             shift and go to state 45
    empty                          shift and go to state 44

state 35

    (11) p5 -> cuadrupro2 bloque delMem .

    $end            reduce using rule 11 (p5 -> cuadrupro2 bloque delMem .)


state 36

    (14) delMem -> empty .

    $end            reduce using rule 14 (delMem -> empty .)


state 37

    (48) savevar -> empty .

    LBRACKET        reduce using rule 48 (savevar -> empty .)
    PUNTOCOMA       reduce using rule 48 (savevar -> empty .)


state 38

    (47) declaracion -> tipo ID savevar . decla1
    (49) decla1 -> . saveMemNormal declafinal
    (50) decla1 -> . LBRACKET decDimensionada exp saveLimSup decla2
    (51) saveMemNormal -> . empty
    (192) empty -> .

    LBRACKET        shift and go to state 47
    PUNTOCOMA       reduce using rule 192 (empty -> .)

    decla1                         shift and go to state 48
    saveMemNormal                  shift and go to state 49
    empty                          shift and go to state 50

state 39

    (9) p4 -> function p4 .

    $end            reduce using rule 9 (p4 -> function p4 .)


state 40

    (168) pfunc -> tipo . ID buildFunc LPARENT funct11

    ID              shift and go to state 51


state 41

    (167) function -> FUNCTION pfunc .

    FUNCTION        reduce using rule 167 (function -> FUNCTION pfunc .)
    LKEY            reduce using rule 167 (function -> FUNCTION pfunc .)


state 42

    (169) pfunc -> VOID . ID buildFunc LPARENT funct11

    ID              shift and go to state 52


state 43

    (7) p3 -> initFunctions p4 .

    $end            reduce using rule 7 (p3 -> initFunctions p4 .)


state 44

    (18) b3 -> empty .

    ID              reduce using rule 18 (b3 -> empty .)
    PRINT           reduce using rule 18 (b3 -> empty .)
    WHILE           reduce using rule 18 (b3 -> empty .)
    DO              reduce using rule 18 (b3 -> empty .)
    FOR             reduce using rule 18 (b3 -> empty .)
    READ            reduce using rule 18 (b3 -> empty .)
    READINT         reduce using rule 18 (b3 -> empty .)
    COMENTARIO      reduce using rule 18 (b3 -> empty .)
    CUADRADO        reduce using rule 18 (b3 -> empty .)
    TRIANGULO       reduce using rule 18 (b3 -> empty .)
    CASA            reduce using rule 18 (b3 -> empty .)
    RECTANGULO      reduce using rule 18 (b3 -> empty .)
    CUBO            reduce using rule 18 (b3 -> empty .)
    TRAPECIO        reduce using rule 18 (b3 -> empty .)
    ESTRELLA        reduce using rule 18 (b3 -> empty .)
    MUEVE           reduce using rule 18 (b3 -> empty .)
    LEVANTA         reduce using rule 18 (b3 -> empty .)
    APOYA           reduce using rule 18 (b3 -> empty .)
    DIMENSION       reduce using rule 18 (b3 -> empty .)
    RETURN          reduce using rule 18 (b3 -> empty .)
    IF              reduce using rule 18 (b3 -> empty .)
    RKEY            reduce using rule 18 (b3 -> empty .)


state 45

    (15) bloque -> iniEnv LKEY b3 . b4 b5
    (19) b4 -> . estatuto b4
    (20) b4 -> . empty
    (97) estatuto -> . asignacion
    (98) estatuto -> . print
    (99) estatuto -> . ciclowhile
    (100) estatuto -> . ciclodowhile
    (101) estatuto -> . ciclofor
    (102) estatuto -> . read
    (103) estatuto -> . readint
    (104) estatuto -> . comentario
    (105) estatuto -> . cuadrado
    (106) estatuto -> . triangulo
    (107) estatuto -> . casa
    (108) estatuto -> . rectangulo
    (109) estatuto -> . cubo
    (110) estatuto -> . trapecio
    (111) estatuto -> . estrella
    (112) estatuto -> . mueve
    (113) estatuto -> . levanta
    (114) estatuto -> . apoya
    (115) estatuto -> . dimension
    (116) estatuto -> . llamafuncion
    (117) estatuto -> . return
    (118) estatuto -> . if
    (192) empty -> .
    (64) asignacion -> . ID meteid asig2
    (76) print -> . PRINT LPARENT pr2
    (131) ciclowhile -> . WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile
    (135) ciclodowhile -> . DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA
    (140) ciclofor -> . FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor
    (138) read -> . READ LPARENT RPARENT PUNTOCOMA
    (139) readint -> . READINT LPARENT RPARENT PUNTOCOMA
    (119) comentario -> . COMENTARIO
    (152) cuadrado -> . CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA
    (154) triangulo -> . TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA
    (157) casa -> . CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
    (156) rectangulo -> . RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (159) cubo -> . CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA
    (165) trapecio -> . TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (158) estrella -> . ESTRELLA LPARENT exp RPARENT PUNTOCOMA
    (161) mueve -> . MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA
    (163) levanta -> . LEVANTA LPARENT RPARENT PUNTOCOMA
    (164) apoya -> . APOYA LPARENT RPARENT PUNTOCOMA
    (166) dimension -> . DIMENSION LPARENT exp RPARENT PUNTOCOMA
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11
    (150) return -> . RETURN llegoRet expresion PUNTOCOMA
    (144) if -> . IF LPARENT expresion tagif RPARENT bloque if2

    RKEY            reduce using rule 192 (empty -> .)
    ID              shift and go to state 88
    PRINT           shift and go to state 60
    WHILE           shift and go to state 57
    DO              shift and go to state 53
    FOR             shift and go to state 80
    READ            shift and go to state 54
    READINT         shift and go to state 95
    COMENTARIO      shift and go to state 78
    CUADRADO        shift and go to state 96
    TRIANGULO       shift and go to state 77
    CASA            shift and go to state 66
    RECTANGULO      shift and go to state 86
    CUBO            shift and go to state 74
    TRAPECIO        shift and go to state 59
    ESTRELLA        shift and go to state 91
    MUEVE           shift and go to state 55
    LEVANTA         shift and go to state 81
    APOYA           shift and go to state 97
    DIMENSION       shift and go to state 89
    RETURN          shift and go to state 92
    IF              shift and go to state 90

    b4                             shift and go to state 56
    apoya                          shift and go to state 58
    trapecio                       shift and go to state 61
    comentario                     shift and go to state 62
    levanta                        shift and go to state 63
    if                             shift and go to state 64
    triangulo                      shift and go to state 65
    readint                        shift and go to state 67
    estatuto                       shift and go to state 68
    mueve                          shift and go to state 69
    ciclowhile                     shift and go to state 70
    llamafuncion                   shift and go to state 71
    cuadrado                       shift and go to state 72
    rectangulo                     shift and go to state 73
    print                          shift and go to state 75
    empty                          shift and go to state 76
    return                         shift and go to state 79
    read                           shift and go to state 82
    cubo                           shift and go to state 83
    ciclofor                       shift and go to state 84
    estrella                       shift and go to state 85
    ciclodowhile                   shift and go to state 87
    casa                           shift and go to state 93
    asignacion                     shift and go to state 94
    dimension                      shift and go to state 98

state 46

    (17) b3 -> declaracion . b3
    (17) b3 -> . declaracion b3
    (18) b3 -> . empty
    (47) declaracion -> . tipo ID savevar decla1
    (192) empty -> .
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    ID              reduce using rule 192 (empty -> .)
    PRINT           reduce using rule 192 (empty -> .)
    WHILE           reduce using rule 192 (empty -> .)
    DO              reduce using rule 192 (empty -> .)
    FOR             reduce using rule 192 (empty -> .)
    READ            reduce using rule 192 (empty -> .)
    READINT         reduce using rule 192 (empty -> .)
    COMENTARIO      reduce using rule 192 (empty -> .)
    CUADRADO        reduce using rule 192 (empty -> .)
    TRIANGULO       reduce using rule 192 (empty -> .)
    CASA            reduce using rule 192 (empty -> .)
    RECTANGULO      reduce using rule 192 (empty -> .)
    CUBO            reduce using rule 192 (empty -> .)
    TRAPECIO        reduce using rule 192 (empty -> .)
    ESTRELLA        reduce using rule 192 (empty -> .)
    MUEVE           reduce using rule 192 (empty -> .)
    LEVANTA         reduce using rule 192 (empty -> .)
    APOYA           reduce using rule 192 (empty -> .)
    DIMENSION       reduce using rule 192 (empty -> .)
    RETURN          reduce using rule 192 (empty -> .)
    IF              reduce using rule 192 (empty -> .)
    RKEY            reduce using rule 192 (empty -> .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 15
    STRING          shift and go to state 12
    BOOL            shift and go to state 19

    declaracion                    shift and go to state 46
    tipo                           shift and go to state 10
    b3                             shift and go to state 99
    empty                          shift and go to state 44

state 47

    (50) decla1 -> LBRACKET . decDimensionada exp saveLimSup decla2
    (52) decDimensionada -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    empty                          shift and go to state 100
    decDimensionada                shift and go to state 101

state 48

    (47) declaracion -> tipo ID savevar decla1 .

    INT             reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    FLOAT           reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    CHAR            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    STRING          reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    BOOL            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    ID              reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    PRINT           reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    WHILE           reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    DO              reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    FOR             reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    READ            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    READINT         reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    COMENTARIO      reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    CUADRADO        reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    TRIANGULO       reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    CASA            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    RECTANGULO      reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    CUBO            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    TRAPECIO        reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    ESTRELLA        reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    MUEVE           reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    LEVANTA         reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    APOYA           reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    DIMENSION       reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    RETURN          reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    IF              reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    RKEY            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    FUNCTION        reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    LKEY            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)


state 49

    (49) decla1 -> saveMemNormal . declafinal
    (58) declafinal -> . PUNTOCOMA

    PUNTOCOMA       shift and go to state 103

    declafinal                     shift and go to state 102

state 50

    (51) saveMemNormal -> empty .

    PUNTOCOMA       reduce using rule 51 (saveMemNormal -> empty .)


state 51

    (168) pfunc -> tipo ID . buildFunc LPARENT funct11
    (170) buildFunc -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)

    buildFunc                      shift and go to state 104
    empty                          shift and go to state 105

state 52

    (169) pfunc -> VOID ID . buildFunc LPARENT funct11
    (170) buildFunc -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)

    buildFunc                      shift and go to state 106
    empty                          shift and go to state 105

state 53

    (135) ciclodowhile -> DO . taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA
    (136) taginiciado -> . empty
    (192) empty -> .

    LKEY            reduce using rule 192 (empty -> .)

    empty                          shift and go to state 107
    taginiciado                    shift and go to state 108

state 54

    (138) read -> READ . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 109


state 55

    (161) mueve -> MUEVE . LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA

    LPARENT         shift and go to state 110


state 56

    (15) bloque -> iniEnv LKEY b3 b4 . b5
    (21) b5 -> . recEnv RKEY
    (22) recEnv -> . empty
    (192) empty -> .

    RKEY            reduce using rule 192 (empty -> .)

    b5                             shift and go to state 111
    recEnv                         shift and go to state 112
    empty                          shift and go to state 113

state 57

    (131) ciclowhile -> WHILE . taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile
    (132) taginiciawhile -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)

    taginiciawhile                 shift and go to state 114
    empty                          shift and go to state 115

state 58

    (114) estatuto -> apoya .

    ID              reduce using rule 114 (estatuto -> apoya .)
    PRINT           reduce using rule 114 (estatuto -> apoya .)
    WHILE           reduce using rule 114 (estatuto -> apoya .)
    DO              reduce using rule 114 (estatuto -> apoya .)
    FOR             reduce using rule 114 (estatuto -> apoya .)
    READ            reduce using rule 114 (estatuto -> apoya .)
    READINT         reduce using rule 114 (estatuto -> apoya .)
    COMENTARIO      reduce using rule 114 (estatuto -> apoya .)
    CUADRADO        reduce using rule 114 (estatuto -> apoya .)
    TRIANGULO       reduce using rule 114 (estatuto -> apoya .)
    CASA            reduce using rule 114 (estatuto -> apoya .)
    RECTANGULO      reduce using rule 114 (estatuto -> apoya .)
    CUBO            reduce using rule 114 (estatuto -> apoya .)
    TRAPECIO        reduce using rule 114 (estatuto -> apoya .)
    ESTRELLA        reduce using rule 114 (estatuto -> apoya .)
    MUEVE           reduce using rule 114 (estatuto -> apoya .)
    LEVANTA         reduce using rule 114 (estatuto -> apoya .)
    APOYA           reduce using rule 114 (estatuto -> apoya .)
    DIMENSION       reduce using rule 114 (estatuto -> apoya .)
    RETURN          reduce using rule 114 (estatuto -> apoya .)
    IF              reduce using rule 114 (estatuto -> apoya .)
    RKEY            reduce using rule 114 (estatuto -> apoya .)


state 59

    (165) trapecio -> TRAPECIO . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 116


state 60

    (76) print -> PRINT . LPARENT pr2

    LPARENT         shift and go to state 117


state 61

    (110) estatuto -> trapecio .

    ID              reduce using rule 110 (estatuto -> trapecio .)
    PRINT           reduce using rule 110 (estatuto -> trapecio .)
    WHILE           reduce using rule 110 (estatuto -> trapecio .)
    DO              reduce using rule 110 (estatuto -> trapecio .)
    FOR             reduce using rule 110 (estatuto -> trapecio .)
    READ            reduce using rule 110 (estatuto -> trapecio .)
    READINT         reduce using rule 110 (estatuto -> trapecio .)
    COMENTARIO      reduce using rule 110 (estatuto -> trapecio .)
    CUADRADO        reduce using rule 110 (estatuto -> trapecio .)
    TRIANGULO       reduce using rule 110 (estatuto -> trapecio .)
    CASA            reduce using rule 110 (estatuto -> trapecio .)
    RECTANGULO      reduce using rule 110 (estatuto -> trapecio .)
    CUBO            reduce using rule 110 (estatuto -> trapecio .)
    TRAPECIO        reduce using rule 110 (estatuto -> trapecio .)
    ESTRELLA        reduce using rule 110 (estatuto -> trapecio .)
    MUEVE           reduce using rule 110 (estatuto -> trapecio .)
    LEVANTA         reduce using rule 110 (estatuto -> trapecio .)
    APOYA           reduce using rule 110 (estatuto -> trapecio .)
    DIMENSION       reduce using rule 110 (estatuto -> trapecio .)
    RETURN          reduce using rule 110 (estatuto -> trapecio .)
    IF              reduce using rule 110 (estatuto -> trapecio .)
    RKEY            reduce using rule 110 (estatuto -> trapecio .)


state 62

    (104) estatuto -> comentario .

    ID              reduce using rule 104 (estatuto -> comentario .)
    PRINT           reduce using rule 104 (estatuto -> comentario .)
    WHILE           reduce using rule 104 (estatuto -> comentario .)
    DO              reduce using rule 104 (estatuto -> comentario .)
    FOR             reduce using rule 104 (estatuto -> comentario .)
    READ            reduce using rule 104 (estatuto -> comentario .)
    READINT         reduce using rule 104 (estatuto -> comentario .)
    COMENTARIO      reduce using rule 104 (estatuto -> comentario .)
    CUADRADO        reduce using rule 104 (estatuto -> comentario .)
    TRIANGULO       reduce using rule 104 (estatuto -> comentario .)
    CASA            reduce using rule 104 (estatuto -> comentario .)
    RECTANGULO      reduce using rule 104 (estatuto -> comentario .)
    CUBO            reduce using rule 104 (estatuto -> comentario .)
    TRAPECIO        reduce using rule 104 (estatuto -> comentario .)
    ESTRELLA        reduce using rule 104 (estatuto -> comentario .)
    MUEVE           reduce using rule 104 (estatuto -> comentario .)
    LEVANTA         reduce using rule 104 (estatuto -> comentario .)
    APOYA           reduce using rule 104 (estatuto -> comentario .)
    DIMENSION       reduce using rule 104 (estatuto -> comentario .)
    RETURN          reduce using rule 104 (estatuto -> comentario .)
    IF              reduce using rule 104 (estatuto -> comentario .)
    RKEY            reduce using rule 104 (estatuto -> comentario .)


state 63

    (113) estatuto -> levanta .

    ID              reduce using rule 113 (estatuto -> levanta .)
    PRINT           reduce using rule 113 (estatuto -> levanta .)
    WHILE           reduce using rule 113 (estatuto -> levanta .)
    DO              reduce using rule 113 (estatuto -> levanta .)
    FOR             reduce using rule 113 (estatuto -> levanta .)
    READ            reduce using rule 113 (estatuto -> levanta .)
    READINT         reduce using rule 113 (estatuto -> levanta .)
    COMENTARIO      reduce using rule 113 (estatuto -> levanta .)
    CUADRADO        reduce using rule 113 (estatuto -> levanta .)
    TRIANGULO       reduce using rule 113 (estatuto -> levanta .)
    CASA            reduce using rule 113 (estatuto -> levanta .)
    RECTANGULO      reduce using rule 113 (estatuto -> levanta .)
    CUBO            reduce using rule 113 (estatuto -> levanta .)
    TRAPECIO        reduce using rule 113 (estatuto -> levanta .)
    ESTRELLA        reduce using rule 113 (estatuto -> levanta .)
    MUEVE           reduce using rule 113 (estatuto -> levanta .)
    LEVANTA         reduce using rule 113 (estatuto -> levanta .)
    APOYA           reduce using rule 113 (estatuto -> levanta .)
    DIMENSION       reduce using rule 113 (estatuto -> levanta .)
    RETURN          reduce using rule 113 (estatuto -> levanta .)
    IF              reduce using rule 113 (estatuto -> levanta .)
    RKEY            reduce using rule 113 (estatuto -> levanta .)


state 64

    (118) estatuto -> if .

    ID              reduce using rule 118 (estatuto -> if .)
    PRINT           reduce using rule 118 (estatuto -> if .)
    WHILE           reduce using rule 118 (estatuto -> if .)
    DO              reduce using rule 118 (estatuto -> if .)
    FOR             reduce using rule 118 (estatuto -> if .)
    READ            reduce using rule 118 (estatuto -> if .)
    READINT         reduce using rule 118 (estatuto -> if .)
    COMENTARIO      reduce using rule 118 (estatuto -> if .)
    CUADRADO        reduce using rule 118 (estatuto -> if .)
    TRIANGULO       reduce using rule 118 (estatuto -> if .)
    CASA            reduce using rule 118 (estatuto -> if .)
    RECTANGULO      reduce using rule 118 (estatuto -> if .)
    CUBO            reduce using rule 118 (estatuto -> if .)
    TRAPECIO        reduce using rule 118 (estatuto -> if .)
    ESTRELLA        reduce using rule 118 (estatuto -> if .)
    MUEVE           reduce using rule 118 (estatuto -> if .)
    LEVANTA         reduce using rule 118 (estatuto -> if .)
    APOYA           reduce using rule 118 (estatuto -> if .)
    DIMENSION       reduce using rule 118 (estatuto -> if .)
    RETURN          reduce using rule 118 (estatuto -> if .)
    IF              reduce using rule 118 (estatuto -> if .)
    RKEY            reduce using rule 118 (estatuto -> if .)


state 65

    (106) estatuto -> triangulo .

    ID              reduce using rule 106 (estatuto -> triangulo .)
    PRINT           reduce using rule 106 (estatuto -> triangulo .)
    WHILE           reduce using rule 106 (estatuto -> triangulo .)
    DO              reduce using rule 106 (estatuto -> triangulo .)
    FOR             reduce using rule 106 (estatuto -> triangulo .)
    READ            reduce using rule 106 (estatuto -> triangulo .)
    READINT         reduce using rule 106 (estatuto -> triangulo .)
    COMENTARIO      reduce using rule 106 (estatuto -> triangulo .)
    CUADRADO        reduce using rule 106 (estatuto -> triangulo .)
    TRIANGULO       reduce using rule 106 (estatuto -> triangulo .)
    CASA            reduce using rule 106 (estatuto -> triangulo .)
    RECTANGULO      reduce using rule 106 (estatuto -> triangulo .)
    CUBO            reduce using rule 106 (estatuto -> triangulo .)
    TRAPECIO        reduce using rule 106 (estatuto -> triangulo .)
    ESTRELLA        reduce using rule 106 (estatuto -> triangulo .)
    MUEVE           reduce using rule 106 (estatuto -> triangulo .)
    LEVANTA         reduce using rule 106 (estatuto -> triangulo .)
    APOYA           reduce using rule 106 (estatuto -> triangulo .)
    DIMENSION       reduce using rule 106 (estatuto -> triangulo .)
    RETURN          reduce using rule 106 (estatuto -> triangulo .)
    IF              reduce using rule 106 (estatuto -> triangulo .)
    RKEY            reduce using rule 106 (estatuto -> triangulo .)


state 66

    (157) casa -> CASA . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 118


state 67

    (103) estatuto -> readint .

    ID              reduce using rule 103 (estatuto -> readint .)
    PRINT           reduce using rule 103 (estatuto -> readint .)
    WHILE           reduce using rule 103 (estatuto -> readint .)
    DO              reduce using rule 103 (estatuto -> readint .)
    FOR             reduce using rule 103 (estatuto -> readint .)
    READ            reduce using rule 103 (estatuto -> readint .)
    READINT         reduce using rule 103 (estatuto -> readint .)
    COMENTARIO      reduce using rule 103 (estatuto -> readint .)
    CUADRADO        reduce using rule 103 (estatuto -> readint .)
    TRIANGULO       reduce using rule 103 (estatuto -> readint .)
    CASA            reduce using rule 103 (estatuto -> readint .)
    RECTANGULO      reduce using rule 103 (estatuto -> readint .)
    CUBO            reduce using rule 103 (estatuto -> readint .)
    TRAPECIO        reduce using rule 103 (estatuto -> readint .)
    ESTRELLA        reduce using rule 103 (estatuto -> readint .)
    MUEVE           reduce using rule 103 (estatuto -> readint .)
    LEVANTA         reduce using rule 103 (estatuto -> readint .)
    APOYA           reduce using rule 103 (estatuto -> readint .)
    DIMENSION       reduce using rule 103 (estatuto -> readint .)
    RETURN          reduce using rule 103 (estatuto -> readint .)
    IF              reduce using rule 103 (estatuto -> readint .)
    RKEY            reduce using rule 103 (estatuto -> readint .)


state 68

    (19) b4 -> estatuto . b4
    (19) b4 -> . estatuto b4
    (20) b4 -> . empty
    (97) estatuto -> . asignacion
    (98) estatuto -> . print
    (99) estatuto -> . ciclowhile
    (100) estatuto -> . ciclodowhile
    (101) estatuto -> . ciclofor
    (102) estatuto -> . read
    (103) estatuto -> . readint
    (104) estatuto -> . comentario
    (105) estatuto -> . cuadrado
    (106) estatuto -> . triangulo
    (107) estatuto -> . casa
    (108) estatuto -> . rectangulo
    (109) estatuto -> . cubo
    (110) estatuto -> . trapecio
    (111) estatuto -> . estrella
    (112) estatuto -> . mueve
    (113) estatuto -> . levanta
    (114) estatuto -> . apoya
    (115) estatuto -> . dimension
    (116) estatuto -> . llamafuncion
    (117) estatuto -> . return
    (118) estatuto -> . if
    (192) empty -> .
    (64) asignacion -> . ID meteid asig2
    (76) print -> . PRINT LPARENT pr2
    (131) ciclowhile -> . WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile
    (135) ciclodowhile -> . DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA
    (140) ciclofor -> . FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor
    (138) read -> . READ LPARENT RPARENT PUNTOCOMA
    (139) readint -> . READINT LPARENT RPARENT PUNTOCOMA
    (119) comentario -> . COMENTARIO
    (152) cuadrado -> . CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA
    (154) triangulo -> . TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA
    (157) casa -> . CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
    (156) rectangulo -> . RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (159) cubo -> . CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA
    (165) trapecio -> . TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (158) estrella -> . ESTRELLA LPARENT exp RPARENT PUNTOCOMA
    (161) mueve -> . MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA
    (163) levanta -> . LEVANTA LPARENT RPARENT PUNTOCOMA
    (164) apoya -> . APOYA LPARENT RPARENT PUNTOCOMA
    (166) dimension -> . DIMENSION LPARENT exp RPARENT PUNTOCOMA
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11
    (150) return -> . RETURN llegoRet expresion PUNTOCOMA
    (144) if -> . IF LPARENT expresion tagif RPARENT bloque if2

    RKEY            reduce using rule 192 (empty -> .)
    ID              shift and go to state 88
    PRINT           shift and go to state 60
    WHILE           shift and go to state 57
    DO              shift and go to state 53
    FOR             shift and go to state 80
    READ            shift and go to state 54
    READINT         shift and go to state 95
    COMENTARIO      shift and go to state 78
    CUADRADO        shift and go to state 96
    TRIANGULO       shift and go to state 77
    CASA            shift and go to state 66
    RECTANGULO      shift and go to state 86
    CUBO            shift and go to state 74
    TRAPECIO        shift and go to state 59
    ESTRELLA        shift and go to state 91
    MUEVE           shift and go to state 55
    LEVANTA         shift and go to state 81
    APOYA           shift and go to state 97
    DIMENSION       shift and go to state 89
    RETURN          shift and go to state 92
    IF              shift and go to state 90

    b4                             shift and go to state 119
    apoya                          shift and go to state 58
    trapecio                       shift and go to state 61
    comentario                     shift and go to state 62
    levanta                        shift and go to state 63
    if                             shift and go to state 64
    triangulo                      shift and go to state 65
    readint                        shift and go to state 67
    estatuto                       shift and go to state 68
    mueve                          shift and go to state 69
    ciclowhile                     shift and go to state 70
    llamafuncion                   shift and go to state 71
    cuadrado                       shift and go to state 72
    rectangulo                     shift and go to state 73
    print                          shift and go to state 75
    empty                          shift and go to state 76
    return                         shift and go to state 79
    read                           shift and go to state 82
    cubo                           shift and go to state 83
    ciclofor                       shift and go to state 84
    estrella                       shift and go to state 85
    ciclodowhile                   shift and go to state 87
    casa                           shift and go to state 93
    asignacion                     shift and go to state 94
    dimension                      shift and go to state 98

state 69

    (112) estatuto -> mueve .

    ID              reduce using rule 112 (estatuto -> mueve .)
    PRINT           reduce using rule 112 (estatuto -> mueve .)
    WHILE           reduce using rule 112 (estatuto -> mueve .)
    DO              reduce using rule 112 (estatuto -> mueve .)
    FOR             reduce using rule 112 (estatuto -> mueve .)
    READ            reduce using rule 112 (estatuto -> mueve .)
    READINT         reduce using rule 112 (estatuto -> mueve .)
    COMENTARIO      reduce using rule 112 (estatuto -> mueve .)
    CUADRADO        reduce using rule 112 (estatuto -> mueve .)
    TRIANGULO       reduce using rule 112 (estatuto -> mueve .)
    CASA            reduce using rule 112 (estatuto -> mueve .)
    RECTANGULO      reduce using rule 112 (estatuto -> mueve .)
    CUBO            reduce using rule 112 (estatuto -> mueve .)
    TRAPECIO        reduce using rule 112 (estatuto -> mueve .)
    ESTRELLA        reduce using rule 112 (estatuto -> mueve .)
    MUEVE           reduce using rule 112 (estatuto -> mueve .)
    LEVANTA         reduce using rule 112 (estatuto -> mueve .)
    APOYA           reduce using rule 112 (estatuto -> mueve .)
    DIMENSION       reduce using rule 112 (estatuto -> mueve .)
    RETURN          reduce using rule 112 (estatuto -> mueve .)
    IF              reduce using rule 112 (estatuto -> mueve .)
    RKEY            reduce using rule 112 (estatuto -> mueve .)


state 70

    (99) estatuto -> ciclowhile .

    ID              reduce using rule 99 (estatuto -> ciclowhile .)
    PRINT           reduce using rule 99 (estatuto -> ciclowhile .)
    WHILE           reduce using rule 99 (estatuto -> ciclowhile .)
    DO              reduce using rule 99 (estatuto -> ciclowhile .)
    FOR             reduce using rule 99 (estatuto -> ciclowhile .)
    READ            reduce using rule 99 (estatuto -> ciclowhile .)
    READINT         reduce using rule 99 (estatuto -> ciclowhile .)
    COMENTARIO      reduce using rule 99 (estatuto -> ciclowhile .)
    CUADRADO        reduce using rule 99 (estatuto -> ciclowhile .)
    TRIANGULO       reduce using rule 99 (estatuto -> ciclowhile .)
    CASA            reduce using rule 99 (estatuto -> ciclowhile .)
    RECTANGULO      reduce using rule 99 (estatuto -> ciclowhile .)
    CUBO            reduce using rule 99 (estatuto -> ciclowhile .)
    TRAPECIO        reduce using rule 99 (estatuto -> ciclowhile .)
    ESTRELLA        reduce using rule 99 (estatuto -> ciclowhile .)
    MUEVE           reduce using rule 99 (estatuto -> ciclowhile .)
    LEVANTA         reduce using rule 99 (estatuto -> ciclowhile .)
    APOYA           reduce using rule 99 (estatuto -> ciclowhile .)
    DIMENSION       reduce using rule 99 (estatuto -> ciclowhile .)
    RETURN          reduce using rule 99 (estatuto -> ciclowhile .)
    IF              reduce using rule 99 (estatuto -> ciclowhile .)
    RKEY            reduce using rule 99 (estatuto -> ciclowhile .)


state 71

    (116) estatuto -> llamafuncion .

    ID              reduce using rule 116 (estatuto -> llamafuncion .)
    PRINT           reduce using rule 116 (estatuto -> llamafuncion .)
    WHILE           reduce using rule 116 (estatuto -> llamafuncion .)
    DO              reduce using rule 116 (estatuto -> llamafuncion .)
    FOR             reduce using rule 116 (estatuto -> llamafuncion .)
    READ            reduce using rule 116 (estatuto -> llamafuncion .)
    READINT         reduce using rule 116 (estatuto -> llamafuncion .)
    COMENTARIO      reduce using rule 116 (estatuto -> llamafuncion .)
    CUADRADO        reduce using rule 116 (estatuto -> llamafuncion .)
    TRIANGULO       reduce using rule 116 (estatuto -> llamafuncion .)
    CASA            reduce using rule 116 (estatuto -> llamafuncion .)
    RECTANGULO      reduce using rule 116 (estatuto -> llamafuncion .)
    CUBO            reduce using rule 116 (estatuto -> llamafuncion .)
    TRAPECIO        reduce using rule 116 (estatuto -> llamafuncion .)
    ESTRELLA        reduce using rule 116 (estatuto -> llamafuncion .)
    MUEVE           reduce using rule 116 (estatuto -> llamafuncion .)
    LEVANTA         reduce using rule 116 (estatuto -> llamafuncion .)
    APOYA           reduce using rule 116 (estatuto -> llamafuncion .)
    DIMENSION       reduce using rule 116 (estatuto -> llamafuncion .)
    RETURN          reduce using rule 116 (estatuto -> llamafuncion .)
    IF              reduce using rule 116 (estatuto -> llamafuncion .)
    RKEY            reduce using rule 116 (estatuto -> llamafuncion .)


state 72

    (105) estatuto -> cuadrado .

    ID              reduce using rule 105 (estatuto -> cuadrado .)
    PRINT           reduce using rule 105 (estatuto -> cuadrado .)
    WHILE           reduce using rule 105 (estatuto -> cuadrado .)
    DO              reduce using rule 105 (estatuto -> cuadrado .)
    FOR             reduce using rule 105 (estatuto -> cuadrado .)
    READ            reduce using rule 105 (estatuto -> cuadrado .)
    READINT         reduce using rule 105 (estatuto -> cuadrado .)
    COMENTARIO      reduce using rule 105 (estatuto -> cuadrado .)
    CUADRADO        reduce using rule 105 (estatuto -> cuadrado .)
    TRIANGULO       reduce using rule 105 (estatuto -> cuadrado .)
    CASA            reduce using rule 105 (estatuto -> cuadrado .)
    RECTANGULO      reduce using rule 105 (estatuto -> cuadrado .)
    CUBO            reduce using rule 105 (estatuto -> cuadrado .)
    TRAPECIO        reduce using rule 105 (estatuto -> cuadrado .)
    ESTRELLA        reduce using rule 105 (estatuto -> cuadrado .)
    MUEVE           reduce using rule 105 (estatuto -> cuadrado .)
    LEVANTA         reduce using rule 105 (estatuto -> cuadrado .)
    APOYA           reduce using rule 105 (estatuto -> cuadrado .)
    DIMENSION       reduce using rule 105 (estatuto -> cuadrado .)
    RETURN          reduce using rule 105 (estatuto -> cuadrado .)
    IF              reduce using rule 105 (estatuto -> cuadrado .)
    RKEY            reduce using rule 105 (estatuto -> cuadrado .)


state 73

    (108) estatuto -> rectangulo .

    ID              reduce using rule 108 (estatuto -> rectangulo .)
    PRINT           reduce using rule 108 (estatuto -> rectangulo .)
    WHILE           reduce using rule 108 (estatuto -> rectangulo .)
    DO              reduce using rule 108 (estatuto -> rectangulo .)
    FOR             reduce using rule 108 (estatuto -> rectangulo .)
    READ            reduce using rule 108 (estatuto -> rectangulo .)
    READINT         reduce using rule 108 (estatuto -> rectangulo .)
    COMENTARIO      reduce using rule 108 (estatuto -> rectangulo .)
    CUADRADO        reduce using rule 108 (estatuto -> rectangulo .)
    TRIANGULO       reduce using rule 108 (estatuto -> rectangulo .)
    CASA            reduce using rule 108 (estatuto -> rectangulo .)
    RECTANGULO      reduce using rule 108 (estatuto -> rectangulo .)
    CUBO            reduce using rule 108 (estatuto -> rectangulo .)
    TRAPECIO        reduce using rule 108 (estatuto -> rectangulo .)
    ESTRELLA        reduce using rule 108 (estatuto -> rectangulo .)
    MUEVE           reduce using rule 108 (estatuto -> rectangulo .)
    LEVANTA         reduce using rule 108 (estatuto -> rectangulo .)
    APOYA           reduce using rule 108 (estatuto -> rectangulo .)
    DIMENSION       reduce using rule 108 (estatuto -> rectangulo .)
    RETURN          reduce using rule 108 (estatuto -> rectangulo .)
    IF              reduce using rule 108 (estatuto -> rectangulo .)
    RKEY            reduce using rule 108 (estatuto -> rectangulo .)


state 74

    (159) cubo -> CUBO . LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA

    LPARENT         shift and go to state 120


state 75

    (98) estatuto -> print .

    ID              reduce using rule 98 (estatuto -> print .)
    PRINT           reduce using rule 98 (estatuto -> print .)
    WHILE           reduce using rule 98 (estatuto -> print .)
    DO              reduce using rule 98 (estatuto -> print .)
    FOR             reduce using rule 98 (estatuto -> print .)
    READ            reduce using rule 98 (estatuto -> print .)
    READINT         reduce using rule 98 (estatuto -> print .)
    COMENTARIO      reduce using rule 98 (estatuto -> print .)
    CUADRADO        reduce using rule 98 (estatuto -> print .)
    TRIANGULO       reduce using rule 98 (estatuto -> print .)
    CASA            reduce using rule 98 (estatuto -> print .)
    RECTANGULO      reduce using rule 98 (estatuto -> print .)
    CUBO            reduce using rule 98 (estatuto -> print .)
    TRAPECIO        reduce using rule 98 (estatuto -> print .)
    ESTRELLA        reduce using rule 98 (estatuto -> print .)
    MUEVE           reduce using rule 98 (estatuto -> print .)
    LEVANTA         reduce using rule 98 (estatuto -> print .)
    APOYA           reduce using rule 98 (estatuto -> print .)
    DIMENSION       reduce using rule 98 (estatuto -> print .)
    RETURN          reduce using rule 98 (estatuto -> print .)
    IF              reduce using rule 98 (estatuto -> print .)
    RKEY            reduce using rule 98 (estatuto -> print .)


state 76

    (20) b4 -> empty .

    RKEY            reduce using rule 20 (b4 -> empty .)


state 77

    (154) triangulo -> TRIANGULO . LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA

    LPARENT         shift and go to state 121


state 78

    (119) comentario -> COMENTARIO .

    ID              reduce using rule 119 (comentario -> COMENTARIO .)
    PRINT           reduce using rule 119 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 119 (comentario -> COMENTARIO .)
    DO              reduce using rule 119 (comentario -> COMENTARIO .)
    FOR             reduce using rule 119 (comentario -> COMENTARIO .)
    READ            reduce using rule 119 (comentario -> COMENTARIO .)
    READINT         reduce using rule 119 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 119 (comentario -> COMENTARIO .)
    CUADRADO        reduce using rule 119 (comentario -> COMENTARIO .)
    TRIANGULO       reduce using rule 119 (comentario -> COMENTARIO .)
    CASA            reduce using rule 119 (comentario -> COMENTARIO .)
    RECTANGULO      reduce using rule 119 (comentario -> COMENTARIO .)
    CUBO            reduce using rule 119 (comentario -> COMENTARIO .)
    TRAPECIO        reduce using rule 119 (comentario -> COMENTARIO .)
    ESTRELLA        reduce using rule 119 (comentario -> COMENTARIO .)
    MUEVE           reduce using rule 119 (comentario -> COMENTARIO .)
    LEVANTA         reduce using rule 119 (comentario -> COMENTARIO .)
    APOYA           reduce using rule 119 (comentario -> COMENTARIO .)
    DIMENSION       reduce using rule 119 (comentario -> COMENTARIO .)
    RETURN          reduce using rule 119 (comentario -> COMENTARIO .)
    IF              reduce using rule 119 (comentario -> COMENTARIO .)
    RKEY            reduce using rule 119 (comentario -> COMENTARIO .)


state 79

    (117) estatuto -> return .

    ID              reduce using rule 117 (estatuto -> return .)
    PRINT           reduce using rule 117 (estatuto -> return .)
    WHILE           reduce using rule 117 (estatuto -> return .)
    DO              reduce using rule 117 (estatuto -> return .)
    FOR             reduce using rule 117 (estatuto -> return .)
    READ            reduce using rule 117 (estatuto -> return .)
    READINT         reduce using rule 117 (estatuto -> return .)
    COMENTARIO      reduce using rule 117 (estatuto -> return .)
    CUADRADO        reduce using rule 117 (estatuto -> return .)
    TRIANGULO       reduce using rule 117 (estatuto -> return .)
    CASA            reduce using rule 117 (estatuto -> return .)
    RECTANGULO      reduce using rule 117 (estatuto -> return .)
    CUBO            reduce using rule 117 (estatuto -> return .)
    TRAPECIO        reduce using rule 117 (estatuto -> return .)
    ESTRELLA        reduce using rule 117 (estatuto -> return .)
    MUEVE           reduce using rule 117 (estatuto -> return .)
    LEVANTA         reduce using rule 117 (estatuto -> return .)
    APOYA           reduce using rule 117 (estatuto -> return .)
    DIMENSION       reduce using rule 117 (estatuto -> return .)
    RETURN          reduce using rule 117 (estatuto -> return .)
    IF              reduce using rule 117 (estatuto -> return .)
    RKEY            reduce using rule 117 (estatuto -> return .)


state 80

    (140) ciclofor -> FOR . LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor

    LPARENT         shift and go to state 122


state 81

    (163) levanta -> LEVANTA . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 123


state 82

    (102) estatuto -> read .

    ID              reduce using rule 102 (estatuto -> read .)
    PRINT           reduce using rule 102 (estatuto -> read .)
    WHILE           reduce using rule 102 (estatuto -> read .)
    DO              reduce using rule 102 (estatuto -> read .)
    FOR             reduce using rule 102 (estatuto -> read .)
    READ            reduce using rule 102 (estatuto -> read .)
    READINT         reduce using rule 102 (estatuto -> read .)
    COMENTARIO      reduce using rule 102 (estatuto -> read .)
    CUADRADO        reduce using rule 102 (estatuto -> read .)
    TRIANGULO       reduce using rule 102 (estatuto -> read .)
    CASA            reduce using rule 102 (estatuto -> read .)
    RECTANGULO      reduce using rule 102 (estatuto -> read .)
    CUBO            reduce using rule 102 (estatuto -> read .)
    TRAPECIO        reduce using rule 102 (estatuto -> read .)
    ESTRELLA        reduce using rule 102 (estatuto -> read .)
    MUEVE           reduce using rule 102 (estatuto -> read .)
    LEVANTA         reduce using rule 102 (estatuto -> read .)
    APOYA           reduce using rule 102 (estatuto -> read .)
    DIMENSION       reduce using rule 102 (estatuto -> read .)
    RETURN          reduce using rule 102 (estatuto -> read .)
    IF              reduce using rule 102 (estatuto -> read .)
    RKEY            reduce using rule 102 (estatuto -> read .)


state 83

    (109) estatuto -> cubo .

    ID              reduce using rule 109 (estatuto -> cubo .)
    PRINT           reduce using rule 109 (estatuto -> cubo .)
    WHILE           reduce using rule 109 (estatuto -> cubo .)
    DO              reduce using rule 109 (estatuto -> cubo .)
    FOR             reduce using rule 109 (estatuto -> cubo .)
    READ            reduce using rule 109 (estatuto -> cubo .)
    READINT         reduce using rule 109 (estatuto -> cubo .)
    COMENTARIO      reduce using rule 109 (estatuto -> cubo .)
    CUADRADO        reduce using rule 109 (estatuto -> cubo .)
    TRIANGULO       reduce using rule 109 (estatuto -> cubo .)
    CASA            reduce using rule 109 (estatuto -> cubo .)
    RECTANGULO      reduce using rule 109 (estatuto -> cubo .)
    CUBO            reduce using rule 109 (estatuto -> cubo .)
    TRAPECIO        reduce using rule 109 (estatuto -> cubo .)
    ESTRELLA        reduce using rule 109 (estatuto -> cubo .)
    MUEVE           reduce using rule 109 (estatuto -> cubo .)
    LEVANTA         reduce using rule 109 (estatuto -> cubo .)
    APOYA           reduce using rule 109 (estatuto -> cubo .)
    DIMENSION       reduce using rule 109 (estatuto -> cubo .)
    RETURN          reduce using rule 109 (estatuto -> cubo .)
    IF              reduce using rule 109 (estatuto -> cubo .)
    RKEY            reduce using rule 109 (estatuto -> cubo .)


state 84

    (101) estatuto -> ciclofor .

    ID              reduce using rule 101 (estatuto -> ciclofor .)
    PRINT           reduce using rule 101 (estatuto -> ciclofor .)
    WHILE           reduce using rule 101 (estatuto -> ciclofor .)
    DO              reduce using rule 101 (estatuto -> ciclofor .)
    FOR             reduce using rule 101 (estatuto -> ciclofor .)
    READ            reduce using rule 101 (estatuto -> ciclofor .)
    READINT         reduce using rule 101 (estatuto -> ciclofor .)
    COMENTARIO      reduce using rule 101 (estatuto -> ciclofor .)
    CUADRADO        reduce using rule 101 (estatuto -> ciclofor .)
    TRIANGULO       reduce using rule 101 (estatuto -> ciclofor .)
    CASA            reduce using rule 101 (estatuto -> ciclofor .)
    RECTANGULO      reduce using rule 101 (estatuto -> ciclofor .)
    CUBO            reduce using rule 101 (estatuto -> ciclofor .)
    TRAPECIO        reduce using rule 101 (estatuto -> ciclofor .)
    ESTRELLA        reduce using rule 101 (estatuto -> ciclofor .)
    MUEVE           reduce using rule 101 (estatuto -> ciclofor .)
    LEVANTA         reduce using rule 101 (estatuto -> ciclofor .)
    APOYA           reduce using rule 101 (estatuto -> ciclofor .)
    DIMENSION       reduce using rule 101 (estatuto -> ciclofor .)
    RETURN          reduce using rule 101 (estatuto -> ciclofor .)
    IF              reduce using rule 101 (estatuto -> ciclofor .)
    RKEY            reduce using rule 101 (estatuto -> ciclofor .)


state 85

    (111) estatuto -> estrella .

    ID              reduce using rule 111 (estatuto -> estrella .)
    PRINT           reduce using rule 111 (estatuto -> estrella .)
    WHILE           reduce using rule 111 (estatuto -> estrella .)
    DO              reduce using rule 111 (estatuto -> estrella .)
    FOR             reduce using rule 111 (estatuto -> estrella .)
    READ            reduce using rule 111 (estatuto -> estrella .)
    READINT         reduce using rule 111 (estatuto -> estrella .)
    COMENTARIO      reduce using rule 111 (estatuto -> estrella .)
    CUADRADO        reduce using rule 111 (estatuto -> estrella .)
    TRIANGULO       reduce using rule 111 (estatuto -> estrella .)
    CASA            reduce using rule 111 (estatuto -> estrella .)
    RECTANGULO      reduce using rule 111 (estatuto -> estrella .)
    CUBO            reduce using rule 111 (estatuto -> estrella .)
    TRAPECIO        reduce using rule 111 (estatuto -> estrella .)
    ESTRELLA        reduce using rule 111 (estatuto -> estrella .)
    MUEVE           reduce using rule 111 (estatuto -> estrella .)
    LEVANTA         reduce using rule 111 (estatuto -> estrella .)
    APOYA           reduce using rule 111 (estatuto -> estrella .)
    DIMENSION       reduce using rule 111 (estatuto -> estrella .)
    RETURN          reduce using rule 111 (estatuto -> estrella .)
    IF              reduce using rule 111 (estatuto -> estrella .)
    RKEY            reduce using rule 111 (estatuto -> estrella .)


state 86

    (156) rectangulo -> RECTANGULO . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 124


state 87

    (100) estatuto -> ciclodowhile .

    ID              reduce using rule 100 (estatuto -> ciclodowhile .)
    PRINT           reduce using rule 100 (estatuto -> ciclodowhile .)
    WHILE           reduce using rule 100 (estatuto -> ciclodowhile .)
    DO              reduce using rule 100 (estatuto -> ciclodowhile .)
    FOR             reduce using rule 100 (estatuto -> ciclodowhile .)
    READ            reduce using rule 100 (estatuto -> ciclodowhile .)
    READINT         reduce using rule 100 (estatuto -> ciclodowhile .)
    COMENTARIO      reduce using rule 100 (estatuto -> ciclodowhile .)
    CUADRADO        reduce using rule 100 (estatuto -> ciclodowhile .)
    TRIANGULO       reduce using rule 100 (estatuto -> ciclodowhile .)
    CASA            reduce using rule 100 (estatuto -> ciclodowhile .)
    RECTANGULO      reduce using rule 100 (estatuto -> ciclodowhile .)
    CUBO            reduce using rule 100 (estatuto -> ciclodowhile .)
    TRAPECIO        reduce using rule 100 (estatuto -> ciclodowhile .)
    ESTRELLA        reduce using rule 100 (estatuto -> ciclodowhile .)
    MUEVE           reduce using rule 100 (estatuto -> ciclodowhile .)
    LEVANTA         reduce using rule 100 (estatuto -> ciclodowhile .)
    APOYA           reduce using rule 100 (estatuto -> ciclodowhile .)
    DIMENSION       reduce using rule 100 (estatuto -> ciclodowhile .)
    RETURN          reduce using rule 100 (estatuto -> ciclodowhile .)
    IF              reduce using rule 100 (estatuto -> ciclodowhile .)
    RKEY            reduce using rule 100 (estatuto -> ciclodowhile .)


state 88

    (64) asignacion -> ID . meteid asig2
    (181) llamafuncion -> ID . LPARENT tagverificafuncion llamaf11
    (65) meteid -> . empty
    (192) empty -> .

    LPARENT         shift and go to state 125
    LBRACKET        reduce using rule 192 (empty -> .)
    IGUAL           reduce using rule 192 (empty -> .)

    meteid                         shift and go to state 126
    empty                          shift and go to state 127

state 89

    (166) dimension -> DIMENSION . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 128


state 90

    (144) if -> IF . LPARENT expresion tagif RPARENT bloque if2

    LPARENT         shift and go to state 129


state 91

    (158) estrella -> ESTRELLA . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 130


state 92

    (150) return -> RETURN . llegoRet expresion PUNTOCOMA
    (151) llegoRet -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    llegoRet                       shift and go to state 131
    empty                          shift and go to state 132

state 93

    (107) estatuto -> casa .

    ID              reduce using rule 107 (estatuto -> casa .)
    PRINT           reduce using rule 107 (estatuto -> casa .)
    WHILE           reduce using rule 107 (estatuto -> casa .)
    DO              reduce using rule 107 (estatuto -> casa .)
    FOR             reduce using rule 107 (estatuto -> casa .)
    READ            reduce using rule 107 (estatuto -> casa .)
    READINT         reduce using rule 107 (estatuto -> casa .)
    COMENTARIO      reduce using rule 107 (estatuto -> casa .)
    CUADRADO        reduce using rule 107 (estatuto -> casa .)
    TRIANGULO       reduce using rule 107 (estatuto -> casa .)
    CASA            reduce using rule 107 (estatuto -> casa .)
    RECTANGULO      reduce using rule 107 (estatuto -> casa .)
    CUBO            reduce using rule 107 (estatuto -> casa .)
    TRAPECIO        reduce using rule 107 (estatuto -> casa .)
    ESTRELLA        reduce using rule 107 (estatuto -> casa .)
    MUEVE           reduce using rule 107 (estatuto -> casa .)
    LEVANTA         reduce using rule 107 (estatuto -> casa .)
    APOYA           reduce using rule 107 (estatuto -> casa .)
    DIMENSION       reduce using rule 107 (estatuto -> casa .)
    RETURN          reduce using rule 107 (estatuto -> casa .)
    IF              reduce using rule 107 (estatuto -> casa .)
    RKEY            reduce using rule 107 (estatuto -> casa .)


state 94

    (97) estatuto -> asignacion .

    ID              reduce using rule 97 (estatuto -> asignacion .)
    PRINT           reduce using rule 97 (estatuto -> asignacion .)
    WHILE           reduce using rule 97 (estatuto -> asignacion .)
    DO              reduce using rule 97 (estatuto -> asignacion .)
    FOR             reduce using rule 97 (estatuto -> asignacion .)
    READ            reduce using rule 97 (estatuto -> asignacion .)
    READINT         reduce using rule 97 (estatuto -> asignacion .)
    COMENTARIO      reduce using rule 97 (estatuto -> asignacion .)
    CUADRADO        reduce using rule 97 (estatuto -> asignacion .)
    TRIANGULO       reduce using rule 97 (estatuto -> asignacion .)
    CASA            reduce using rule 97 (estatuto -> asignacion .)
    RECTANGULO      reduce using rule 97 (estatuto -> asignacion .)
    CUBO            reduce using rule 97 (estatuto -> asignacion .)
    TRAPECIO        reduce using rule 97 (estatuto -> asignacion .)
    ESTRELLA        reduce using rule 97 (estatuto -> asignacion .)
    MUEVE           reduce using rule 97 (estatuto -> asignacion .)
    LEVANTA         reduce using rule 97 (estatuto -> asignacion .)
    APOYA           reduce using rule 97 (estatuto -> asignacion .)
    DIMENSION       reduce using rule 97 (estatuto -> asignacion .)
    RETURN          reduce using rule 97 (estatuto -> asignacion .)
    IF              reduce using rule 97 (estatuto -> asignacion .)
    RKEY            reduce using rule 97 (estatuto -> asignacion .)


state 95

    (139) readint -> READINT . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 133


state 96

    (152) cuadrado -> CUADRADO . LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA

    LPARENT         shift and go to state 134


state 97

    (164) apoya -> APOYA . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 135


state 98

    (115) estatuto -> dimension .

    ID              reduce using rule 115 (estatuto -> dimension .)
    PRINT           reduce using rule 115 (estatuto -> dimension .)
    WHILE           reduce using rule 115 (estatuto -> dimension .)
    DO              reduce using rule 115 (estatuto -> dimension .)
    FOR             reduce using rule 115 (estatuto -> dimension .)
    READ            reduce using rule 115 (estatuto -> dimension .)
    READINT         reduce using rule 115 (estatuto -> dimension .)
    COMENTARIO      reduce using rule 115 (estatuto -> dimension .)
    CUADRADO        reduce using rule 115 (estatuto -> dimension .)
    TRIANGULO       reduce using rule 115 (estatuto -> dimension .)
    CASA            reduce using rule 115 (estatuto -> dimension .)
    RECTANGULO      reduce using rule 115 (estatuto -> dimension .)
    CUBO            reduce using rule 115 (estatuto -> dimension .)
    TRAPECIO        reduce using rule 115 (estatuto -> dimension .)
    ESTRELLA        reduce using rule 115 (estatuto -> dimension .)
    MUEVE           reduce using rule 115 (estatuto -> dimension .)
    LEVANTA         reduce using rule 115 (estatuto -> dimension .)
    APOYA           reduce using rule 115 (estatuto -> dimension .)
    DIMENSION       reduce using rule 115 (estatuto -> dimension .)
    RETURN          reduce using rule 115 (estatuto -> dimension .)
    IF              reduce using rule 115 (estatuto -> dimension .)
    RKEY            reduce using rule 115 (estatuto -> dimension .)


state 99

    (17) b3 -> declaracion b3 .

    ID              reduce using rule 17 (b3 -> declaracion b3 .)
    PRINT           reduce using rule 17 (b3 -> declaracion b3 .)
    WHILE           reduce using rule 17 (b3 -> declaracion b3 .)
    DO              reduce using rule 17 (b3 -> declaracion b3 .)
    FOR             reduce using rule 17 (b3 -> declaracion b3 .)
    READ            reduce using rule 17 (b3 -> declaracion b3 .)
    READINT         reduce using rule 17 (b3 -> declaracion b3 .)
    COMENTARIO      reduce using rule 17 (b3 -> declaracion b3 .)
    CUADRADO        reduce using rule 17 (b3 -> declaracion b3 .)
    TRIANGULO       reduce using rule 17 (b3 -> declaracion b3 .)
    CASA            reduce using rule 17 (b3 -> declaracion b3 .)
    RECTANGULO      reduce using rule 17 (b3 -> declaracion b3 .)
    CUBO            reduce using rule 17 (b3 -> declaracion b3 .)
    TRAPECIO        reduce using rule 17 (b3 -> declaracion b3 .)
    ESTRELLA        reduce using rule 17 (b3 -> declaracion b3 .)
    MUEVE           reduce using rule 17 (b3 -> declaracion b3 .)
    LEVANTA         reduce using rule 17 (b3 -> declaracion b3 .)
    APOYA           reduce using rule 17 (b3 -> declaracion b3 .)
    DIMENSION       reduce using rule 17 (b3 -> declaracion b3 .)
    RETURN          reduce using rule 17 (b3 -> declaracion b3 .)
    IF              reduce using rule 17 (b3 -> declaracion b3 .)
    RKEY            reduce using rule 17 (b3 -> declaracion b3 .)


state 100

    (52) decDimensionada -> empty .

    LPARENT         reduce using rule 52 (decDimensionada -> empty .)
    ID              reduce using rule 52 (decDimensionada -> empty .)
    ENTERO          reduce using rule 52 (decDimensionada -> empty .)
    FLOTANTE        reduce using rule 52 (decDimensionada -> empty .)
    CADENA          reduce using rule 52 (decDimensionada -> empty .)
    CARACTER        reduce using rule 52 (decDimensionada -> empty .)
    TRUE            reduce using rule 52 (decDimensionada -> empty .)
    FALSE           reduce using rule 52 (decDimensionada -> empty .)


state 101

    (50) decla1 -> LBRACKET decDimensionada . exp saveLimSup decla2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 150

state 102

    (49) decla1 -> saveMemNormal declafinal .

    INT             reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    FLOAT           reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    CHAR            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    STRING          reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    BOOL            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    FUNCTION        reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    LKEY            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    ID              reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    PRINT           reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    WHILE           reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    DO              reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    FOR             reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    READ            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    READINT         reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    COMENTARIO      reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    CUADRADO        reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    TRIANGULO       reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    CASA            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    RECTANGULO      reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    CUBO            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    TRAPECIO        reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    ESTRELLA        reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    MUEVE           reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    LEVANTA         reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    APOYA           reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    DIMENSION       reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    RETURN          reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    IF              reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    RKEY            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)


state 103

    (58) declafinal -> PUNTOCOMA .

    INT             reduce using rule 58 (declafinal -> PUNTOCOMA .)
    FLOAT           reduce using rule 58 (declafinal -> PUNTOCOMA .)
    CHAR            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    STRING          reduce using rule 58 (declafinal -> PUNTOCOMA .)
    BOOL            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    FUNCTION        reduce using rule 58 (declafinal -> PUNTOCOMA .)
    LKEY            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    ID              reduce using rule 58 (declafinal -> PUNTOCOMA .)
    PRINT           reduce using rule 58 (declafinal -> PUNTOCOMA .)
    WHILE           reduce using rule 58 (declafinal -> PUNTOCOMA .)
    DO              reduce using rule 58 (declafinal -> PUNTOCOMA .)
    FOR             reduce using rule 58 (declafinal -> PUNTOCOMA .)
    READ            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    READINT         reduce using rule 58 (declafinal -> PUNTOCOMA .)
    COMENTARIO      reduce using rule 58 (declafinal -> PUNTOCOMA .)
    CUADRADO        reduce using rule 58 (declafinal -> PUNTOCOMA .)
    TRIANGULO       reduce using rule 58 (declafinal -> PUNTOCOMA .)
    CASA            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    RECTANGULO      reduce using rule 58 (declafinal -> PUNTOCOMA .)
    CUBO            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    TRAPECIO        reduce using rule 58 (declafinal -> PUNTOCOMA .)
    ESTRELLA        reduce using rule 58 (declafinal -> PUNTOCOMA .)
    MUEVE           reduce using rule 58 (declafinal -> PUNTOCOMA .)
    LEVANTA         reduce using rule 58 (declafinal -> PUNTOCOMA .)
    APOYA           reduce using rule 58 (declafinal -> PUNTOCOMA .)
    DIMENSION       reduce using rule 58 (declafinal -> PUNTOCOMA .)
    RETURN          reduce using rule 58 (declafinal -> PUNTOCOMA .)
    IF              reduce using rule 58 (declafinal -> PUNTOCOMA .)
    RKEY            reduce using rule 58 (declafinal -> PUNTOCOMA .)


state 104

    (168) pfunc -> tipo ID buildFunc . LPARENT funct11

    LPARENT         shift and go to state 152


state 105

    (170) buildFunc -> empty .

    LPARENT         reduce using rule 170 (buildFunc -> empty .)


state 106

    (169) pfunc -> VOID ID buildFunc . LPARENT funct11

    LPARENT         shift and go to state 153


state 107

    (136) taginiciado -> empty .

    LKEY            reduce using rule 136 (taginiciado -> empty .)


state 108

    (135) ciclodowhile -> DO taginiciado . bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (192) empty -> .

    LKEY            reduce using rule 192 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 154
    empty                          shift and go to state 24

state 109

    (138) read -> READ LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 155


state 110

    (161) mueve -> MUEVE LPARENT . exp COMA exp RPARENT tagmueve PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 156

state 111

    (15) bloque -> iniEnv LKEY b3 b4 b5 .

    $end            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    WHILE           reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    FUNCTION        reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    LKEY            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    ID              reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    PRINT           reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    DO              reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    FOR             reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    READ            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    READINT         reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    COMENTARIO      reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    CUADRADO        reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    TRIANGULO       reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    CASA            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    RECTANGULO      reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    CUBO            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    TRAPECIO        reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    ESTRELLA        reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    MUEVE           reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    LEVANTA         reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    APOYA           reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    DIMENSION       reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    RETURN          reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    IF              reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    RKEY            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    ELSE            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)


state 112

    (21) b5 -> recEnv . RKEY

    RKEY            shift and go to state 157


state 113

    (22) recEnv -> empty .

    RKEY            reduce using rule 22 (recEnv -> empty .)


state 114

    (131) ciclowhile -> WHILE taginiciawhile . LPARENT expresion RPARENT tagwhile bloque tagregresawhile

    LPARENT         shift and go to state 158


state 115

    (132) taginiciawhile -> empty .

    LPARENT         reduce using rule 132 (taginiciawhile -> empty .)


state 116

    (165) trapecio -> TRAPECIO LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 159

state 117

    (76) print -> PRINT LPARENT . pr2
    (77) pr2 -> . expresion pr3
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    expresion2                     shift and go to state 160
    pr2                            shift and go to state 161
    expresion                      shift and go to state 162
    exp                            shift and go to state 163

state 118

    (157) casa -> CASA LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 164

state 119

    (19) b4 -> estatuto b4 .

    RKEY            reduce using rule 19 (b4 -> estatuto b4 .)


state 120

    (159) cubo -> CUBO LPARENT . exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 165

state 121

    (154) triangulo -> TRIANGULO LPARENT . exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 166

state 122

    (140) ciclofor -> FOR LPARENT . asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor
    (64) asignacion -> . ID meteid asig2

    ID              shift and go to state 168

    asignacion                     shift and go to state 167

state 123

    (163) levanta -> LEVANTA LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 169


state 124

    (156) rectangulo -> RECTANGULO LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 170

state 125

    (181) llamafuncion -> ID LPARENT . tagverificafuncion llamaf11
    (188) tagverificafuncion -> . empty
    (192) empty -> .

    RPARENT         reduce using rule 192 (empty -> .)
    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    empty                          shift and go to state 171
    tagverificafuncion             shift and go to state 172

state 126

    (64) asignacion -> ID meteid . asig2
    (66) asig2 -> . LBRACKET exp asig3
    (67) asig2 -> . asigfinal
    (70) asigfinal -> . IGUAL tagmeteig asigf2

    LBRACKET        shift and go to state 174
    IGUAL           shift and go to state 176

    asig2                          shift and go to state 175
    asigfinal                      shift and go to state 173

state 127

    (65) meteid -> empty .

    LBRACKET        reduce using rule 65 (meteid -> empty .)
    IGUAL           reduce using rule 65 (meteid -> empty .)


state 128

    (166) dimension -> DIMENSION LPARENT . exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 177

state 129

    (144) if -> IF LPARENT . expresion tagif RPARENT bloque if2
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    expresion2                     shift and go to state 160
    expresion                      shift and go to state 178
    exp                            shift and go to state 163

state 130

    (158) estrella -> ESTRELLA LPARENT . exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 179

state 131

    (150) return -> RETURN llegoRet . expresion PUNTOCOMA
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    expresion2                     shift and go to state 160
    expresion                      shift and go to state 180
    exp                            shift and go to state 163

state 132

    (151) llegoRet -> empty .

    LPARENT         reduce using rule 151 (llegoRet -> empty .)
    ID              reduce using rule 151 (llegoRet -> empty .)
    ENTERO          reduce using rule 151 (llegoRet -> empty .)
    FLOTANTE        reduce using rule 151 (llegoRet -> empty .)
    CADENA          reduce using rule 151 (llegoRet -> empty .)
    CARACTER        reduce using rule 151 (llegoRet -> empty .)
    TRUE            reduce using rule 151 (llegoRet -> empty .)
    FALSE           reduce using rule 151 (llegoRet -> empty .)


state 133

    (139) readint -> READINT LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 181


state 134

    (152) cuadrado -> CUADRADO LPARENT . exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 182

state 135

    (164) apoya -> APOYA LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 183


state 136

    (87) factor -> f2 .

    MULT            reduce using rule 87 (factor -> f2 .)
    DIV             reduce using rule 87 (factor -> f2 .)
    SUMA            reduce using rule 87 (factor -> f2 .)
    RESTA           reduce using rule 87 (factor -> f2 .)
    GT              reduce using rule 87 (factor -> f2 .)
    LT              reduce using rule 87 (factor -> f2 .)
    LE              reduce using rule 87 (factor -> f2 .)
    GE              reduce using rule 87 (factor -> f2 .)
    DIF             reduce using rule 87 (factor -> f2 .)
    SAME            reduce using rule 87 (factor -> f2 .)
    AND             reduce using rule 87 (factor -> f2 .)
    OR              reduce using rule 87 (factor -> f2 .)
    PUNTOCOMA       reduce using rule 87 (factor -> f2 .)
    COMA            reduce using rule 87 (factor -> f2 .)
    RPARENT         reduce using rule 87 (factor -> f2 .)
    RBRACKET        reduce using rule 87 (factor -> f2 .)
    ID              reduce using rule 87 (factor -> f2 .)


state 137

    (88) factor -> f3 .

    MULT            reduce using rule 88 (factor -> f3 .)
    DIV             reduce using rule 88 (factor -> f3 .)
    SUMA            reduce using rule 88 (factor -> f3 .)
    RESTA           reduce using rule 88 (factor -> f3 .)
    GT              reduce using rule 88 (factor -> f3 .)
    LT              reduce using rule 88 (factor -> f3 .)
    LE              reduce using rule 88 (factor -> f3 .)
    GE              reduce using rule 88 (factor -> f3 .)
    DIF             reduce using rule 88 (factor -> f3 .)
    SAME            reduce using rule 88 (factor -> f3 .)
    AND             reduce using rule 88 (factor -> f3 .)
    OR              reduce using rule 88 (factor -> f3 .)
    PUNTOCOMA       reduce using rule 88 (factor -> f3 .)
    COMA            reduce using rule 88 (factor -> f3 .)
    RPARENT         reduce using rule 88 (factor -> f3 .)
    RBRACKET        reduce using rule 88 (factor -> f3 .)
    ID              reduce using rule 88 (factor -> f3 .)


state 138

    (89) factor -> f6 .

    MULT            reduce using rule 89 (factor -> f6 .)
    DIV             reduce using rule 89 (factor -> f6 .)
    SUMA            reduce using rule 89 (factor -> f6 .)
    RESTA           reduce using rule 89 (factor -> f6 .)
    GT              reduce using rule 89 (factor -> f6 .)
    LT              reduce using rule 89 (factor -> f6 .)
    LE              reduce using rule 89 (factor -> f6 .)
    GE              reduce using rule 89 (factor -> f6 .)
    DIF             reduce using rule 89 (factor -> f6 .)
    SAME            reduce using rule 89 (factor -> f6 .)
    AND             reduce using rule 89 (factor -> f6 .)
    OR              reduce using rule 89 (factor -> f6 .)
    PUNTOCOMA       reduce using rule 89 (factor -> f6 .)
    COMA            reduce using rule 89 (factor -> f6 .)
    RPARENT         reduce using rule 89 (factor -> f6 .)
    RBRACKET        reduce using rule 89 (factor -> f6 .)
    ID              reduce using rule 89 (factor -> f6 .)


state 139

    (41) exp -> termino . tagsacops exp2
    (46) tagsacops -> . empty
    (192) empty -> .

    SUMA            reduce using rule 192 (empty -> .)
    RESTA           reduce using rule 192 (empty -> .)
    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    GT              reduce using rule 192 (empty -> .)
    LT              reduce using rule 192 (empty -> .)
    LE              reduce using rule 192 (empty -> .)
    GE              reduce using rule 192 (empty -> .)
    DIF             reduce using rule 192 (empty -> .)
    SAME            reduce using rule 192 (empty -> .)
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagsacops                      shift and go to state 184
    empty                          shift and go to state 185

state 140

    (124) varcte -> TRUE . tagbol
    (130) tagbol -> . empty
    (192) empty -> .

    MULT            reduce using rule 192 (empty -> .)
    DIV             reduce using rule 192 (empty -> .)
    SUMA            reduce using rule 192 (empty -> .)
    RESTA           reduce using rule 192 (empty -> .)
    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    GT              reduce using rule 192 (empty -> .)
    LT              reduce using rule 192 (empty -> .)
    LE              reduce using rule 192 (empty -> .)
    GE              reduce using rule 192 (empty -> .)
    DIF             reduce using rule 192 (empty -> .)
    SAME            reduce using rule 192 (empty -> .)
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagbol                         shift and go to state 186
    empty                          shift and go to state 187

state 141

    (86) factor -> LPARENT . tagfondofalso expresion RPARENT tagsacafondo
    (92) tagfondofalso -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagfondofalso                  shift and go to state 188
    empty                          shift and go to state 189

state 142

    (90) f2 -> varcte .

    MULT            reduce using rule 90 (f2 -> varcte .)
    DIV             reduce using rule 90 (f2 -> varcte .)
    SUMA            reduce using rule 90 (f2 -> varcte .)
    RESTA           reduce using rule 90 (f2 -> varcte .)
    RPARENT         reduce using rule 90 (f2 -> varcte .)
    COMA            reduce using rule 90 (f2 -> varcte .)
    GT              reduce using rule 90 (f2 -> varcte .)
    LT              reduce using rule 90 (f2 -> varcte .)
    LE              reduce using rule 90 (f2 -> varcte .)
    GE              reduce using rule 90 (f2 -> varcte .)
    DIF             reduce using rule 90 (f2 -> varcte .)
    SAME            reduce using rule 90 (f2 -> varcte .)
    AND             reduce using rule 90 (f2 -> varcte .)
    OR              reduce using rule 90 (f2 -> varcte .)
    PUNTOCOMA       reduce using rule 90 (f2 -> varcte .)
    ID              reduce using rule 90 (f2 -> varcte .)
    RBRACKET        reduce using rule 90 (f2 -> varcte .)


state 143

    (122) varcte -> CADENA . tagcad
    (128) tagcad -> . empty
    (192) empty -> .

    MULT            reduce using rule 192 (empty -> .)
    DIV             reduce using rule 192 (empty -> .)
    SUMA            reduce using rule 192 (empty -> .)
    RESTA           reduce using rule 192 (empty -> .)
    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    GT              reduce using rule 192 (empty -> .)
    LT              reduce using rule 192 (empty -> .)
    LE              reduce using rule 192 (empty -> .)
    GE              reduce using rule 192 (empty -> .)
    DIF             reduce using rule 192 (empty -> .)
    SAME            reduce using rule 192 (empty -> .)
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagcad                         shift and go to state 190
    empty                          shift and go to state 191

state 144

    (96) f6 -> llamafuncion .

    MULT            reduce using rule 96 (f6 -> llamafuncion .)
    DIV             reduce using rule 96 (f6 -> llamafuncion .)
    SUMA            reduce using rule 96 (f6 -> llamafuncion .)
    RESTA           reduce using rule 96 (f6 -> llamafuncion .)
    COMA            reduce using rule 96 (f6 -> llamafuncion .)
    RPARENT         reduce using rule 96 (f6 -> llamafuncion .)
    RBRACKET        reduce using rule 96 (f6 -> llamafuncion .)
    GT              reduce using rule 96 (f6 -> llamafuncion .)
    LT              reduce using rule 96 (f6 -> llamafuncion .)
    LE              reduce using rule 96 (f6 -> llamafuncion .)
    GE              reduce using rule 96 (f6 -> llamafuncion .)
    DIF             reduce using rule 96 (f6 -> llamafuncion .)
    SAME            reduce using rule 96 (f6 -> llamafuncion .)
    AND             reduce using rule 96 (f6 -> llamafuncion .)
    OR              reduce using rule 96 (f6 -> llamafuncion .)
    PUNTOCOMA       reduce using rule 96 (f6 -> llamafuncion .)
    ID              reduce using rule 96 (f6 -> llamafuncion .)


state 145

    (80) termino -> factor . tagsacopm te2
    (85) tagsacopm -> . empty
    (192) empty -> .

    MULT            reduce using rule 192 (empty -> .)
    DIV             reduce using rule 192 (empty -> .)
    SUMA            reduce using rule 192 (empty -> .)
    RESTA           reduce using rule 192 (empty -> .)
    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    GT              reduce using rule 192 (empty -> .)
    LT              reduce using rule 192 (empty -> .)
    LE              reduce using rule 192 (empty -> .)
    GE              reduce using rule 192 (empty -> .)
    DIF             reduce using rule 192 (empty -> .)
    SAME            reduce using rule 192 (empty -> .)
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagsacopm                      shift and go to state 192
    empty                          shift and go to state 193

state 146

    (120) varcte -> ENTERO . tagint
    (126) tagint -> . empty
    (192) empty -> .

    MULT            reduce using rule 192 (empty -> .)
    DIV             reduce using rule 192 (empty -> .)
    SUMA            reduce using rule 192 (empty -> .)
    RESTA           reduce using rule 192 (empty -> .)
    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    GT              reduce using rule 192 (empty -> .)
    LT              reduce using rule 192 (empty -> .)
    LE              reduce using rule 192 (empty -> .)
    GE              reduce using rule 192 (empty -> .)
    DIF             reduce using rule 192 (empty -> .)
    SAME            reduce using rule 192 (empty -> .)
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagint                         shift and go to state 194
    empty                          shift and go to state 195

state 147

    (123) varcte -> CARACTER . tagcar
    (129) tagcar -> . empty
    (192) empty -> .

    MULT            reduce using rule 192 (empty -> .)
    DIV             reduce using rule 192 (empty -> .)
    SUMA            reduce using rule 192 (empty -> .)
    RESTA           reduce using rule 192 (empty -> .)
    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    GT              reduce using rule 192 (empty -> .)
    LT              reduce using rule 192 (empty -> .)
    LE              reduce using rule 192 (empty -> .)
    GE              reduce using rule 192 (empty -> .)
    DIF             reduce using rule 192 (empty -> .)
    SAME            reduce using rule 192 (empty -> .)
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagcar                         shift and go to state 196
    empty                          shift and go to state 197

state 148

    (91) f3 -> ID .
    (181) llamafuncion -> ID . LPARENT tagverificafuncion llamaf11

    MULT            reduce using rule 91 (f3 -> ID .)
    DIV             reduce using rule 91 (f3 -> ID .)
    SUMA            reduce using rule 91 (f3 -> ID .)
    RESTA           reduce using rule 91 (f3 -> ID .)
    GT              reduce using rule 91 (f3 -> ID .)
    LT              reduce using rule 91 (f3 -> ID .)
    LE              reduce using rule 91 (f3 -> ID .)
    GE              reduce using rule 91 (f3 -> ID .)
    DIF             reduce using rule 91 (f3 -> ID .)
    SAME            reduce using rule 91 (f3 -> ID .)
    AND             reduce using rule 91 (f3 -> ID .)
    OR              reduce using rule 91 (f3 -> ID .)
    RPARENT         reduce using rule 91 (f3 -> ID .)
    COMA            reduce using rule 91 (f3 -> ID .)
    RBRACKET        reduce using rule 91 (f3 -> ID .)
    PUNTOCOMA       reduce using rule 91 (f3 -> ID .)
    ID              reduce using rule 91 (f3 -> ID .)
    LPARENT         shift and go to state 125


state 149

    (125) varcte -> FALSE . tagbol
    (130) tagbol -> . empty
    (192) empty -> .

    MULT            reduce using rule 192 (empty -> .)
    DIV             reduce using rule 192 (empty -> .)
    SUMA            reduce using rule 192 (empty -> .)
    RESTA           reduce using rule 192 (empty -> .)
    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    GT              reduce using rule 192 (empty -> .)
    LT              reduce using rule 192 (empty -> .)
    LE              reduce using rule 192 (empty -> .)
    GE              reduce using rule 192 (empty -> .)
    DIF             reduce using rule 192 (empty -> .)
    SAME            reduce using rule 192 (empty -> .)
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagbol                         shift and go to state 198
    empty                          shift and go to state 187

state 150

    (50) decla1 -> LBRACKET decDimensionada exp . saveLimSup decla2
    (53) saveLimSup -> . empty
    (192) empty -> .

    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)

    empty                          shift and go to state 200
    saveLimSup                     shift and go to state 199

state 151

    (121) varcte -> FLOTANTE . tagfloat
    (127) tagfloat -> . empty
    (192) empty -> .

    MULT            reduce using rule 192 (empty -> .)
    DIV             reduce using rule 192 (empty -> .)
    SUMA            reduce using rule 192 (empty -> .)
    RESTA           reduce using rule 192 (empty -> .)
    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    GT              reduce using rule 192 (empty -> .)
    LT              reduce using rule 192 (empty -> .)
    LE              reduce using rule 192 (empty -> .)
    GE              reduce using rule 192 (empty -> .)
    DIF             reduce using rule 192 (empty -> .)
    SAME            reduce using rule 192 (empty -> .)
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    empty                          shift and go to state 201
    tagfloat                       shift and go to state 202

state 152

    (168) pfunc -> tipo ID buildFunc LPARENT . funct11
    (171) funct11 -> . function4
    (172) funct11 -> . initParamTable funct2
    (178) function4 -> . RPARENT initFunc bloque noinitFunc
    (173) initParamTable -> . empty
    (192) empty -> .

    RPARENT         shift and go to state 205
    INT             reduce using rule 192 (empty -> .)
    FLOAT           reduce using rule 192 (empty -> .)
    CHAR            reduce using rule 192 (empty -> .)
    STRING          reduce using rule 192 (empty -> .)
    BOOL            reduce using rule 192 (empty -> .)

    function4                      shift and go to state 203
    funct11                        shift and go to state 204
    initParamTable                 shift and go to state 206
    empty                          shift and go to state 207

state 153

    (169) pfunc -> VOID ID buildFunc LPARENT . funct11
    (171) funct11 -> . function4
    (172) funct11 -> . initParamTable funct2
    (178) function4 -> . RPARENT initFunc bloque noinitFunc
    (173) initParamTable -> . empty
    (192) empty -> .

    RPARENT         shift and go to state 205
    INT             reduce using rule 192 (empty -> .)
    FLOAT           reduce using rule 192 (empty -> .)
    CHAR            reduce using rule 192 (empty -> .)
    STRING          reduce using rule 192 (empty -> .)
    BOOL            reduce using rule 192 (empty -> .)

    function4                      shift and go to state 203
    funct11                        shift and go to state 208
    initParamTable                 shift and go to state 206
    empty                          shift and go to state 207

state 154

    (135) ciclodowhile -> DO taginiciado bloque . WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA

    WHILE           shift and go to state 209


state 155

    (138) read -> READ LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 210


state 156

    (161) mueve -> MUEVE LPARENT exp . COMA exp RPARENT tagmueve PUNTOCOMA

    COMA            shift and go to state 211


state 157

    (21) b5 -> recEnv RKEY .

    $end            reduce using rule 21 (b5 -> recEnv RKEY .)
    WHILE           reduce using rule 21 (b5 -> recEnv RKEY .)
    FUNCTION        reduce using rule 21 (b5 -> recEnv RKEY .)
    LKEY            reduce using rule 21 (b5 -> recEnv RKEY .)
    ELSE            reduce using rule 21 (b5 -> recEnv RKEY .)
    ID              reduce using rule 21 (b5 -> recEnv RKEY .)
    PRINT           reduce using rule 21 (b5 -> recEnv RKEY .)
    DO              reduce using rule 21 (b5 -> recEnv RKEY .)
    FOR             reduce using rule 21 (b5 -> recEnv RKEY .)
    READ            reduce using rule 21 (b5 -> recEnv RKEY .)
    READINT         reduce using rule 21 (b5 -> recEnv RKEY .)
    COMENTARIO      reduce using rule 21 (b5 -> recEnv RKEY .)
    CUADRADO        reduce using rule 21 (b5 -> recEnv RKEY .)
    TRIANGULO       reduce using rule 21 (b5 -> recEnv RKEY .)
    CASA            reduce using rule 21 (b5 -> recEnv RKEY .)
    RECTANGULO      reduce using rule 21 (b5 -> recEnv RKEY .)
    CUBO            reduce using rule 21 (b5 -> recEnv RKEY .)
    TRAPECIO        reduce using rule 21 (b5 -> recEnv RKEY .)
    ESTRELLA        reduce using rule 21 (b5 -> recEnv RKEY .)
    MUEVE           reduce using rule 21 (b5 -> recEnv RKEY .)
    LEVANTA         reduce using rule 21 (b5 -> recEnv RKEY .)
    APOYA           reduce using rule 21 (b5 -> recEnv RKEY .)
    DIMENSION       reduce using rule 21 (b5 -> recEnv RKEY .)
    RETURN          reduce using rule 21 (b5 -> recEnv RKEY .)
    IF              reduce using rule 21 (b5 -> recEnv RKEY .)
    RKEY            reduce using rule 21 (b5 -> recEnv RKEY .)


state 158

    (131) ciclowhile -> WHILE taginiciawhile LPARENT . expresion RPARENT tagwhile bloque tagregresawhile
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    expresion2                     shift and go to state 160
    expresion                      shift and go to state 212
    exp                            shift and go to state 163

state 159

    (165) trapecio -> TRAPECIO LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 213


state 160

    (23) expresion -> expresion2 . expre
    (24) expre -> . expre2
    (25) expre -> . empty
    (26) expre2 -> . AND tagmetelog expresion tagsacalog
    (27) expre2 -> . OR tagmetelog expresion tagsacalog
    (192) empty -> .

    AND             shift and go to state 214
    OR              shift and go to state 217
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    expre                          shift and go to state 215
    expre2                         shift and go to state 216
    empty                          shift and go to state 218

state 161

    (76) print -> PRINT LPARENT pr2 .

    ID              reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    PRINT           reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    WHILE           reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    DO              reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    FOR             reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    READ            reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    READINT         reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    COMENTARIO      reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    CUADRADO        reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    TRIANGULO       reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    CASA            reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    RECTANGULO      reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    CUBO            reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    TRAPECIO        reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    ESTRELLA        reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    MUEVE           reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    LEVANTA         reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    APOYA           reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    DIMENSION       reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    RETURN          reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    IF              reduce using rule 76 (print -> PRINT LPARENT pr2 .)
    RKEY            reduce using rule 76 (print -> PRINT LPARENT pr2 .)


state 162

    (77) pr2 -> expresion . pr3
    (78) pr3 -> . tagimprime RPARENT PUNTOCOMA
    (79) tagimprime -> . empty
    (192) empty -> .

    RPARENT         reduce using rule 192 (empty -> .)

    tagimprime                     shift and go to state 220
    empty                          shift and go to state 221
    pr3                            shift and go to state 219

state 163

    (30) expresion2 -> exp . e2
    (31) e2 -> . e3
    (32) e2 -> . empty
    (33) e3 -> . GT tagrel exp tagsacrel
    (34) e3 -> . LT tagrel exp tagsacrel
    (35) e3 -> . LE tagrel exp tagsacrel
    (36) e3 -> . GE tagrel exp tagsacrel
    (37) e3 -> . DIF tagrel exp tagsacrel
    (38) e3 -> . SAME tagrel exp tagsacrel
    (192) empty -> .

    GT              shift and go to state 227
    LT              shift and go to state 226
    LE              shift and go to state 224
    GE              shift and go to state 222
    DIF             shift and go to state 223
    SAME            shift and go to state 225
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    e3                             shift and go to state 228
    empty                          shift and go to state 229
    e2                             shift and go to state 230

state 164

    (157) casa -> CASA LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 231


state 165

    (159) cubo -> CUBO LPARENT exp . COMA exp COMA exp RPARENT tagcubo PUNTOCOMA

    COMA            shift and go to state 232


state 166

    (154) triangulo -> TRIANGULO LPARENT exp . COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA

    COMA            shift and go to state 233


state 167

    (140) ciclofor -> FOR LPARENT asignacion . expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    expresion2                     shift and go to state 160
    f6                             shift and go to state 138
    expresion                      shift and go to state 234
    exp                            shift and go to state 163

state 168

    (64) asignacion -> ID . meteid asig2
    (65) meteid -> . empty
    (192) empty -> .

    LBRACKET        reduce using rule 192 (empty -> .)
    IGUAL           reduce using rule 192 (empty -> .)

    meteid                         shift and go to state 126
    empty                          shift and go to state 127

state 169

    (163) levanta -> LEVANTA LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 235


state 170

    (156) rectangulo -> RECTANGULO LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 236


state 171

    (188) tagverificafuncion -> empty .

    RPARENT         reduce using rule 188 (tagverificafuncion -> empty .)
    LPARENT         reduce using rule 188 (tagverificafuncion -> empty .)
    ID              reduce using rule 188 (tagverificafuncion -> empty .)
    ENTERO          reduce using rule 188 (tagverificafuncion -> empty .)
    FLOTANTE        reduce using rule 188 (tagverificafuncion -> empty .)
    CADENA          reduce using rule 188 (tagverificafuncion -> empty .)
    CARACTER        reduce using rule 188 (tagverificafuncion -> empty .)
    TRUE            reduce using rule 188 (tagverificafuncion -> empty .)
    FALSE           reduce using rule 188 (tagverificafuncion -> empty .)


state 172

    (181) llamafuncion -> ID LPARENT tagverificafuncion . llamaf11
    (182) llamaf11 -> . llamaf2
    (183) llamaf11 -> . llamaf4
    (184) llamaf2 -> . exp tagrevisaparam llamaf3
    (187) llamaf4 -> . RPARENT tagterminallamada PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    RPARENT         shift and go to state 237
    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    llamaf2                        shift and go to state 238
    llamaf4                        shift and go to state 239
    exp                            shift and go to state 240
    llamaf11                       shift and go to state 241

state 173

    (67) asig2 -> asigfinal .

    ID              reduce using rule 67 (asig2 -> asigfinal .)
    PRINT           reduce using rule 67 (asig2 -> asigfinal .)
    WHILE           reduce using rule 67 (asig2 -> asigfinal .)
    DO              reduce using rule 67 (asig2 -> asigfinal .)
    FOR             reduce using rule 67 (asig2 -> asigfinal .)
    READ            reduce using rule 67 (asig2 -> asigfinal .)
    READINT         reduce using rule 67 (asig2 -> asigfinal .)
    COMENTARIO      reduce using rule 67 (asig2 -> asigfinal .)
    CUADRADO        reduce using rule 67 (asig2 -> asigfinal .)
    TRIANGULO       reduce using rule 67 (asig2 -> asigfinal .)
    CASA            reduce using rule 67 (asig2 -> asigfinal .)
    RECTANGULO      reduce using rule 67 (asig2 -> asigfinal .)
    CUBO            reduce using rule 67 (asig2 -> asigfinal .)
    TRAPECIO        reduce using rule 67 (asig2 -> asigfinal .)
    ESTRELLA        reduce using rule 67 (asig2 -> asigfinal .)
    MUEVE           reduce using rule 67 (asig2 -> asigfinal .)
    LEVANTA         reduce using rule 67 (asig2 -> asigfinal .)
    APOYA           reduce using rule 67 (asig2 -> asigfinal .)
    DIMENSION       reduce using rule 67 (asig2 -> asigfinal .)
    RETURN          reduce using rule 67 (asig2 -> asigfinal .)
    IF              reduce using rule 67 (asig2 -> asigfinal .)
    RKEY            reduce using rule 67 (asig2 -> asigfinal .)
    LPARENT         reduce using rule 67 (asig2 -> asigfinal .)
    ENTERO          reduce using rule 67 (asig2 -> asigfinal .)
    FLOTANTE        reduce using rule 67 (asig2 -> asigfinal .)
    CADENA          reduce using rule 67 (asig2 -> asigfinal .)
    CARACTER        reduce using rule 67 (asig2 -> asigfinal .)
    TRUE            reduce using rule 67 (asig2 -> asigfinal .)
    FALSE           reduce using rule 67 (asig2 -> asigfinal .)
    RPARENT         reduce using rule 67 (asig2 -> asigfinal .)


state 174

    (66) asig2 -> LBRACKET . exp asig3
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 242

state 175

    (64) asignacion -> ID meteid asig2 .

    ID              reduce using rule 64 (asignacion -> ID meteid asig2 .)
    PRINT           reduce using rule 64 (asignacion -> ID meteid asig2 .)
    WHILE           reduce using rule 64 (asignacion -> ID meteid asig2 .)
    DO              reduce using rule 64 (asignacion -> ID meteid asig2 .)
    FOR             reduce using rule 64 (asignacion -> ID meteid asig2 .)
    READ            reduce using rule 64 (asignacion -> ID meteid asig2 .)
    READINT         reduce using rule 64 (asignacion -> ID meteid asig2 .)
    COMENTARIO      reduce using rule 64 (asignacion -> ID meteid asig2 .)
    CUADRADO        reduce using rule 64 (asignacion -> ID meteid asig2 .)
    TRIANGULO       reduce using rule 64 (asignacion -> ID meteid asig2 .)
    CASA            reduce using rule 64 (asignacion -> ID meteid asig2 .)
    RECTANGULO      reduce using rule 64 (asignacion -> ID meteid asig2 .)
    CUBO            reduce using rule 64 (asignacion -> ID meteid asig2 .)
    TRAPECIO        reduce using rule 64 (asignacion -> ID meteid asig2 .)
    ESTRELLA        reduce using rule 64 (asignacion -> ID meteid asig2 .)
    MUEVE           reduce using rule 64 (asignacion -> ID meteid asig2 .)
    LEVANTA         reduce using rule 64 (asignacion -> ID meteid asig2 .)
    APOYA           reduce using rule 64 (asignacion -> ID meteid asig2 .)
    DIMENSION       reduce using rule 64 (asignacion -> ID meteid asig2 .)
    RETURN          reduce using rule 64 (asignacion -> ID meteid asig2 .)
    IF              reduce using rule 64 (asignacion -> ID meteid asig2 .)
    RKEY            reduce using rule 64 (asignacion -> ID meteid asig2 .)
    RPARENT         reduce using rule 64 (asignacion -> ID meteid asig2 .)
    LPARENT         reduce using rule 64 (asignacion -> ID meteid asig2 .)
    ENTERO          reduce using rule 64 (asignacion -> ID meteid asig2 .)
    FLOTANTE        reduce using rule 64 (asignacion -> ID meteid asig2 .)
    CADENA          reduce using rule 64 (asignacion -> ID meteid asig2 .)
    CARACTER        reduce using rule 64 (asignacion -> ID meteid asig2 .)
    TRUE            reduce using rule 64 (asignacion -> ID meteid asig2 .)
    FALSE           reduce using rule 64 (asignacion -> ID meteid asig2 .)


state 176

    (70) asigfinal -> IGUAL . tagmeteig asigf2
    (74) tagmeteig -> . empty
    (192) empty -> .

    READ            reduce using rule 192 (empty -> .)
    READINT         reduce using rule 192 (empty -> .)
    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    empty                          shift and go to state 243
    tagmeteig                      shift and go to state 244

state 177

    (166) dimension -> DIMENSION LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 245


state 178

    (144) if -> IF LPARENT expresion . tagif RPARENT bloque if2
    (147) tagif -> . empty
    (192) empty -> .

    RPARENT         reduce using rule 192 (empty -> .)

    tagif                          shift and go to state 246
    empty                          shift and go to state 247

state 179

    (158) estrella -> ESTRELLA LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 248


state 180

    (150) return -> RETURN llegoRet expresion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 249


state 181

    (139) readint -> READINT LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 250


state 182

    (152) cuadrado -> CUADRADO LPARENT exp . COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA

    COMA            shift and go to state 251


state 183

    (164) apoya -> APOYA LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 252


state 184

    (41) exp -> termino tagsacops . exp2
    (42) exp2 -> . SUMA tagop exp
    (43) exp2 -> . RESTA tagop exp
    (44) exp2 -> . empty
    (192) empty -> .

    SUMA            shift and go to state 256
    RESTA           shift and go to state 255
    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    GT              reduce using rule 192 (empty -> .)
    LT              reduce using rule 192 (empty -> .)
    LE              reduce using rule 192 (empty -> .)
    GE              reduce using rule 192 (empty -> .)
    DIF             reduce using rule 192 (empty -> .)
    SAME            reduce using rule 192 (empty -> .)
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    exp2                           shift and go to state 253
    empty                          shift and go to state 254

state 185

    (46) tagsacops -> empty .

    SUMA            reduce using rule 46 (tagsacops -> empty .)
    RESTA           reduce using rule 46 (tagsacops -> empty .)
    RBRACKET        reduce using rule 46 (tagsacops -> empty .)
    COMA            reduce using rule 46 (tagsacops -> empty .)
    GT              reduce using rule 46 (tagsacops -> empty .)
    LT              reduce using rule 46 (tagsacops -> empty .)
    LE              reduce using rule 46 (tagsacops -> empty .)
    GE              reduce using rule 46 (tagsacops -> empty .)
    DIF             reduce using rule 46 (tagsacops -> empty .)
    SAME            reduce using rule 46 (tagsacops -> empty .)
    AND             reduce using rule 46 (tagsacops -> empty .)
    OR              reduce using rule 46 (tagsacops -> empty .)
    RPARENT         reduce using rule 46 (tagsacops -> empty .)
    PUNTOCOMA       reduce using rule 46 (tagsacops -> empty .)
    ID              reduce using rule 46 (tagsacops -> empty .)


state 186

    (124) varcte -> TRUE tagbol .

    MULT            reduce using rule 124 (varcte -> TRUE tagbol .)
    DIV             reduce using rule 124 (varcte -> TRUE tagbol .)
    SUMA            reduce using rule 124 (varcte -> TRUE tagbol .)
    RESTA           reduce using rule 124 (varcte -> TRUE tagbol .)
    COMA            reduce using rule 124 (varcte -> TRUE tagbol .)
    RPARENT         reduce using rule 124 (varcte -> TRUE tagbol .)
    AND             reduce using rule 124 (varcte -> TRUE tagbol .)
    OR              reduce using rule 124 (varcte -> TRUE tagbol .)
    PUNTOCOMA       reduce using rule 124 (varcte -> TRUE tagbol .)
    ID              reduce using rule 124 (varcte -> TRUE tagbol .)
    RBRACKET        reduce using rule 124 (varcte -> TRUE tagbol .)
    GT              reduce using rule 124 (varcte -> TRUE tagbol .)
    LT              reduce using rule 124 (varcte -> TRUE tagbol .)
    LE              reduce using rule 124 (varcte -> TRUE tagbol .)
    GE              reduce using rule 124 (varcte -> TRUE tagbol .)
    DIF             reduce using rule 124 (varcte -> TRUE tagbol .)
    SAME            reduce using rule 124 (varcte -> TRUE tagbol .)


state 187

    (130) tagbol -> empty .

    MULT            reduce using rule 130 (tagbol -> empty .)
    DIV             reduce using rule 130 (tagbol -> empty .)
    SUMA            reduce using rule 130 (tagbol -> empty .)
    RESTA           reduce using rule 130 (tagbol -> empty .)
    RBRACKET        reduce using rule 130 (tagbol -> empty .)
    COMA            reduce using rule 130 (tagbol -> empty .)
    GT              reduce using rule 130 (tagbol -> empty .)
    LT              reduce using rule 130 (tagbol -> empty .)
    LE              reduce using rule 130 (tagbol -> empty .)
    GE              reduce using rule 130 (tagbol -> empty .)
    DIF             reduce using rule 130 (tagbol -> empty .)
    SAME            reduce using rule 130 (tagbol -> empty .)
    AND             reduce using rule 130 (tagbol -> empty .)
    OR              reduce using rule 130 (tagbol -> empty .)
    RPARENT         reduce using rule 130 (tagbol -> empty .)
    PUNTOCOMA       reduce using rule 130 (tagbol -> empty .)
    ID              reduce using rule 130 (tagbol -> empty .)


state 188

    (86) factor -> LPARENT tagfondofalso . expresion RPARENT tagsacafondo
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    expresion2                     shift and go to state 160
    expresion                      shift and go to state 257
    exp                            shift and go to state 163

state 189

    (92) tagfondofalso -> empty .

    LPARENT         reduce using rule 92 (tagfondofalso -> empty .)
    ID              reduce using rule 92 (tagfondofalso -> empty .)
    ENTERO          reduce using rule 92 (tagfondofalso -> empty .)
    FLOTANTE        reduce using rule 92 (tagfondofalso -> empty .)
    CADENA          reduce using rule 92 (tagfondofalso -> empty .)
    CARACTER        reduce using rule 92 (tagfondofalso -> empty .)
    TRUE            reduce using rule 92 (tagfondofalso -> empty .)
    FALSE           reduce using rule 92 (tagfondofalso -> empty .)


state 190

    (122) varcte -> CADENA tagcad .

    MULT            reduce using rule 122 (varcte -> CADENA tagcad .)
    DIV             reduce using rule 122 (varcte -> CADENA tagcad .)
    SUMA            reduce using rule 122 (varcte -> CADENA tagcad .)
    RESTA           reduce using rule 122 (varcte -> CADENA tagcad .)
    COMA            reduce using rule 122 (varcte -> CADENA tagcad .)
    RPARENT         reduce using rule 122 (varcte -> CADENA tagcad .)
    AND             reduce using rule 122 (varcte -> CADENA tagcad .)
    OR              reduce using rule 122 (varcte -> CADENA tagcad .)
    PUNTOCOMA       reduce using rule 122 (varcte -> CADENA tagcad .)
    ID              reduce using rule 122 (varcte -> CADENA tagcad .)
    RBRACKET        reduce using rule 122 (varcte -> CADENA tagcad .)
    GT              reduce using rule 122 (varcte -> CADENA tagcad .)
    LT              reduce using rule 122 (varcte -> CADENA tagcad .)
    LE              reduce using rule 122 (varcte -> CADENA tagcad .)
    GE              reduce using rule 122 (varcte -> CADENA tagcad .)
    DIF             reduce using rule 122 (varcte -> CADENA tagcad .)
    SAME            reduce using rule 122 (varcte -> CADENA tagcad .)


state 191

    (128) tagcad -> empty .

    MULT            reduce using rule 128 (tagcad -> empty .)
    DIV             reduce using rule 128 (tagcad -> empty .)
    SUMA            reduce using rule 128 (tagcad -> empty .)
    RESTA           reduce using rule 128 (tagcad -> empty .)
    RBRACKET        reduce using rule 128 (tagcad -> empty .)
    COMA            reduce using rule 128 (tagcad -> empty .)
    GT              reduce using rule 128 (tagcad -> empty .)
    LT              reduce using rule 128 (tagcad -> empty .)
    LE              reduce using rule 128 (tagcad -> empty .)
    GE              reduce using rule 128 (tagcad -> empty .)
    DIF             reduce using rule 128 (tagcad -> empty .)
    SAME            reduce using rule 128 (tagcad -> empty .)
    AND             reduce using rule 128 (tagcad -> empty .)
    OR              reduce using rule 128 (tagcad -> empty .)
    RPARENT         reduce using rule 128 (tagcad -> empty .)
    PUNTOCOMA       reduce using rule 128 (tagcad -> empty .)
    ID              reduce using rule 128 (tagcad -> empty .)


state 192

    (80) termino -> factor tagsacopm . te2
    (81) te2 -> . MULT tagm termino
    (82) te2 -> . DIV tagm termino
    (83) te2 -> . empty
    (192) empty -> .

    MULT            shift and go to state 261
    DIV             shift and go to state 258
    SUMA            reduce using rule 192 (empty -> .)
    RESTA           reduce using rule 192 (empty -> .)
    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    GT              reduce using rule 192 (empty -> .)
    LT              reduce using rule 192 (empty -> .)
    LE              reduce using rule 192 (empty -> .)
    GE              reduce using rule 192 (empty -> .)
    DIF             reduce using rule 192 (empty -> .)
    SAME            reduce using rule 192 (empty -> .)
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    te2                            shift and go to state 260
    empty                          shift and go to state 259

state 193

    (85) tagsacopm -> empty .

    MULT            reduce using rule 85 (tagsacopm -> empty .)
    DIV             reduce using rule 85 (tagsacopm -> empty .)
    SUMA            reduce using rule 85 (tagsacopm -> empty .)
    RESTA           reduce using rule 85 (tagsacopm -> empty .)
    RBRACKET        reduce using rule 85 (tagsacopm -> empty .)
    COMA            reduce using rule 85 (tagsacopm -> empty .)
    GT              reduce using rule 85 (tagsacopm -> empty .)
    LT              reduce using rule 85 (tagsacopm -> empty .)
    LE              reduce using rule 85 (tagsacopm -> empty .)
    GE              reduce using rule 85 (tagsacopm -> empty .)
    DIF             reduce using rule 85 (tagsacopm -> empty .)
    SAME            reduce using rule 85 (tagsacopm -> empty .)
    AND             reduce using rule 85 (tagsacopm -> empty .)
    OR              reduce using rule 85 (tagsacopm -> empty .)
    RPARENT         reduce using rule 85 (tagsacopm -> empty .)
    PUNTOCOMA       reduce using rule 85 (tagsacopm -> empty .)
    ID              reduce using rule 85 (tagsacopm -> empty .)


state 194

    (120) varcte -> ENTERO tagint .

    MULT            reduce using rule 120 (varcte -> ENTERO tagint .)
    DIV             reduce using rule 120 (varcte -> ENTERO tagint .)
    SUMA            reduce using rule 120 (varcte -> ENTERO tagint .)
    RESTA           reduce using rule 120 (varcte -> ENTERO tagint .)
    COMA            reduce using rule 120 (varcte -> ENTERO tagint .)
    RPARENT         reduce using rule 120 (varcte -> ENTERO tagint .)
    AND             reduce using rule 120 (varcte -> ENTERO tagint .)
    OR              reduce using rule 120 (varcte -> ENTERO tagint .)
    PUNTOCOMA       reduce using rule 120 (varcte -> ENTERO tagint .)
    ID              reduce using rule 120 (varcte -> ENTERO tagint .)
    RBRACKET        reduce using rule 120 (varcte -> ENTERO tagint .)
    GT              reduce using rule 120 (varcte -> ENTERO tagint .)
    LT              reduce using rule 120 (varcte -> ENTERO tagint .)
    LE              reduce using rule 120 (varcte -> ENTERO tagint .)
    GE              reduce using rule 120 (varcte -> ENTERO tagint .)
    DIF             reduce using rule 120 (varcte -> ENTERO tagint .)
    SAME            reduce using rule 120 (varcte -> ENTERO tagint .)


state 195

    (126) tagint -> empty .

    MULT            reduce using rule 126 (tagint -> empty .)
    DIV             reduce using rule 126 (tagint -> empty .)
    SUMA            reduce using rule 126 (tagint -> empty .)
    RESTA           reduce using rule 126 (tagint -> empty .)
    RBRACKET        reduce using rule 126 (tagint -> empty .)
    COMA            reduce using rule 126 (tagint -> empty .)
    GT              reduce using rule 126 (tagint -> empty .)
    LT              reduce using rule 126 (tagint -> empty .)
    LE              reduce using rule 126 (tagint -> empty .)
    GE              reduce using rule 126 (tagint -> empty .)
    DIF             reduce using rule 126 (tagint -> empty .)
    SAME            reduce using rule 126 (tagint -> empty .)
    AND             reduce using rule 126 (tagint -> empty .)
    OR              reduce using rule 126 (tagint -> empty .)
    RPARENT         reduce using rule 126 (tagint -> empty .)
    PUNTOCOMA       reduce using rule 126 (tagint -> empty .)
    ID              reduce using rule 126 (tagint -> empty .)


state 196

    (123) varcte -> CARACTER tagcar .

    MULT            reduce using rule 123 (varcte -> CARACTER tagcar .)
    DIV             reduce using rule 123 (varcte -> CARACTER tagcar .)
    SUMA            reduce using rule 123 (varcte -> CARACTER tagcar .)
    RESTA           reduce using rule 123 (varcte -> CARACTER tagcar .)
    COMA            reduce using rule 123 (varcte -> CARACTER tagcar .)
    RPARENT         reduce using rule 123 (varcte -> CARACTER tagcar .)
    AND             reduce using rule 123 (varcte -> CARACTER tagcar .)
    OR              reduce using rule 123 (varcte -> CARACTER tagcar .)
    PUNTOCOMA       reduce using rule 123 (varcte -> CARACTER tagcar .)
    ID              reduce using rule 123 (varcte -> CARACTER tagcar .)
    RBRACKET        reduce using rule 123 (varcte -> CARACTER tagcar .)
    GT              reduce using rule 123 (varcte -> CARACTER tagcar .)
    LT              reduce using rule 123 (varcte -> CARACTER tagcar .)
    LE              reduce using rule 123 (varcte -> CARACTER tagcar .)
    GE              reduce using rule 123 (varcte -> CARACTER tagcar .)
    DIF             reduce using rule 123 (varcte -> CARACTER tagcar .)
    SAME            reduce using rule 123 (varcte -> CARACTER tagcar .)


state 197

    (129) tagcar -> empty .

    MULT            reduce using rule 129 (tagcar -> empty .)
    DIV             reduce using rule 129 (tagcar -> empty .)
    SUMA            reduce using rule 129 (tagcar -> empty .)
    RESTA           reduce using rule 129 (tagcar -> empty .)
    RBRACKET        reduce using rule 129 (tagcar -> empty .)
    COMA            reduce using rule 129 (tagcar -> empty .)
    GT              reduce using rule 129 (tagcar -> empty .)
    LT              reduce using rule 129 (tagcar -> empty .)
    LE              reduce using rule 129 (tagcar -> empty .)
    GE              reduce using rule 129 (tagcar -> empty .)
    DIF             reduce using rule 129 (tagcar -> empty .)
    SAME            reduce using rule 129 (tagcar -> empty .)
    AND             reduce using rule 129 (tagcar -> empty .)
    OR              reduce using rule 129 (tagcar -> empty .)
    RPARENT         reduce using rule 129 (tagcar -> empty .)
    PUNTOCOMA       reduce using rule 129 (tagcar -> empty .)
    ID              reduce using rule 129 (tagcar -> empty .)


state 198

    (125) varcte -> FALSE tagbol .

    MULT            reduce using rule 125 (varcte -> FALSE tagbol .)
    DIV             reduce using rule 125 (varcte -> FALSE tagbol .)
    SUMA            reduce using rule 125 (varcte -> FALSE tagbol .)
    RESTA           reduce using rule 125 (varcte -> FALSE tagbol .)
    COMA            reduce using rule 125 (varcte -> FALSE tagbol .)
    RPARENT         reduce using rule 125 (varcte -> FALSE tagbol .)
    AND             reduce using rule 125 (varcte -> FALSE tagbol .)
    OR              reduce using rule 125 (varcte -> FALSE tagbol .)
    PUNTOCOMA       reduce using rule 125 (varcte -> FALSE tagbol .)
    ID              reduce using rule 125 (varcte -> FALSE tagbol .)
    RBRACKET        reduce using rule 125 (varcte -> FALSE tagbol .)
    GT              reduce using rule 125 (varcte -> FALSE tagbol .)
    LT              reduce using rule 125 (varcte -> FALSE tagbol .)
    LE              reduce using rule 125 (varcte -> FALSE tagbol .)
    GE              reduce using rule 125 (varcte -> FALSE tagbol .)
    DIF             reduce using rule 125 (varcte -> FALSE tagbol .)
    SAME            reduce using rule 125 (varcte -> FALSE tagbol .)


state 199

    (50) decla1 -> LBRACKET decDimensionada exp saveLimSup . decla2
    (54) decla2 -> . RBRACKET guardaMemDimen declafinal
    (55) decla2 -> . COMA SigDimension exp saveLimSup decla2

    RBRACKET        shift and go to state 264
    COMA            shift and go to state 263

    decla2                         shift and go to state 262

state 200

    (53) saveLimSup -> empty .

    RBRACKET        reduce using rule 53 (saveLimSup -> empty .)
    COMA            reduce using rule 53 (saveLimSup -> empty .)


state 201

    (127) tagfloat -> empty .

    MULT            reduce using rule 127 (tagfloat -> empty .)
    DIV             reduce using rule 127 (tagfloat -> empty .)
    SUMA            reduce using rule 127 (tagfloat -> empty .)
    RESTA           reduce using rule 127 (tagfloat -> empty .)
    RBRACKET        reduce using rule 127 (tagfloat -> empty .)
    COMA            reduce using rule 127 (tagfloat -> empty .)
    GT              reduce using rule 127 (tagfloat -> empty .)
    LT              reduce using rule 127 (tagfloat -> empty .)
    LE              reduce using rule 127 (tagfloat -> empty .)
    GE              reduce using rule 127 (tagfloat -> empty .)
    DIF             reduce using rule 127 (tagfloat -> empty .)
    SAME            reduce using rule 127 (tagfloat -> empty .)
    AND             reduce using rule 127 (tagfloat -> empty .)
    OR              reduce using rule 127 (tagfloat -> empty .)
    RPARENT         reduce using rule 127 (tagfloat -> empty .)
    PUNTOCOMA       reduce using rule 127 (tagfloat -> empty .)
    ID              reduce using rule 127 (tagfloat -> empty .)


state 202

    (121) varcte -> FLOTANTE tagfloat .

    MULT            reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    DIV             reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    SUMA            reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    RESTA           reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    COMA            reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    RPARENT         reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    AND             reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    OR              reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    PUNTOCOMA       reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    ID              reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    RBRACKET        reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    GT              reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    LT              reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    LE              reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    GE              reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    DIF             reduce using rule 121 (varcte -> FLOTANTE tagfloat .)
    SAME            reduce using rule 121 (varcte -> FLOTANTE tagfloat .)


state 203

    (171) funct11 -> function4 .

    FUNCTION        reduce using rule 171 (funct11 -> function4 .)
    LKEY            reduce using rule 171 (funct11 -> function4 .)


state 204

    (168) pfunc -> tipo ID buildFunc LPARENT funct11 .

    FUNCTION        reduce using rule 168 (pfunc -> tipo ID buildFunc LPARENT funct11 .)
    LKEY            reduce using rule 168 (pfunc -> tipo ID buildFunc LPARENT funct11 .)


state 205

    (178) function4 -> RPARENT . initFunc bloque noinitFunc
    (179) initFunc -> . empty
    (192) empty -> .

    LKEY            reduce using rule 192 (empty -> .)

    initFunc                       shift and go to state 265
    empty                          shift and go to state 266

state 206

    (172) funct11 -> initParamTable . funct2
    (174) funct2 -> . tipo ID initParams funct3
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 15
    STRING          shift and go to state 12
    BOOL            shift and go to state 19

    funct2                         shift and go to state 268
    tipo                           shift and go to state 267

state 207

    (173) initParamTable -> empty .

    INT             reduce using rule 173 (initParamTable -> empty .)
    FLOAT           reduce using rule 173 (initParamTable -> empty .)
    CHAR            reduce using rule 173 (initParamTable -> empty .)
    STRING          reduce using rule 173 (initParamTable -> empty .)
    BOOL            reduce using rule 173 (initParamTable -> empty .)


state 208

    (169) pfunc -> VOID ID buildFunc LPARENT funct11 .

    FUNCTION        reduce using rule 169 (pfunc -> VOID ID buildFunc LPARENT funct11 .)
    LKEY            reduce using rule 169 (pfunc -> VOID ID buildFunc LPARENT funct11 .)


state 209

    (135) ciclodowhile -> DO taginiciado bloque WHILE . LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA

    LPARENT         shift and go to state 269


state 210

    (138) read -> READ LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    READ            reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    READINT         reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    LPARENT         reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    ENTERO          reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    FLOTANTE        reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    CADENA          reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    CARACTER        reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    TRUE            reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    FALSE           reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    RPARENT         reduce using rule 138 (read -> READ LPARENT RPARENT PUNTOCOMA .)


state 211

    (161) mueve -> MUEVE LPARENT exp COMA . exp RPARENT tagmueve PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 270

state 212

    (131) ciclowhile -> WHILE taginiciawhile LPARENT expresion . RPARENT tagwhile bloque tagregresawhile

    RPARENT         shift and go to state 271


state 213

    (165) trapecio -> TRAPECIO LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 272

state 214

    (26) expre2 -> AND . tagmetelog expresion tagsacalog
    (28) tagmetelog -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagmetelog                     shift and go to state 273
    empty                          shift and go to state 274

state 215

    (23) expresion -> expresion2 expre .

    PUNTOCOMA       reduce using rule 23 (expresion -> expresion2 expre .)
    RPARENT         reduce using rule 23 (expresion -> expresion2 expre .)
    ID              reduce using rule 23 (expresion -> expresion2 expre .)


state 216

    (24) expre -> expre2 .

    RPARENT         reduce using rule 24 (expre -> expre2 .)
    PUNTOCOMA       reduce using rule 24 (expre -> expre2 .)
    ID              reduce using rule 24 (expre -> expre2 .)


state 217

    (27) expre2 -> OR . tagmetelog expresion tagsacalog
    (28) tagmetelog -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagmetelog                     shift and go to state 275
    empty                          shift and go to state 274

state 218

    (25) expre -> empty .

    RPARENT         reduce using rule 25 (expre -> empty .)
    PUNTOCOMA       reduce using rule 25 (expre -> empty .)
    ID              reduce using rule 25 (expre -> empty .)


state 219

    (77) pr2 -> expresion pr3 .

    ID              reduce using rule 77 (pr2 -> expresion pr3 .)
    PRINT           reduce using rule 77 (pr2 -> expresion pr3 .)
    WHILE           reduce using rule 77 (pr2 -> expresion pr3 .)
    DO              reduce using rule 77 (pr2 -> expresion pr3 .)
    FOR             reduce using rule 77 (pr2 -> expresion pr3 .)
    READ            reduce using rule 77 (pr2 -> expresion pr3 .)
    READINT         reduce using rule 77 (pr2 -> expresion pr3 .)
    COMENTARIO      reduce using rule 77 (pr2 -> expresion pr3 .)
    CUADRADO        reduce using rule 77 (pr2 -> expresion pr3 .)
    TRIANGULO       reduce using rule 77 (pr2 -> expresion pr3 .)
    CASA            reduce using rule 77 (pr2 -> expresion pr3 .)
    RECTANGULO      reduce using rule 77 (pr2 -> expresion pr3 .)
    CUBO            reduce using rule 77 (pr2 -> expresion pr3 .)
    TRAPECIO        reduce using rule 77 (pr2 -> expresion pr3 .)
    ESTRELLA        reduce using rule 77 (pr2 -> expresion pr3 .)
    MUEVE           reduce using rule 77 (pr2 -> expresion pr3 .)
    LEVANTA         reduce using rule 77 (pr2 -> expresion pr3 .)
    APOYA           reduce using rule 77 (pr2 -> expresion pr3 .)
    DIMENSION       reduce using rule 77 (pr2 -> expresion pr3 .)
    RETURN          reduce using rule 77 (pr2 -> expresion pr3 .)
    IF              reduce using rule 77 (pr2 -> expresion pr3 .)
    RKEY            reduce using rule 77 (pr2 -> expresion pr3 .)


state 220

    (78) pr3 -> tagimprime . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 276


state 221

    (79) tagimprime -> empty .

    RPARENT         reduce using rule 79 (tagimprime -> empty .)


state 222

    (36) e3 -> GE . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagrel                         shift and go to state 277
    empty                          shift and go to state 278

state 223

    (37) e3 -> DIF . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagrel                         shift and go to state 279
    empty                          shift and go to state 278

state 224

    (35) e3 -> LE . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagrel                         shift and go to state 280
    empty                          shift and go to state 278

state 225

    (38) e3 -> SAME . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagrel                         shift and go to state 281
    empty                          shift and go to state 278

state 226

    (34) e3 -> LT . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagrel                         shift and go to state 282
    empty                          shift and go to state 278

state 227

    (33) e3 -> GT . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagrel                         shift and go to state 283
    empty                          shift and go to state 278

state 228

    (31) e2 -> e3 .

    AND             reduce using rule 31 (e2 -> e3 .)
    OR              reduce using rule 31 (e2 -> e3 .)
    RPARENT         reduce using rule 31 (e2 -> e3 .)
    PUNTOCOMA       reduce using rule 31 (e2 -> e3 .)
    ID              reduce using rule 31 (e2 -> e3 .)


state 229

    (32) e2 -> empty .

    AND             reduce using rule 32 (e2 -> empty .)
    OR              reduce using rule 32 (e2 -> empty .)
    RPARENT         reduce using rule 32 (e2 -> empty .)
    PUNTOCOMA       reduce using rule 32 (e2 -> empty .)
    ID              reduce using rule 32 (e2 -> empty .)


state 230

    (30) expresion2 -> exp e2 .

    AND             reduce using rule 30 (expresion2 -> exp e2 .)
    OR              reduce using rule 30 (expresion2 -> exp e2 .)
    RPARENT         reduce using rule 30 (expresion2 -> exp e2 .)
    PUNTOCOMA       reduce using rule 30 (expresion2 -> exp e2 .)
    ID              reduce using rule 30 (expresion2 -> exp e2 .)


state 231

    (157) casa -> CASA LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 284

state 232

    (159) cubo -> CUBO LPARENT exp COMA . exp COMA exp RPARENT tagcubo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 285

state 233

    (154) triangulo -> TRIANGULO LPARENT exp COMA . exp COMA exp RPARENT tagtriangulo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 286

state 234

    (140) ciclofor -> FOR LPARENT asignacion expresion . tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor
    (141) tagevaluafor -> . empty
    (192) empty -> .

    ID              reduce using rule 192 (empty -> .)

    tagevaluafor                   shift and go to state 287
    empty                          shift and go to state 288

state 235

    (163) levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    READ            reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    READINT         reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 163 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)


state 236

    (156) rectangulo -> RECTANGULO LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 289

state 237

    (187) llamaf4 -> RPARENT . tagterminallamada PUNTOCOMA
    (191) tagterminallamada -> . empty
    (192) empty -> .

    PUNTOCOMA       reduce using rule 192 (empty -> .)

    tagterminallamada              shift and go to state 290
    empty                          shift and go to state 291

state 238

    (182) llamaf11 -> llamaf2 .

    ID              reduce using rule 182 (llamaf11 -> llamaf2 .)
    PRINT           reduce using rule 182 (llamaf11 -> llamaf2 .)
    WHILE           reduce using rule 182 (llamaf11 -> llamaf2 .)
    DO              reduce using rule 182 (llamaf11 -> llamaf2 .)
    FOR             reduce using rule 182 (llamaf11 -> llamaf2 .)
    READ            reduce using rule 182 (llamaf11 -> llamaf2 .)
    READINT         reduce using rule 182 (llamaf11 -> llamaf2 .)
    COMENTARIO      reduce using rule 182 (llamaf11 -> llamaf2 .)
    CUADRADO        reduce using rule 182 (llamaf11 -> llamaf2 .)
    TRIANGULO       reduce using rule 182 (llamaf11 -> llamaf2 .)
    CASA            reduce using rule 182 (llamaf11 -> llamaf2 .)
    RECTANGULO      reduce using rule 182 (llamaf11 -> llamaf2 .)
    CUBO            reduce using rule 182 (llamaf11 -> llamaf2 .)
    TRAPECIO        reduce using rule 182 (llamaf11 -> llamaf2 .)
    ESTRELLA        reduce using rule 182 (llamaf11 -> llamaf2 .)
    MUEVE           reduce using rule 182 (llamaf11 -> llamaf2 .)
    LEVANTA         reduce using rule 182 (llamaf11 -> llamaf2 .)
    APOYA           reduce using rule 182 (llamaf11 -> llamaf2 .)
    DIMENSION       reduce using rule 182 (llamaf11 -> llamaf2 .)
    RETURN          reduce using rule 182 (llamaf11 -> llamaf2 .)
    IF              reduce using rule 182 (llamaf11 -> llamaf2 .)
    RKEY            reduce using rule 182 (llamaf11 -> llamaf2 .)
    MULT            reduce using rule 182 (llamaf11 -> llamaf2 .)
    DIV             reduce using rule 182 (llamaf11 -> llamaf2 .)
    SUMA            reduce using rule 182 (llamaf11 -> llamaf2 .)
    RESTA           reduce using rule 182 (llamaf11 -> llamaf2 .)
    RBRACKET        reduce using rule 182 (llamaf11 -> llamaf2 .)
    COMA            reduce using rule 182 (llamaf11 -> llamaf2 .)
    GT              reduce using rule 182 (llamaf11 -> llamaf2 .)
    LT              reduce using rule 182 (llamaf11 -> llamaf2 .)
    LE              reduce using rule 182 (llamaf11 -> llamaf2 .)
    GE              reduce using rule 182 (llamaf11 -> llamaf2 .)
    DIF             reduce using rule 182 (llamaf11 -> llamaf2 .)
    SAME            reduce using rule 182 (llamaf11 -> llamaf2 .)
    AND             reduce using rule 182 (llamaf11 -> llamaf2 .)
    OR              reduce using rule 182 (llamaf11 -> llamaf2 .)
    RPARENT         reduce using rule 182 (llamaf11 -> llamaf2 .)
    PUNTOCOMA       reduce using rule 182 (llamaf11 -> llamaf2 .)


state 239

    (183) llamaf11 -> llamaf4 .

    ID              reduce using rule 183 (llamaf11 -> llamaf4 .)
    PRINT           reduce using rule 183 (llamaf11 -> llamaf4 .)
    WHILE           reduce using rule 183 (llamaf11 -> llamaf4 .)
    DO              reduce using rule 183 (llamaf11 -> llamaf4 .)
    FOR             reduce using rule 183 (llamaf11 -> llamaf4 .)
    READ            reduce using rule 183 (llamaf11 -> llamaf4 .)
    READINT         reduce using rule 183 (llamaf11 -> llamaf4 .)
    COMENTARIO      reduce using rule 183 (llamaf11 -> llamaf4 .)
    CUADRADO        reduce using rule 183 (llamaf11 -> llamaf4 .)
    TRIANGULO       reduce using rule 183 (llamaf11 -> llamaf4 .)
    CASA            reduce using rule 183 (llamaf11 -> llamaf4 .)
    RECTANGULO      reduce using rule 183 (llamaf11 -> llamaf4 .)
    CUBO            reduce using rule 183 (llamaf11 -> llamaf4 .)
    TRAPECIO        reduce using rule 183 (llamaf11 -> llamaf4 .)
    ESTRELLA        reduce using rule 183 (llamaf11 -> llamaf4 .)
    MUEVE           reduce using rule 183 (llamaf11 -> llamaf4 .)
    LEVANTA         reduce using rule 183 (llamaf11 -> llamaf4 .)
    APOYA           reduce using rule 183 (llamaf11 -> llamaf4 .)
    DIMENSION       reduce using rule 183 (llamaf11 -> llamaf4 .)
    RETURN          reduce using rule 183 (llamaf11 -> llamaf4 .)
    IF              reduce using rule 183 (llamaf11 -> llamaf4 .)
    RKEY            reduce using rule 183 (llamaf11 -> llamaf4 .)
    MULT            reduce using rule 183 (llamaf11 -> llamaf4 .)
    DIV             reduce using rule 183 (llamaf11 -> llamaf4 .)
    SUMA            reduce using rule 183 (llamaf11 -> llamaf4 .)
    RESTA           reduce using rule 183 (llamaf11 -> llamaf4 .)
    RBRACKET        reduce using rule 183 (llamaf11 -> llamaf4 .)
    COMA            reduce using rule 183 (llamaf11 -> llamaf4 .)
    GT              reduce using rule 183 (llamaf11 -> llamaf4 .)
    LT              reduce using rule 183 (llamaf11 -> llamaf4 .)
    LE              reduce using rule 183 (llamaf11 -> llamaf4 .)
    GE              reduce using rule 183 (llamaf11 -> llamaf4 .)
    DIF             reduce using rule 183 (llamaf11 -> llamaf4 .)
    SAME            reduce using rule 183 (llamaf11 -> llamaf4 .)
    AND             reduce using rule 183 (llamaf11 -> llamaf4 .)
    OR              reduce using rule 183 (llamaf11 -> llamaf4 .)
    RPARENT         reduce using rule 183 (llamaf11 -> llamaf4 .)
    PUNTOCOMA       reduce using rule 183 (llamaf11 -> llamaf4 .)


state 240

    (184) llamaf2 -> exp . tagrevisaparam llamaf3
    (189) tagrevisaparam -> . empty
    (192) empty -> .

    COMA            reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)

    tagrevisaparam                 shift and go to state 292
    empty                          shift and go to state 293

state 241

    (181) llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .

    MULT            reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    DIV             reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    SUMA            reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RESTA           reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    AND             reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    OR              reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RPARENT         reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    PUNTOCOMA       reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    ID              reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    GT              reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    LT              reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    LE              reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    GE              reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    DIF             reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    SAME            reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RBRACKET        reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    COMA            reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    PRINT           reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    WHILE           reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    DO              reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    FOR             reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    READ            reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    READINT         reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    COMENTARIO      reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    CUADRADO        reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    TRIANGULO       reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    CASA            reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RECTANGULO      reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    CUBO            reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    TRAPECIO        reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    ESTRELLA        reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    MUEVE           reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    LEVANTA         reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    APOYA           reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    DIMENSION       reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RETURN          reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    IF              reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RKEY            reduce using rule 181 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)


state 242

    (66) asig2 -> LBRACKET exp . asig3
    (68) asig3 -> . COMA exp asig3
    (69) asig3 -> . RBRACKET asigfinal

    COMA            shift and go to state 295
    RBRACKET        shift and go to state 296

    asig3                          shift and go to state 294

state 243

    (74) tagmeteig -> empty .

    READ            reduce using rule 74 (tagmeteig -> empty .)
    READINT         reduce using rule 74 (tagmeteig -> empty .)
    LPARENT         reduce using rule 74 (tagmeteig -> empty .)
    ID              reduce using rule 74 (tagmeteig -> empty .)
    ENTERO          reduce using rule 74 (tagmeteig -> empty .)
    FLOTANTE        reduce using rule 74 (tagmeteig -> empty .)
    CADENA          reduce using rule 74 (tagmeteig -> empty .)
    CARACTER        reduce using rule 74 (tagmeteig -> empty .)
    TRUE            reduce using rule 74 (tagmeteig -> empty .)
    FALSE           reduce using rule 74 (tagmeteig -> empty .)


state 244

    (70) asigfinal -> IGUAL tagmeteig . asigf2
    (71) asigf2 -> . expresion tagig PUNTOCOMA
    (72) asigf2 -> . read tagig
    (73) asigf2 -> . readint tagig
    (23) expresion -> . expresion2 expre
    (138) read -> . READ LPARENT RPARENT PUNTOCOMA
    (139) readint -> . READINT LPARENT RPARENT PUNTOCOMA
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    READ            shift and go to state 54
    READINT         shift and go to state 95
    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    asigf2                         shift and go to state 297
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    readint                        shift and go to state 298
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    expresion2                     shift and go to state 160
    read                           shift and go to state 299
    expresion                      shift and go to state 300
    exp                            shift and go to state 163

state 245

    (166) dimension -> DIMENSION LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 301


state 246

    (144) if -> IF LPARENT expresion tagif . RPARENT bloque if2

    RPARENT         shift and go to state 302


state 247

    (147) tagif -> empty .

    RPARENT         reduce using rule 147 (tagif -> empty .)


state 248

    (158) estrella -> ESTRELLA LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 303


state 249

    (150) return -> RETURN llegoRet expresion PUNTOCOMA .

    ID              reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    PRINT           reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    WHILE           reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    DO              reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    FOR             reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    READ            reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    READINT         reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    COMENTARIO      reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    CUADRADO        reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    TRIANGULO       reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    CASA            reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    RECTANGULO      reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    CUBO            reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    TRAPECIO        reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    ESTRELLA        reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    MUEVE           reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    LEVANTA         reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    APOYA           reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    DIMENSION       reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    RETURN          reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    IF              reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    RKEY            reduce using rule 150 (return -> RETURN llegoRet expresion PUNTOCOMA .)


state 250

    (139) readint -> READINT LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    READ            reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    READINT         reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    LPARENT         reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    ENTERO          reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    FLOTANTE        reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    CADENA          reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    CARACTER        reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    TRUE            reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    FALSE           reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    RPARENT         reduce using rule 139 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)


state 251

    (152) cuadrado -> CUADRADO LPARENT exp COMA . exp COMA exp RPARENT tagcuadro PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 304

state 252

    (164) apoya -> APOYA LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    READ            reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    READINT         reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 164 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)


state 253

    (41) exp -> termino tagsacops exp2 .

    GT              reduce using rule 41 (exp -> termino tagsacops exp2 .)
    LT              reduce using rule 41 (exp -> termino tagsacops exp2 .)
    LE              reduce using rule 41 (exp -> termino tagsacops exp2 .)
    GE              reduce using rule 41 (exp -> termino tagsacops exp2 .)
    DIF             reduce using rule 41 (exp -> termino tagsacops exp2 .)
    SAME            reduce using rule 41 (exp -> termino tagsacops exp2 .)
    AND             reduce using rule 41 (exp -> termino tagsacops exp2 .)
    OR              reduce using rule 41 (exp -> termino tagsacops exp2 .)
    PUNTOCOMA       reduce using rule 41 (exp -> termino tagsacops exp2 .)
    RBRACKET        reduce using rule 41 (exp -> termino tagsacops exp2 .)
    COMA            reduce using rule 41 (exp -> termino tagsacops exp2 .)
    RPARENT         reduce using rule 41 (exp -> termino tagsacops exp2 .)
    ID              reduce using rule 41 (exp -> termino tagsacops exp2 .)


state 254

    (44) exp2 -> empty .

    RBRACKET        reduce using rule 44 (exp2 -> empty .)
    COMA            reduce using rule 44 (exp2 -> empty .)
    GT              reduce using rule 44 (exp2 -> empty .)
    LT              reduce using rule 44 (exp2 -> empty .)
    LE              reduce using rule 44 (exp2 -> empty .)
    GE              reduce using rule 44 (exp2 -> empty .)
    DIF             reduce using rule 44 (exp2 -> empty .)
    SAME            reduce using rule 44 (exp2 -> empty .)
    AND             reduce using rule 44 (exp2 -> empty .)
    OR              reduce using rule 44 (exp2 -> empty .)
    RPARENT         reduce using rule 44 (exp2 -> empty .)
    PUNTOCOMA       reduce using rule 44 (exp2 -> empty .)
    ID              reduce using rule 44 (exp2 -> empty .)


state 255

    (43) exp2 -> RESTA . tagop exp
    (45) tagop -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagop                          shift and go to state 305
    empty                          shift and go to state 306

state 256

    (42) exp2 -> SUMA . tagop exp
    (45) tagop -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagop                          shift and go to state 307
    empty                          shift and go to state 306

state 257

    (86) factor -> LPARENT tagfondofalso expresion . RPARENT tagsacafondo

    RPARENT         shift and go to state 308


state 258

    (82) te2 -> DIV . tagm termino
    (84) tagm -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagm                           shift and go to state 309
    empty                          shift and go to state 310

state 259

    (83) te2 -> empty .

    SUMA            reduce using rule 83 (te2 -> empty .)
    RESTA           reduce using rule 83 (te2 -> empty .)
    RBRACKET        reduce using rule 83 (te2 -> empty .)
    COMA            reduce using rule 83 (te2 -> empty .)
    GT              reduce using rule 83 (te2 -> empty .)
    LT              reduce using rule 83 (te2 -> empty .)
    LE              reduce using rule 83 (te2 -> empty .)
    GE              reduce using rule 83 (te2 -> empty .)
    DIF             reduce using rule 83 (te2 -> empty .)
    SAME            reduce using rule 83 (te2 -> empty .)
    AND             reduce using rule 83 (te2 -> empty .)
    OR              reduce using rule 83 (te2 -> empty .)
    RPARENT         reduce using rule 83 (te2 -> empty .)
    PUNTOCOMA       reduce using rule 83 (te2 -> empty .)
    ID              reduce using rule 83 (te2 -> empty .)


state 260

    (80) termino -> factor tagsacopm te2 .

    SUMA            reduce using rule 80 (termino -> factor tagsacopm te2 .)
    RESTA           reduce using rule 80 (termino -> factor tagsacopm te2 .)
    COMA            reduce using rule 80 (termino -> factor tagsacopm te2 .)
    AND             reduce using rule 80 (termino -> factor tagsacopm te2 .)
    OR              reduce using rule 80 (termino -> factor tagsacopm te2 .)
    RPARENT         reduce using rule 80 (termino -> factor tagsacopm te2 .)
    PUNTOCOMA       reduce using rule 80 (termino -> factor tagsacopm te2 .)
    ID              reduce using rule 80 (termino -> factor tagsacopm te2 .)
    RBRACKET        reduce using rule 80 (termino -> factor tagsacopm te2 .)
    GT              reduce using rule 80 (termino -> factor tagsacopm te2 .)
    LT              reduce using rule 80 (termino -> factor tagsacopm te2 .)
    LE              reduce using rule 80 (termino -> factor tagsacopm te2 .)
    GE              reduce using rule 80 (termino -> factor tagsacopm te2 .)
    DIF             reduce using rule 80 (termino -> factor tagsacopm te2 .)
    SAME            reduce using rule 80 (termino -> factor tagsacopm te2 .)


state 261

    (81) te2 -> MULT . tagm termino
    (84) tagm -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagm                           shift and go to state 311
    empty                          shift and go to state 310

state 262

    (50) decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .

    INT             reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    FLOAT           reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    CHAR            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    STRING          reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    BOOL            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    FUNCTION        reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    LKEY            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    ID              reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    PRINT           reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    WHILE           reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    DO              reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    FOR             reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    READ            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    READINT         reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    COMENTARIO      reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    CUADRADO        reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    TRIANGULO       reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    CASA            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    RECTANGULO      reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    CUBO            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    TRAPECIO        reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    ESTRELLA        reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    MUEVE           reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    LEVANTA         reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    APOYA           reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    DIMENSION       reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    RETURN          reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    IF              reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    RKEY            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)


state 263

    (55) decla2 -> COMA . SigDimension exp saveLimSup decla2
    (56) SigDimension -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    empty                          shift and go to state 313
    SigDimension                   shift and go to state 312

state 264

    (54) decla2 -> RBRACKET . guardaMemDimen declafinal
    (57) guardaMemDimen -> . empty
    (192) empty -> .

    PUNTOCOMA       reduce using rule 192 (empty -> .)

    guardaMemDimen                 shift and go to state 314
    empty                          shift and go to state 315

state 265

    (178) function4 -> RPARENT initFunc . bloque noinitFunc
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (192) empty -> .

    LKEY            reduce using rule 192 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 316
    empty                          shift and go to state 24

state 266

    (179) initFunc -> empty .

    LKEY            reduce using rule 179 (initFunc -> empty .)


state 267

    (174) funct2 -> tipo . ID initParams funct3

    ID              shift and go to state 317


state 268

    (172) funct11 -> initParamTable funct2 .

    FUNCTION        reduce using rule 172 (funct11 -> initParamTable funct2 .)
    LKEY            reduce using rule 172 (funct11 -> initParamTable funct2 .)


state 269

    (135) ciclodowhile -> DO taginiciado bloque WHILE LPARENT . expresion tagcondiciondo RPARENT PUNTOCOMA
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    expresion2                     shift and go to state 160
    expresion                      shift and go to state 318
    exp                            shift and go to state 163

state 270

    (161) mueve -> MUEVE LPARENT exp COMA exp . RPARENT tagmueve PUNTOCOMA

    RPARENT         shift and go to state 319


state 271

    (131) ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT . tagwhile bloque tagregresawhile
    (133) tagwhile -> . empty
    (192) empty -> .

    LKEY            reduce using rule 192 (empty -> .)

    tagwhile                       shift and go to state 320
    empty                          shift and go to state 321

state 272

    (165) trapecio -> TRAPECIO LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 322


state 273

    (26) expre2 -> AND tagmetelog . expresion tagsacalog
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    expresion2                     shift and go to state 160
    expresion                      shift and go to state 323
    exp                            shift and go to state 163

state 274

    (28) tagmetelog -> empty .

    LPARENT         reduce using rule 28 (tagmetelog -> empty .)
    ID              reduce using rule 28 (tagmetelog -> empty .)
    ENTERO          reduce using rule 28 (tagmetelog -> empty .)
    FLOTANTE        reduce using rule 28 (tagmetelog -> empty .)
    CADENA          reduce using rule 28 (tagmetelog -> empty .)
    CARACTER        reduce using rule 28 (tagmetelog -> empty .)
    TRUE            reduce using rule 28 (tagmetelog -> empty .)
    FALSE           reduce using rule 28 (tagmetelog -> empty .)


state 275

    (27) expre2 -> OR tagmetelog . expresion tagsacalog
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    expresion2                     shift and go to state 160
    expresion                      shift and go to state 324
    exp                            shift and go to state 163

state 276

    (78) pr3 -> tagimprime RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 325


state 277

    (36) e3 -> GE tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 326

state 278

    (39) tagrel -> empty .

    LPARENT         reduce using rule 39 (tagrel -> empty .)
    ID              reduce using rule 39 (tagrel -> empty .)
    ENTERO          reduce using rule 39 (tagrel -> empty .)
    FLOTANTE        reduce using rule 39 (tagrel -> empty .)
    CADENA          reduce using rule 39 (tagrel -> empty .)
    CARACTER        reduce using rule 39 (tagrel -> empty .)
    TRUE            reduce using rule 39 (tagrel -> empty .)
    FALSE           reduce using rule 39 (tagrel -> empty .)


state 279

    (37) e3 -> DIF tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 327

state 280

    (35) e3 -> LE tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 328

state 281

    (38) e3 -> SAME tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 329

state 282

    (34) e3 -> LT tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 330

state 283

    (33) e3 -> GT tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 331

state 284

    (157) casa -> CASA LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 332


state 285

    (159) cubo -> CUBO LPARENT exp COMA exp . COMA exp RPARENT tagcubo PUNTOCOMA

    COMA            shift and go to state 333


state 286

    (154) triangulo -> TRIANGULO LPARENT exp COMA exp . COMA exp RPARENT tagtriangulo PUNTOCOMA

    COMA            shift and go to state 334


state 287

    (140) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor . asignacion RPARENT bloque tagasigna tagterminafor
    (64) asignacion -> . ID meteid asig2

    ID              shift and go to state 168

    asignacion                     shift and go to state 335

state 288

    (141) tagevaluafor -> empty .

    ID              reduce using rule 141 (tagevaluafor -> empty .)


state 289

    (156) rectangulo -> RECTANGULO LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 336


state 290

    (187) llamaf4 -> RPARENT tagterminallamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 337


state 291

    (191) tagterminallamada -> empty .

    PUNTOCOMA       reduce using rule 191 (tagterminallamada -> empty .)


state 292

    (184) llamaf2 -> exp tagrevisaparam . llamaf3
    (185) llamaf3 -> . COMA tagotroargumento llamaf2
    (186) llamaf3 -> . llamaf4
    (187) llamaf4 -> . RPARENT tagterminallamada PUNTOCOMA

    COMA            shift and go to state 340
    RPARENT         shift and go to state 237

    llamaf4                        shift and go to state 338
    llamaf3                        shift and go to state 339

state 293

    (189) tagrevisaparam -> empty .

    COMA            reduce using rule 189 (tagrevisaparam -> empty .)
    RPARENT         reduce using rule 189 (tagrevisaparam -> empty .)


state 294

    (66) asig2 -> LBRACKET exp asig3 .

    ID              reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    PRINT           reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    WHILE           reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    DO              reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    FOR             reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    READ            reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    READINT         reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    COMENTARIO      reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    CUADRADO        reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    TRIANGULO       reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    CASA            reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    RECTANGULO      reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    CUBO            reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    TRAPECIO        reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    ESTRELLA        reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    MUEVE           reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    LEVANTA         reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    APOYA           reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    DIMENSION       reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    RETURN          reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    IF              reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    RKEY            reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    LPARENT         reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    ENTERO          reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    FLOTANTE        reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    CADENA          reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    CARACTER        reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    TRUE            reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    FALSE           reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)
    RPARENT         reduce using rule 66 (asig2 -> LBRACKET exp asig3 .)


state 295

    (68) asig3 -> COMA . exp asig3
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 341

state 296

    (69) asig3 -> RBRACKET . asigfinal
    (70) asigfinal -> . IGUAL tagmeteig asigf2

    IGUAL           shift and go to state 176

    asigfinal                      shift and go to state 342

state 297

    (70) asigfinal -> IGUAL tagmeteig asigf2 .

    ID              reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    PRINT           reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    WHILE           reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    DO              reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    FOR             reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    READ            reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    READINT         reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    COMENTARIO      reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    CUADRADO        reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    TRIANGULO       reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    CASA            reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    RECTANGULO      reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    CUBO            reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    TRAPECIO        reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    ESTRELLA        reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    MUEVE           reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    LEVANTA         reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    APOYA           reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    DIMENSION       reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    RETURN          reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    IF              reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    RKEY            reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    LPARENT         reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    ENTERO          reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    FLOTANTE        reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    CADENA          reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    CARACTER        reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    TRUE            reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    FALSE           reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)
    RPARENT         reduce using rule 70 (asigfinal -> IGUAL tagmeteig asigf2 .)


state 298

    (73) asigf2 -> readint . tagig
    (75) tagig -> . empty
    (192) empty -> .

    ID              reduce using rule 192 (empty -> .)
    PRINT           reduce using rule 192 (empty -> .)
    WHILE           reduce using rule 192 (empty -> .)
    DO              reduce using rule 192 (empty -> .)
    FOR             reduce using rule 192 (empty -> .)
    READ            reduce using rule 192 (empty -> .)
    READINT         reduce using rule 192 (empty -> .)
    COMENTARIO      reduce using rule 192 (empty -> .)
    CUADRADO        reduce using rule 192 (empty -> .)
    TRIANGULO       reduce using rule 192 (empty -> .)
    CASA            reduce using rule 192 (empty -> .)
    RECTANGULO      reduce using rule 192 (empty -> .)
    CUBO            reduce using rule 192 (empty -> .)
    TRAPECIO        reduce using rule 192 (empty -> .)
    ESTRELLA        reduce using rule 192 (empty -> .)
    MUEVE           reduce using rule 192 (empty -> .)
    LEVANTA         reduce using rule 192 (empty -> .)
    APOYA           reduce using rule 192 (empty -> .)
    DIMENSION       reduce using rule 192 (empty -> .)
    RETURN          reduce using rule 192 (empty -> .)
    IF              reduce using rule 192 (empty -> .)
    RKEY            reduce using rule 192 (empty -> .)
    LPARENT         reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)

    tagig                          shift and go to state 343
    empty                          shift and go to state 344

state 299

    (72) asigf2 -> read . tagig
    (75) tagig -> . empty
    (192) empty -> .

    ID              reduce using rule 192 (empty -> .)
    PRINT           reduce using rule 192 (empty -> .)
    WHILE           reduce using rule 192 (empty -> .)
    DO              reduce using rule 192 (empty -> .)
    FOR             reduce using rule 192 (empty -> .)
    READ            reduce using rule 192 (empty -> .)
    READINT         reduce using rule 192 (empty -> .)
    COMENTARIO      reduce using rule 192 (empty -> .)
    CUADRADO        reduce using rule 192 (empty -> .)
    TRIANGULO       reduce using rule 192 (empty -> .)
    CASA            reduce using rule 192 (empty -> .)
    RECTANGULO      reduce using rule 192 (empty -> .)
    CUBO            reduce using rule 192 (empty -> .)
    TRAPECIO        reduce using rule 192 (empty -> .)
    ESTRELLA        reduce using rule 192 (empty -> .)
    MUEVE           reduce using rule 192 (empty -> .)
    LEVANTA         reduce using rule 192 (empty -> .)
    APOYA           reduce using rule 192 (empty -> .)
    DIMENSION       reduce using rule 192 (empty -> .)
    RETURN          reduce using rule 192 (empty -> .)
    IF              reduce using rule 192 (empty -> .)
    RKEY            reduce using rule 192 (empty -> .)
    LPARENT         reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)

    tagig                          shift and go to state 345
    empty                          shift and go to state 344

state 300

    (71) asigf2 -> expresion . tagig PUNTOCOMA
    (75) tagig -> . empty
    (192) empty -> .

    PUNTOCOMA       reduce using rule 192 (empty -> .)

    tagig                          shift and go to state 346
    empty                          shift and go to state 344

state 301

    (166) dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    READ            reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    READINT         reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 166 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)


state 302

    (144) if -> IF LPARENT expresion tagif RPARENT . bloque if2
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (192) empty -> .

    LKEY            reduce using rule 192 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 347
    empty                          shift and go to state 24

state 303

    (158) estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    READ            reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    READINT         reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 158 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)


state 304

    (152) cuadrado -> CUADRADO LPARENT exp COMA exp . COMA exp RPARENT tagcuadro PUNTOCOMA

    COMA            shift and go to state 348


state 305

    (43) exp2 -> RESTA tagop . exp
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 349

state 306

    (45) tagop -> empty .

    LPARENT         reduce using rule 45 (tagop -> empty .)
    ID              reduce using rule 45 (tagop -> empty .)
    ENTERO          reduce using rule 45 (tagop -> empty .)
    FLOTANTE        reduce using rule 45 (tagop -> empty .)
    CADENA          reduce using rule 45 (tagop -> empty .)
    CARACTER        reduce using rule 45 (tagop -> empty .)
    TRUE            reduce using rule 45 (tagop -> empty .)
    FALSE           reduce using rule 45 (tagop -> empty .)


state 307

    (42) exp2 -> SUMA tagop . exp
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 350

state 308

    (86) factor -> LPARENT tagfondofalso expresion RPARENT . tagsacafondo
    (93) tagsacafondo -> . empty
    (192) empty -> .

    MULT            reduce using rule 192 (empty -> .)
    DIV             reduce using rule 192 (empty -> .)
    SUMA            reduce using rule 192 (empty -> .)
    RESTA           reduce using rule 192 (empty -> .)
    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)
    GT              reduce using rule 192 (empty -> .)
    LT              reduce using rule 192 (empty -> .)
    LE              reduce using rule 192 (empty -> .)
    GE              reduce using rule 192 (empty -> .)
    DIF             reduce using rule 192 (empty -> .)
    SAME            reduce using rule 192 (empty -> .)
    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    empty                          shift and go to state 352
    tagsacafondo                   shift and go to state 351

state 309

    (82) te2 -> DIV tagm . termino
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    varcte                         shift and go to state 142
    f6                             shift and go to state 138
    llamafuncion                   shift and go to state 144
    termino                        shift and go to state 353
    factor                         shift and go to state 145

state 310

    (84) tagm -> empty .

    LPARENT         reduce using rule 84 (tagm -> empty .)
    ID              reduce using rule 84 (tagm -> empty .)
    ENTERO          reduce using rule 84 (tagm -> empty .)
    FLOTANTE        reduce using rule 84 (tagm -> empty .)
    CADENA          reduce using rule 84 (tagm -> empty .)
    CARACTER        reduce using rule 84 (tagm -> empty .)
    TRUE            reduce using rule 84 (tagm -> empty .)
    FALSE           reduce using rule 84 (tagm -> empty .)


state 311

    (81) te2 -> MULT tagm . termino
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    varcte                         shift and go to state 142
    f6                             shift and go to state 138
    llamafuncion                   shift and go to state 144
    termino                        shift and go to state 354
    factor                         shift and go to state 145

state 312

    (55) decla2 -> COMA SigDimension . exp saveLimSup decla2
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 355

state 313

    (56) SigDimension -> empty .

    LPARENT         reduce using rule 56 (SigDimension -> empty .)
    ID              reduce using rule 56 (SigDimension -> empty .)
    ENTERO          reduce using rule 56 (SigDimension -> empty .)
    FLOTANTE        reduce using rule 56 (SigDimension -> empty .)
    CADENA          reduce using rule 56 (SigDimension -> empty .)
    CARACTER        reduce using rule 56 (SigDimension -> empty .)
    TRUE            reduce using rule 56 (SigDimension -> empty .)
    FALSE           reduce using rule 56 (SigDimension -> empty .)


state 314

    (54) decla2 -> RBRACKET guardaMemDimen . declafinal
    (58) declafinal -> . PUNTOCOMA

    PUNTOCOMA       shift and go to state 103

    declafinal                     shift and go to state 356

state 315

    (57) guardaMemDimen -> empty .

    PUNTOCOMA       reduce using rule 57 (guardaMemDimen -> empty .)


state 316

    (178) function4 -> RPARENT initFunc bloque . noinitFunc
    (180) noinitFunc -> . empty
    (192) empty -> .

    FUNCTION        reduce using rule 192 (empty -> .)
    LKEY            reduce using rule 192 (empty -> .)

    noinitFunc                     shift and go to state 357
    empty                          shift and go to state 358

state 317

    (174) funct2 -> tipo ID . initParams funct3
    (175) initParams -> . empty
    (192) empty -> .

    COMA            reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)

    initParams                     shift and go to state 360
    empty                          shift and go to state 359

state 318

    (135) ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion . tagcondiciondo RPARENT PUNTOCOMA
    (137) tagcondiciondo -> . empty
    (192) empty -> .

    RPARENT         reduce using rule 192 (empty -> .)

    tagcondiciondo                 shift and go to state 361
    empty                          shift and go to state 362

state 319

    (161) mueve -> MUEVE LPARENT exp COMA exp RPARENT . tagmueve PUNTOCOMA
    (162) tagmueve -> . empty
    (192) empty -> .

    PUNTOCOMA       reduce using rule 192 (empty -> .)

    tagmueve                       shift and go to state 363
    empty                          shift and go to state 364

state 320

    (131) ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile . bloque tagregresawhile
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (192) empty -> .

    LKEY            reduce using rule 192 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 365
    empty                          shift and go to state 24

state 321

    (133) tagwhile -> empty .

    LKEY            reduce using rule 133 (tagwhile -> empty .)


state 322

    (165) trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 366


state 323

    (26) expre2 -> AND tagmetelog expresion . tagsacalog
    (29) tagsacalog -> . empty
    (192) empty -> .

    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagsacalog                     shift and go to state 367
    empty                          shift and go to state 368

state 324

    (27) expre2 -> OR tagmetelog expresion . tagsacalog
    (29) tagsacalog -> . empty
    (192) empty -> .

    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagsacalog                     shift and go to state 369
    empty                          shift and go to state 368

state 325

    (78) pr3 -> tagimprime RPARENT PUNTOCOMA .

    ID              reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    DO              reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    FOR             reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    READ            reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    READINT         reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    CASA            reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    IF              reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 78 (pr3 -> tagimprime RPARENT PUNTOCOMA .)


state 326

    (36) e3 -> GE tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (192) empty -> .

    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagsacrel                      shift and go to state 370
    empty                          shift and go to state 371

state 327

    (37) e3 -> DIF tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (192) empty -> .

    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagsacrel                      shift and go to state 372
    empty                          shift and go to state 371

state 328

    (35) e3 -> LE tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (192) empty -> .

    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagsacrel                      shift and go to state 373
    empty                          shift and go to state 371

state 329

    (38) e3 -> SAME tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (192) empty -> .

    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagsacrel                      shift and go to state 374
    empty                          shift and go to state 371

state 330

    (34) e3 -> LT tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (192) empty -> .

    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagsacrel                      shift and go to state 375
    empty                          shift and go to state 371

state 331

    (33) e3 -> GT tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (192) empty -> .

    AND             reduce using rule 192 (empty -> .)
    OR              reduce using rule 192 (empty -> .)
    RPARENT         reduce using rule 192 (empty -> .)
    PUNTOCOMA       reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)

    tagsacrel                      shift and go to state 376
    empty                          shift and go to state 371

state 332

    (157) casa -> CASA LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 377


state 333

    (159) cubo -> CUBO LPARENT exp COMA exp COMA . exp RPARENT tagcubo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 378

state 334

    (154) triangulo -> TRIANGULO LPARENT exp COMA exp COMA . exp RPARENT tagtriangulo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 379

state 335

    (140) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion . RPARENT bloque tagasigna tagterminafor

    RPARENT         shift and go to state 380


state 336

    (156) rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 381


state 337

    (187) llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .

    ID              reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    PRINT           reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    WHILE           reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    DO              reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    FOR             reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    READ            reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    READINT         reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    COMENTARIO      reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    CUADRADO        reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    TRIANGULO       reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    CASA            reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RECTANGULO      reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    CUBO            reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    TRAPECIO        reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    ESTRELLA        reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    MUEVE           reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    LEVANTA         reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    APOYA           reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    DIMENSION       reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RETURN          reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    IF              reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RKEY            reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    MULT            reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    DIV             reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    SUMA            reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RESTA           reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RBRACKET        reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    COMA            reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    GT              reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    LT              reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    LE              reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    GE              reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    DIF             reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    SAME            reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    AND             reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    OR              reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RPARENT         reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 187 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)


state 338

    (186) llamaf3 -> llamaf4 .

    ID              reduce using rule 186 (llamaf3 -> llamaf4 .)
    PRINT           reduce using rule 186 (llamaf3 -> llamaf4 .)
    WHILE           reduce using rule 186 (llamaf3 -> llamaf4 .)
    DO              reduce using rule 186 (llamaf3 -> llamaf4 .)
    FOR             reduce using rule 186 (llamaf3 -> llamaf4 .)
    READ            reduce using rule 186 (llamaf3 -> llamaf4 .)
    READINT         reduce using rule 186 (llamaf3 -> llamaf4 .)
    COMENTARIO      reduce using rule 186 (llamaf3 -> llamaf4 .)
    CUADRADO        reduce using rule 186 (llamaf3 -> llamaf4 .)
    TRIANGULO       reduce using rule 186 (llamaf3 -> llamaf4 .)
    CASA            reduce using rule 186 (llamaf3 -> llamaf4 .)
    RECTANGULO      reduce using rule 186 (llamaf3 -> llamaf4 .)
    CUBO            reduce using rule 186 (llamaf3 -> llamaf4 .)
    TRAPECIO        reduce using rule 186 (llamaf3 -> llamaf4 .)
    ESTRELLA        reduce using rule 186 (llamaf3 -> llamaf4 .)
    MUEVE           reduce using rule 186 (llamaf3 -> llamaf4 .)
    LEVANTA         reduce using rule 186 (llamaf3 -> llamaf4 .)
    APOYA           reduce using rule 186 (llamaf3 -> llamaf4 .)
    DIMENSION       reduce using rule 186 (llamaf3 -> llamaf4 .)
    RETURN          reduce using rule 186 (llamaf3 -> llamaf4 .)
    IF              reduce using rule 186 (llamaf3 -> llamaf4 .)
    RKEY            reduce using rule 186 (llamaf3 -> llamaf4 .)
    MULT            reduce using rule 186 (llamaf3 -> llamaf4 .)
    DIV             reduce using rule 186 (llamaf3 -> llamaf4 .)
    SUMA            reduce using rule 186 (llamaf3 -> llamaf4 .)
    RESTA           reduce using rule 186 (llamaf3 -> llamaf4 .)
    RBRACKET        reduce using rule 186 (llamaf3 -> llamaf4 .)
    COMA            reduce using rule 186 (llamaf3 -> llamaf4 .)
    GT              reduce using rule 186 (llamaf3 -> llamaf4 .)
    LT              reduce using rule 186 (llamaf3 -> llamaf4 .)
    LE              reduce using rule 186 (llamaf3 -> llamaf4 .)
    GE              reduce using rule 186 (llamaf3 -> llamaf4 .)
    DIF             reduce using rule 186 (llamaf3 -> llamaf4 .)
    SAME            reduce using rule 186 (llamaf3 -> llamaf4 .)
    AND             reduce using rule 186 (llamaf3 -> llamaf4 .)
    OR              reduce using rule 186 (llamaf3 -> llamaf4 .)
    RPARENT         reduce using rule 186 (llamaf3 -> llamaf4 .)
    PUNTOCOMA       reduce using rule 186 (llamaf3 -> llamaf4 .)


state 339

    (184) llamaf2 -> exp tagrevisaparam llamaf3 .

    ID              reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    PRINT           reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    WHILE           reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    DO              reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    FOR             reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    READ            reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    READINT         reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    COMENTARIO      reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    CUADRADO        reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    TRIANGULO       reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    CASA            reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RECTANGULO      reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    CUBO            reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    TRAPECIO        reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    ESTRELLA        reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    MUEVE           reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    LEVANTA         reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    APOYA           reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    DIMENSION       reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RETURN          reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    IF              reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RKEY            reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    MULT            reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    DIV             reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    SUMA            reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RESTA           reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RBRACKET        reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    COMA            reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    GT              reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    LT              reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    LE              reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    GE              reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    DIF             reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    SAME            reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    AND             reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    OR              reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RPARENT         reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    PUNTOCOMA       reduce using rule 184 (llamaf2 -> exp tagrevisaparam llamaf3 .)


state 340

    (185) llamaf3 -> COMA . tagotroargumento llamaf2
    (190) tagotroargumento -> . empty
    (192) empty -> .

    LPARENT         reduce using rule 192 (empty -> .)
    ID              reduce using rule 192 (empty -> .)
    ENTERO          reduce using rule 192 (empty -> .)
    FLOTANTE        reduce using rule 192 (empty -> .)
    CADENA          reduce using rule 192 (empty -> .)
    CARACTER        reduce using rule 192 (empty -> .)
    TRUE            reduce using rule 192 (empty -> .)
    FALSE           reduce using rule 192 (empty -> .)

    tagotroargumento               shift and go to state 382
    empty                          shift and go to state 383

state 341

    (68) asig3 -> COMA exp . asig3
    (68) asig3 -> . COMA exp asig3
    (69) asig3 -> . RBRACKET asigfinal

    COMA            shift and go to state 295
    RBRACKET        shift and go to state 296

    asig3                          shift and go to state 384

state 342

    (69) asig3 -> RBRACKET asigfinal .

    ID              reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    PRINT           reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    WHILE           reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    DO              reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    FOR             reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    READ            reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    READINT         reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    COMENTARIO      reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    CUADRADO        reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    TRIANGULO       reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    CASA            reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    RECTANGULO      reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    CUBO            reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    TRAPECIO        reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    ESTRELLA        reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    MUEVE           reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    LEVANTA         reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    APOYA           reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    DIMENSION       reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    RETURN          reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    IF              reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    RKEY            reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    LPARENT         reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    ENTERO          reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    FLOTANTE        reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    CADENA          reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    CARACTER        reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    TRUE            reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    FALSE           reduce using rule 69 (asig3 -> RBRACKET asigfinal .)
    RPARENT         reduce using rule 69 (asig3 -> RBRACKET asigfinal .)


state 343

    (73) asigf2 -> readint tagig .

    ID              reduce using rule 73 (asigf2 -> readint tagig .)
    PRINT           reduce using rule 73 (asigf2 -> readint tagig .)
    WHILE           reduce using rule 73 (asigf2 -> readint tagig .)
    DO              reduce using rule 73 (asigf2 -> readint tagig .)
    FOR             reduce using rule 73 (asigf2 -> readint tagig .)
    READ            reduce using rule 73 (asigf2 -> readint tagig .)
    READINT         reduce using rule 73 (asigf2 -> readint tagig .)
    COMENTARIO      reduce using rule 73 (asigf2 -> readint tagig .)
    CUADRADO        reduce using rule 73 (asigf2 -> readint tagig .)
    TRIANGULO       reduce using rule 73 (asigf2 -> readint tagig .)
    CASA            reduce using rule 73 (asigf2 -> readint tagig .)
    RECTANGULO      reduce using rule 73 (asigf2 -> readint tagig .)
    CUBO            reduce using rule 73 (asigf2 -> readint tagig .)
    TRAPECIO        reduce using rule 73 (asigf2 -> readint tagig .)
    ESTRELLA        reduce using rule 73 (asigf2 -> readint tagig .)
    MUEVE           reduce using rule 73 (asigf2 -> readint tagig .)
    LEVANTA         reduce using rule 73 (asigf2 -> readint tagig .)
    APOYA           reduce using rule 73 (asigf2 -> readint tagig .)
    DIMENSION       reduce using rule 73 (asigf2 -> readint tagig .)
    RETURN          reduce using rule 73 (asigf2 -> readint tagig .)
    IF              reduce using rule 73 (asigf2 -> readint tagig .)
    RKEY            reduce using rule 73 (asigf2 -> readint tagig .)
    LPARENT         reduce using rule 73 (asigf2 -> readint tagig .)
    ENTERO          reduce using rule 73 (asigf2 -> readint tagig .)
    FLOTANTE        reduce using rule 73 (asigf2 -> readint tagig .)
    CADENA          reduce using rule 73 (asigf2 -> readint tagig .)
    CARACTER        reduce using rule 73 (asigf2 -> readint tagig .)
    TRUE            reduce using rule 73 (asigf2 -> readint tagig .)
    FALSE           reduce using rule 73 (asigf2 -> readint tagig .)
    RPARENT         reduce using rule 73 (asigf2 -> readint tagig .)


state 344

    (75) tagig -> empty .

    ID              reduce using rule 75 (tagig -> empty .)
    PRINT           reduce using rule 75 (tagig -> empty .)
    WHILE           reduce using rule 75 (tagig -> empty .)
    DO              reduce using rule 75 (tagig -> empty .)
    FOR             reduce using rule 75 (tagig -> empty .)
    READ            reduce using rule 75 (tagig -> empty .)
    READINT         reduce using rule 75 (tagig -> empty .)
    COMENTARIO      reduce using rule 75 (tagig -> empty .)
    CUADRADO        reduce using rule 75 (tagig -> empty .)
    TRIANGULO       reduce using rule 75 (tagig -> empty .)
    CASA            reduce using rule 75 (tagig -> empty .)
    RECTANGULO      reduce using rule 75 (tagig -> empty .)
    CUBO            reduce using rule 75 (tagig -> empty .)
    TRAPECIO        reduce using rule 75 (tagig -> empty .)
    ESTRELLA        reduce using rule 75 (tagig -> empty .)
    MUEVE           reduce using rule 75 (tagig -> empty .)
    LEVANTA         reduce using rule 75 (tagig -> empty .)
    APOYA           reduce using rule 75 (tagig -> empty .)
    DIMENSION       reduce using rule 75 (tagig -> empty .)
    RETURN          reduce using rule 75 (tagig -> empty .)
    IF              reduce using rule 75 (tagig -> empty .)
    RKEY            reduce using rule 75 (tagig -> empty .)
    LPARENT         reduce using rule 75 (tagig -> empty .)
    ENTERO          reduce using rule 75 (tagig -> empty .)
    FLOTANTE        reduce using rule 75 (tagig -> empty .)
    CADENA          reduce using rule 75 (tagig -> empty .)
    CARACTER        reduce using rule 75 (tagig -> empty .)
    TRUE            reduce using rule 75 (tagig -> empty .)
    FALSE           reduce using rule 75 (tagig -> empty .)
    RPARENT         reduce using rule 75 (tagig -> empty .)
    PUNTOCOMA       reduce using rule 75 (tagig -> empty .)


state 345

    (72) asigf2 -> read tagig .

    ID              reduce using rule 72 (asigf2 -> read tagig .)
    PRINT           reduce using rule 72 (asigf2 -> read tagig .)
    WHILE           reduce using rule 72 (asigf2 -> read tagig .)
    DO              reduce using rule 72 (asigf2 -> read tagig .)
    FOR             reduce using rule 72 (asigf2 -> read tagig .)
    READ            reduce using rule 72 (asigf2 -> read tagig .)
    READINT         reduce using rule 72 (asigf2 -> read tagig .)
    COMENTARIO      reduce using rule 72 (asigf2 -> read tagig .)
    CUADRADO        reduce using rule 72 (asigf2 -> read tagig .)
    TRIANGULO       reduce using rule 72 (asigf2 -> read tagig .)
    CASA            reduce using rule 72 (asigf2 -> read tagig .)
    RECTANGULO      reduce using rule 72 (asigf2 -> read tagig .)
    CUBO            reduce using rule 72 (asigf2 -> read tagig .)
    TRAPECIO        reduce using rule 72 (asigf2 -> read tagig .)
    ESTRELLA        reduce using rule 72 (asigf2 -> read tagig .)
    MUEVE           reduce using rule 72 (asigf2 -> read tagig .)
    LEVANTA         reduce using rule 72 (asigf2 -> read tagig .)
    APOYA           reduce using rule 72 (asigf2 -> read tagig .)
    DIMENSION       reduce using rule 72 (asigf2 -> read tagig .)
    RETURN          reduce using rule 72 (asigf2 -> read tagig .)
    IF              reduce using rule 72 (asigf2 -> read tagig .)
    RKEY            reduce using rule 72 (asigf2 -> read tagig .)
    LPARENT         reduce using rule 72 (asigf2 -> read tagig .)
    ENTERO          reduce using rule 72 (asigf2 -> read tagig .)
    FLOTANTE        reduce using rule 72 (asigf2 -> read tagig .)
    CADENA          reduce using rule 72 (asigf2 -> read tagig .)
    CARACTER        reduce using rule 72 (asigf2 -> read tagig .)
    TRUE            reduce using rule 72 (asigf2 -> read tagig .)
    FALSE           reduce using rule 72 (asigf2 -> read tagig .)
    RPARENT         reduce using rule 72 (asigf2 -> read tagig .)


state 346

    (71) asigf2 -> expresion tagig . PUNTOCOMA

    PUNTOCOMA       shift and go to state 385


state 347

    (144) if -> IF LPARENT expresion tagif RPARENT bloque . if2
    (145) if2 -> . tagterminaif
    (146) if2 -> . ELSE tagelse bloque tagterminaif
    (149) tagterminaif -> . empty
    (192) empty -> .

    ELSE            shift and go to state 388
    ID              reduce using rule 192 (empty -> .)
    PRINT           reduce using rule 192 (empty -> .)
    WHILE           reduce using rule 192 (empty -> .)
    DO              reduce using rule 192 (empty -> .)
    FOR             reduce using rule 192 (empty -> .)
    READ            reduce using rule 192 (empty -> .)
    READINT         reduce using rule 192 (empty -> .)
    COMENTARIO      reduce using rule 192 (empty -> .)
    CUADRADO        reduce using rule 192 (empty -> .)
    TRIANGULO       reduce using rule 192 (empty -> .)
    CASA            reduce using rule 192 (empty -> .)
    RECTANGULO      reduce using rule 192 (empty -> .)
    CUBO            reduce using rule 192 (empty -> .)
    TRAPECIO        reduce using rule 192 (empty -> .)
    ESTRELLA        reduce using rule 192 (empty -> .)
    MUEVE           reduce using rule 192 (empty -> .)
    LEVANTA         reduce using rule 192 (empty -> .)
    APOYA           reduce using rule 192 (empty -> .)
    DIMENSION       reduce using rule 192 (empty -> .)
    RETURN          reduce using rule 192 (empty -> .)
    IF              reduce using rule 192 (empty -> .)
    RKEY            reduce using rule 192 (empty -> .)

    if2                            shift and go to state 386
    tagterminaif                   shift and go to state 387
    empty                          shift and go to state 389

state 348

    (152) cuadrado -> CUADRADO LPARENT exp COMA exp COMA . exp RPARENT tagcuadro PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    exp                            shift and go to state 390

state 349

    (43) exp2 -> RESTA tagop exp .

    RBRACKET        reduce using rule 43 (exp2 -> RESTA tagop exp .)
    COMA            reduce using rule 43 (exp2 -> RESTA tagop exp .)
    GT              reduce using rule 43 (exp2 -> RESTA tagop exp .)
    LT              reduce using rule 43 (exp2 -> RESTA tagop exp .)
    LE              reduce using rule 43 (exp2 -> RESTA tagop exp .)
    GE              reduce using rule 43 (exp2 -> RESTA tagop exp .)
    DIF             reduce using rule 43 (exp2 -> RESTA tagop exp .)
    SAME            reduce using rule 43 (exp2 -> RESTA tagop exp .)
    AND             reduce using rule 43 (exp2 -> RESTA tagop exp .)
    OR              reduce using rule 43 (exp2 -> RESTA tagop exp .)
    RPARENT         reduce using rule 43 (exp2 -> RESTA tagop exp .)
    PUNTOCOMA       reduce using rule 43 (exp2 -> RESTA tagop exp .)
    ID              reduce using rule 43 (exp2 -> RESTA tagop exp .)


state 350

    (42) exp2 -> SUMA tagop exp .

    RBRACKET        reduce using rule 42 (exp2 -> SUMA tagop exp .)
    COMA            reduce using rule 42 (exp2 -> SUMA tagop exp .)
    GT              reduce using rule 42 (exp2 -> SUMA tagop exp .)
    LT              reduce using rule 42 (exp2 -> SUMA tagop exp .)
    LE              reduce using rule 42 (exp2 -> SUMA tagop exp .)
    GE              reduce using rule 42 (exp2 -> SUMA tagop exp .)
    DIF             reduce using rule 42 (exp2 -> SUMA tagop exp .)
    SAME            reduce using rule 42 (exp2 -> SUMA tagop exp .)
    AND             reduce using rule 42 (exp2 -> SUMA tagop exp .)
    OR              reduce using rule 42 (exp2 -> SUMA tagop exp .)
    RPARENT         reduce using rule 42 (exp2 -> SUMA tagop exp .)
    PUNTOCOMA       reduce using rule 42 (exp2 -> SUMA tagop exp .)
    ID              reduce using rule 42 (exp2 -> SUMA tagop exp .)


state 351

    (86) factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .

    MULT            reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    DIV             reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    SUMA            reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RESTA           reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    GT              reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    LT              reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    LE              reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    GE              reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    DIF             reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    SAME            reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    AND             reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    OR              reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    PUNTOCOMA       reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    COMA            reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RPARENT         reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RBRACKET        reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    ID              reduce using rule 86 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)


state 352

    (93) tagsacafondo -> empty .

    MULT            reduce using rule 93 (tagsacafondo -> empty .)
    DIV             reduce using rule 93 (tagsacafondo -> empty .)
    SUMA            reduce using rule 93 (tagsacafondo -> empty .)
    RESTA           reduce using rule 93 (tagsacafondo -> empty .)
    RBRACKET        reduce using rule 93 (tagsacafondo -> empty .)
    COMA            reduce using rule 93 (tagsacafondo -> empty .)
    GT              reduce using rule 93 (tagsacafondo -> empty .)
    LT              reduce using rule 93 (tagsacafondo -> empty .)
    LE              reduce using rule 93 (tagsacafondo -> empty .)
    GE              reduce using rule 93 (tagsacafondo -> empty .)
    DIF             reduce using rule 93 (tagsacafondo -> empty .)
    SAME            reduce using rule 93 (tagsacafondo -> empty .)
    AND             reduce using rule 93 (tagsacafondo -> empty .)
    OR              reduce using rule 93 (tagsacafondo -> empty .)
    RPARENT         reduce using rule 93 (tagsacafondo -> empty .)
    PUNTOCOMA       reduce using rule 93 (tagsacafondo -> empty .)
    ID              reduce using rule 93 (tagsacafondo -> empty .)


state 353

    (82) te2 -> DIV tagm termino .

    SUMA            reduce using rule 82 (te2 -> DIV tagm termino .)
    RESTA           reduce using rule 82 (te2 -> DIV tagm termino .)
    RBRACKET        reduce using rule 82 (te2 -> DIV tagm termino .)
    COMA            reduce using rule 82 (te2 -> DIV tagm termino .)
    GT              reduce using rule 82 (te2 -> DIV tagm termino .)
    LT              reduce using rule 82 (te2 -> DIV tagm termino .)
    LE              reduce using rule 82 (te2 -> DIV tagm termino .)
    GE              reduce using rule 82 (te2 -> DIV tagm termino .)
    DIF             reduce using rule 82 (te2 -> DIV tagm termino .)
    SAME            reduce using rule 82 (te2 -> DIV tagm termino .)
    AND             reduce using rule 82 (te2 -> DIV tagm termino .)
    OR              reduce using rule 82 (te2 -> DIV tagm termino .)
    RPARENT         reduce using rule 82 (te2 -> DIV tagm termino .)
    PUNTOCOMA       reduce using rule 82 (te2 -> DIV tagm termino .)
    ID              reduce using rule 82 (te2 -> DIV tagm termino .)


state 354

    (81) te2 -> MULT tagm termino .

    SUMA            reduce using rule 81 (te2 -> MULT tagm termino .)
    RESTA           reduce using rule 81 (te2 -> MULT tagm termino .)
    RBRACKET        reduce using rule 81 (te2 -> MULT tagm termino .)
    COMA            reduce using rule 81 (te2 -> MULT tagm termino .)
    GT              reduce using rule 81 (te2 -> MULT tagm termino .)
    LT              reduce using rule 81 (te2 -> MULT tagm termino .)
    LE              reduce using rule 81 (te2 -> MULT tagm termino .)
    GE              reduce using rule 81 (te2 -> MULT tagm termino .)
    DIF             reduce using rule 81 (te2 -> MULT tagm termino .)
    SAME            reduce using rule 81 (te2 -> MULT tagm termino .)
    AND             reduce using rule 81 (te2 -> MULT tagm termino .)
    OR              reduce using rule 81 (te2 -> MULT tagm termino .)
    RPARENT         reduce using rule 81 (te2 -> MULT tagm termino .)
    PUNTOCOMA       reduce using rule 81 (te2 -> MULT tagm termino .)
    ID              reduce using rule 81 (te2 -> MULT tagm termino .)


state 355

    (55) decla2 -> COMA SigDimension exp . saveLimSup decla2
    (53) saveLimSup -> . empty
    (192) empty -> .

    RBRACKET        reduce using rule 192 (empty -> .)
    COMA            reduce using rule 192 (empty -> .)

    empty                          shift and go to state 200
    saveLimSup                     shift and go to state 391

state 356

    (54) decla2 -> RBRACKET guardaMemDimen declafinal .

    INT             reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    FLOAT           reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    CHAR            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    STRING          reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    BOOL            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    FUNCTION        reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    LKEY            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    ID              reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    PRINT           reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    WHILE           reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    DO              reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    FOR             reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    READ            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    READINT         reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    COMENTARIO      reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    CUADRADO        reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    TRIANGULO       reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    CASA            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    RECTANGULO      reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    CUBO            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    TRAPECIO        reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    ESTRELLA        reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    MUEVE           reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    LEVANTA         reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    APOYA           reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    DIMENSION       reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    RETURN          reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    IF              reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    RKEY            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)


state 357

    (178) function4 -> RPARENT initFunc bloque noinitFunc .

    FUNCTION        reduce using rule 178 (function4 -> RPARENT initFunc bloque noinitFunc .)
    LKEY            reduce using rule 178 (function4 -> RPARENT initFunc bloque noinitFunc .)


state 358

    (180) noinitFunc -> empty .

    FUNCTION        reduce using rule 180 (noinitFunc -> empty .)
    LKEY            reduce using rule 180 (noinitFunc -> empty .)


state 359

    (175) initParams -> empty .

    COMA            reduce using rule 175 (initParams -> empty .)
    RPARENT         reduce using rule 175 (initParams -> empty .)


state 360

    (174) funct2 -> tipo ID initParams . funct3
    (176) funct3 -> . COMA funct2
    (177) funct3 -> . function4
    (178) function4 -> . RPARENT initFunc bloque noinitFunc

    COMA            shift and go to state 394
    RPARENT         shift and go to state 205

    function4                      shift and go to state 392
    funct3                         shift and go to state 393

state 361

    (135) ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 395


state 362

    (137) tagcondiciondo -> empty .

    RPARENT         reduce using rule 137 (tagcondiciondo -> empty .)


state 363

    (161) mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve . PUNTOCOMA

    PUNTOCOMA       shift and go to state 396


state 364

    (162) tagmueve -> empty .

    PUNTOCOMA       reduce using rule 162 (tagmueve -> empty .)


state 365

    (131) ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque . tagregresawhile
    (134) tagregresawhile -> . empty
    (192) empty -> .

    ID              reduce using rule 192 (empty -> .)
    PRINT           reduce using rule 192 (empty -> .)
    WHILE           reduce using rule 192 (empty -> .)
    DO              reduce using rule 192 (empty -> .)
    FOR             reduce using rule 192 (empty -> .)
    READ            reduce using rule 192 (empty -> .)
    READINT         reduce using rule 192 (empty -> .)
    COMENTARIO      reduce using rule 192 (empty -> .)
    CUADRADO        reduce using rule 192 (empty -> .)
    TRIANGULO       reduce using rule 192 (empty -> .)
    CASA            reduce using rule 192 (empty -> .)
    RECTANGULO      reduce using rule 192 (empty -> .)
    CUBO            reduce using rule 192 (empty -> .)
    TRAPECIO        reduce using rule 192 (empty -> .)
    ESTRELLA        reduce using rule 192 (empty -> .)
    MUEVE           reduce using rule 192 (empty -> .)
    LEVANTA         reduce using rule 192 (empty -> .)
    APOYA           reduce using rule 192 (empty -> .)
    DIMENSION       reduce using rule 192 (empty -> .)
    RETURN          reduce using rule 192 (empty -> .)
    IF              reduce using rule 192 (empty -> .)
    RKEY            reduce using rule 192 (empty -> .)

    tagregresawhile                shift and go to state 397
    empty                          shift and go to state 398

state 366

    (165) trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READ            reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READINT         reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 165 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 367

    (26) expre2 -> AND tagmetelog expresion tagsacalog .

    RPARENT         reduce using rule 26 (expre2 -> AND tagmetelog expresion tagsacalog .)
    PUNTOCOMA       reduce using rule 26 (expre2 -> AND tagmetelog expresion tagsacalog .)
    ID              reduce using rule 26 (expre2 -> AND tagmetelog expresion tagsacalog .)


state 368

    (29) tagsacalog -> empty .

    RPARENT         reduce using rule 29 (tagsacalog -> empty .)
    PUNTOCOMA       reduce using rule 29 (tagsacalog -> empty .)
    ID              reduce using rule 29 (tagsacalog -> empty .)


state 369

    (27) expre2 -> OR tagmetelog expresion tagsacalog .

    RPARENT         reduce using rule 27 (expre2 -> OR tagmetelog expresion tagsacalog .)
    PUNTOCOMA       reduce using rule 27 (expre2 -> OR tagmetelog expresion tagsacalog .)
    ID              reduce using rule 27 (expre2 -> OR tagmetelog expresion tagsacalog .)


state 370

    (36) e3 -> GE tagrel exp tagsacrel .

    AND             reduce using rule 36 (e3 -> GE tagrel exp tagsacrel .)
    OR              reduce using rule 36 (e3 -> GE tagrel exp tagsacrel .)
    RPARENT         reduce using rule 36 (e3 -> GE tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 36 (e3 -> GE tagrel exp tagsacrel .)
    ID              reduce using rule 36 (e3 -> GE tagrel exp tagsacrel .)


state 371

    (40) tagsacrel -> empty .

    AND             reduce using rule 40 (tagsacrel -> empty .)
    OR              reduce using rule 40 (tagsacrel -> empty .)
    RPARENT         reduce using rule 40 (tagsacrel -> empty .)
    PUNTOCOMA       reduce using rule 40 (tagsacrel -> empty .)
    ID              reduce using rule 40 (tagsacrel -> empty .)


state 372

    (37) e3 -> DIF tagrel exp tagsacrel .

    AND             reduce using rule 37 (e3 -> DIF tagrel exp tagsacrel .)
    OR              reduce using rule 37 (e3 -> DIF tagrel exp tagsacrel .)
    RPARENT         reduce using rule 37 (e3 -> DIF tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 37 (e3 -> DIF tagrel exp tagsacrel .)
    ID              reduce using rule 37 (e3 -> DIF tagrel exp tagsacrel .)


state 373

    (35) e3 -> LE tagrel exp tagsacrel .

    AND             reduce using rule 35 (e3 -> LE tagrel exp tagsacrel .)
    OR              reduce using rule 35 (e3 -> LE tagrel exp tagsacrel .)
    RPARENT         reduce using rule 35 (e3 -> LE tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 35 (e3 -> LE tagrel exp tagsacrel .)
    ID              reduce using rule 35 (e3 -> LE tagrel exp tagsacrel .)


state 374

    (38) e3 -> SAME tagrel exp tagsacrel .

    AND             reduce using rule 38 (e3 -> SAME tagrel exp tagsacrel .)
    OR              reduce using rule 38 (e3 -> SAME tagrel exp tagsacrel .)
    RPARENT         reduce using rule 38 (e3 -> SAME tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 38 (e3 -> SAME tagrel exp tagsacrel .)
    ID              reduce using rule 38 (e3 -> SAME tagrel exp tagsacrel .)


state 375

    (34) e3 -> LT tagrel exp tagsacrel .

    AND             reduce using rule 34 (e3 -> LT tagrel exp tagsacrel .)
    OR              reduce using rule 34 (e3 -> LT tagrel exp tagsacrel .)
    RPARENT         reduce using rule 34 (e3 -> LT tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 34 (e3 -> LT tagrel exp tagsacrel .)
    ID              reduce using rule 34 (e3 -> LT tagrel exp tagsacrel .)


state 376

    (33) e3 -> GT tagrel exp tagsacrel .

    AND             reduce using rule 33 (e3 -> GT tagrel exp tagsacrel .)
    OR              reduce using rule 33 (e3 -> GT tagrel exp tagsacrel .)
    RPARENT         reduce using rule 33 (e3 -> GT tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 33 (e3 -> GT tagrel exp tagsacrel .)
    ID              reduce using rule 33 (e3 -> GT tagrel exp tagsacrel .)


state 377

    (157) casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READ            reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READINT         reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 157 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 378

    (159) cubo -> CUBO LPARENT exp COMA exp COMA exp . RPARENT tagcubo PUNTOCOMA

    RPARENT         shift and go to state 399


state 379

    (154) triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp . RPARENT tagtriangulo PUNTOCOMA

    RPARENT         shift and go to state 400


state 380

    (140) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT . bloque tagasigna tagterminafor
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (192) empty -> .

    LKEY            reduce using rule 192 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 401
    empty                          shift and go to state 24

state 381

    (156) rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READ            reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READINT         reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 156 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 382

    (185) llamaf3 -> COMA tagotroargumento . llamaf2
    (184) llamaf2 -> . exp tagrevisaparam llamaf3
    (41) exp -> . termino tagsacops exp2
    (80) termino -> . factor tagsacopm te2
    (86) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (87) factor -> . f2
    (88) factor -> . f3
    (89) factor -> . f6
    (90) f2 -> . varcte
    (91) f3 -> . ID
    (96) f6 -> . llamafuncion
    (120) varcte -> . ENTERO tagint
    (121) varcte -> . FLOTANTE tagfloat
    (122) varcte -> . CADENA tagcad
    (123) varcte -> . CARACTER tagcar
    (124) varcte -> . TRUE tagbol
    (125) varcte -> . FALSE tagbol
    (181) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 141
    ID              shift and go to state 148
    ENTERO          shift and go to state 146
    FLOTANTE        shift and go to state 151
    CADENA          shift and go to state 143
    CARACTER        shift and go to state 147
    TRUE            shift and go to state 140
    FALSE           shift and go to state 149

    f2                             shift and go to state 136
    f3                             shift and go to state 137
    f6                             shift and go to state 138
    termino                        shift and go to state 139
    varcte                         shift and go to state 142
    llamafuncion                   shift and go to state 144
    factor                         shift and go to state 145
    llamaf2                        shift and go to state 402
    exp                            shift and go to state 240

state 383

    (190) tagotroargumento -> empty .

    LPARENT         reduce using rule 190 (tagotroargumento -> empty .)
    ID              reduce using rule 190 (tagotroargumento -> empty .)
    ENTERO          reduce using rule 190 (tagotroargumento -> empty .)
    FLOTANTE        reduce using rule 190 (tagotroargumento -> empty .)
    CADENA          reduce using rule 190 (tagotroargumento -> empty .)
    CARACTER        reduce using rule 190 (tagotroargumento -> empty .)
    TRUE            reduce using rule 190 (tagotroargumento -> empty .)
    FALSE           reduce using rule 190 (tagotroargumento -> empty .)


state 384

    (68) asig3 -> COMA exp asig3 .

    ID              reduce using rule 68 (asig3 -> COMA exp asig3 .)
    PRINT           reduce using rule 68 (asig3 -> COMA exp asig3 .)
    WHILE           reduce using rule 68 (asig3 -> COMA exp asig3 .)
    DO              reduce using rule 68 (asig3 -> COMA exp asig3 .)
    FOR             reduce using rule 68 (asig3 -> COMA exp asig3 .)
    READ            reduce using rule 68 (asig3 -> COMA exp asig3 .)
    READINT         reduce using rule 68 (asig3 -> COMA exp asig3 .)
    COMENTARIO      reduce using rule 68 (asig3 -> COMA exp asig3 .)
    CUADRADO        reduce using rule 68 (asig3 -> COMA exp asig3 .)
    TRIANGULO       reduce using rule 68 (asig3 -> COMA exp asig3 .)
    CASA            reduce using rule 68 (asig3 -> COMA exp asig3 .)
    RECTANGULO      reduce using rule 68 (asig3 -> COMA exp asig3 .)
    CUBO            reduce using rule 68 (asig3 -> COMA exp asig3 .)
    TRAPECIO        reduce using rule 68 (asig3 -> COMA exp asig3 .)
    ESTRELLA        reduce using rule 68 (asig3 -> COMA exp asig3 .)
    MUEVE           reduce using rule 68 (asig3 -> COMA exp asig3 .)
    LEVANTA         reduce using rule 68 (asig3 -> COMA exp asig3 .)
    APOYA           reduce using rule 68 (asig3 -> COMA exp asig3 .)
    DIMENSION       reduce using rule 68 (asig3 -> COMA exp asig3 .)
    RETURN          reduce using rule 68 (asig3 -> COMA exp asig3 .)
    IF              reduce using rule 68 (asig3 -> COMA exp asig3 .)
    RKEY            reduce using rule 68 (asig3 -> COMA exp asig3 .)
    LPARENT         reduce using rule 68 (asig3 -> COMA exp asig3 .)
    ENTERO          reduce using rule 68 (asig3 -> COMA exp asig3 .)
    FLOTANTE        reduce using rule 68 (asig3 -> COMA exp asig3 .)
    CADENA          reduce using rule 68 (asig3 -> COMA exp asig3 .)
    CARACTER        reduce using rule 68 (asig3 -> COMA exp asig3 .)
    TRUE            reduce using rule 68 (asig3 -> COMA exp asig3 .)
    FALSE           reduce using rule 68 (asig3 -> COMA exp asig3 .)
    RPARENT         reduce using rule 68 (asig3 -> COMA exp asig3 .)


state 385

    (71) asigf2 -> expresion tagig PUNTOCOMA .

    ID              reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    PRINT           reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    WHILE           reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    DO              reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    FOR             reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    READ            reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    READINT         reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    COMENTARIO      reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    CUADRADO        reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    TRIANGULO       reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    CASA            reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    RECTANGULO      reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    CUBO            reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    TRAPECIO        reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    ESTRELLA        reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    MUEVE           reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    LEVANTA         reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    APOYA           reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    DIMENSION       reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    RETURN          reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    IF              reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    RKEY            reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    LPARENT         reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    ENTERO          reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    FLOTANTE        reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    CADENA          reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    CARACTER        reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    TRUE            reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    FALSE           reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)
    RPARENT         reduce using rule 71 (asigf2 -> expresion tagig PUNTOCOMA .)


state 386

    (144) if -> IF LPARENT expresion tagif RPARENT bloque if2 .

    ID              reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    PRINT           reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    WHILE           reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    DO              reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    FOR             reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    READ            reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    READINT         reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    COMENTARIO      reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    CUADRADO        reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    TRIANGULO       reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    CASA            reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    RECTANGULO      reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    CUBO            reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    TRAPECIO        reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    ESTRELLA        reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    MUEVE           reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    LEVANTA         reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    APOYA           reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    DIMENSION       reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    RETURN          reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    IF              reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    RKEY            reduce using rule 144 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)


state 387

    (145) if2 -> tagterminaif .

    ID              reduce using rule 145 (if2 -> tagterminaif .)
    PRINT           reduce using rule 145 (if2 -> tagterminaif .)
    WHILE           reduce using rule 145 (if2 -> tagterminaif .)
    DO              reduce using rule 145 (if2 -> tagterminaif .)
    FOR             reduce using rule 145 (if2 -> tagterminaif .)
    READ            reduce using rule 145 (if2 -> tagterminaif .)
    READINT         reduce using rule 145 (if2 -> tagterminaif .)
    COMENTARIO      reduce using rule 145 (if2 -> tagterminaif .)
    CUADRADO        reduce using rule 145 (if2 -> tagterminaif .)
    TRIANGULO       reduce using rule 145 (if2 -> tagterminaif .)
    CASA            reduce using rule 145 (if2 -> tagterminaif .)
    RECTANGULO      reduce using rule 145 (if2 -> tagterminaif .)
    CUBO            reduce using rule 145 (if2 -> tagterminaif .)
    TRAPECIO        reduce using rule 145 (if2 -> tagterminaif .)
    ESTRELLA        reduce using rule 145 (if2 -> tagterminaif .)
    MUEVE           reduce using rule 145 (if2 -> tagterminaif .)
    LEVANTA         reduce using rule 145 (if2 -> tagterminaif .)
    APOYA           reduce using rule 145 (if2 -> tagterminaif .)
    DIMENSION       reduce using rule 145 (if2 -> tagterminaif .)
    RETURN          reduce using rule 145 (if2 -> tagterminaif .)
    IF              reduce using rule 145 (if2 -> tagterminaif .)
    RKEY            reduce using rule 145 (if2 -> tagterminaif .)


state 388

    (146) if2 -> ELSE . tagelse bloque tagterminaif
    (148) tagelse -> . empty
    (192) empty -> .

    LKEY            reduce using rule 192 (empty -> .)

    tagelse                        shift and go to state 403
    empty                          shift and go to state 404

state 389

    (149) tagterminaif -> empty .

    ID              reduce using rule 149 (tagterminaif -> empty .)
    PRINT           reduce using rule 149 (tagterminaif -> empty .)
    WHILE           reduce using rule 149 (tagterminaif -> empty .)
    DO              reduce using rule 149 (tagterminaif -> empty .)
    FOR             reduce using rule 149 (tagterminaif -> empty .)
    READ            reduce using rule 149 (tagterminaif -> empty .)
    READINT         reduce using rule 149 (tagterminaif -> empty .)
    COMENTARIO      reduce using rule 149 (tagterminaif -> empty .)
    CUADRADO        reduce using rule 149 (tagterminaif -> empty .)
    TRIANGULO       reduce using rule 149 (tagterminaif -> empty .)
    CASA            reduce using rule 149 (tagterminaif -> empty .)
    RECTANGULO      reduce using rule 149 (tagterminaif -> empty .)
    CUBO            reduce using rule 149 (tagterminaif -> empty .)
    TRAPECIO        reduce using rule 149 (tagterminaif -> empty .)
    ESTRELLA        reduce using rule 149 (tagterminaif -> empty .)
    MUEVE           reduce using rule 149 (tagterminaif -> empty .)
    LEVANTA         reduce using rule 149 (tagterminaif -> empty .)
    APOYA           reduce using rule 149 (tagterminaif -> empty .)
    DIMENSION       reduce using rule 149 (tagterminaif -> empty .)
    RETURN          reduce using rule 149 (tagterminaif -> empty .)
    IF              reduce using rule 149 (tagterminaif -> empty .)
    RKEY            reduce using rule 149 (tagterminaif -> empty .)


state 390

    (152) cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp . RPARENT tagcuadro PUNTOCOMA

    RPARENT         shift and go to state 405


state 391

    (55) decla2 -> COMA SigDimension exp saveLimSup . decla2
    (54) decla2 -> . RBRACKET guardaMemDimen declafinal
    (55) decla2 -> . COMA SigDimension exp saveLimSup decla2

    RBRACKET        shift and go to state 264
    COMA            shift and go to state 263

    decla2                         shift and go to state 406

state 392

    (177) funct3 -> function4 .

    FUNCTION        reduce using rule 177 (funct3 -> function4 .)
    LKEY            reduce using rule 177 (funct3 -> function4 .)


state 393

    (174) funct2 -> tipo ID initParams funct3 .

    FUNCTION        reduce using rule 174 (funct2 -> tipo ID initParams funct3 .)
    LKEY            reduce using rule 174 (funct2 -> tipo ID initParams funct3 .)


state 394

    (176) funct3 -> COMA . funct2
    (174) funct2 -> . tipo ID initParams funct3
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 15
    STRING          shift and go to state 12
    BOOL            shift and go to state 19

    funct2                         shift and go to state 407
    tipo                           shift and go to state 267

state 395

    (135) ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 408


state 396

    (161) mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .

    ID              reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    PRINT           reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    WHILE           reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    DO              reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    FOR             reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    READ            reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    READINT         reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    COMENTARIO      reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    CUADRADO        reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    TRIANGULO       reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    CASA            reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    RECTANGULO      reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    CUBO            reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    TRAPECIO        reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    ESTRELLA        reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    MUEVE           reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    LEVANTA         reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    APOYA           reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    DIMENSION       reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    RETURN          reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    IF              reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    RKEY            reduce using rule 161 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)


state 397

    (131) ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .

    ID              reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    PRINT           reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    WHILE           reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    DO              reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    FOR             reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    READ            reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    READINT         reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    COMENTARIO      reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    CUADRADO        reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    TRIANGULO       reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    CASA            reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    RECTANGULO      reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    CUBO            reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    TRAPECIO        reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    ESTRELLA        reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    MUEVE           reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    LEVANTA         reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    APOYA           reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    DIMENSION       reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    RETURN          reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    IF              reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    RKEY            reduce using rule 131 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)


state 398

    (134) tagregresawhile -> empty .

    ID              reduce using rule 134 (tagregresawhile -> empty .)
    PRINT           reduce using rule 134 (tagregresawhile -> empty .)
    WHILE           reduce using rule 134 (tagregresawhile -> empty .)
    DO              reduce using rule 134 (tagregresawhile -> empty .)
    FOR             reduce using rule 134 (tagregresawhile -> empty .)
    READ            reduce using rule 134 (tagregresawhile -> empty .)
    READINT         reduce using rule 134 (tagregresawhile -> empty .)
    COMENTARIO      reduce using rule 134 (tagregresawhile -> empty .)
    CUADRADO        reduce using rule 134 (tagregresawhile -> empty .)
    TRIANGULO       reduce using rule 134 (tagregresawhile -> empty .)
    CASA            reduce using rule 134 (tagregresawhile -> empty .)
    RECTANGULO      reduce using rule 134 (tagregresawhile -> empty .)
    CUBO            reduce using rule 134 (tagregresawhile -> empty .)
    TRAPECIO        reduce using rule 134 (tagregresawhile -> empty .)
    ESTRELLA        reduce using rule 134 (tagregresawhile -> empty .)
    MUEVE           reduce using rule 134 (tagregresawhile -> empty .)
    LEVANTA         reduce using rule 134 (tagregresawhile -> empty .)
    APOYA           reduce using rule 134 (tagregresawhile -> empty .)
    DIMENSION       reduce using rule 134 (tagregresawhile -> empty .)
    RETURN          reduce using rule 134 (tagregresawhile -> empty .)
    IF              reduce using rule 134 (tagregresawhile -> empty .)
    RKEY            reduce using rule 134 (tagregresawhile -> empty .)


state 399

    (159) cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT . tagcubo PUNTOCOMA
    (160) tagcubo -> . empty
    (192) empty -> .

    PUNTOCOMA       reduce using rule 192 (empty -> .)

    tagcubo                        shift and go to state 409
    empty                          shift and go to state 410

state 400

    (154) triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT . tagtriangulo PUNTOCOMA
    (155) tagtriangulo -> . empty
    (192) empty -> .

    PUNTOCOMA       reduce using rule 192 (empty -> .)

    empty                          shift and go to state 411
    tagtriangulo                   shift and go to state 412

state 401

    (140) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque . tagasigna tagterminafor
    (143) tagasigna -> . empty
    (192) empty -> .

    ID              reduce using rule 192 (empty -> .)
    PRINT           reduce using rule 192 (empty -> .)
    WHILE           reduce using rule 192 (empty -> .)
    DO              reduce using rule 192 (empty -> .)
    FOR             reduce using rule 192 (empty -> .)
    READ            reduce using rule 192 (empty -> .)
    READINT         reduce using rule 192 (empty -> .)
    COMENTARIO      reduce using rule 192 (empty -> .)
    CUADRADO        reduce using rule 192 (empty -> .)
    TRIANGULO       reduce using rule 192 (empty -> .)
    CASA            reduce using rule 192 (empty -> .)
    RECTANGULO      reduce using rule 192 (empty -> .)
    CUBO            reduce using rule 192 (empty -> .)
    TRAPECIO        reduce using rule 192 (empty -> .)
    ESTRELLA        reduce using rule 192 (empty -> .)
    MUEVE           reduce using rule 192 (empty -> .)
    LEVANTA         reduce using rule 192 (empty -> .)
    APOYA           reduce using rule 192 (empty -> .)
    DIMENSION       reduce using rule 192 (empty -> .)
    RETURN          reduce using rule 192 (empty -> .)
    IF              reduce using rule 192 (empty -> .)
    RKEY            reduce using rule 192 (empty -> .)

    tagasigna                      shift and go to state 413
    empty                          shift and go to state 414

state 402

    (185) llamaf3 -> COMA tagotroargumento llamaf2 .

    ID              reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    PRINT           reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    WHILE           reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    DO              reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    FOR             reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    READ            reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    READINT         reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    COMENTARIO      reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    CUADRADO        reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    TRIANGULO       reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    CASA            reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RECTANGULO      reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    CUBO            reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    TRAPECIO        reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    ESTRELLA        reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    MUEVE           reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    LEVANTA         reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    APOYA           reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    DIMENSION       reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RETURN          reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    IF              reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RKEY            reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    MULT            reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    DIV             reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    SUMA            reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RESTA           reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RBRACKET        reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    COMA            reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    GT              reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    LT              reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    LE              reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    GE              reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    DIF             reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    SAME            reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    AND             reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    OR              reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RPARENT         reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    PUNTOCOMA       reduce using rule 185 (llamaf3 -> COMA tagotroargumento llamaf2 .)


state 403

    (146) if2 -> ELSE tagelse . bloque tagterminaif
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (192) empty -> .

    LKEY            reduce using rule 192 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 415
    empty                          shift and go to state 24

state 404

    (148) tagelse -> empty .

    LKEY            reduce using rule 148 (tagelse -> empty .)


state 405

    (152) cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT . tagcuadro PUNTOCOMA
    (153) tagcuadro -> . empty
    (192) empty -> .

    PUNTOCOMA       reduce using rule 192 (empty -> .)

    empty                          shift and go to state 416
    tagcuadro                      shift and go to state 417

state 406

    (55) decla2 -> COMA SigDimension exp saveLimSup decla2 .

    INT             reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    FLOAT           reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    CHAR            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    STRING          reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    BOOL            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    FUNCTION        reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    LKEY            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    ID              reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    PRINT           reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    WHILE           reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    DO              reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    FOR             reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    READ            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    READINT         reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    COMENTARIO      reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    CUADRADO        reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    TRIANGULO       reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    CASA            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    RECTANGULO      reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    CUBO            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    TRAPECIO        reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    ESTRELLA        reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    MUEVE           reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    LEVANTA         reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    APOYA           reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    DIMENSION       reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    RETURN          reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    IF              reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    RKEY            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)


state 407

    (176) funct3 -> COMA funct2 .

    FUNCTION        reduce using rule 176 (funct3 -> COMA funct2 .)
    LKEY            reduce using rule 176 (funct3 -> COMA funct2 .)


state 408

    (135) ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .

    ID              reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    DO              reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    FOR             reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    READ            reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    READINT         reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    CASA            reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    IF              reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 135 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)


state 409

    (159) cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 418


state 410

    (160) tagcubo -> empty .

    PUNTOCOMA       reduce using rule 160 (tagcubo -> empty .)


state 411

    (155) tagtriangulo -> empty .

    PUNTOCOMA       reduce using rule 155 (tagtriangulo -> empty .)


state 412

    (154) triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 419


state 413

    (140) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna . tagterminafor
    (142) tagterminafor -> . empty
    (192) empty -> .

    ID              reduce using rule 192 (empty -> .)
    PRINT           reduce using rule 192 (empty -> .)
    WHILE           reduce using rule 192 (empty -> .)
    DO              reduce using rule 192 (empty -> .)
    FOR             reduce using rule 192 (empty -> .)
    READ            reduce using rule 192 (empty -> .)
    READINT         reduce using rule 192 (empty -> .)
    COMENTARIO      reduce using rule 192 (empty -> .)
    CUADRADO        reduce using rule 192 (empty -> .)
    TRIANGULO       reduce using rule 192 (empty -> .)
    CASA            reduce using rule 192 (empty -> .)
    RECTANGULO      reduce using rule 192 (empty -> .)
    CUBO            reduce using rule 192 (empty -> .)
    TRAPECIO        reduce using rule 192 (empty -> .)
    ESTRELLA        reduce using rule 192 (empty -> .)
    MUEVE           reduce using rule 192 (empty -> .)
    LEVANTA         reduce using rule 192 (empty -> .)
    APOYA           reduce using rule 192 (empty -> .)
    DIMENSION       reduce using rule 192 (empty -> .)
    RETURN          reduce using rule 192 (empty -> .)
    IF              reduce using rule 192 (empty -> .)
    RKEY            reduce using rule 192 (empty -> .)

    tagterminafor                  shift and go to state 420
    empty                          shift and go to state 421

state 414

    (143) tagasigna -> empty .

    ID              reduce using rule 143 (tagasigna -> empty .)
    PRINT           reduce using rule 143 (tagasigna -> empty .)
    WHILE           reduce using rule 143 (tagasigna -> empty .)
    DO              reduce using rule 143 (tagasigna -> empty .)
    FOR             reduce using rule 143 (tagasigna -> empty .)
    READ            reduce using rule 143 (tagasigna -> empty .)
    READINT         reduce using rule 143 (tagasigna -> empty .)
    COMENTARIO      reduce using rule 143 (tagasigna -> empty .)
    CUADRADO        reduce using rule 143 (tagasigna -> empty .)
    TRIANGULO       reduce using rule 143 (tagasigna -> empty .)
    CASA            reduce using rule 143 (tagasigna -> empty .)
    RECTANGULO      reduce using rule 143 (tagasigna -> empty .)
    CUBO            reduce using rule 143 (tagasigna -> empty .)
    TRAPECIO        reduce using rule 143 (tagasigna -> empty .)
    ESTRELLA        reduce using rule 143 (tagasigna -> empty .)
    MUEVE           reduce using rule 143 (tagasigna -> empty .)
    LEVANTA         reduce using rule 143 (tagasigna -> empty .)
    APOYA           reduce using rule 143 (tagasigna -> empty .)
    DIMENSION       reduce using rule 143 (tagasigna -> empty .)
    RETURN          reduce using rule 143 (tagasigna -> empty .)
    IF              reduce using rule 143 (tagasigna -> empty .)
    RKEY            reduce using rule 143 (tagasigna -> empty .)


state 415

    (146) if2 -> ELSE tagelse bloque . tagterminaif
    (149) tagterminaif -> . empty
    (192) empty -> .

    ID              reduce using rule 192 (empty -> .)
    PRINT           reduce using rule 192 (empty -> .)
    WHILE           reduce using rule 192 (empty -> .)
    DO              reduce using rule 192 (empty -> .)
    FOR             reduce using rule 192 (empty -> .)
    READ            reduce using rule 192 (empty -> .)
    READINT         reduce using rule 192 (empty -> .)
    COMENTARIO      reduce using rule 192 (empty -> .)
    CUADRADO        reduce using rule 192 (empty -> .)
    TRIANGULO       reduce using rule 192 (empty -> .)
    CASA            reduce using rule 192 (empty -> .)
    RECTANGULO      reduce using rule 192 (empty -> .)
    CUBO            reduce using rule 192 (empty -> .)
    TRAPECIO        reduce using rule 192 (empty -> .)
    ESTRELLA        reduce using rule 192 (empty -> .)
    MUEVE           reduce using rule 192 (empty -> .)
    LEVANTA         reduce using rule 192 (empty -> .)
    APOYA           reduce using rule 192 (empty -> .)
    DIMENSION       reduce using rule 192 (empty -> .)
    RETURN          reduce using rule 192 (empty -> .)
    IF              reduce using rule 192 (empty -> .)
    RKEY            reduce using rule 192 (empty -> .)

    tagterminaif                   shift and go to state 422
    empty                          shift and go to state 389

state 416

    (153) tagcuadro -> empty .

    PUNTOCOMA       reduce using rule 153 (tagcuadro -> empty .)


state 417

    (152) cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro . PUNTOCOMA

    PUNTOCOMA       shift and go to state 423


state 418

    (159) cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .

    ID              reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    PRINT           reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    WHILE           reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    DO              reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    FOR             reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    READ            reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    READINT         reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    COMENTARIO      reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    CUADRADO        reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    TRIANGULO       reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    CASA            reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    RECTANGULO      reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    CUBO            reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    TRAPECIO        reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    ESTRELLA        reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    MUEVE           reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    LEVANTA         reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    APOYA           reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    DIMENSION       reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    RETURN          reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    IF              reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    RKEY            reduce using rule 159 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)


state 419

    (154) triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .

    ID              reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    PRINT           reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    WHILE           reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    DO              reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    FOR             reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    READ            reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    READINT         reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    COMENTARIO      reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    CUADRADO        reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    TRIANGULO       reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    CASA            reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    RECTANGULO      reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    CUBO            reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    TRAPECIO        reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    ESTRELLA        reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    MUEVE           reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    LEVANTA         reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    APOYA           reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    DIMENSION       reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    RETURN          reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    IF              reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    RKEY            reduce using rule 154 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)


state 420

    (140) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .

    ID              reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    PRINT           reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    WHILE           reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    DO              reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    FOR             reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    READ            reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    READINT         reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    COMENTARIO      reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    CUADRADO        reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    TRIANGULO       reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    CASA            reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    RECTANGULO      reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    CUBO            reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    TRAPECIO        reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    ESTRELLA        reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    MUEVE           reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    LEVANTA         reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    APOYA           reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    DIMENSION       reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    RETURN          reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    IF              reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)
    RKEY            reduce using rule 140 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor .)


state 421

    (142) tagterminafor -> empty .

    ID              reduce using rule 142 (tagterminafor -> empty .)
    PRINT           reduce using rule 142 (tagterminafor -> empty .)
    WHILE           reduce using rule 142 (tagterminafor -> empty .)
    DO              reduce using rule 142 (tagterminafor -> empty .)
    FOR             reduce using rule 142 (tagterminafor -> empty .)
    READ            reduce using rule 142 (tagterminafor -> empty .)
    READINT         reduce using rule 142 (tagterminafor -> empty .)
    COMENTARIO      reduce using rule 142 (tagterminafor -> empty .)
    CUADRADO        reduce using rule 142 (tagterminafor -> empty .)
    TRIANGULO       reduce using rule 142 (tagterminafor -> empty .)
    CASA            reduce using rule 142 (tagterminafor -> empty .)
    RECTANGULO      reduce using rule 142 (tagterminafor -> empty .)
    CUBO            reduce using rule 142 (tagterminafor -> empty .)
    TRAPECIO        reduce using rule 142 (tagterminafor -> empty .)
    ESTRELLA        reduce using rule 142 (tagterminafor -> empty .)
    MUEVE           reduce using rule 142 (tagterminafor -> empty .)
    LEVANTA         reduce using rule 142 (tagterminafor -> empty .)
    APOYA           reduce using rule 142 (tagterminafor -> empty .)
    DIMENSION       reduce using rule 142 (tagterminafor -> empty .)
    RETURN          reduce using rule 142 (tagterminafor -> empty .)
    IF              reduce using rule 142 (tagterminafor -> empty .)
    RKEY            reduce using rule 142 (tagterminafor -> empty .)


state 422

    (146) if2 -> ELSE tagelse bloque tagterminaif .

    ID              reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    PRINT           reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    WHILE           reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    DO              reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    FOR             reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    READ            reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    READINT         reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    COMENTARIO      reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    CUADRADO        reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    TRIANGULO       reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    CASA            reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    RECTANGULO      reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    CUBO            reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    TRAPECIO        reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    ESTRELLA        reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    MUEVE           reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    LEVANTA         reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    APOYA           reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    DIMENSION       reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    RETURN          reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    IF              reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)
    RKEY            reduce using rule 146 (if2 -> ELSE tagelse bloque tagterminaif .)


state 423

    (152) cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .

    ID              reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    PRINT           reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    WHILE           reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    DO              reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    FOR             reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    READ            reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    READINT         reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    COMENTARIO      reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    CUADRADO        reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    TRIANGULO       reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    CASA            reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    RECTANGULO      reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    CUBO            reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    TRAPECIO        reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    ESTRELLA        reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    MUEVE           reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    LEVANTA         reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    APOYA           reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    DIMENSION       reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    RETURN          reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    IF              reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    RKEY            reduce using rule 152 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 11 resolved using rule (initFunctions -> empty)
WARNING: rejected rule (cuadrupro2 -> empty) in state 11
WARNING: reduce/reduce conflict in state 28 resolved using rule (p2 -> initFunctions p4)
WARNING: rejected rule (p3 -> initFunctions p4) in state 28
