Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    NOESNADA
    PUNTO
    BEGIN
    POW
    BOLEANO
    FUNCTION
    END
    VAR
    RAIZ
    COMSIMPLE
    SQRT
    POTENCIA
    COMDOBLE
    CIRCULO

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2
Rule 2     initTop -> empty
Rule 3     p2 -> p3
Rule 4     p2 -> p4
Rule 5     p2 -> p5
Rule 6     p3 -> declaracion p3
Rule 7     p3 -> p4
Rule 8     p4 -> function p4
Rule 9     p4 -> p5
Rule 10    p5 -> cuadrupro2 bloque
Rule 11    cuadrupro -> empty
Rule 12    cuadrupro2 -> empty
Rule 13    bloque -> LKEY iniEnv b3 b4 b5
Rule 14    iniEnv -> empty
Rule 15    b3 -> declaracion b3
Rule 16    b3 -> empty
Rule 17    b4 -> estatuto b4
Rule 18    b4 -> empty
Rule 19    b5 -> RKEY
Rule 20    expresion -> expresion2 expre
Rule 21    expre -> expre2
Rule 22    expre -> empty
Rule 23    expre2 -> AND tagmetelog expresion tagsacalog
Rule 24    expre2 -> OR tagmetelog expresion tagsacalog
Rule 25    tagmetelog -> empty
Rule 26    tagsacalog -> empty
Rule 27    expresion2 -> exp e2
Rule 28    e2 -> e3
Rule 29    e2 -> empty
Rule 30    e3 -> GT tagrel exp tagsacrel
Rule 31    e3 -> LT tagrel exp tagsacrel
Rule 32    e3 -> LE tagrel exp tagsacrel
Rule 33    e3 -> GE tagrel exp tagsacrel
Rule 34    e3 -> DIF tagrel exp tagsacrel
Rule 35    e3 -> SAME tagrel exp tagsacrel
Rule 36    tagrel -> empty
Rule 37    tagsacrel -> empty
Rule 38    exp -> termino tagsacops exp2
Rule 39    exp2 -> SUMA tagop exp
Rule 40    exp2 -> RESTA tagop exp
Rule 41    exp2 -> empty
Rule 42    tagop -> empty
Rule 43    tagsacops -> empty
Rule 44    declaracion -> tipo ID savevar decla1
Rule 45    savevar -> empty
Rule 46    decla1 -> declafinal
Rule 47    decla1 -> LBRACKET exp decla2
Rule 48    decla2 -> RBRACKET declafinal
Rule 49    decla2 -> COMA exp decla2
Rule 50    declafinal -> PUNTOCOMA
Rule 51    tipo -> INT
Rule 52    tipo -> FLOAT
Rule 53    tipo -> CHAR
Rule 54    tipo -> STRING
Rule 55    tipo -> BOOL
Rule 56    asignacion -> ID asig2
Rule 57    asig2 -> LBRACKET exp asig3
Rule 58    asig2 -> asigfinal
Rule 59    asig3 -> COMA exp asig3
Rule 60    asig3 -> RBRACKET asigfinal
Rule 61    asigfinal -> IGUAL expresion PUNTOCOMA
Rule 62    print -> PRINT LPARENT pr2
Rule 63    pr2 -> expresion pr3
Rule 64    pr2 -> CADENA pr3
Rule 65    pr3 -> pr2
Rule 66    pr3 -> RPARENT PUNTOCOMA
Rule 67    condicion -> IF LKEY expresion RKEY bloque c2
Rule 68    c2 -> ELSE bloque PUNTOCOMA
Rule 69    c2 -> PUNTOCOMA
Rule 70    termino -> factor tagsacopm te2
Rule 71    te2 -> MULT tagm termino
Rule 72    te2 -> DIV tagm termino
Rule 73    te2 -> empty
Rule 74    tagm -> empty
Rule 75    tagsacopm -> empty
Rule 76    factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo
Rule 77    factor -> f2
Rule 78    factor -> f3
Rule 79    factor -> f6
Rule 80    factor -> f7
Rule 81    f2 -> varcte
Rule 82    f3 -> ID
Rule 83    tagfondofalso -> empty
Rule 84    tagsacafondo -> empty
Rule 85    f7 -> ID LBRACKET exp f8
Rule 86    f8 -> COMA exp f8
Rule 87    f8 -> RBRACKET
Rule 88    f6 -> llamafuncion
Rule 89    estatuto -> asignacion
Rule 90    estatuto -> print
Rule 91    estatuto -> condicion
Rule 92    estatuto -> ciclowhile
Rule 93    estatuto -> ciclodowhile
Rule 94    estatuto -> ciclofor
Rule 95    estatuto -> read
Rule 96    estatuto -> comentario
Rule 97    estatuto -> cuadrado
Rule 98    estatuto -> triangulo
Rule 99    estatuto -> casa
Rule 100   estatuto -> rectangulo
Rule 101   estatuto -> cubo
Rule 102   estatuto -> trapecio
Rule 103   estatuto -> estrella
Rule 104   estatuto -> mueve
Rule 105   estatuto -> levanta
Rule 106   estatuto -> apoya
Rule 107   estatuto -> dimension
Rule 108   estatuto -> llamafuncion
Rule 109   estatuto -> if
Rule 110   comentario -> COMENTARIO
Rule 111   varcte -> ENTERO tagint
Rule 112   varcte -> FLOTANTE tagfloat
Rule 113   varcte -> CADENA tagcad
Rule 114   varcte -> CARACTER tagcar
Rule 115   tagint -> empty
Rule 116   tagfloat -> empty
Rule 117   tagcad -> empty
Rule 118   tagcar -> empty
Rule 119   ciclowhile -> WHILE LPARENT expresion RPARENT bloque
Rule 120   ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
Rule 121   read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA
Rule 122   ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque
Rule 123   if -> IF LPARENT expresion RPARENT bloque if2
Rule 124   if2 -> empty
Rule 125   if2 -> ELSE bloque
Rule 126   cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA
Rule 127   triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA
Rule 128   rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 129   casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 130   estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA
Rule 131   cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA
Rule 132   mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 133   levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA
Rule 134   apoya -> APOYA LPARENT RPARENT PUNTOCOMA
Rule 135   trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 136   dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA
Rule 137   function -> tipo ID buildFunc LPARENT funct11
Rule 138   function -> VOID ID buildFunc LPARENT funct11
Rule 139   buildFunc -> empty
Rule 140   funct11 -> function4
Rule 141   funct11 -> initParamTable funct2
Rule 142   initParamTable -> empty
Rule 143   funct2 -> tipo ID initParams funct3
Rule 144   initParams -> empty
Rule 145   funct3 -> COMA funct2
Rule 146   funct3 -> function4
Rule 147   function4 -> RPARENT noinitFunc bloque initFunc
Rule 148   noinitFunc -> empty
Rule 149   initFunc -> empty
Rule 150   llamafuncion -> ID LPARENT llamaf11
Rule 151   llamaf11 -> llamaf2
Rule 152   llamaf11 -> llamaf4
Rule 153   llamaf2 -> exp llamaf3
Rule 154   llamaf3 -> COMA llamaf2
Rule 155   llamaf3 -> llamaf4
Rule 156   llamaf4 -> RPARENT
Rule 157   empty -> <empty>

Terminals, with rules where they appear

AND                  : 23
APOYA                : 134
BEGIN                : 
BOLEANO              : 
BOOL                 : 55
CADENA               : 64 113
CARACTER             : 114
CASA                 : 129
CHAR                 : 53
CIRCULO              : 
COMA                 : 49 59 86 128 129 132 135 145 154
COMDOBLE             : 
COMENTARIO           : 110
COMSIMPLE            : 
CUADRADO             : 126
CUBO                 : 131
DIF                  : 34
DIMENSION            : 136
DIV                  : 72
DO                   : 120
DOSPUNTOS            : 1
ELSE                 : 68 125
END                  : 
ENTERO               : 111
ESTRELLA             : 130
FLOAT                : 52
FLOTANTE             : 112
FOR                  : 122
FUNCTION             : 
GE                   : 33
GT                   : 30
ID                   : 1 44 56 82 85 121 137 138 143 150
IF                   : 67 123
IGUAL                : 61 121
INT                  : 51
LBRACKET             : 47 57 85
LE                   : 32
LEVANTA              : 133
LKEY                 : 13 67
LPARENT              : 62 76 119 120 121 122 123 126 127 128 129 130 131 132 133 134 135 136 137 138 150
LT                   : 31
MUEVE                : 132
MULT                 : 71
NOESNADA             : 
OR                   : 24
POTENCIA             : 
POW                  : 
PRINT                : 62
PROGRAM              : 1
PUNTO                : 
PUNTOCOMA            : 50 61 66 68 69 120 121 126 127 128 129 130 131 132 133 134 135 136
RAIZ                 : 
RBRACKET             : 48 60 87
READ                 : 121
RECTANGULO           : 128
RESTA                : 40
RKEY                 : 19 67
RPARENT              : 66 76 119 120 121 122 123 126 127 128 129 130 131 132 133 134 135 136 147 156
SAME                 : 35
SQRT                 : 
STRING               : 54
SUMA                 : 39
TRAPECIO             : 135
TRIANGULO            : 127
VAR                  : 
VOID                 : 138
WHILE                : 119 120
error                : 

Nonterminals, with rules where they appear

apoya                : 106
asig2                : 56
asig3                : 57 59
asigfinal            : 58 60
asignacion           : 89 122 122
b3                   : 13 15
b4                   : 13 17
b5                   : 13
bloque               : 10 67 68 119 120 122 123 125 147
buildFunc            : 137 138
c2                   : 67
casa                 : 99
ciclodowhile         : 93
ciclofor             : 94
ciclowhile           : 92
comentario           : 96
condicion            : 91
cuadrado             : 97
cuadrupro            : 1
cuadrupro2           : 10
cubo                 : 101
decla1               : 44
decla2               : 47 49
declafinal           : 46 48
declaracion          : 6 15
dimension            : 107
e2                   : 27
e3                   : 28
empty                : 2 11 12 14 16 18 22 25 26 29 36 37 41 42 43 45 73 74 75 83 84 115 116 117 118 124 139 142 144 148 149
estatuto             : 17
estrella             : 103
exp                  : 27 30 31 32 33 34 35 39 40 47 49 57 59 85 86 126 127 128 128 129 129 130 131 132 132 135 135 136 153
exp2                 : 38
expre                : 20
expre2               : 21
expresion            : 23 24 61 63 67 76 119 120 122 123
expresion2           : 20
f2                   : 77
f3                   : 78
f6                   : 79
f7                   : 80
f8                   : 85 86
factor               : 70
funct11              : 137 138
funct2               : 141 145
funct3               : 143
function             : 8
function4            : 140 146
if                   : 109
if2                  : 123
iniEnv               : 13
initFunc             : 147
initParamTable       : 141
initParams           : 143
initTop              : 1
levanta              : 105
llamaf11             : 150
llamaf2              : 151 154
llamaf3              : 153
llamaf4              : 152 155
llamafuncion         : 88 108
mueve                : 104
noinitFunc           : 147
p2                   : 1
p3                   : 3 6
p4                   : 4 7 8
p5                   : 5 9
pr2                  : 62 65
pr3                  : 63 64
print                : 90
program              : 0
read                 : 95
rectangulo           : 100
savevar              : 44
tagcad               : 113
tagcar               : 114
tagfloat             : 112
tagfondofalso        : 76
tagint               : 111
tagm                 : 71 72
tagmetelog           : 23 24
tagop                : 39 40
tagrel               : 30 31 32 33 34 35
tagsacafondo         : 76
tagsacalog           : 23 24
tagsacopm            : 70
tagsacops            : 38
tagsacrel            : 30 31 32 33 34 35
te2                  : 70
termino              : 38 71 72
tipo                 : 44 137 143
trapecio             : 102
triangulo            : 98
varcte               : 81

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM cuadrupro ID initTop DOSPUNTOS p2

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . cuadrupro ID initTop DOSPUNTOS p2
    (11) cuadrupro -> . empty
    (157) empty -> .

    ID              reduce using rule 157 (empty -> .)

    cuadrupro                      shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) program -> PROGRAM cuadrupro . ID initTop DOSPUNTOS p2

    ID              shift and go to state 5


state 4

    (11) cuadrupro -> empty .

    ID              reduce using rule 11 (cuadrupro -> empty .)


state 5

    (1) program -> PROGRAM cuadrupro ID . initTop DOSPUNTOS p2
    (2) initTop -> . empty
    (157) empty -> .

    DOSPUNTOS       reduce using rule 157 (empty -> .)

    initTop                        shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) program -> PROGRAM cuadrupro ID initTop . DOSPUNTOS p2

    DOSPUNTOS       shift and go to state 8


state 7

    (2) initTop -> empty .

    DOSPUNTOS       reduce using rule 2 (initTop -> empty .)


state 8

    (1) program -> PROGRAM cuadrupro ID initTop DOSPUNTOS . p2
    (3) p2 -> . p3
    (4) p2 -> . p4
    (5) p2 -> . p5
    (6) p3 -> . declaracion p3
    (7) p3 -> . p4
    (8) p4 -> . function p4
    (9) p4 -> . p5
    (10) p5 -> . cuadrupro2 bloque
    (44) declaracion -> . tipo ID savevar decla1
    (137) function -> . tipo ID buildFunc LPARENT funct11
    (138) function -> . VOID ID buildFunc LPARENT funct11
    (12) cuadrupro2 -> . empty
    (51) tipo -> . INT
    (52) tipo -> . FLOAT
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . BOOL
    (157) empty -> .

    VOID            shift and go to state 10
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22
    LKEY            reduce using rule 157 (empty -> .)

    p2                             shift and go to state 15
    p3                             shift and go to state 16
    tipo                           shift and go to state 11
    p4                             shift and go to state 18
    p5                             shift and go to state 19
    function                       shift and go to state 13
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 12
    declaracion                    shift and go to state 23

state 9

    (10) p5 -> cuadrupro2 . bloque
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 25

state 10

    (138) function -> VOID . ID buildFunc LPARENT funct11

    ID              shift and go to state 26


state 11

    (44) declaracion -> tipo . ID savevar decla1
    (137) function -> tipo . ID buildFunc LPARENT funct11

    ID              shift and go to state 27


state 12

    (12) cuadrupro2 -> empty .

    LKEY            reduce using rule 12 (cuadrupro2 -> empty .)


state 13

    (8) p4 -> function . p4
    (8) p4 -> . function p4
    (9) p4 -> . p5
    (137) function -> . tipo ID buildFunc LPARENT funct11
    (138) function -> . VOID ID buildFunc LPARENT funct11
    (10) p5 -> . cuadrupro2 bloque
    (51) tipo -> . INT
    (52) tipo -> . FLOAT
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . BOOL
    (12) cuadrupro2 -> . empty
    (157) empty -> .

    VOID            shift and go to state 10
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22
    LKEY            reduce using rule 157 (empty -> .)

    function                       shift and go to state 13
    p4                             shift and go to state 28
    tipo                           shift and go to state 29
    p5                             shift and go to state 30
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 12

state 14

    (54) tipo -> STRING .

    ID              reduce using rule 54 (tipo -> STRING .)


state 15

    (1) program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2 .

    $end            reduce using rule 1 (program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2 .)


state 16

    (3) p2 -> p3 .

    $end            reduce using rule 3 (p2 -> p3 .)


state 17

    (53) tipo -> CHAR .

    ID              reduce using rule 53 (tipo -> CHAR .)


state 18

    (4) p2 -> p4 .
    (7) p3 -> p4 .

  ! reduce/reduce conflict for $end resolved using rule 4 (p2 -> p4 .)
    $end            reduce using rule 4 (p2 -> p4 .)

  ! $end            [ reduce using rule 7 (p3 -> p4 .) ]


state 19

    (5) p2 -> p5 .
    (9) p4 -> p5 .

  ! reduce/reduce conflict for $end resolved using rule 5 (p2 -> p5 .)
    $end            reduce using rule 5 (p2 -> p5 .)

  ! $end            [ reduce using rule 9 (p4 -> p5 .) ]


state 20

    (51) tipo -> INT .

    ID              reduce using rule 51 (tipo -> INT .)


state 21

    (52) tipo -> FLOAT .

    ID              reduce using rule 52 (tipo -> FLOAT .)


state 22

    (55) tipo -> BOOL .

    ID              reduce using rule 55 (tipo -> BOOL .)


state 23

    (6) p3 -> declaracion . p3
    (6) p3 -> . declaracion p3
    (7) p3 -> . p4
    (44) declaracion -> . tipo ID savevar decla1
    (8) p4 -> . function p4
    (9) p4 -> . p5
    (51) tipo -> . INT
    (52) tipo -> . FLOAT
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . BOOL
    (137) function -> . tipo ID buildFunc LPARENT funct11
    (138) function -> . VOID ID buildFunc LPARENT funct11
    (10) p5 -> . cuadrupro2 bloque
    (12) cuadrupro2 -> . empty
    (157) empty -> .

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22
    VOID            shift and go to state 10
    LKEY            reduce using rule 157 (empty -> .)

    function                       shift and go to state 13
    p3                             shift and go to state 31
    empty                          shift and go to state 12
    tipo                           shift and go to state 11
    p4                             shift and go to state 32
    p5                             shift and go to state 30
    cuadrupro2                     shift and go to state 9
    declaracion                    shift and go to state 23

state 24

    (13) bloque -> LKEY . iniEnv b3 b4 b5
    (14) iniEnv -> . empty
    (157) empty -> .

    INT             reduce using rule 157 (empty -> .)
    FLOAT           reduce using rule 157 (empty -> .)
    CHAR            reduce using rule 157 (empty -> .)
    STRING          reduce using rule 157 (empty -> .)
    BOOL            reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    PRINT           reduce using rule 157 (empty -> .)
    IF              reduce using rule 157 (empty -> .)
    WHILE           reduce using rule 157 (empty -> .)
    DO              reduce using rule 157 (empty -> .)
    FOR             reduce using rule 157 (empty -> .)
    COMENTARIO      reduce using rule 157 (empty -> .)
    CUADRADO        reduce using rule 157 (empty -> .)
    TRIANGULO       reduce using rule 157 (empty -> .)
    CASA            reduce using rule 157 (empty -> .)
    RECTANGULO      reduce using rule 157 (empty -> .)
    CUBO            reduce using rule 157 (empty -> .)
    TRAPECIO        reduce using rule 157 (empty -> .)
    ESTRELLA        reduce using rule 157 (empty -> .)
    MUEVE           reduce using rule 157 (empty -> .)
    LEVANTA         reduce using rule 157 (empty -> .)
    APOYA           reduce using rule 157 (empty -> .)
    DIMENSION       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    iniEnv                         shift and go to state 33
    empty                          shift and go to state 34

state 25

    (10) p5 -> cuadrupro2 bloque .

    $end            reduce using rule 10 (p5 -> cuadrupro2 bloque .)


state 26

    (138) function -> VOID ID . buildFunc LPARENT funct11
    (139) buildFunc -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)

    buildFunc                      shift and go to state 35
    empty                          shift and go to state 36

state 27

    (44) declaracion -> tipo ID . savevar decla1
    (137) function -> tipo ID . buildFunc LPARENT funct11
    (45) savevar -> . empty
    (139) buildFunc -> . empty
    (157) empty -> .

    LBRACKET        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)

    buildFunc                      shift and go to state 37
    savevar                        shift and go to state 38
    empty                          shift and go to state 39

state 28

    (8) p4 -> function p4 .

    $end            reduce using rule 8 (p4 -> function p4 .)


state 29

    (137) function -> tipo . ID buildFunc LPARENT funct11

    ID              shift and go to state 40


state 30

    (9) p4 -> p5 .

    $end            reduce using rule 9 (p4 -> p5 .)


state 31

    (6) p3 -> declaracion p3 .

    $end            reduce using rule 6 (p3 -> declaracion p3 .)


state 32

    (7) p3 -> p4 .

    $end            reduce using rule 7 (p3 -> p4 .)


state 33

    (13) bloque -> LKEY iniEnv . b3 b4 b5
    (15) b3 -> . declaracion b3
    (16) b3 -> . empty
    (44) declaracion -> . tipo ID savevar decla1
    (157) empty -> .
    (51) tipo -> . INT
    (52) tipo -> . FLOAT
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . BOOL

    ID              reduce using rule 157 (empty -> .)
    PRINT           reduce using rule 157 (empty -> .)
    IF              reduce using rule 157 (empty -> .)
    WHILE           reduce using rule 157 (empty -> .)
    DO              reduce using rule 157 (empty -> .)
    FOR             reduce using rule 157 (empty -> .)
    COMENTARIO      reduce using rule 157 (empty -> .)
    CUADRADO        reduce using rule 157 (empty -> .)
    TRIANGULO       reduce using rule 157 (empty -> .)
    CASA            reduce using rule 157 (empty -> .)
    RECTANGULO      reduce using rule 157 (empty -> .)
    CUBO            reduce using rule 157 (empty -> .)
    TRAPECIO        reduce using rule 157 (empty -> .)
    ESTRELLA        reduce using rule 157 (empty -> .)
    MUEVE           reduce using rule 157 (empty -> .)
    LEVANTA         reduce using rule 157 (empty -> .)
    APOYA           reduce using rule 157 (empty -> .)
    DIMENSION       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22

    tipo                           shift and go to state 41
    declaracion                    shift and go to state 44
    b3                             shift and go to state 43
    empty                          shift and go to state 42

state 34

    (14) iniEnv -> empty .

    INT             reduce using rule 14 (iniEnv -> empty .)
    FLOAT           reduce using rule 14 (iniEnv -> empty .)
    CHAR            reduce using rule 14 (iniEnv -> empty .)
    STRING          reduce using rule 14 (iniEnv -> empty .)
    BOOL            reduce using rule 14 (iniEnv -> empty .)
    ID              reduce using rule 14 (iniEnv -> empty .)
    PRINT           reduce using rule 14 (iniEnv -> empty .)
    IF              reduce using rule 14 (iniEnv -> empty .)
    WHILE           reduce using rule 14 (iniEnv -> empty .)
    DO              reduce using rule 14 (iniEnv -> empty .)
    FOR             reduce using rule 14 (iniEnv -> empty .)
    COMENTARIO      reduce using rule 14 (iniEnv -> empty .)
    CUADRADO        reduce using rule 14 (iniEnv -> empty .)
    TRIANGULO       reduce using rule 14 (iniEnv -> empty .)
    CASA            reduce using rule 14 (iniEnv -> empty .)
    RECTANGULO      reduce using rule 14 (iniEnv -> empty .)
    CUBO            reduce using rule 14 (iniEnv -> empty .)
    TRAPECIO        reduce using rule 14 (iniEnv -> empty .)
    ESTRELLA        reduce using rule 14 (iniEnv -> empty .)
    MUEVE           reduce using rule 14 (iniEnv -> empty .)
    LEVANTA         reduce using rule 14 (iniEnv -> empty .)
    APOYA           reduce using rule 14 (iniEnv -> empty .)
    DIMENSION       reduce using rule 14 (iniEnv -> empty .)
    RKEY            reduce using rule 14 (iniEnv -> empty .)


state 35

    (138) function -> VOID ID buildFunc . LPARENT funct11

    LPARENT         shift and go to state 45


state 36

    (139) buildFunc -> empty .

    LPARENT         reduce using rule 139 (buildFunc -> empty .)


state 37

    (137) function -> tipo ID buildFunc . LPARENT funct11

    LPARENT         shift and go to state 46


state 38

    (44) declaracion -> tipo ID savevar . decla1
    (46) decla1 -> . declafinal
    (47) decla1 -> . LBRACKET exp decla2
    (50) declafinal -> . PUNTOCOMA

    LBRACKET        shift and go to state 47
    PUNTOCOMA       shift and go to state 48

    decla1                         shift and go to state 49
    declafinal                     shift and go to state 50

state 39

    (45) savevar -> empty .
    (139) buildFunc -> empty .

    LBRACKET        reduce using rule 45 (savevar -> empty .)
    PUNTOCOMA       reduce using rule 45 (savevar -> empty .)
    LPARENT         reduce using rule 139 (buildFunc -> empty .)


state 40

    (137) function -> tipo ID . buildFunc LPARENT funct11
    (139) buildFunc -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)

    buildFunc                      shift and go to state 37
    empty                          shift and go to state 36

state 41

    (44) declaracion -> tipo . ID savevar decla1

    ID              shift and go to state 51


state 42

    (16) b3 -> empty .

    ID              reduce using rule 16 (b3 -> empty .)
    PRINT           reduce using rule 16 (b3 -> empty .)
    IF              reduce using rule 16 (b3 -> empty .)
    WHILE           reduce using rule 16 (b3 -> empty .)
    DO              reduce using rule 16 (b3 -> empty .)
    FOR             reduce using rule 16 (b3 -> empty .)
    COMENTARIO      reduce using rule 16 (b3 -> empty .)
    CUADRADO        reduce using rule 16 (b3 -> empty .)
    TRIANGULO       reduce using rule 16 (b3 -> empty .)
    CASA            reduce using rule 16 (b3 -> empty .)
    RECTANGULO      reduce using rule 16 (b3 -> empty .)
    CUBO            reduce using rule 16 (b3 -> empty .)
    TRAPECIO        reduce using rule 16 (b3 -> empty .)
    ESTRELLA        reduce using rule 16 (b3 -> empty .)
    MUEVE           reduce using rule 16 (b3 -> empty .)
    LEVANTA         reduce using rule 16 (b3 -> empty .)
    APOYA           reduce using rule 16 (b3 -> empty .)
    DIMENSION       reduce using rule 16 (b3 -> empty .)
    RKEY            reduce using rule 16 (b3 -> empty .)


state 43

    (13) bloque -> LKEY iniEnv b3 . b4 b5
    (17) b4 -> . estatuto b4
    (18) b4 -> . empty
    (89) estatuto -> . asignacion
    (90) estatuto -> . print
    (91) estatuto -> . condicion
    (92) estatuto -> . ciclowhile
    (93) estatuto -> . ciclodowhile
    (94) estatuto -> . ciclofor
    (95) estatuto -> . read
    (96) estatuto -> . comentario
    (97) estatuto -> . cuadrado
    (98) estatuto -> . triangulo
    (99) estatuto -> . casa
    (100) estatuto -> . rectangulo
    (101) estatuto -> . cubo
    (102) estatuto -> . trapecio
    (103) estatuto -> . estrella
    (104) estatuto -> . mueve
    (105) estatuto -> . levanta
    (106) estatuto -> . apoya
    (107) estatuto -> . dimension
    (108) estatuto -> . llamafuncion
    (109) estatuto -> . if
    (157) empty -> .
    (56) asignacion -> . ID asig2
    (62) print -> . PRINT LPARENT pr2
    (67) condicion -> . IF LKEY expresion RKEY bloque c2
    (119) ciclowhile -> . WHILE LPARENT expresion RPARENT bloque
    (120) ciclodowhile -> . DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (122) ciclofor -> . FOR LPARENT asignacion expresion asignacion RPARENT bloque
    (121) read -> . ID IGUAL READ LPARENT RPARENT PUNTOCOMA
    (110) comentario -> . COMENTARIO
    (126) cuadrado -> . CUADRADO LPARENT exp RPARENT PUNTOCOMA
    (127) triangulo -> . TRIANGULO LPARENT exp RPARENT PUNTOCOMA
    (129) casa -> . CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
    (128) rectangulo -> . RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (131) cubo -> . CUBO LPARENT exp RPARENT PUNTOCOMA
    (135) trapecio -> . TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (130) estrella -> . ESTRELLA LPARENT exp RPARENT PUNTOCOMA
    (132) mueve -> . MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA
    (133) levanta -> . LEVANTA LPARENT RPARENT PUNTOCOMA
    (134) apoya -> . APOYA LPARENT RPARENT PUNTOCOMA
    (136) dimension -> . DIMENSION LPARENT exp RPARENT PUNTOCOMA
    (150) llamafuncion -> . ID LPARENT llamaf11
    (123) if -> . IF LPARENT expresion RPARENT bloque if2

    RKEY            reduce using rule 157 (empty -> .)
    ID              shift and go to state 85
    PRINT           shift and go to state 58
    IF              shift and go to state 87
    WHILE           shift and go to state 55
    DO              shift and go to state 52
    FOR             shift and go to state 78
    COMENTARIO      shift and go to state 77
    CUADRADO        shift and go to state 91
    TRIANGULO       shift and go to state 76
    CASA            shift and go to state 64
    RECTANGULO      shift and go to state 65
    CUBO            shift and go to state 72
    TRAPECIO        shift and go to state 57
    ESTRELLA        shift and go to state 88
    MUEVE           shift and go to state 53
    LEVANTA         shift and go to state 92
    APOYA           shift and go to state 75
    DIMENSION       shift and go to state 86

    b4                             shift and go to state 54
    apoya                          shift and go to state 56
    trapecio                       shift and go to state 59
    comentario                     shift and go to state 60
    levanta                        shift and go to state 61
    if                             shift and go to state 62
    triangulo                      shift and go to state 63
    estatuto                       shift and go to state 66
    mueve                          shift and go to state 67
    ciclowhile                     shift and go to state 68
    llamafuncion                   shift and go to state 69
    condicion                      shift and go to state 70
    rectangulo                     shift and go to state 71
    print                          shift and go to state 73
    empty                          shift and go to state 74
    read                           shift and go to state 79
    cubo                           shift and go to state 80
    ciclofor                       shift and go to state 81
    estrella                       shift and go to state 82
    cuadrado                       shift and go to state 83
    ciclodowhile                   shift and go to state 84
    casa                           shift and go to state 89
    asignacion                     shift and go to state 90
    dimension                      shift and go to state 93

state 44

    (15) b3 -> declaracion . b3
    (15) b3 -> . declaracion b3
    (16) b3 -> . empty
    (44) declaracion -> . tipo ID savevar decla1
    (157) empty -> .
    (51) tipo -> . INT
    (52) tipo -> . FLOAT
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . BOOL

    ID              reduce using rule 157 (empty -> .)
    PRINT           reduce using rule 157 (empty -> .)
    IF              reduce using rule 157 (empty -> .)
    WHILE           reduce using rule 157 (empty -> .)
    DO              reduce using rule 157 (empty -> .)
    FOR             reduce using rule 157 (empty -> .)
    COMENTARIO      reduce using rule 157 (empty -> .)
    CUADRADO        reduce using rule 157 (empty -> .)
    TRIANGULO       reduce using rule 157 (empty -> .)
    CASA            reduce using rule 157 (empty -> .)
    RECTANGULO      reduce using rule 157 (empty -> .)
    CUBO            reduce using rule 157 (empty -> .)
    TRAPECIO        reduce using rule 157 (empty -> .)
    ESTRELLA        reduce using rule 157 (empty -> .)
    MUEVE           reduce using rule 157 (empty -> .)
    LEVANTA         reduce using rule 157 (empty -> .)
    APOYA           reduce using rule 157 (empty -> .)
    DIMENSION       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22

    declaracion                    shift and go to state 44
    tipo                           shift and go to state 41
    b3                             shift and go to state 94
    empty                          shift and go to state 42

state 45

    (138) function -> VOID ID buildFunc LPARENT . funct11
    (140) funct11 -> . function4
    (141) funct11 -> . initParamTable funct2
    (147) function4 -> . RPARENT noinitFunc bloque initFunc
    (142) initParamTable -> . empty
    (157) empty -> .

    RPARENT         shift and go to state 97
    INT             reduce using rule 157 (empty -> .)
    FLOAT           reduce using rule 157 (empty -> .)
    CHAR            reduce using rule 157 (empty -> .)
    STRING          reduce using rule 157 (empty -> .)
    BOOL            reduce using rule 157 (empty -> .)

    function4                      shift and go to state 95
    funct11                        shift and go to state 96
    initParamTable                 shift and go to state 98
    empty                          shift and go to state 99

state 46

    (137) function -> tipo ID buildFunc LPARENT . funct11
    (140) funct11 -> . function4
    (141) funct11 -> . initParamTable funct2
    (147) function4 -> . RPARENT noinitFunc bloque initFunc
    (142) initParamTable -> . empty
    (157) empty -> .

    RPARENT         shift and go to state 97
    INT             reduce using rule 157 (empty -> .)
    FLOAT           reduce using rule 157 (empty -> .)
    CHAR            reduce using rule 157 (empty -> .)
    STRING          reduce using rule 157 (empty -> .)
    BOOL            reduce using rule 157 (empty -> .)

    function4                      shift and go to state 95
    funct11                        shift and go to state 100
    initParamTable                 shift and go to state 98
    empty                          shift and go to state 99

state 47

    (47) decla1 -> LBRACKET . exp decla2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 114

state 48

    (50) declafinal -> PUNTOCOMA .

    INT             reduce using rule 50 (declafinal -> PUNTOCOMA .)
    FLOAT           reduce using rule 50 (declafinal -> PUNTOCOMA .)
    CHAR            reduce using rule 50 (declafinal -> PUNTOCOMA .)
    STRING          reduce using rule 50 (declafinal -> PUNTOCOMA .)
    BOOL            reduce using rule 50 (declafinal -> PUNTOCOMA .)
    VOID            reduce using rule 50 (declafinal -> PUNTOCOMA .)
    LKEY            reduce using rule 50 (declafinal -> PUNTOCOMA .)
    ID              reduce using rule 50 (declafinal -> PUNTOCOMA .)
    PRINT           reduce using rule 50 (declafinal -> PUNTOCOMA .)
    IF              reduce using rule 50 (declafinal -> PUNTOCOMA .)
    WHILE           reduce using rule 50 (declafinal -> PUNTOCOMA .)
    DO              reduce using rule 50 (declafinal -> PUNTOCOMA .)
    FOR             reduce using rule 50 (declafinal -> PUNTOCOMA .)
    COMENTARIO      reduce using rule 50 (declafinal -> PUNTOCOMA .)
    CUADRADO        reduce using rule 50 (declafinal -> PUNTOCOMA .)
    TRIANGULO       reduce using rule 50 (declafinal -> PUNTOCOMA .)
    CASA            reduce using rule 50 (declafinal -> PUNTOCOMA .)
    RECTANGULO      reduce using rule 50 (declafinal -> PUNTOCOMA .)
    CUBO            reduce using rule 50 (declafinal -> PUNTOCOMA .)
    TRAPECIO        reduce using rule 50 (declafinal -> PUNTOCOMA .)
    ESTRELLA        reduce using rule 50 (declafinal -> PUNTOCOMA .)
    MUEVE           reduce using rule 50 (declafinal -> PUNTOCOMA .)
    LEVANTA         reduce using rule 50 (declafinal -> PUNTOCOMA .)
    APOYA           reduce using rule 50 (declafinal -> PUNTOCOMA .)
    DIMENSION       reduce using rule 50 (declafinal -> PUNTOCOMA .)
    RKEY            reduce using rule 50 (declafinal -> PUNTOCOMA .)


state 49

    (44) declaracion -> tipo ID savevar decla1 .

    INT             reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    FLOAT           reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    CHAR            reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    STRING          reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    BOOL            reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    ID              reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    PRINT           reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    IF              reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    WHILE           reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    DO              reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    FOR             reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    COMENTARIO      reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    CUADRADO        reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    TRIANGULO       reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    CASA            reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    RECTANGULO      reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    CUBO            reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    TRAPECIO        reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    ESTRELLA        reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    MUEVE           reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    LEVANTA         reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    APOYA           reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    DIMENSION       reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    RKEY            reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    VOID            reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)
    LKEY            reduce using rule 44 (declaracion -> tipo ID savevar decla1 .)


state 50

    (46) decla1 -> declafinal .

    INT             reduce using rule 46 (decla1 -> declafinal .)
    FLOAT           reduce using rule 46 (decla1 -> declafinal .)
    CHAR            reduce using rule 46 (decla1 -> declafinal .)
    STRING          reduce using rule 46 (decla1 -> declafinal .)
    BOOL            reduce using rule 46 (decla1 -> declafinal .)
    VOID            reduce using rule 46 (decla1 -> declafinal .)
    LKEY            reduce using rule 46 (decla1 -> declafinal .)
    ID              reduce using rule 46 (decla1 -> declafinal .)
    PRINT           reduce using rule 46 (decla1 -> declafinal .)
    IF              reduce using rule 46 (decla1 -> declafinal .)
    WHILE           reduce using rule 46 (decla1 -> declafinal .)
    DO              reduce using rule 46 (decla1 -> declafinal .)
    FOR             reduce using rule 46 (decla1 -> declafinal .)
    COMENTARIO      reduce using rule 46 (decla1 -> declafinal .)
    CUADRADO        reduce using rule 46 (decla1 -> declafinal .)
    TRIANGULO       reduce using rule 46 (decla1 -> declafinal .)
    CASA            reduce using rule 46 (decla1 -> declafinal .)
    RECTANGULO      reduce using rule 46 (decla1 -> declafinal .)
    CUBO            reduce using rule 46 (decla1 -> declafinal .)
    TRAPECIO        reduce using rule 46 (decla1 -> declafinal .)
    ESTRELLA        reduce using rule 46 (decla1 -> declafinal .)
    MUEVE           reduce using rule 46 (decla1 -> declafinal .)
    LEVANTA         reduce using rule 46 (decla1 -> declafinal .)
    APOYA           reduce using rule 46 (decla1 -> declafinal .)
    DIMENSION       reduce using rule 46 (decla1 -> declafinal .)
    RKEY            reduce using rule 46 (decla1 -> declafinal .)


state 51

    (44) declaracion -> tipo ID . savevar decla1
    (45) savevar -> . empty
    (157) empty -> .

    LBRACKET        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)

    empty                          shift and go to state 116
    savevar                        shift and go to state 38

state 52

    (120) ciclodowhile -> DO . bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 117

state 53

    (132) mueve -> MUEVE . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 118


state 54

    (13) bloque -> LKEY iniEnv b3 b4 . b5
    (19) b5 -> . RKEY

    RKEY            shift and go to state 119

    b5                             shift and go to state 120

state 55

    (119) ciclowhile -> WHILE . LPARENT expresion RPARENT bloque

    LPARENT         shift and go to state 121


state 56

    (106) estatuto -> apoya .

    ID              reduce using rule 106 (estatuto -> apoya .)
    PRINT           reduce using rule 106 (estatuto -> apoya .)
    IF              reduce using rule 106 (estatuto -> apoya .)
    WHILE           reduce using rule 106 (estatuto -> apoya .)
    DO              reduce using rule 106 (estatuto -> apoya .)
    FOR             reduce using rule 106 (estatuto -> apoya .)
    COMENTARIO      reduce using rule 106 (estatuto -> apoya .)
    CUADRADO        reduce using rule 106 (estatuto -> apoya .)
    TRIANGULO       reduce using rule 106 (estatuto -> apoya .)
    CASA            reduce using rule 106 (estatuto -> apoya .)
    RECTANGULO      reduce using rule 106 (estatuto -> apoya .)
    CUBO            reduce using rule 106 (estatuto -> apoya .)
    TRAPECIO        reduce using rule 106 (estatuto -> apoya .)
    ESTRELLA        reduce using rule 106 (estatuto -> apoya .)
    MUEVE           reduce using rule 106 (estatuto -> apoya .)
    LEVANTA         reduce using rule 106 (estatuto -> apoya .)
    APOYA           reduce using rule 106 (estatuto -> apoya .)
    DIMENSION       reduce using rule 106 (estatuto -> apoya .)
    RKEY            reduce using rule 106 (estatuto -> apoya .)


state 57

    (135) trapecio -> TRAPECIO . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 122


state 58

    (62) print -> PRINT . LPARENT pr2

    LPARENT         shift and go to state 123


state 59

    (102) estatuto -> trapecio .

    ID              reduce using rule 102 (estatuto -> trapecio .)
    PRINT           reduce using rule 102 (estatuto -> trapecio .)
    IF              reduce using rule 102 (estatuto -> trapecio .)
    WHILE           reduce using rule 102 (estatuto -> trapecio .)
    DO              reduce using rule 102 (estatuto -> trapecio .)
    FOR             reduce using rule 102 (estatuto -> trapecio .)
    COMENTARIO      reduce using rule 102 (estatuto -> trapecio .)
    CUADRADO        reduce using rule 102 (estatuto -> trapecio .)
    TRIANGULO       reduce using rule 102 (estatuto -> trapecio .)
    CASA            reduce using rule 102 (estatuto -> trapecio .)
    RECTANGULO      reduce using rule 102 (estatuto -> trapecio .)
    CUBO            reduce using rule 102 (estatuto -> trapecio .)
    TRAPECIO        reduce using rule 102 (estatuto -> trapecio .)
    ESTRELLA        reduce using rule 102 (estatuto -> trapecio .)
    MUEVE           reduce using rule 102 (estatuto -> trapecio .)
    LEVANTA         reduce using rule 102 (estatuto -> trapecio .)
    APOYA           reduce using rule 102 (estatuto -> trapecio .)
    DIMENSION       reduce using rule 102 (estatuto -> trapecio .)
    RKEY            reduce using rule 102 (estatuto -> trapecio .)


state 60

    (96) estatuto -> comentario .

    ID              reduce using rule 96 (estatuto -> comentario .)
    PRINT           reduce using rule 96 (estatuto -> comentario .)
    IF              reduce using rule 96 (estatuto -> comentario .)
    WHILE           reduce using rule 96 (estatuto -> comentario .)
    DO              reduce using rule 96 (estatuto -> comentario .)
    FOR             reduce using rule 96 (estatuto -> comentario .)
    COMENTARIO      reduce using rule 96 (estatuto -> comentario .)
    CUADRADO        reduce using rule 96 (estatuto -> comentario .)
    TRIANGULO       reduce using rule 96 (estatuto -> comentario .)
    CASA            reduce using rule 96 (estatuto -> comentario .)
    RECTANGULO      reduce using rule 96 (estatuto -> comentario .)
    CUBO            reduce using rule 96 (estatuto -> comentario .)
    TRAPECIO        reduce using rule 96 (estatuto -> comentario .)
    ESTRELLA        reduce using rule 96 (estatuto -> comentario .)
    MUEVE           reduce using rule 96 (estatuto -> comentario .)
    LEVANTA         reduce using rule 96 (estatuto -> comentario .)
    APOYA           reduce using rule 96 (estatuto -> comentario .)
    DIMENSION       reduce using rule 96 (estatuto -> comentario .)
    RKEY            reduce using rule 96 (estatuto -> comentario .)


state 61

    (105) estatuto -> levanta .

    ID              reduce using rule 105 (estatuto -> levanta .)
    PRINT           reduce using rule 105 (estatuto -> levanta .)
    IF              reduce using rule 105 (estatuto -> levanta .)
    WHILE           reduce using rule 105 (estatuto -> levanta .)
    DO              reduce using rule 105 (estatuto -> levanta .)
    FOR             reduce using rule 105 (estatuto -> levanta .)
    COMENTARIO      reduce using rule 105 (estatuto -> levanta .)
    CUADRADO        reduce using rule 105 (estatuto -> levanta .)
    TRIANGULO       reduce using rule 105 (estatuto -> levanta .)
    CASA            reduce using rule 105 (estatuto -> levanta .)
    RECTANGULO      reduce using rule 105 (estatuto -> levanta .)
    CUBO            reduce using rule 105 (estatuto -> levanta .)
    TRAPECIO        reduce using rule 105 (estatuto -> levanta .)
    ESTRELLA        reduce using rule 105 (estatuto -> levanta .)
    MUEVE           reduce using rule 105 (estatuto -> levanta .)
    LEVANTA         reduce using rule 105 (estatuto -> levanta .)
    APOYA           reduce using rule 105 (estatuto -> levanta .)
    DIMENSION       reduce using rule 105 (estatuto -> levanta .)
    RKEY            reduce using rule 105 (estatuto -> levanta .)


state 62

    (109) estatuto -> if .

    ID              reduce using rule 109 (estatuto -> if .)
    PRINT           reduce using rule 109 (estatuto -> if .)
    IF              reduce using rule 109 (estatuto -> if .)
    WHILE           reduce using rule 109 (estatuto -> if .)
    DO              reduce using rule 109 (estatuto -> if .)
    FOR             reduce using rule 109 (estatuto -> if .)
    COMENTARIO      reduce using rule 109 (estatuto -> if .)
    CUADRADO        reduce using rule 109 (estatuto -> if .)
    TRIANGULO       reduce using rule 109 (estatuto -> if .)
    CASA            reduce using rule 109 (estatuto -> if .)
    RECTANGULO      reduce using rule 109 (estatuto -> if .)
    CUBO            reduce using rule 109 (estatuto -> if .)
    TRAPECIO        reduce using rule 109 (estatuto -> if .)
    ESTRELLA        reduce using rule 109 (estatuto -> if .)
    MUEVE           reduce using rule 109 (estatuto -> if .)
    LEVANTA         reduce using rule 109 (estatuto -> if .)
    APOYA           reduce using rule 109 (estatuto -> if .)
    DIMENSION       reduce using rule 109 (estatuto -> if .)
    RKEY            reduce using rule 109 (estatuto -> if .)


state 63

    (98) estatuto -> triangulo .

    ID              reduce using rule 98 (estatuto -> triangulo .)
    PRINT           reduce using rule 98 (estatuto -> triangulo .)
    IF              reduce using rule 98 (estatuto -> triangulo .)
    WHILE           reduce using rule 98 (estatuto -> triangulo .)
    DO              reduce using rule 98 (estatuto -> triangulo .)
    FOR             reduce using rule 98 (estatuto -> triangulo .)
    COMENTARIO      reduce using rule 98 (estatuto -> triangulo .)
    CUADRADO        reduce using rule 98 (estatuto -> triangulo .)
    TRIANGULO       reduce using rule 98 (estatuto -> triangulo .)
    CASA            reduce using rule 98 (estatuto -> triangulo .)
    RECTANGULO      reduce using rule 98 (estatuto -> triangulo .)
    CUBO            reduce using rule 98 (estatuto -> triangulo .)
    TRAPECIO        reduce using rule 98 (estatuto -> triangulo .)
    ESTRELLA        reduce using rule 98 (estatuto -> triangulo .)
    MUEVE           reduce using rule 98 (estatuto -> triangulo .)
    LEVANTA         reduce using rule 98 (estatuto -> triangulo .)
    APOYA           reduce using rule 98 (estatuto -> triangulo .)
    DIMENSION       reduce using rule 98 (estatuto -> triangulo .)
    RKEY            reduce using rule 98 (estatuto -> triangulo .)


state 64

    (129) casa -> CASA . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 124


state 65

    (128) rectangulo -> RECTANGULO . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 125


state 66

    (17) b4 -> estatuto . b4
    (17) b4 -> . estatuto b4
    (18) b4 -> . empty
    (89) estatuto -> . asignacion
    (90) estatuto -> . print
    (91) estatuto -> . condicion
    (92) estatuto -> . ciclowhile
    (93) estatuto -> . ciclodowhile
    (94) estatuto -> . ciclofor
    (95) estatuto -> . read
    (96) estatuto -> . comentario
    (97) estatuto -> . cuadrado
    (98) estatuto -> . triangulo
    (99) estatuto -> . casa
    (100) estatuto -> . rectangulo
    (101) estatuto -> . cubo
    (102) estatuto -> . trapecio
    (103) estatuto -> . estrella
    (104) estatuto -> . mueve
    (105) estatuto -> . levanta
    (106) estatuto -> . apoya
    (107) estatuto -> . dimension
    (108) estatuto -> . llamafuncion
    (109) estatuto -> . if
    (157) empty -> .
    (56) asignacion -> . ID asig2
    (62) print -> . PRINT LPARENT pr2
    (67) condicion -> . IF LKEY expresion RKEY bloque c2
    (119) ciclowhile -> . WHILE LPARENT expresion RPARENT bloque
    (120) ciclodowhile -> . DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (122) ciclofor -> . FOR LPARENT asignacion expresion asignacion RPARENT bloque
    (121) read -> . ID IGUAL READ LPARENT RPARENT PUNTOCOMA
    (110) comentario -> . COMENTARIO
    (126) cuadrado -> . CUADRADO LPARENT exp RPARENT PUNTOCOMA
    (127) triangulo -> . TRIANGULO LPARENT exp RPARENT PUNTOCOMA
    (129) casa -> . CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
    (128) rectangulo -> . RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (131) cubo -> . CUBO LPARENT exp RPARENT PUNTOCOMA
    (135) trapecio -> . TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (130) estrella -> . ESTRELLA LPARENT exp RPARENT PUNTOCOMA
    (132) mueve -> . MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA
    (133) levanta -> . LEVANTA LPARENT RPARENT PUNTOCOMA
    (134) apoya -> . APOYA LPARENT RPARENT PUNTOCOMA
    (136) dimension -> . DIMENSION LPARENT exp RPARENT PUNTOCOMA
    (150) llamafuncion -> . ID LPARENT llamaf11
    (123) if -> . IF LPARENT expresion RPARENT bloque if2

    RKEY            reduce using rule 157 (empty -> .)
    ID              shift and go to state 85
    PRINT           shift and go to state 58
    IF              shift and go to state 87
    WHILE           shift and go to state 55
    DO              shift and go to state 52
    FOR             shift and go to state 78
    COMENTARIO      shift and go to state 77
    CUADRADO        shift and go to state 91
    TRIANGULO       shift and go to state 76
    CASA            shift and go to state 64
    RECTANGULO      shift and go to state 65
    CUBO            shift and go to state 72
    TRAPECIO        shift and go to state 57
    ESTRELLA        shift and go to state 88
    MUEVE           shift and go to state 53
    LEVANTA         shift and go to state 92
    APOYA           shift and go to state 75
    DIMENSION       shift and go to state 86

    b4                             shift and go to state 126
    apoya                          shift and go to state 56
    trapecio                       shift and go to state 59
    comentario                     shift and go to state 60
    levanta                        shift and go to state 61
    if                             shift and go to state 62
    triangulo                      shift and go to state 63
    estatuto                       shift and go to state 66
    mueve                          shift and go to state 67
    ciclowhile                     shift and go to state 68
    llamafuncion                   shift and go to state 69
    cuadrado                       shift and go to state 83
    rectangulo                     shift and go to state 71
    print                          shift and go to state 73
    empty                          shift and go to state 74
    read                           shift and go to state 79
    cubo                           shift and go to state 80
    ciclofor                       shift and go to state 81
    estrella                       shift and go to state 82
    condicion                      shift and go to state 70
    ciclodowhile                   shift and go to state 84
    casa                           shift and go to state 89
    asignacion                     shift and go to state 90
    dimension                      shift and go to state 93

state 67

    (104) estatuto -> mueve .

    ID              reduce using rule 104 (estatuto -> mueve .)
    PRINT           reduce using rule 104 (estatuto -> mueve .)
    IF              reduce using rule 104 (estatuto -> mueve .)
    WHILE           reduce using rule 104 (estatuto -> mueve .)
    DO              reduce using rule 104 (estatuto -> mueve .)
    FOR             reduce using rule 104 (estatuto -> mueve .)
    COMENTARIO      reduce using rule 104 (estatuto -> mueve .)
    CUADRADO        reduce using rule 104 (estatuto -> mueve .)
    TRIANGULO       reduce using rule 104 (estatuto -> mueve .)
    CASA            reduce using rule 104 (estatuto -> mueve .)
    RECTANGULO      reduce using rule 104 (estatuto -> mueve .)
    CUBO            reduce using rule 104 (estatuto -> mueve .)
    TRAPECIO        reduce using rule 104 (estatuto -> mueve .)
    ESTRELLA        reduce using rule 104 (estatuto -> mueve .)
    MUEVE           reduce using rule 104 (estatuto -> mueve .)
    LEVANTA         reduce using rule 104 (estatuto -> mueve .)
    APOYA           reduce using rule 104 (estatuto -> mueve .)
    DIMENSION       reduce using rule 104 (estatuto -> mueve .)
    RKEY            reduce using rule 104 (estatuto -> mueve .)


state 68

    (92) estatuto -> ciclowhile .

    ID              reduce using rule 92 (estatuto -> ciclowhile .)
    PRINT           reduce using rule 92 (estatuto -> ciclowhile .)
    IF              reduce using rule 92 (estatuto -> ciclowhile .)
    WHILE           reduce using rule 92 (estatuto -> ciclowhile .)
    DO              reduce using rule 92 (estatuto -> ciclowhile .)
    FOR             reduce using rule 92 (estatuto -> ciclowhile .)
    COMENTARIO      reduce using rule 92 (estatuto -> ciclowhile .)
    CUADRADO        reduce using rule 92 (estatuto -> ciclowhile .)
    TRIANGULO       reduce using rule 92 (estatuto -> ciclowhile .)
    CASA            reduce using rule 92 (estatuto -> ciclowhile .)
    RECTANGULO      reduce using rule 92 (estatuto -> ciclowhile .)
    CUBO            reduce using rule 92 (estatuto -> ciclowhile .)
    TRAPECIO        reduce using rule 92 (estatuto -> ciclowhile .)
    ESTRELLA        reduce using rule 92 (estatuto -> ciclowhile .)
    MUEVE           reduce using rule 92 (estatuto -> ciclowhile .)
    LEVANTA         reduce using rule 92 (estatuto -> ciclowhile .)
    APOYA           reduce using rule 92 (estatuto -> ciclowhile .)
    DIMENSION       reduce using rule 92 (estatuto -> ciclowhile .)
    RKEY            reduce using rule 92 (estatuto -> ciclowhile .)


state 69

    (108) estatuto -> llamafuncion .

    ID              reduce using rule 108 (estatuto -> llamafuncion .)
    PRINT           reduce using rule 108 (estatuto -> llamafuncion .)
    IF              reduce using rule 108 (estatuto -> llamafuncion .)
    WHILE           reduce using rule 108 (estatuto -> llamafuncion .)
    DO              reduce using rule 108 (estatuto -> llamafuncion .)
    FOR             reduce using rule 108 (estatuto -> llamafuncion .)
    COMENTARIO      reduce using rule 108 (estatuto -> llamafuncion .)
    CUADRADO        reduce using rule 108 (estatuto -> llamafuncion .)
    TRIANGULO       reduce using rule 108 (estatuto -> llamafuncion .)
    CASA            reduce using rule 108 (estatuto -> llamafuncion .)
    RECTANGULO      reduce using rule 108 (estatuto -> llamafuncion .)
    CUBO            reduce using rule 108 (estatuto -> llamafuncion .)
    TRAPECIO        reduce using rule 108 (estatuto -> llamafuncion .)
    ESTRELLA        reduce using rule 108 (estatuto -> llamafuncion .)
    MUEVE           reduce using rule 108 (estatuto -> llamafuncion .)
    LEVANTA         reduce using rule 108 (estatuto -> llamafuncion .)
    APOYA           reduce using rule 108 (estatuto -> llamafuncion .)
    DIMENSION       reduce using rule 108 (estatuto -> llamafuncion .)
    RKEY            reduce using rule 108 (estatuto -> llamafuncion .)


state 70

    (91) estatuto -> condicion .

    ID              reduce using rule 91 (estatuto -> condicion .)
    PRINT           reduce using rule 91 (estatuto -> condicion .)
    IF              reduce using rule 91 (estatuto -> condicion .)
    WHILE           reduce using rule 91 (estatuto -> condicion .)
    DO              reduce using rule 91 (estatuto -> condicion .)
    FOR             reduce using rule 91 (estatuto -> condicion .)
    COMENTARIO      reduce using rule 91 (estatuto -> condicion .)
    CUADRADO        reduce using rule 91 (estatuto -> condicion .)
    TRIANGULO       reduce using rule 91 (estatuto -> condicion .)
    CASA            reduce using rule 91 (estatuto -> condicion .)
    RECTANGULO      reduce using rule 91 (estatuto -> condicion .)
    CUBO            reduce using rule 91 (estatuto -> condicion .)
    TRAPECIO        reduce using rule 91 (estatuto -> condicion .)
    ESTRELLA        reduce using rule 91 (estatuto -> condicion .)
    MUEVE           reduce using rule 91 (estatuto -> condicion .)
    LEVANTA         reduce using rule 91 (estatuto -> condicion .)
    APOYA           reduce using rule 91 (estatuto -> condicion .)
    DIMENSION       reduce using rule 91 (estatuto -> condicion .)
    RKEY            reduce using rule 91 (estatuto -> condicion .)


state 71

    (100) estatuto -> rectangulo .

    ID              reduce using rule 100 (estatuto -> rectangulo .)
    PRINT           reduce using rule 100 (estatuto -> rectangulo .)
    IF              reduce using rule 100 (estatuto -> rectangulo .)
    WHILE           reduce using rule 100 (estatuto -> rectangulo .)
    DO              reduce using rule 100 (estatuto -> rectangulo .)
    FOR             reduce using rule 100 (estatuto -> rectangulo .)
    COMENTARIO      reduce using rule 100 (estatuto -> rectangulo .)
    CUADRADO        reduce using rule 100 (estatuto -> rectangulo .)
    TRIANGULO       reduce using rule 100 (estatuto -> rectangulo .)
    CASA            reduce using rule 100 (estatuto -> rectangulo .)
    RECTANGULO      reduce using rule 100 (estatuto -> rectangulo .)
    CUBO            reduce using rule 100 (estatuto -> rectangulo .)
    TRAPECIO        reduce using rule 100 (estatuto -> rectangulo .)
    ESTRELLA        reduce using rule 100 (estatuto -> rectangulo .)
    MUEVE           reduce using rule 100 (estatuto -> rectangulo .)
    LEVANTA         reduce using rule 100 (estatuto -> rectangulo .)
    APOYA           reduce using rule 100 (estatuto -> rectangulo .)
    DIMENSION       reduce using rule 100 (estatuto -> rectangulo .)
    RKEY            reduce using rule 100 (estatuto -> rectangulo .)


state 72

    (131) cubo -> CUBO . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 127


state 73

    (90) estatuto -> print .

    ID              reduce using rule 90 (estatuto -> print .)
    PRINT           reduce using rule 90 (estatuto -> print .)
    IF              reduce using rule 90 (estatuto -> print .)
    WHILE           reduce using rule 90 (estatuto -> print .)
    DO              reduce using rule 90 (estatuto -> print .)
    FOR             reduce using rule 90 (estatuto -> print .)
    COMENTARIO      reduce using rule 90 (estatuto -> print .)
    CUADRADO        reduce using rule 90 (estatuto -> print .)
    TRIANGULO       reduce using rule 90 (estatuto -> print .)
    CASA            reduce using rule 90 (estatuto -> print .)
    RECTANGULO      reduce using rule 90 (estatuto -> print .)
    CUBO            reduce using rule 90 (estatuto -> print .)
    TRAPECIO        reduce using rule 90 (estatuto -> print .)
    ESTRELLA        reduce using rule 90 (estatuto -> print .)
    MUEVE           reduce using rule 90 (estatuto -> print .)
    LEVANTA         reduce using rule 90 (estatuto -> print .)
    APOYA           reduce using rule 90 (estatuto -> print .)
    DIMENSION       reduce using rule 90 (estatuto -> print .)
    RKEY            reduce using rule 90 (estatuto -> print .)


state 74

    (18) b4 -> empty .

    RKEY            reduce using rule 18 (b4 -> empty .)


state 75

    (134) apoya -> APOYA . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 128


state 76

    (127) triangulo -> TRIANGULO . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 129


state 77

    (110) comentario -> COMENTARIO .

    ID              reduce using rule 110 (comentario -> COMENTARIO .)
    PRINT           reduce using rule 110 (comentario -> COMENTARIO .)
    IF              reduce using rule 110 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 110 (comentario -> COMENTARIO .)
    DO              reduce using rule 110 (comentario -> COMENTARIO .)
    FOR             reduce using rule 110 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 110 (comentario -> COMENTARIO .)
    CUADRADO        reduce using rule 110 (comentario -> COMENTARIO .)
    TRIANGULO       reduce using rule 110 (comentario -> COMENTARIO .)
    CASA            reduce using rule 110 (comentario -> COMENTARIO .)
    RECTANGULO      reduce using rule 110 (comentario -> COMENTARIO .)
    CUBO            reduce using rule 110 (comentario -> COMENTARIO .)
    TRAPECIO        reduce using rule 110 (comentario -> COMENTARIO .)
    ESTRELLA        reduce using rule 110 (comentario -> COMENTARIO .)
    MUEVE           reduce using rule 110 (comentario -> COMENTARIO .)
    LEVANTA         reduce using rule 110 (comentario -> COMENTARIO .)
    APOYA           reduce using rule 110 (comentario -> COMENTARIO .)
    DIMENSION       reduce using rule 110 (comentario -> COMENTARIO .)
    RKEY            reduce using rule 110 (comentario -> COMENTARIO .)


state 78

    (122) ciclofor -> FOR . LPARENT asignacion expresion asignacion RPARENT bloque

    LPARENT         shift and go to state 130


state 79

    (95) estatuto -> read .

    ID              reduce using rule 95 (estatuto -> read .)
    PRINT           reduce using rule 95 (estatuto -> read .)
    IF              reduce using rule 95 (estatuto -> read .)
    WHILE           reduce using rule 95 (estatuto -> read .)
    DO              reduce using rule 95 (estatuto -> read .)
    FOR             reduce using rule 95 (estatuto -> read .)
    COMENTARIO      reduce using rule 95 (estatuto -> read .)
    CUADRADO        reduce using rule 95 (estatuto -> read .)
    TRIANGULO       reduce using rule 95 (estatuto -> read .)
    CASA            reduce using rule 95 (estatuto -> read .)
    RECTANGULO      reduce using rule 95 (estatuto -> read .)
    CUBO            reduce using rule 95 (estatuto -> read .)
    TRAPECIO        reduce using rule 95 (estatuto -> read .)
    ESTRELLA        reduce using rule 95 (estatuto -> read .)
    MUEVE           reduce using rule 95 (estatuto -> read .)
    LEVANTA         reduce using rule 95 (estatuto -> read .)
    APOYA           reduce using rule 95 (estatuto -> read .)
    DIMENSION       reduce using rule 95 (estatuto -> read .)
    RKEY            reduce using rule 95 (estatuto -> read .)


state 80

    (101) estatuto -> cubo .

    ID              reduce using rule 101 (estatuto -> cubo .)
    PRINT           reduce using rule 101 (estatuto -> cubo .)
    IF              reduce using rule 101 (estatuto -> cubo .)
    WHILE           reduce using rule 101 (estatuto -> cubo .)
    DO              reduce using rule 101 (estatuto -> cubo .)
    FOR             reduce using rule 101 (estatuto -> cubo .)
    COMENTARIO      reduce using rule 101 (estatuto -> cubo .)
    CUADRADO        reduce using rule 101 (estatuto -> cubo .)
    TRIANGULO       reduce using rule 101 (estatuto -> cubo .)
    CASA            reduce using rule 101 (estatuto -> cubo .)
    RECTANGULO      reduce using rule 101 (estatuto -> cubo .)
    CUBO            reduce using rule 101 (estatuto -> cubo .)
    TRAPECIO        reduce using rule 101 (estatuto -> cubo .)
    ESTRELLA        reduce using rule 101 (estatuto -> cubo .)
    MUEVE           reduce using rule 101 (estatuto -> cubo .)
    LEVANTA         reduce using rule 101 (estatuto -> cubo .)
    APOYA           reduce using rule 101 (estatuto -> cubo .)
    DIMENSION       reduce using rule 101 (estatuto -> cubo .)
    RKEY            reduce using rule 101 (estatuto -> cubo .)


state 81

    (94) estatuto -> ciclofor .

    ID              reduce using rule 94 (estatuto -> ciclofor .)
    PRINT           reduce using rule 94 (estatuto -> ciclofor .)
    IF              reduce using rule 94 (estatuto -> ciclofor .)
    WHILE           reduce using rule 94 (estatuto -> ciclofor .)
    DO              reduce using rule 94 (estatuto -> ciclofor .)
    FOR             reduce using rule 94 (estatuto -> ciclofor .)
    COMENTARIO      reduce using rule 94 (estatuto -> ciclofor .)
    CUADRADO        reduce using rule 94 (estatuto -> ciclofor .)
    TRIANGULO       reduce using rule 94 (estatuto -> ciclofor .)
    CASA            reduce using rule 94 (estatuto -> ciclofor .)
    RECTANGULO      reduce using rule 94 (estatuto -> ciclofor .)
    CUBO            reduce using rule 94 (estatuto -> ciclofor .)
    TRAPECIO        reduce using rule 94 (estatuto -> ciclofor .)
    ESTRELLA        reduce using rule 94 (estatuto -> ciclofor .)
    MUEVE           reduce using rule 94 (estatuto -> ciclofor .)
    LEVANTA         reduce using rule 94 (estatuto -> ciclofor .)
    APOYA           reduce using rule 94 (estatuto -> ciclofor .)
    DIMENSION       reduce using rule 94 (estatuto -> ciclofor .)
    RKEY            reduce using rule 94 (estatuto -> ciclofor .)


state 82

    (103) estatuto -> estrella .

    ID              reduce using rule 103 (estatuto -> estrella .)
    PRINT           reduce using rule 103 (estatuto -> estrella .)
    IF              reduce using rule 103 (estatuto -> estrella .)
    WHILE           reduce using rule 103 (estatuto -> estrella .)
    DO              reduce using rule 103 (estatuto -> estrella .)
    FOR             reduce using rule 103 (estatuto -> estrella .)
    COMENTARIO      reduce using rule 103 (estatuto -> estrella .)
    CUADRADO        reduce using rule 103 (estatuto -> estrella .)
    TRIANGULO       reduce using rule 103 (estatuto -> estrella .)
    CASA            reduce using rule 103 (estatuto -> estrella .)
    RECTANGULO      reduce using rule 103 (estatuto -> estrella .)
    CUBO            reduce using rule 103 (estatuto -> estrella .)
    TRAPECIO        reduce using rule 103 (estatuto -> estrella .)
    ESTRELLA        reduce using rule 103 (estatuto -> estrella .)
    MUEVE           reduce using rule 103 (estatuto -> estrella .)
    LEVANTA         reduce using rule 103 (estatuto -> estrella .)
    APOYA           reduce using rule 103 (estatuto -> estrella .)
    DIMENSION       reduce using rule 103 (estatuto -> estrella .)
    RKEY            reduce using rule 103 (estatuto -> estrella .)


state 83

    (97) estatuto -> cuadrado .

    ID              reduce using rule 97 (estatuto -> cuadrado .)
    PRINT           reduce using rule 97 (estatuto -> cuadrado .)
    IF              reduce using rule 97 (estatuto -> cuadrado .)
    WHILE           reduce using rule 97 (estatuto -> cuadrado .)
    DO              reduce using rule 97 (estatuto -> cuadrado .)
    FOR             reduce using rule 97 (estatuto -> cuadrado .)
    COMENTARIO      reduce using rule 97 (estatuto -> cuadrado .)
    CUADRADO        reduce using rule 97 (estatuto -> cuadrado .)
    TRIANGULO       reduce using rule 97 (estatuto -> cuadrado .)
    CASA            reduce using rule 97 (estatuto -> cuadrado .)
    RECTANGULO      reduce using rule 97 (estatuto -> cuadrado .)
    CUBO            reduce using rule 97 (estatuto -> cuadrado .)
    TRAPECIO        reduce using rule 97 (estatuto -> cuadrado .)
    ESTRELLA        reduce using rule 97 (estatuto -> cuadrado .)
    MUEVE           reduce using rule 97 (estatuto -> cuadrado .)
    LEVANTA         reduce using rule 97 (estatuto -> cuadrado .)
    APOYA           reduce using rule 97 (estatuto -> cuadrado .)
    DIMENSION       reduce using rule 97 (estatuto -> cuadrado .)
    RKEY            reduce using rule 97 (estatuto -> cuadrado .)


state 84

    (93) estatuto -> ciclodowhile .

    ID              reduce using rule 93 (estatuto -> ciclodowhile .)
    PRINT           reduce using rule 93 (estatuto -> ciclodowhile .)
    IF              reduce using rule 93 (estatuto -> ciclodowhile .)
    WHILE           reduce using rule 93 (estatuto -> ciclodowhile .)
    DO              reduce using rule 93 (estatuto -> ciclodowhile .)
    FOR             reduce using rule 93 (estatuto -> ciclodowhile .)
    COMENTARIO      reduce using rule 93 (estatuto -> ciclodowhile .)
    CUADRADO        reduce using rule 93 (estatuto -> ciclodowhile .)
    TRIANGULO       reduce using rule 93 (estatuto -> ciclodowhile .)
    CASA            reduce using rule 93 (estatuto -> ciclodowhile .)
    RECTANGULO      reduce using rule 93 (estatuto -> ciclodowhile .)
    CUBO            reduce using rule 93 (estatuto -> ciclodowhile .)
    TRAPECIO        reduce using rule 93 (estatuto -> ciclodowhile .)
    ESTRELLA        reduce using rule 93 (estatuto -> ciclodowhile .)
    MUEVE           reduce using rule 93 (estatuto -> ciclodowhile .)
    LEVANTA         reduce using rule 93 (estatuto -> ciclodowhile .)
    APOYA           reduce using rule 93 (estatuto -> ciclodowhile .)
    DIMENSION       reduce using rule 93 (estatuto -> ciclodowhile .)
    RKEY            reduce using rule 93 (estatuto -> ciclodowhile .)


state 85

    (56) asignacion -> ID . asig2
    (121) read -> ID . IGUAL READ LPARENT RPARENT PUNTOCOMA
    (150) llamafuncion -> ID . LPARENT llamaf11
    (57) asig2 -> . LBRACKET exp asig3
    (58) asig2 -> . asigfinal
    (61) asigfinal -> . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 132
    LPARENT         shift and go to state 131
    LBRACKET        shift and go to state 133

    asigfinal                      shift and go to state 135
    asig2                          shift and go to state 134

state 86

    (136) dimension -> DIMENSION . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 136


state 87

    (67) condicion -> IF . LKEY expresion RKEY bloque c2
    (123) if -> IF . LPARENT expresion RPARENT bloque if2

    LKEY            shift and go to state 138
    LPARENT         shift and go to state 137


state 88

    (130) estrella -> ESTRELLA . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 139


state 89

    (99) estatuto -> casa .

    ID              reduce using rule 99 (estatuto -> casa .)
    PRINT           reduce using rule 99 (estatuto -> casa .)
    IF              reduce using rule 99 (estatuto -> casa .)
    WHILE           reduce using rule 99 (estatuto -> casa .)
    DO              reduce using rule 99 (estatuto -> casa .)
    FOR             reduce using rule 99 (estatuto -> casa .)
    COMENTARIO      reduce using rule 99 (estatuto -> casa .)
    CUADRADO        reduce using rule 99 (estatuto -> casa .)
    TRIANGULO       reduce using rule 99 (estatuto -> casa .)
    CASA            reduce using rule 99 (estatuto -> casa .)
    RECTANGULO      reduce using rule 99 (estatuto -> casa .)
    CUBO            reduce using rule 99 (estatuto -> casa .)
    TRAPECIO        reduce using rule 99 (estatuto -> casa .)
    ESTRELLA        reduce using rule 99 (estatuto -> casa .)
    MUEVE           reduce using rule 99 (estatuto -> casa .)
    LEVANTA         reduce using rule 99 (estatuto -> casa .)
    APOYA           reduce using rule 99 (estatuto -> casa .)
    DIMENSION       reduce using rule 99 (estatuto -> casa .)
    RKEY            reduce using rule 99 (estatuto -> casa .)


state 90

    (89) estatuto -> asignacion .

    ID              reduce using rule 89 (estatuto -> asignacion .)
    PRINT           reduce using rule 89 (estatuto -> asignacion .)
    IF              reduce using rule 89 (estatuto -> asignacion .)
    WHILE           reduce using rule 89 (estatuto -> asignacion .)
    DO              reduce using rule 89 (estatuto -> asignacion .)
    FOR             reduce using rule 89 (estatuto -> asignacion .)
    COMENTARIO      reduce using rule 89 (estatuto -> asignacion .)
    CUADRADO        reduce using rule 89 (estatuto -> asignacion .)
    TRIANGULO       reduce using rule 89 (estatuto -> asignacion .)
    CASA            reduce using rule 89 (estatuto -> asignacion .)
    RECTANGULO      reduce using rule 89 (estatuto -> asignacion .)
    CUBO            reduce using rule 89 (estatuto -> asignacion .)
    TRAPECIO        reduce using rule 89 (estatuto -> asignacion .)
    ESTRELLA        reduce using rule 89 (estatuto -> asignacion .)
    MUEVE           reduce using rule 89 (estatuto -> asignacion .)
    LEVANTA         reduce using rule 89 (estatuto -> asignacion .)
    APOYA           reduce using rule 89 (estatuto -> asignacion .)
    DIMENSION       reduce using rule 89 (estatuto -> asignacion .)
    RKEY            reduce using rule 89 (estatuto -> asignacion .)


state 91

    (126) cuadrado -> CUADRADO . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 140


state 92

    (133) levanta -> LEVANTA . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 141


state 93

    (107) estatuto -> dimension .

    ID              reduce using rule 107 (estatuto -> dimension .)
    PRINT           reduce using rule 107 (estatuto -> dimension .)
    IF              reduce using rule 107 (estatuto -> dimension .)
    WHILE           reduce using rule 107 (estatuto -> dimension .)
    DO              reduce using rule 107 (estatuto -> dimension .)
    FOR             reduce using rule 107 (estatuto -> dimension .)
    COMENTARIO      reduce using rule 107 (estatuto -> dimension .)
    CUADRADO        reduce using rule 107 (estatuto -> dimension .)
    TRIANGULO       reduce using rule 107 (estatuto -> dimension .)
    CASA            reduce using rule 107 (estatuto -> dimension .)
    RECTANGULO      reduce using rule 107 (estatuto -> dimension .)
    CUBO            reduce using rule 107 (estatuto -> dimension .)
    TRAPECIO        reduce using rule 107 (estatuto -> dimension .)
    ESTRELLA        reduce using rule 107 (estatuto -> dimension .)
    MUEVE           reduce using rule 107 (estatuto -> dimension .)
    LEVANTA         reduce using rule 107 (estatuto -> dimension .)
    APOYA           reduce using rule 107 (estatuto -> dimension .)
    DIMENSION       reduce using rule 107 (estatuto -> dimension .)
    RKEY            reduce using rule 107 (estatuto -> dimension .)


state 94

    (15) b3 -> declaracion b3 .

    ID              reduce using rule 15 (b3 -> declaracion b3 .)
    PRINT           reduce using rule 15 (b3 -> declaracion b3 .)
    IF              reduce using rule 15 (b3 -> declaracion b3 .)
    WHILE           reduce using rule 15 (b3 -> declaracion b3 .)
    DO              reduce using rule 15 (b3 -> declaracion b3 .)
    FOR             reduce using rule 15 (b3 -> declaracion b3 .)
    COMENTARIO      reduce using rule 15 (b3 -> declaracion b3 .)
    CUADRADO        reduce using rule 15 (b3 -> declaracion b3 .)
    TRIANGULO       reduce using rule 15 (b3 -> declaracion b3 .)
    CASA            reduce using rule 15 (b3 -> declaracion b3 .)
    RECTANGULO      reduce using rule 15 (b3 -> declaracion b3 .)
    CUBO            reduce using rule 15 (b3 -> declaracion b3 .)
    TRAPECIO        reduce using rule 15 (b3 -> declaracion b3 .)
    ESTRELLA        reduce using rule 15 (b3 -> declaracion b3 .)
    MUEVE           reduce using rule 15 (b3 -> declaracion b3 .)
    LEVANTA         reduce using rule 15 (b3 -> declaracion b3 .)
    APOYA           reduce using rule 15 (b3 -> declaracion b3 .)
    DIMENSION       reduce using rule 15 (b3 -> declaracion b3 .)
    RKEY            reduce using rule 15 (b3 -> declaracion b3 .)


state 95

    (140) funct11 -> function4 .

    VOID            reduce using rule 140 (funct11 -> function4 .)
    INT             reduce using rule 140 (funct11 -> function4 .)
    FLOAT           reduce using rule 140 (funct11 -> function4 .)
    CHAR            reduce using rule 140 (funct11 -> function4 .)
    STRING          reduce using rule 140 (funct11 -> function4 .)
    BOOL            reduce using rule 140 (funct11 -> function4 .)
    LKEY            reduce using rule 140 (funct11 -> function4 .)


state 96

    (138) function -> VOID ID buildFunc LPARENT funct11 .

    VOID            reduce using rule 138 (function -> VOID ID buildFunc LPARENT funct11 .)
    INT             reduce using rule 138 (function -> VOID ID buildFunc LPARENT funct11 .)
    FLOAT           reduce using rule 138 (function -> VOID ID buildFunc LPARENT funct11 .)
    CHAR            reduce using rule 138 (function -> VOID ID buildFunc LPARENT funct11 .)
    STRING          reduce using rule 138 (function -> VOID ID buildFunc LPARENT funct11 .)
    BOOL            reduce using rule 138 (function -> VOID ID buildFunc LPARENT funct11 .)
    LKEY            reduce using rule 138 (function -> VOID ID buildFunc LPARENT funct11 .)


state 97

    (147) function4 -> RPARENT . noinitFunc bloque initFunc
    (148) noinitFunc -> . empty
    (157) empty -> .

    LKEY            reduce using rule 157 (empty -> .)

    noinitFunc                     shift and go to state 142
    empty                          shift and go to state 143

state 98

    (141) funct11 -> initParamTable . funct2
    (143) funct2 -> . tipo ID initParams funct3
    (51) tipo -> . INT
    (52) tipo -> . FLOAT
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22

    funct2                         shift and go to state 145
    tipo                           shift and go to state 144

state 99

    (142) initParamTable -> empty .

    INT             reduce using rule 142 (initParamTable -> empty .)
    FLOAT           reduce using rule 142 (initParamTable -> empty .)
    CHAR            reduce using rule 142 (initParamTable -> empty .)
    STRING          reduce using rule 142 (initParamTable -> empty .)
    BOOL            reduce using rule 142 (initParamTable -> empty .)


state 100

    (137) function -> tipo ID buildFunc LPARENT funct11 .

    VOID            reduce using rule 137 (function -> tipo ID buildFunc LPARENT funct11 .)
    INT             reduce using rule 137 (function -> tipo ID buildFunc LPARENT funct11 .)
    FLOAT           reduce using rule 137 (function -> tipo ID buildFunc LPARENT funct11 .)
    CHAR            reduce using rule 137 (function -> tipo ID buildFunc LPARENT funct11 .)
    STRING          reduce using rule 137 (function -> tipo ID buildFunc LPARENT funct11 .)
    BOOL            reduce using rule 137 (function -> tipo ID buildFunc LPARENT funct11 .)
    LKEY            reduce using rule 137 (function -> tipo ID buildFunc LPARENT funct11 .)


state 101

    (77) factor -> f2 .

    MULT            reduce using rule 77 (factor -> f2 .)
    DIV             reduce using rule 77 (factor -> f2 .)
    SUMA            reduce using rule 77 (factor -> f2 .)
    RESTA           reduce using rule 77 (factor -> f2 .)
    COMA            reduce using rule 77 (factor -> f2 .)
    RPARENT         reduce using rule 77 (factor -> f2 .)
    AND             reduce using rule 77 (factor -> f2 .)
    OR              reduce using rule 77 (factor -> f2 .)
    CADENA          reduce using rule 77 (factor -> f2 .)
    LPARENT         reduce using rule 77 (factor -> f2 .)
    ID              reduce using rule 77 (factor -> f2 .)
    ENTERO          reduce using rule 77 (factor -> f2 .)
    FLOTANTE        reduce using rule 77 (factor -> f2 .)
    CARACTER        reduce using rule 77 (factor -> f2 .)
    PUNTOCOMA       reduce using rule 77 (factor -> f2 .)
    RKEY            reduce using rule 77 (factor -> f2 .)
    RBRACKET        reduce using rule 77 (factor -> f2 .)
    GT              reduce using rule 77 (factor -> f2 .)
    LT              reduce using rule 77 (factor -> f2 .)
    LE              reduce using rule 77 (factor -> f2 .)
    GE              reduce using rule 77 (factor -> f2 .)
    DIF             reduce using rule 77 (factor -> f2 .)
    SAME            reduce using rule 77 (factor -> f2 .)


state 102

    (78) factor -> f3 .

    MULT            reduce using rule 78 (factor -> f3 .)
    DIV             reduce using rule 78 (factor -> f3 .)
    SUMA            reduce using rule 78 (factor -> f3 .)
    RESTA           reduce using rule 78 (factor -> f3 .)
    COMA            reduce using rule 78 (factor -> f3 .)
    RPARENT         reduce using rule 78 (factor -> f3 .)
    AND             reduce using rule 78 (factor -> f3 .)
    OR              reduce using rule 78 (factor -> f3 .)
    CADENA          reduce using rule 78 (factor -> f3 .)
    LPARENT         reduce using rule 78 (factor -> f3 .)
    ID              reduce using rule 78 (factor -> f3 .)
    ENTERO          reduce using rule 78 (factor -> f3 .)
    FLOTANTE        reduce using rule 78 (factor -> f3 .)
    CARACTER        reduce using rule 78 (factor -> f3 .)
    PUNTOCOMA       reduce using rule 78 (factor -> f3 .)
    RKEY            reduce using rule 78 (factor -> f3 .)
    RBRACKET        reduce using rule 78 (factor -> f3 .)
    GT              reduce using rule 78 (factor -> f3 .)
    LT              reduce using rule 78 (factor -> f3 .)
    LE              reduce using rule 78 (factor -> f3 .)
    GE              reduce using rule 78 (factor -> f3 .)
    DIF             reduce using rule 78 (factor -> f3 .)
    SAME            reduce using rule 78 (factor -> f3 .)


state 103

    (79) factor -> f6 .

    MULT            reduce using rule 79 (factor -> f6 .)
    DIV             reduce using rule 79 (factor -> f6 .)
    SUMA            reduce using rule 79 (factor -> f6 .)
    RESTA           reduce using rule 79 (factor -> f6 .)
    COMA            reduce using rule 79 (factor -> f6 .)
    RPARENT         reduce using rule 79 (factor -> f6 .)
    AND             reduce using rule 79 (factor -> f6 .)
    OR              reduce using rule 79 (factor -> f6 .)
    CADENA          reduce using rule 79 (factor -> f6 .)
    LPARENT         reduce using rule 79 (factor -> f6 .)
    ID              reduce using rule 79 (factor -> f6 .)
    ENTERO          reduce using rule 79 (factor -> f6 .)
    FLOTANTE        reduce using rule 79 (factor -> f6 .)
    CARACTER        reduce using rule 79 (factor -> f6 .)
    PUNTOCOMA       reduce using rule 79 (factor -> f6 .)
    RKEY            reduce using rule 79 (factor -> f6 .)
    RBRACKET        reduce using rule 79 (factor -> f6 .)
    GT              reduce using rule 79 (factor -> f6 .)
    LT              reduce using rule 79 (factor -> f6 .)
    LE              reduce using rule 79 (factor -> f6 .)
    GE              reduce using rule 79 (factor -> f6 .)
    DIF             reduce using rule 79 (factor -> f6 .)
    SAME            reduce using rule 79 (factor -> f6 .)


state 104

    (80) factor -> f7 .

    MULT            reduce using rule 80 (factor -> f7 .)
    DIV             reduce using rule 80 (factor -> f7 .)
    SUMA            reduce using rule 80 (factor -> f7 .)
    RESTA           reduce using rule 80 (factor -> f7 .)
    COMA            reduce using rule 80 (factor -> f7 .)
    RPARENT         reduce using rule 80 (factor -> f7 .)
    AND             reduce using rule 80 (factor -> f7 .)
    OR              reduce using rule 80 (factor -> f7 .)
    CADENA          reduce using rule 80 (factor -> f7 .)
    LPARENT         reduce using rule 80 (factor -> f7 .)
    ID              reduce using rule 80 (factor -> f7 .)
    ENTERO          reduce using rule 80 (factor -> f7 .)
    FLOTANTE        reduce using rule 80 (factor -> f7 .)
    CARACTER        reduce using rule 80 (factor -> f7 .)
    PUNTOCOMA       reduce using rule 80 (factor -> f7 .)
    RKEY            reduce using rule 80 (factor -> f7 .)
    RBRACKET        reduce using rule 80 (factor -> f7 .)
    GT              reduce using rule 80 (factor -> f7 .)
    LT              reduce using rule 80 (factor -> f7 .)
    LE              reduce using rule 80 (factor -> f7 .)
    GE              reduce using rule 80 (factor -> f7 .)
    DIF             reduce using rule 80 (factor -> f7 .)
    SAME            reduce using rule 80 (factor -> f7 .)


state 105

    (38) exp -> termino . tagsacops exp2
    (43) tagsacops -> . empty
    (157) empty -> .

    SUMA            reduce using rule 157 (empty -> .)
    RESTA           reduce using rule 157 (empty -> .)
    RBRACKET        reduce using rule 157 (empty -> .)
    COMA            reduce using rule 157 (empty -> .)
    GT              reduce using rule 157 (empty -> .)
    LT              reduce using rule 157 (empty -> .)
    LE              reduce using rule 157 (empty -> .)
    GE              reduce using rule 157 (empty -> .)
    DIF             reduce using rule 157 (empty -> .)
    SAME            reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagsacops                      shift and go to state 146
    empty                          shift and go to state 147

state 106

    (76) factor -> LPARENT . tagfondofalso expresion RPARENT tagsacafondo
    (83) tagfondofalso -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagfondofalso                  shift and go to state 148
    empty                          shift and go to state 149

state 107

    (81) f2 -> varcte .

    MULT            reduce using rule 81 (f2 -> varcte .)
    DIV             reduce using rule 81 (f2 -> varcte .)
    SUMA            reduce using rule 81 (f2 -> varcte .)
    RESTA           reduce using rule 81 (f2 -> varcte .)
    GT              reduce using rule 81 (f2 -> varcte .)
    LT              reduce using rule 81 (f2 -> varcte .)
    LE              reduce using rule 81 (f2 -> varcte .)
    GE              reduce using rule 81 (f2 -> varcte .)
    DIF             reduce using rule 81 (f2 -> varcte .)
    SAME            reduce using rule 81 (f2 -> varcte .)
    AND             reduce using rule 81 (f2 -> varcte .)
    OR              reduce using rule 81 (f2 -> varcte .)
    PUNTOCOMA       reduce using rule 81 (f2 -> varcte .)
    RPARENT         reduce using rule 81 (f2 -> varcte .)
    CADENA          reduce using rule 81 (f2 -> varcte .)
    LPARENT         reduce using rule 81 (f2 -> varcte .)
    ID              reduce using rule 81 (f2 -> varcte .)
    ENTERO          reduce using rule 81 (f2 -> varcte .)
    FLOTANTE        reduce using rule 81 (f2 -> varcte .)
    CARACTER        reduce using rule 81 (f2 -> varcte .)
    RBRACKET        reduce using rule 81 (f2 -> varcte .)
    COMA            reduce using rule 81 (f2 -> varcte .)
    RKEY            reduce using rule 81 (f2 -> varcte .)


state 108

    (88) f6 -> llamafuncion .

    MULT            reduce using rule 88 (f6 -> llamafuncion .)
    DIV             reduce using rule 88 (f6 -> llamafuncion .)
    SUMA            reduce using rule 88 (f6 -> llamafuncion .)
    RESTA           reduce using rule 88 (f6 -> llamafuncion .)
    COMA            reduce using rule 88 (f6 -> llamafuncion .)
    AND             reduce using rule 88 (f6 -> llamafuncion .)
    OR              reduce using rule 88 (f6 -> llamafuncion .)
    RPARENT         reduce using rule 88 (f6 -> llamafuncion .)
    CADENA          reduce using rule 88 (f6 -> llamafuncion .)
    LPARENT         reduce using rule 88 (f6 -> llamafuncion .)
    ID              reduce using rule 88 (f6 -> llamafuncion .)
    ENTERO          reduce using rule 88 (f6 -> llamafuncion .)
    FLOTANTE        reduce using rule 88 (f6 -> llamafuncion .)
    CARACTER        reduce using rule 88 (f6 -> llamafuncion .)
    PUNTOCOMA       reduce using rule 88 (f6 -> llamafuncion .)
    RKEY            reduce using rule 88 (f6 -> llamafuncion .)
    RBRACKET        reduce using rule 88 (f6 -> llamafuncion .)
    GT              reduce using rule 88 (f6 -> llamafuncion .)
    LT              reduce using rule 88 (f6 -> llamafuncion .)
    LE              reduce using rule 88 (f6 -> llamafuncion .)
    GE              reduce using rule 88 (f6 -> llamafuncion .)
    DIF             reduce using rule 88 (f6 -> llamafuncion .)
    SAME            reduce using rule 88 (f6 -> llamafuncion .)


state 109

    (113) varcte -> CADENA . tagcad
    (117) tagcad -> . empty
    (157) empty -> .

    MULT            reduce using rule 157 (empty -> .)
    DIV             reduce using rule 157 (empty -> .)
    SUMA            reduce using rule 157 (empty -> .)
    RESTA           reduce using rule 157 (empty -> .)
    RBRACKET        reduce using rule 157 (empty -> .)
    COMA            reduce using rule 157 (empty -> .)
    GT              reduce using rule 157 (empty -> .)
    LT              reduce using rule 157 (empty -> .)
    LE              reduce using rule 157 (empty -> .)
    GE              reduce using rule 157 (empty -> .)
    DIF             reduce using rule 157 (empty -> .)
    SAME            reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagcad                         shift and go to state 150
    empty                          shift and go to state 151

state 110

    (70) termino -> factor . tagsacopm te2
    (75) tagsacopm -> . empty
    (157) empty -> .

    MULT            reduce using rule 157 (empty -> .)
    DIV             reduce using rule 157 (empty -> .)
    SUMA            reduce using rule 157 (empty -> .)
    RESTA           reduce using rule 157 (empty -> .)
    RBRACKET        reduce using rule 157 (empty -> .)
    COMA            reduce using rule 157 (empty -> .)
    GT              reduce using rule 157 (empty -> .)
    LT              reduce using rule 157 (empty -> .)
    LE              reduce using rule 157 (empty -> .)
    GE              reduce using rule 157 (empty -> .)
    DIF             reduce using rule 157 (empty -> .)
    SAME            reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagsacopm                      shift and go to state 152
    empty                          shift and go to state 153

state 111

    (111) varcte -> ENTERO . tagint
    (115) tagint -> . empty
    (157) empty -> .

    MULT            reduce using rule 157 (empty -> .)
    DIV             reduce using rule 157 (empty -> .)
    SUMA            reduce using rule 157 (empty -> .)
    RESTA           reduce using rule 157 (empty -> .)
    RBRACKET        reduce using rule 157 (empty -> .)
    COMA            reduce using rule 157 (empty -> .)
    GT              reduce using rule 157 (empty -> .)
    LT              reduce using rule 157 (empty -> .)
    LE              reduce using rule 157 (empty -> .)
    GE              reduce using rule 157 (empty -> .)
    DIF             reduce using rule 157 (empty -> .)
    SAME            reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagint                         shift and go to state 154
    empty                          shift and go to state 155

state 112

    (114) varcte -> CARACTER . tagcar
    (118) tagcar -> . empty
    (157) empty -> .

    MULT            reduce using rule 157 (empty -> .)
    DIV             reduce using rule 157 (empty -> .)
    SUMA            reduce using rule 157 (empty -> .)
    RESTA           reduce using rule 157 (empty -> .)
    RBRACKET        reduce using rule 157 (empty -> .)
    COMA            reduce using rule 157 (empty -> .)
    GT              reduce using rule 157 (empty -> .)
    LT              reduce using rule 157 (empty -> .)
    LE              reduce using rule 157 (empty -> .)
    GE              reduce using rule 157 (empty -> .)
    DIF             reduce using rule 157 (empty -> .)
    SAME            reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagcar                         shift and go to state 156
    empty                          shift and go to state 157

state 113

    (82) f3 -> ID .
    (85) f7 -> ID . LBRACKET exp f8
    (150) llamafuncion -> ID . LPARENT llamaf11

  ! shift/reduce conflict for LPARENT resolved as shift
    MULT            reduce using rule 82 (f3 -> ID .)
    DIV             reduce using rule 82 (f3 -> ID .)
    SUMA            reduce using rule 82 (f3 -> ID .)
    RESTA           reduce using rule 82 (f3 -> ID .)
    RPARENT         reduce using rule 82 (f3 -> ID .)
    GT              reduce using rule 82 (f3 -> ID .)
    LT              reduce using rule 82 (f3 -> ID .)
    LE              reduce using rule 82 (f3 -> ID .)
    GE              reduce using rule 82 (f3 -> ID .)
    DIF             reduce using rule 82 (f3 -> ID .)
    SAME            reduce using rule 82 (f3 -> ID .)
    AND             reduce using rule 82 (f3 -> ID .)
    OR              reduce using rule 82 (f3 -> ID .)
    RBRACKET        reduce using rule 82 (f3 -> ID .)
    COMA            reduce using rule 82 (f3 -> ID .)
    CADENA          reduce using rule 82 (f3 -> ID .)
    ID              reduce using rule 82 (f3 -> ID .)
    ENTERO          reduce using rule 82 (f3 -> ID .)
    FLOTANTE        reduce using rule 82 (f3 -> ID .)
    CARACTER        reduce using rule 82 (f3 -> ID .)
    PUNTOCOMA       reduce using rule 82 (f3 -> ID .)
    RKEY            reduce using rule 82 (f3 -> ID .)
    LBRACKET        shift and go to state 158
    LPARENT         shift and go to state 131

  ! LPARENT         [ reduce using rule 82 (f3 -> ID .) ]


state 114

    (47) decla1 -> LBRACKET exp . decla2
    (48) decla2 -> . RBRACKET declafinal
    (49) decla2 -> . COMA exp decla2

    RBRACKET        shift and go to state 161
    COMA            shift and go to state 160

    decla2                         shift and go to state 159

state 115

    (112) varcte -> FLOTANTE . tagfloat
    (116) tagfloat -> . empty
    (157) empty -> .

    MULT            reduce using rule 157 (empty -> .)
    DIV             reduce using rule 157 (empty -> .)
    SUMA            reduce using rule 157 (empty -> .)
    RESTA           reduce using rule 157 (empty -> .)
    RBRACKET        reduce using rule 157 (empty -> .)
    COMA            reduce using rule 157 (empty -> .)
    GT              reduce using rule 157 (empty -> .)
    LT              reduce using rule 157 (empty -> .)
    LE              reduce using rule 157 (empty -> .)
    GE              reduce using rule 157 (empty -> .)
    DIF             reduce using rule 157 (empty -> .)
    SAME            reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    empty                          shift and go to state 162
    tagfloat                       shift and go to state 163

state 116

    (45) savevar -> empty .

    LBRACKET        reduce using rule 45 (savevar -> empty .)
    PUNTOCOMA       reduce using rule 45 (savevar -> empty .)


state 117

    (120) ciclodowhile -> DO bloque . WHILE LPARENT expresion RPARENT PUNTOCOMA

    WHILE           shift and go to state 164


state 118

    (132) mueve -> MUEVE LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 165

state 119

    (19) b5 -> RKEY .

    $end            reduce using rule 19 (b5 -> RKEY .)
    WHILE           reduce using rule 19 (b5 -> RKEY .)
    VOID            reduce using rule 19 (b5 -> RKEY .)
    INT             reduce using rule 19 (b5 -> RKEY .)
    FLOAT           reduce using rule 19 (b5 -> RKEY .)
    CHAR            reduce using rule 19 (b5 -> RKEY .)
    STRING          reduce using rule 19 (b5 -> RKEY .)
    BOOL            reduce using rule 19 (b5 -> RKEY .)
    LKEY            reduce using rule 19 (b5 -> RKEY .)
    ID              reduce using rule 19 (b5 -> RKEY .)
    PRINT           reduce using rule 19 (b5 -> RKEY .)
    IF              reduce using rule 19 (b5 -> RKEY .)
    DO              reduce using rule 19 (b5 -> RKEY .)
    FOR             reduce using rule 19 (b5 -> RKEY .)
    COMENTARIO      reduce using rule 19 (b5 -> RKEY .)
    CUADRADO        reduce using rule 19 (b5 -> RKEY .)
    TRIANGULO       reduce using rule 19 (b5 -> RKEY .)
    CASA            reduce using rule 19 (b5 -> RKEY .)
    RECTANGULO      reduce using rule 19 (b5 -> RKEY .)
    CUBO            reduce using rule 19 (b5 -> RKEY .)
    TRAPECIO        reduce using rule 19 (b5 -> RKEY .)
    ESTRELLA        reduce using rule 19 (b5 -> RKEY .)
    MUEVE           reduce using rule 19 (b5 -> RKEY .)
    LEVANTA         reduce using rule 19 (b5 -> RKEY .)
    APOYA           reduce using rule 19 (b5 -> RKEY .)
    DIMENSION       reduce using rule 19 (b5 -> RKEY .)
    RKEY            reduce using rule 19 (b5 -> RKEY .)
    ELSE            reduce using rule 19 (b5 -> RKEY .)
    PUNTOCOMA       reduce using rule 19 (b5 -> RKEY .)


state 120

    (13) bloque -> LKEY iniEnv b3 b4 b5 .

    $end            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    ID              reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    PRINT           reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    IF              reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    WHILE           reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    DO              reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    FOR             reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    COMENTARIO      reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    CUADRADO        reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    TRIANGULO       reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    CASA            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    RECTANGULO      reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    CUBO            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    TRAPECIO        reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    ESTRELLA        reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    MUEVE           reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    LEVANTA         reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    APOYA           reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    DIMENSION       reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    RKEY            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    PUNTOCOMA       reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    ELSE            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    VOID            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    INT             reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    FLOAT           reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    CHAR            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    STRING          reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    BOOL            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)
    LKEY            reduce using rule 13 (bloque -> LKEY iniEnv b3 b4 b5 .)


state 121

    (119) ciclowhile -> WHILE LPARENT . expresion RPARENT bloque
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    expresion2                     shift and go to state 166
    expresion                      shift and go to state 167
    exp                            shift and go to state 168

state 122

    (135) trapecio -> TRAPECIO LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 169

state 123

    (62) print -> PRINT LPARENT . pr2
    (63) pr2 -> . expresion pr3
    (64) pr2 -> . CADENA pr3
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    CADENA          shift and go to state 170
    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    expresion2                     shift and go to state 166
    pr2                            shift and go to state 171
    expresion                      shift and go to state 172
    exp                            shift and go to state 168

state 124

    (129) casa -> CASA LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 173

state 125

    (128) rectangulo -> RECTANGULO LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 174

state 126

    (17) b4 -> estatuto b4 .

    RKEY            reduce using rule 17 (b4 -> estatuto b4 .)


state 127

    (131) cubo -> CUBO LPARENT . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 175

state 128

    (134) apoya -> APOYA LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 176


state 129

    (127) triangulo -> TRIANGULO LPARENT . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 177

state 130

    (122) ciclofor -> FOR LPARENT . asignacion expresion asignacion RPARENT bloque
    (56) asignacion -> . ID asig2

    ID              shift and go to state 179

    asignacion                     shift and go to state 178

state 131

    (150) llamafuncion -> ID LPARENT . llamaf11
    (151) llamaf11 -> . llamaf2
    (152) llamaf11 -> . llamaf4
    (153) llamaf2 -> . exp llamaf3
    (156) llamaf4 -> . RPARENT
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    RPARENT         shift and go to state 180
    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    llamaf2                        shift and go to state 181
    llamaf4                        shift and go to state 182
    exp                            shift and go to state 183
    llamaf11                       shift and go to state 184

state 132

    (121) read -> ID IGUAL . READ LPARENT RPARENT PUNTOCOMA
    (61) asigfinal -> IGUAL . expresion PUNTOCOMA
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    READ            shift and go to state 185
    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    expresion2                     shift and go to state 166
    expresion                      shift and go to state 186
    exp                            shift and go to state 168

state 133

    (57) asig2 -> LBRACKET . exp asig3
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 187

state 134

    (56) asignacion -> ID asig2 .

    RPARENT         reduce using rule 56 (asignacion -> ID asig2 .)
    ID              reduce using rule 56 (asignacion -> ID asig2 .)
    PRINT           reduce using rule 56 (asignacion -> ID asig2 .)
    IF              reduce using rule 56 (asignacion -> ID asig2 .)
    WHILE           reduce using rule 56 (asignacion -> ID asig2 .)
    DO              reduce using rule 56 (asignacion -> ID asig2 .)
    FOR             reduce using rule 56 (asignacion -> ID asig2 .)
    COMENTARIO      reduce using rule 56 (asignacion -> ID asig2 .)
    CUADRADO        reduce using rule 56 (asignacion -> ID asig2 .)
    TRIANGULO       reduce using rule 56 (asignacion -> ID asig2 .)
    CASA            reduce using rule 56 (asignacion -> ID asig2 .)
    RECTANGULO      reduce using rule 56 (asignacion -> ID asig2 .)
    CUBO            reduce using rule 56 (asignacion -> ID asig2 .)
    TRAPECIO        reduce using rule 56 (asignacion -> ID asig2 .)
    ESTRELLA        reduce using rule 56 (asignacion -> ID asig2 .)
    MUEVE           reduce using rule 56 (asignacion -> ID asig2 .)
    LEVANTA         reduce using rule 56 (asignacion -> ID asig2 .)
    APOYA           reduce using rule 56 (asignacion -> ID asig2 .)
    DIMENSION       reduce using rule 56 (asignacion -> ID asig2 .)
    RKEY            reduce using rule 56 (asignacion -> ID asig2 .)
    LPARENT         reduce using rule 56 (asignacion -> ID asig2 .)
    ENTERO          reduce using rule 56 (asignacion -> ID asig2 .)
    FLOTANTE        reduce using rule 56 (asignacion -> ID asig2 .)
    CADENA          reduce using rule 56 (asignacion -> ID asig2 .)
    CARACTER        reduce using rule 56 (asignacion -> ID asig2 .)


state 135

    (58) asig2 -> asigfinal .

    LPARENT         reduce using rule 58 (asig2 -> asigfinal .)
    ID              reduce using rule 58 (asig2 -> asigfinal .)
    ENTERO          reduce using rule 58 (asig2 -> asigfinal .)
    FLOTANTE        reduce using rule 58 (asig2 -> asigfinal .)
    CADENA          reduce using rule 58 (asig2 -> asigfinal .)
    CARACTER        reduce using rule 58 (asig2 -> asigfinal .)
    RPARENT         reduce using rule 58 (asig2 -> asigfinal .)
    PRINT           reduce using rule 58 (asig2 -> asigfinal .)
    IF              reduce using rule 58 (asig2 -> asigfinal .)
    WHILE           reduce using rule 58 (asig2 -> asigfinal .)
    DO              reduce using rule 58 (asig2 -> asigfinal .)
    FOR             reduce using rule 58 (asig2 -> asigfinal .)
    COMENTARIO      reduce using rule 58 (asig2 -> asigfinal .)
    CUADRADO        reduce using rule 58 (asig2 -> asigfinal .)
    TRIANGULO       reduce using rule 58 (asig2 -> asigfinal .)
    CASA            reduce using rule 58 (asig2 -> asigfinal .)
    RECTANGULO      reduce using rule 58 (asig2 -> asigfinal .)
    CUBO            reduce using rule 58 (asig2 -> asigfinal .)
    TRAPECIO        reduce using rule 58 (asig2 -> asigfinal .)
    ESTRELLA        reduce using rule 58 (asig2 -> asigfinal .)
    MUEVE           reduce using rule 58 (asig2 -> asigfinal .)
    LEVANTA         reduce using rule 58 (asig2 -> asigfinal .)
    APOYA           reduce using rule 58 (asig2 -> asigfinal .)
    DIMENSION       reduce using rule 58 (asig2 -> asigfinal .)
    RKEY            reduce using rule 58 (asig2 -> asigfinal .)


state 136

    (136) dimension -> DIMENSION LPARENT . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 188

state 137

    (123) if -> IF LPARENT . expresion RPARENT bloque if2
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    expresion2                     shift and go to state 166
    factor                         shift and go to state 110
    expresion                      shift and go to state 189
    exp                            shift and go to state 168

state 138

    (67) condicion -> IF LKEY . expresion RKEY bloque c2
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    expresion2                     shift and go to state 166
    expresion                      shift and go to state 190
    exp                            shift and go to state 168

state 139

    (130) estrella -> ESTRELLA LPARENT . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 191

state 140

    (126) cuadrado -> CUADRADO LPARENT . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 192

state 141

    (133) levanta -> LEVANTA LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 193


state 142

    (147) function4 -> RPARENT noinitFunc . bloque initFunc
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 194

state 143

    (148) noinitFunc -> empty .

    LKEY            reduce using rule 148 (noinitFunc -> empty .)


state 144

    (143) funct2 -> tipo . ID initParams funct3

    ID              shift and go to state 195


state 145

    (141) funct11 -> initParamTable funct2 .

    VOID            reduce using rule 141 (funct11 -> initParamTable funct2 .)
    INT             reduce using rule 141 (funct11 -> initParamTable funct2 .)
    FLOAT           reduce using rule 141 (funct11 -> initParamTable funct2 .)
    CHAR            reduce using rule 141 (funct11 -> initParamTable funct2 .)
    STRING          reduce using rule 141 (funct11 -> initParamTable funct2 .)
    BOOL            reduce using rule 141 (funct11 -> initParamTable funct2 .)
    LKEY            reduce using rule 141 (funct11 -> initParamTable funct2 .)


state 146

    (38) exp -> termino tagsacops . exp2
    (39) exp2 -> . SUMA tagop exp
    (40) exp2 -> . RESTA tagop exp
    (41) exp2 -> . empty
    (157) empty -> .

    SUMA            shift and go to state 199
    RESTA           shift and go to state 198
    RBRACKET        reduce using rule 157 (empty -> .)
    COMA            reduce using rule 157 (empty -> .)
    GT              reduce using rule 157 (empty -> .)
    LT              reduce using rule 157 (empty -> .)
    LE              reduce using rule 157 (empty -> .)
    GE              reduce using rule 157 (empty -> .)
    DIF             reduce using rule 157 (empty -> .)
    SAME            reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    exp2                           shift and go to state 196
    empty                          shift and go to state 197

state 147

    (43) tagsacops -> empty .

    SUMA            reduce using rule 43 (tagsacops -> empty .)
    RESTA           reduce using rule 43 (tagsacops -> empty .)
    RBRACKET        reduce using rule 43 (tagsacops -> empty .)
    COMA            reduce using rule 43 (tagsacops -> empty .)
    GT              reduce using rule 43 (tagsacops -> empty .)
    LT              reduce using rule 43 (tagsacops -> empty .)
    LE              reduce using rule 43 (tagsacops -> empty .)
    GE              reduce using rule 43 (tagsacops -> empty .)
    DIF             reduce using rule 43 (tagsacops -> empty .)
    SAME            reduce using rule 43 (tagsacops -> empty .)
    AND             reduce using rule 43 (tagsacops -> empty .)
    OR              reduce using rule 43 (tagsacops -> empty .)
    RPARENT         reduce using rule 43 (tagsacops -> empty .)
    CADENA          reduce using rule 43 (tagsacops -> empty .)
    LPARENT         reduce using rule 43 (tagsacops -> empty .)
    ID              reduce using rule 43 (tagsacops -> empty .)
    ENTERO          reduce using rule 43 (tagsacops -> empty .)
    FLOTANTE        reduce using rule 43 (tagsacops -> empty .)
    CARACTER        reduce using rule 43 (tagsacops -> empty .)
    PUNTOCOMA       reduce using rule 43 (tagsacops -> empty .)
    RKEY            reduce using rule 43 (tagsacops -> empty .)


state 148

    (76) factor -> LPARENT tagfondofalso . expresion RPARENT tagsacafondo
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    expresion2                     shift and go to state 166
    expresion                      shift and go to state 200
    exp                            shift and go to state 168

state 149

    (83) tagfondofalso -> empty .

    LPARENT         reduce using rule 83 (tagfondofalso -> empty .)
    ID              reduce using rule 83 (tagfondofalso -> empty .)
    ENTERO          reduce using rule 83 (tagfondofalso -> empty .)
    FLOTANTE        reduce using rule 83 (tagfondofalso -> empty .)
    CADENA          reduce using rule 83 (tagfondofalso -> empty .)
    CARACTER        reduce using rule 83 (tagfondofalso -> empty .)


state 150

    (113) varcte -> CADENA tagcad .

    MULT            reduce using rule 113 (varcte -> CADENA tagcad .)
    DIV             reduce using rule 113 (varcte -> CADENA tagcad .)
    SUMA            reduce using rule 113 (varcte -> CADENA tagcad .)
    RESTA           reduce using rule 113 (varcte -> CADENA tagcad .)
    RPARENT         reduce using rule 113 (varcte -> CADENA tagcad .)
    GT              reduce using rule 113 (varcte -> CADENA tagcad .)
    LT              reduce using rule 113 (varcte -> CADENA tagcad .)
    LE              reduce using rule 113 (varcte -> CADENA tagcad .)
    GE              reduce using rule 113 (varcte -> CADENA tagcad .)
    DIF             reduce using rule 113 (varcte -> CADENA tagcad .)
    SAME            reduce using rule 113 (varcte -> CADENA tagcad .)
    AND             reduce using rule 113 (varcte -> CADENA tagcad .)
    OR              reduce using rule 113 (varcte -> CADENA tagcad .)
    PUNTOCOMA       reduce using rule 113 (varcte -> CADENA tagcad .)
    CADENA          reduce using rule 113 (varcte -> CADENA tagcad .)
    LPARENT         reduce using rule 113 (varcte -> CADENA tagcad .)
    ID              reduce using rule 113 (varcte -> CADENA tagcad .)
    ENTERO          reduce using rule 113 (varcte -> CADENA tagcad .)
    FLOTANTE        reduce using rule 113 (varcte -> CADENA tagcad .)
    CARACTER        reduce using rule 113 (varcte -> CADENA tagcad .)
    RKEY            reduce using rule 113 (varcte -> CADENA tagcad .)
    COMA            reduce using rule 113 (varcte -> CADENA tagcad .)
    RBRACKET        reduce using rule 113 (varcte -> CADENA tagcad .)


state 151

    (117) tagcad -> empty .

    MULT            reduce using rule 117 (tagcad -> empty .)
    DIV             reduce using rule 117 (tagcad -> empty .)
    SUMA            reduce using rule 117 (tagcad -> empty .)
    RESTA           reduce using rule 117 (tagcad -> empty .)
    RBRACKET        reduce using rule 117 (tagcad -> empty .)
    COMA            reduce using rule 117 (tagcad -> empty .)
    GT              reduce using rule 117 (tagcad -> empty .)
    LT              reduce using rule 117 (tagcad -> empty .)
    LE              reduce using rule 117 (tagcad -> empty .)
    GE              reduce using rule 117 (tagcad -> empty .)
    DIF             reduce using rule 117 (tagcad -> empty .)
    SAME            reduce using rule 117 (tagcad -> empty .)
    AND             reduce using rule 117 (tagcad -> empty .)
    OR              reduce using rule 117 (tagcad -> empty .)
    RPARENT         reduce using rule 117 (tagcad -> empty .)
    PUNTOCOMA       reduce using rule 117 (tagcad -> empty .)
    RKEY            reduce using rule 117 (tagcad -> empty .)
    ID              reduce using rule 117 (tagcad -> empty .)
    CADENA          reduce using rule 117 (tagcad -> empty .)
    LPARENT         reduce using rule 117 (tagcad -> empty .)
    ENTERO          reduce using rule 117 (tagcad -> empty .)
    FLOTANTE        reduce using rule 117 (tagcad -> empty .)
    CARACTER        reduce using rule 117 (tagcad -> empty .)


state 152

    (70) termino -> factor tagsacopm . te2
    (71) te2 -> . MULT tagm termino
    (72) te2 -> . DIV tagm termino
    (73) te2 -> . empty
    (157) empty -> .

    MULT            shift and go to state 204
    DIV             shift and go to state 201
    SUMA            reduce using rule 157 (empty -> .)
    RESTA           reduce using rule 157 (empty -> .)
    RBRACKET        reduce using rule 157 (empty -> .)
    COMA            reduce using rule 157 (empty -> .)
    GT              reduce using rule 157 (empty -> .)
    LT              reduce using rule 157 (empty -> .)
    LE              reduce using rule 157 (empty -> .)
    GE              reduce using rule 157 (empty -> .)
    DIF             reduce using rule 157 (empty -> .)
    SAME            reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    te2                            shift and go to state 203
    empty                          shift and go to state 202

state 153

    (75) tagsacopm -> empty .

    MULT            reduce using rule 75 (tagsacopm -> empty .)
    DIV             reduce using rule 75 (tagsacopm -> empty .)
    SUMA            reduce using rule 75 (tagsacopm -> empty .)
    RESTA           reduce using rule 75 (tagsacopm -> empty .)
    RBRACKET        reduce using rule 75 (tagsacopm -> empty .)
    COMA            reduce using rule 75 (tagsacopm -> empty .)
    GT              reduce using rule 75 (tagsacopm -> empty .)
    LT              reduce using rule 75 (tagsacopm -> empty .)
    LE              reduce using rule 75 (tagsacopm -> empty .)
    GE              reduce using rule 75 (tagsacopm -> empty .)
    DIF             reduce using rule 75 (tagsacopm -> empty .)
    SAME            reduce using rule 75 (tagsacopm -> empty .)
    AND             reduce using rule 75 (tagsacopm -> empty .)
    OR              reduce using rule 75 (tagsacopm -> empty .)
    RPARENT         reduce using rule 75 (tagsacopm -> empty .)
    CADENA          reduce using rule 75 (tagsacopm -> empty .)
    LPARENT         reduce using rule 75 (tagsacopm -> empty .)
    ID              reduce using rule 75 (tagsacopm -> empty .)
    ENTERO          reduce using rule 75 (tagsacopm -> empty .)
    FLOTANTE        reduce using rule 75 (tagsacopm -> empty .)
    CARACTER        reduce using rule 75 (tagsacopm -> empty .)
    PUNTOCOMA       reduce using rule 75 (tagsacopm -> empty .)
    RKEY            reduce using rule 75 (tagsacopm -> empty .)


state 154

    (111) varcte -> ENTERO tagint .

    MULT            reduce using rule 111 (varcte -> ENTERO tagint .)
    DIV             reduce using rule 111 (varcte -> ENTERO tagint .)
    SUMA            reduce using rule 111 (varcte -> ENTERO tagint .)
    RESTA           reduce using rule 111 (varcte -> ENTERO tagint .)
    RPARENT         reduce using rule 111 (varcte -> ENTERO tagint .)
    GT              reduce using rule 111 (varcte -> ENTERO tagint .)
    LT              reduce using rule 111 (varcte -> ENTERO tagint .)
    LE              reduce using rule 111 (varcte -> ENTERO tagint .)
    GE              reduce using rule 111 (varcte -> ENTERO tagint .)
    DIF             reduce using rule 111 (varcte -> ENTERO tagint .)
    SAME            reduce using rule 111 (varcte -> ENTERO tagint .)
    AND             reduce using rule 111 (varcte -> ENTERO tagint .)
    OR              reduce using rule 111 (varcte -> ENTERO tagint .)
    PUNTOCOMA       reduce using rule 111 (varcte -> ENTERO tagint .)
    CADENA          reduce using rule 111 (varcte -> ENTERO tagint .)
    LPARENT         reduce using rule 111 (varcte -> ENTERO tagint .)
    ID              reduce using rule 111 (varcte -> ENTERO tagint .)
    ENTERO          reduce using rule 111 (varcte -> ENTERO tagint .)
    FLOTANTE        reduce using rule 111 (varcte -> ENTERO tagint .)
    CARACTER        reduce using rule 111 (varcte -> ENTERO tagint .)
    RKEY            reduce using rule 111 (varcte -> ENTERO tagint .)
    COMA            reduce using rule 111 (varcte -> ENTERO tagint .)
    RBRACKET        reduce using rule 111 (varcte -> ENTERO tagint .)


state 155

    (115) tagint -> empty .

    MULT            reduce using rule 115 (tagint -> empty .)
    DIV             reduce using rule 115 (tagint -> empty .)
    SUMA            reduce using rule 115 (tagint -> empty .)
    RESTA           reduce using rule 115 (tagint -> empty .)
    RBRACKET        reduce using rule 115 (tagint -> empty .)
    COMA            reduce using rule 115 (tagint -> empty .)
    GT              reduce using rule 115 (tagint -> empty .)
    LT              reduce using rule 115 (tagint -> empty .)
    LE              reduce using rule 115 (tagint -> empty .)
    GE              reduce using rule 115 (tagint -> empty .)
    DIF             reduce using rule 115 (tagint -> empty .)
    SAME            reduce using rule 115 (tagint -> empty .)
    AND             reduce using rule 115 (tagint -> empty .)
    OR              reduce using rule 115 (tagint -> empty .)
    RPARENT         reduce using rule 115 (tagint -> empty .)
    CADENA          reduce using rule 115 (tagint -> empty .)
    LPARENT         reduce using rule 115 (tagint -> empty .)
    ID              reduce using rule 115 (tagint -> empty .)
    ENTERO          reduce using rule 115 (tagint -> empty .)
    FLOTANTE        reduce using rule 115 (tagint -> empty .)
    CARACTER        reduce using rule 115 (tagint -> empty .)
    PUNTOCOMA       reduce using rule 115 (tagint -> empty .)
    RKEY            reduce using rule 115 (tagint -> empty .)


state 156

    (114) varcte -> CARACTER tagcar .

    MULT            reduce using rule 114 (varcte -> CARACTER tagcar .)
    DIV             reduce using rule 114 (varcte -> CARACTER tagcar .)
    SUMA            reduce using rule 114 (varcte -> CARACTER tagcar .)
    RESTA           reduce using rule 114 (varcte -> CARACTER tagcar .)
    RPARENT         reduce using rule 114 (varcte -> CARACTER tagcar .)
    GT              reduce using rule 114 (varcte -> CARACTER tagcar .)
    LT              reduce using rule 114 (varcte -> CARACTER tagcar .)
    LE              reduce using rule 114 (varcte -> CARACTER tagcar .)
    GE              reduce using rule 114 (varcte -> CARACTER tagcar .)
    DIF             reduce using rule 114 (varcte -> CARACTER tagcar .)
    SAME            reduce using rule 114 (varcte -> CARACTER tagcar .)
    AND             reduce using rule 114 (varcte -> CARACTER tagcar .)
    OR              reduce using rule 114 (varcte -> CARACTER tagcar .)
    PUNTOCOMA       reduce using rule 114 (varcte -> CARACTER tagcar .)
    CADENA          reduce using rule 114 (varcte -> CARACTER tagcar .)
    LPARENT         reduce using rule 114 (varcte -> CARACTER tagcar .)
    ID              reduce using rule 114 (varcte -> CARACTER tagcar .)
    ENTERO          reduce using rule 114 (varcte -> CARACTER tagcar .)
    FLOTANTE        reduce using rule 114 (varcte -> CARACTER tagcar .)
    CARACTER        reduce using rule 114 (varcte -> CARACTER tagcar .)
    RKEY            reduce using rule 114 (varcte -> CARACTER tagcar .)
    COMA            reduce using rule 114 (varcte -> CARACTER tagcar .)
    RBRACKET        reduce using rule 114 (varcte -> CARACTER tagcar .)


state 157

    (118) tagcar -> empty .

    MULT            reduce using rule 118 (tagcar -> empty .)
    DIV             reduce using rule 118 (tagcar -> empty .)
    SUMA            reduce using rule 118 (tagcar -> empty .)
    RESTA           reduce using rule 118 (tagcar -> empty .)
    RBRACKET        reduce using rule 118 (tagcar -> empty .)
    COMA            reduce using rule 118 (tagcar -> empty .)
    GT              reduce using rule 118 (tagcar -> empty .)
    LT              reduce using rule 118 (tagcar -> empty .)
    LE              reduce using rule 118 (tagcar -> empty .)
    GE              reduce using rule 118 (tagcar -> empty .)
    DIF             reduce using rule 118 (tagcar -> empty .)
    SAME            reduce using rule 118 (tagcar -> empty .)
    AND             reduce using rule 118 (tagcar -> empty .)
    OR              reduce using rule 118 (tagcar -> empty .)
    RPARENT         reduce using rule 118 (tagcar -> empty .)
    CADENA          reduce using rule 118 (tagcar -> empty .)
    LPARENT         reduce using rule 118 (tagcar -> empty .)
    ID              reduce using rule 118 (tagcar -> empty .)
    ENTERO          reduce using rule 118 (tagcar -> empty .)
    FLOTANTE        reduce using rule 118 (tagcar -> empty .)
    CARACTER        reduce using rule 118 (tagcar -> empty .)
    PUNTOCOMA       reduce using rule 118 (tagcar -> empty .)
    RKEY            reduce using rule 118 (tagcar -> empty .)


state 158

    (85) f7 -> ID LBRACKET . exp f8
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 205

state 159

    (47) decla1 -> LBRACKET exp decla2 .

    INT             reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    FLOAT           reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    CHAR            reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    STRING          reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    BOOL            reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    VOID            reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    LKEY            reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    ID              reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    PRINT           reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    IF              reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    WHILE           reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    DO              reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    FOR             reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    COMENTARIO      reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    CUADRADO        reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    TRIANGULO       reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    CASA            reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    RECTANGULO      reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    CUBO            reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    TRAPECIO        reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    ESTRELLA        reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    MUEVE           reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    LEVANTA         reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    APOYA           reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    DIMENSION       reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)
    RKEY            reduce using rule 47 (decla1 -> LBRACKET exp decla2 .)


state 160

    (49) decla2 -> COMA . exp decla2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 206

state 161

    (48) decla2 -> RBRACKET . declafinal
    (50) declafinal -> . PUNTOCOMA

    PUNTOCOMA       shift and go to state 48

    declafinal                     shift and go to state 207

state 162

    (116) tagfloat -> empty .

    MULT            reduce using rule 116 (tagfloat -> empty .)
    DIV             reduce using rule 116 (tagfloat -> empty .)
    SUMA            reduce using rule 116 (tagfloat -> empty .)
    RESTA           reduce using rule 116 (tagfloat -> empty .)
    RBRACKET        reduce using rule 116 (tagfloat -> empty .)
    COMA            reduce using rule 116 (tagfloat -> empty .)
    GT              reduce using rule 116 (tagfloat -> empty .)
    LT              reduce using rule 116 (tagfloat -> empty .)
    LE              reduce using rule 116 (tagfloat -> empty .)
    GE              reduce using rule 116 (tagfloat -> empty .)
    DIF             reduce using rule 116 (tagfloat -> empty .)
    SAME            reduce using rule 116 (tagfloat -> empty .)
    AND             reduce using rule 116 (tagfloat -> empty .)
    OR              reduce using rule 116 (tagfloat -> empty .)
    RPARENT         reduce using rule 116 (tagfloat -> empty .)
    CADENA          reduce using rule 116 (tagfloat -> empty .)
    LPARENT         reduce using rule 116 (tagfloat -> empty .)
    ID              reduce using rule 116 (tagfloat -> empty .)
    ENTERO          reduce using rule 116 (tagfloat -> empty .)
    FLOTANTE        reduce using rule 116 (tagfloat -> empty .)
    CARACTER        reduce using rule 116 (tagfloat -> empty .)
    PUNTOCOMA       reduce using rule 116 (tagfloat -> empty .)
    RKEY            reduce using rule 116 (tagfloat -> empty .)


state 163

    (112) varcte -> FLOTANTE tagfloat .

    MULT            reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    DIV             reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    SUMA            reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    RESTA           reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    RPARENT         reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    GT              reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    LT              reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    LE              reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    GE              reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    DIF             reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    SAME            reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    AND             reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    OR              reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    PUNTOCOMA       reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    CADENA          reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    LPARENT         reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    ID              reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    ENTERO          reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    FLOTANTE        reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    CARACTER        reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    RKEY            reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    COMA            reduce using rule 112 (varcte -> FLOTANTE tagfloat .)
    RBRACKET        reduce using rule 112 (varcte -> FLOTANTE tagfloat .)


state 164

    (120) ciclodowhile -> DO bloque WHILE . LPARENT expresion RPARENT PUNTOCOMA

    LPARENT         shift and go to state 208


state 165

    (132) mueve -> MUEVE LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 209


state 166

    (20) expresion -> expresion2 . expre
    (21) expre -> . expre2
    (22) expre -> . empty
    (23) expre2 -> . AND tagmetelog expresion tagsacalog
    (24) expre2 -> . OR tagmetelog expresion tagsacalog
    (157) empty -> .

    AND             shift and go to state 210
    OR              shift and go to state 213
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    expre                          shift and go to state 211
    expre2                         shift and go to state 212
    empty                          shift and go to state 214

state 167

    (119) ciclowhile -> WHILE LPARENT expresion . RPARENT bloque

    RPARENT         shift and go to state 215


state 168

    (27) expresion2 -> exp . e2
    (28) e2 -> . e3
    (29) e2 -> . empty
    (30) e3 -> . GT tagrel exp tagsacrel
    (31) e3 -> . LT tagrel exp tagsacrel
    (32) e3 -> . LE tagrel exp tagsacrel
    (33) e3 -> . GE tagrel exp tagsacrel
    (34) e3 -> . DIF tagrel exp tagsacrel
    (35) e3 -> . SAME tagrel exp tagsacrel
    (157) empty -> .

    GT              shift and go to state 221
    LT              shift and go to state 220
    LE              shift and go to state 218
    GE              shift and go to state 216
    DIF             shift and go to state 217
    SAME            shift and go to state 219
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    e3                             shift and go to state 222
    empty                          shift and go to state 223
    e2                             shift and go to state 224

state 169

    (135) trapecio -> TRAPECIO LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 225


state 170

    (64) pr2 -> CADENA . pr3
    (113) varcte -> CADENA . tagcad
    (65) pr3 -> . pr2
    (66) pr3 -> . RPARENT PUNTOCOMA
    (117) tagcad -> . empty
    (63) pr2 -> . expresion pr3
    (64) pr2 -> . CADENA pr3
    (157) empty -> .
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

  ! shift/reduce conflict for RPARENT resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for LPARENT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
    RPARENT         shift and go to state 226
    CADENA          shift and go to state 170
    MULT            reduce using rule 157 (empty -> .)
    DIV             reduce using rule 157 (empty -> .)
    SUMA            reduce using rule 157 (empty -> .)
    RESTA           reduce using rule 157 (empty -> .)
    GT              reduce using rule 157 (empty -> .)
    LT              reduce using rule 157 (empty -> .)
    LE              reduce using rule 157 (empty -> .)
    GE              reduce using rule 157 (empty -> .)
    DIF             reduce using rule 157 (empty -> .)
    SAME            reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CARACTER        shift and go to state 112

  ! RPARENT         [ reduce using rule 157 (empty -> .) ]
  ! CADENA          [ reduce using rule 157 (empty -> .) ]
  ! LPARENT         [ reduce using rule 157 (empty -> .) ]
  ! ID              [ reduce using rule 157 (empty -> .) ]
  ! ENTERO          [ reduce using rule 157 (empty -> .) ]
  ! FLOTANTE        [ reduce using rule 157 (empty -> .) ]
  ! CARACTER        [ reduce using rule 157 (empty -> .) ]

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    empty                          shift and go to state 151
    expresion2                     shift and go to state 166
    pr3                            shift and go to state 227
    pr2                            shift and go to state 228
    expresion                      shift and go to state 172
    tagcad                         shift and go to state 150
    exp                            shift and go to state 168

state 171

    (62) print -> PRINT LPARENT pr2 .

    ID              reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    PRINT           reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    IF              reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    WHILE           reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    DO              reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    FOR             reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    COMENTARIO      reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    CUADRADO        reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    TRIANGULO       reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    CASA            reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    RECTANGULO      reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    CUBO            reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    TRAPECIO        reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    ESTRELLA        reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    MUEVE           reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    LEVANTA         reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    APOYA           reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    DIMENSION       reduce using rule 62 (print -> PRINT LPARENT pr2 .)
    RKEY            reduce using rule 62 (print -> PRINT LPARENT pr2 .)


state 172

    (63) pr2 -> expresion . pr3
    (65) pr3 -> . pr2
    (66) pr3 -> . RPARENT PUNTOCOMA
    (63) pr2 -> . expresion pr3
    (64) pr2 -> . CADENA pr3
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    RPARENT         shift and go to state 226
    CADENA          shift and go to state 170
    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    expresion2                     shift and go to state 166
    pr3                            shift and go to state 229
    pr2                            shift and go to state 228
    expresion                      shift and go to state 172
    exp                            shift and go to state 168

state 173

    (129) casa -> CASA LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 230


state 174

    (128) rectangulo -> RECTANGULO LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 231


state 175

    (131) cubo -> CUBO LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 232


state 176

    (134) apoya -> APOYA LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 233


state 177

    (127) triangulo -> TRIANGULO LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 234


state 178

    (122) ciclofor -> FOR LPARENT asignacion . expresion asignacion RPARENT bloque
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    expresion2                     shift and go to state 166
    factor                         shift and go to state 110
    expresion                      shift and go to state 235
    exp                            shift and go to state 168

state 179

    (56) asignacion -> ID . asig2
    (57) asig2 -> . LBRACKET exp asig3
    (58) asig2 -> . asigfinal
    (61) asigfinal -> . IGUAL expresion PUNTOCOMA

    LBRACKET        shift and go to state 133
    IGUAL           shift and go to state 236

    asig2                          shift and go to state 134
    asigfinal                      shift and go to state 135

state 180

    (156) llamaf4 -> RPARENT .

    ID              reduce using rule 156 (llamaf4 -> RPARENT .)
    PRINT           reduce using rule 156 (llamaf4 -> RPARENT .)
    IF              reduce using rule 156 (llamaf4 -> RPARENT .)
    WHILE           reduce using rule 156 (llamaf4 -> RPARENT .)
    DO              reduce using rule 156 (llamaf4 -> RPARENT .)
    FOR             reduce using rule 156 (llamaf4 -> RPARENT .)
    COMENTARIO      reduce using rule 156 (llamaf4 -> RPARENT .)
    CUADRADO        reduce using rule 156 (llamaf4 -> RPARENT .)
    TRIANGULO       reduce using rule 156 (llamaf4 -> RPARENT .)
    CASA            reduce using rule 156 (llamaf4 -> RPARENT .)
    RECTANGULO      reduce using rule 156 (llamaf4 -> RPARENT .)
    CUBO            reduce using rule 156 (llamaf4 -> RPARENT .)
    TRAPECIO        reduce using rule 156 (llamaf4 -> RPARENT .)
    ESTRELLA        reduce using rule 156 (llamaf4 -> RPARENT .)
    MUEVE           reduce using rule 156 (llamaf4 -> RPARENT .)
    LEVANTA         reduce using rule 156 (llamaf4 -> RPARENT .)
    APOYA           reduce using rule 156 (llamaf4 -> RPARENT .)
    DIMENSION       reduce using rule 156 (llamaf4 -> RPARENT .)
    RKEY            reduce using rule 156 (llamaf4 -> RPARENT .)
    MULT            reduce using rule 156 (llamaf4 -> RPARENT .)
    DIV             reduce using rule 156 (llamaf4 -> RPARENT .)
    SUMA            reduce using rule 156 (llamaf4 -> RPARENT .)
    RESTA           reduce using rule 156 (llamaf4 -> RPARENT .)
    RBRACKET        reduce using rule 156 (llamaf4 -> RPARENT .)
    COMA            reduce using rule 156 (llamaf4 -> RPARENT .)
    GT              reduce using rule 156 (llamaf4 -> RPARENT .)
    LT              reduce using rule 156 (llamaf4 -> RPARENT .)
    LE              reduce using rule 156 (llamaf4 -> RPARENT .)
    GE              reduce using rule 156 (llamaf4 -> RPARENT .)
    DIF             reduce using rule 156 (llamaf4 -> RPARENT .)
    SAME            reduce using rule 156 (llamaf4 -> RPARENT .)
    AND             reduce using rule 156 (llamaf4 -> RPARENT .)
    OR              reduce using rule 156 (llamaf4 -> RPARENT .)
    RPARENT         reduce using rule 156 (llamaf4 -> RPARENT .)
    CADENA          reduce using rule 156 (llamaf4 -> RPARENT .)
    LPARENT         reduce using rule 156 (llamaf4 -> RPARENT .)
    ENTERO          reduce using rule 156 (llamaf4 -> RPARENT .)
    FLOTANTE        reduce using rule 156 (llamaf4 -> RPARENT .)
    CARACTER        reduce using rule 156 (llamaf4 -> RPARENT .)
    PUNTOCOMA       reduce using rule 156 (llamaf4 -> RPARENT .)


state 181

    (151) llamaf11 -> llamaf2 .

    ID              reduce using rule 151 (llamaf11 -> llamaf2 .)
    PRINT           reduce using rule 151 (llamaf11 -> llamaf2 .)
    IF              reduce using rule 151 (llamaf11 -> llamaf2 .)
    WHILE           reduce using rule 151 (llamaf11 -> llamaf2 .)
    DO              reduce using rule 151 (llamaf11 -> llamaf2 .)
    FOR             reduce using rule 151 (llamaf11 -> llamaf2 .)
    COMENTARIO      reduce using rule 151 (llamaf11 -> llamaf2 .)
    CUADRADO        reduce using rule 151 (llamaf11 -> llamaf2 .)
    TRIANGULO       reduce using rule 151 (llamaf11 -> llamaf2 .)
    CASA            reduce using rule 151 (llamaf11 -> llamaf2 .)
    RECTANGULO      reduce using rule 151 (llamaf11 -> llamaf2 .)
    CUBO            reduce using rule 151 (llamaf11 -> llamaf2 .)
    TRAPECIO        reduce using rule 151 (llamaf11 -> llamaf2 .)
    ESTRELLA        reduce using rule 151 (llamaf11 -> llamaf2 .)
    MUEVE           reduce using rule 151 (llamaf11 -> llamaf2 .)
    LEVANTA         reduce using rule 151 (llamaf11 -> llamaf2 .)
    APOYA           reduce using rule 151 (llamaf11 -> llamaf2 .)
    DIMENSION       reduce using rule 151 (llamaf11 -> llamaf2 .)
    RKEY            reduce using rule 151 (llamaf11 -> llamaf2 .)
    MULT            reduce using rule 151 (llamaf11 -> llamaf2 .)
    DIV             reduce using rule 151 (llamaf11 -> llamaf2 .)
    SUMA            reduce using rule 151 (llamaf11 -> llamaf2 .)
    RESTA           reduce using rule 151 (llamaf11 -> llamaf2 .)
    RBRACKET        reduce using rule 151 (llamaf11 -> llamaf2 .)
    COMA            reduce using rule 151 (llamaf11 -> llamaf2 .)
    GT              reduce using rule 151 (llamaf11 -> llamaf2 .)
    LT              reduce using rule 151 (llamaf11 -> llamaf2 .)
    LE              reduce using rule 151 (llamaf11 -> llamaf2 .)
    GE              reduce using rule 151 (llamaf11 -> llamaf2 .)
    DIF             reduce using rule 151 (llamaf11 -> llamaf2 .)
    SAME            reduce using rule 151 (llamaf11 -> llamaf2 .)
    AND             reduce using rule 151 (llamaf11 -> llamaf2 .)
    OR              reduce using rule 151 (llamaf11 -> llamaf2 .)
    RPARENT         reduce using rule 151 (llamaf11 -> llamaf2 .)
    CADENA          reduce using rule 151 (llamaf11 -> llamaf2 .)
    LPARENT         reduce using rule 151 (llamaf11 -> llamaf2 .)
    ENTERO          reduce using rule 151 (llamaf11 -> llamaf2 .)
    FLOTANTE        reduce using rule 151 (llamaf11 -> llamaf2 .)
    CARACTER        reduce using rule 151 (llamaf11 -> llamaf2 .)
    PUNTOCOMA       reduce using rule 151 (llamaf11 -> llamaf2 .)


state 182

    (152) llamaf11 -> llamaf4 .

    ID              reduce using rule 152 (llamaf11 -> llamaf4 .)
    PRINT           reduce using rule 152 (llamaf11 -> llamaf4 .)
    IF              reduce using rule 152 (llamaf11 -> llamaf4 .)
    WHILE           reduce using rule 152 (llamaf11 -> llamaf4 .)
    DO              reduce using rule 152 (llamaf11 -> llamaf4 .)
    FOR             reduce using rule 152 (llamaf11 -> llamaf4 .)
    COMENTARIO      reduce using rule 152 (llamaf11 -> llamaf4 .)
    CUADRADO        reduce using rule 152 (llamaf11 -> llamaf4 .)
    TRIANGULO       reduce using rule 152 (llamaf11 -> llamaf4 .)
    CASA            reduce using rule 152 (llamaf11 -> llamaf4 .)
    RECTANGULO      reduce using rule 152 (llamaf11 -> llamaf4 .)
    CUBO            reduce using rule 152 (llamaf11 -> llamaf4 .)
    TRAPECIO        reduce using rule 152 (llamaf11 -> llamaf4 .)
    ESTRELLA        reduce using rule 152 (llamaf11 -> llamaf4 .)
    MUEVE           reduce using rule 152 (llamaf11 -> llamaf4 .)
    LEVANTA         reduce using rule 152 (llamaf11 -> llamaf4 .)
    APOYA           reduce using rule 152 (llamaf11 -> llamaf4 .)
    DIMENSION       reduce using rule 152 (llamaf11 -> llamaf4 .)
    RKEY            reduce using rule 152 (llamaf11 -> llamaf4 .)
    MULT            reduce using rule 152 (llamaf11 -> llamaf4 .)
    DIV             reduce using rule 152 (llamaf11 -> llamaf4 .)
    SUMA            reduce using rule 152 (llamaf11 -> llamaf4 .)
    RESTA           reduce using rule 152 (llamaf11 -> llamaf4 .)
    RBRACKET        reduce using rule 152 (llamaf11 -> llamaf4 .)
    COMA            reduce using rule 152 (llamaf11 -> llamaf4 .)
    GT              reduce using rule 152 (llamaf11 -> llamaf4 .)
    LT              reduce using rule 152 (llamaf11 -> llamaf4 .)
    LE              reduce using rule 152 (llamaf11 -> llamaf4 .)
    GE              reduce using rule 152 (llamaf11 -> llamaf4 .)
    DIF             reduce using rule 152 (llamaf11 -> llamaf4 .)
    SAME            reduce using rule 152 (llamaf11 -> llamaf4 .)
    AND             reduce using rule 152 (llamaf11 -> llamaf4 .)
    OR              reduce using rule 152 (llamaf11 -> llamaf4 .)
    RPARENT         reduce using rule 152 (llamaf11 -> llamaf4 .)
    CADENA          reduce using rule 152 (llamaf11 -> llamaf4 .)
    LPARENT         reduce using rule 152 (llamaf11 -> llamaf4 .)
    ENTERO          reduce using rule 152 (llamaf11 -> llamaf4 .)
    FLOTANTE        reduce using rule 152 (llamaf11 -> llamaf4 .)
    CARACTER        reduce using rule 152 (llamaf11 -> llamaf4 .)
    PUNTOCOMA       reduce using rule 152 (llamaf11 -> llamaf4 .)


state 183

    (153) llamaf2 -> exp . llamaf3
    (154) llamaf3 -> . COMA llamaf2
    (155) llamaf3 -> . llamaf4
    (156) llamaf4 -> . RPARENT

    COMA            shift and go to state 239
    RPARENT         shift and go to state 180

    llamaf3                        shift and go to state 237
    llamaf4                        shift and go to state 238

state 184

    (150) llamafuncion -> ID LPARENT llamaf11 .

    MULT            reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    DIV             reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    SUMA            reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    RESTA           reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    RPARENT         reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    GT              reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    LT              reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    LE              reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    GE              reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    DIF             reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    SAME            reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    AND             reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    OR              reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    RKEY            reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    RBRACKET        reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    COMA            reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    CADENA          reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    LPARENT         reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    ID              reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    ENTERO          reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    FLOTANTE        reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    CARACTER        reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    PUNTOCOMA       reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    PRINT           reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    IF              reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    WHILE           reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    DO              reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    FOR             reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    COMENTARIO      reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    CUADRADO        reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    TRIANGULO       reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    CASA            reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    RECTANGULO      reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    CUBO            reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    TRAPECIO        reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    ESTRELLA        reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    MUEVE           reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    LEVANTA         reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    APOYA           reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)
    DIMENSION       reduce using rule 150 (llamafuncion -> ID LPARENT llamaf11 .)


state 185

    (121) read -> ID IGUAL READ . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 240


state 186

    (61) asigfinal -> IGUAL expresion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 241


state 187

    (57) asig2 -> LBRACKET exp . asig3
    (59) asig3 -> . COMA exp asig3
    (60) asig3 -> . RBRACKET asigfinal

    COMA            shift and go to state 243
    RBRACKET        shift and go to state 244

    asig3                          shift and go to state 242

state 188

    (136) dimension -> DIMENSION LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 245


state 189

    (123) if -> IF LPARENT expresion . RPARENT bloque if2

    RPARENT         shift and go to state 246


state 190

    (67) condicion -> IF LKEY expresion . RKEY bloque c2

    RKEY            shift and go to state 247


state 191

    (130) estrella -> ESTRELLA LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 248


state 192

    (126) cuadrado -> CUADRADO LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 249


state 193

    (133) levanta -> LEVANTA LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 250


state 194

    (147) function4 -> RPARENT noinitFunc bloque . initFunc
    (149) initFunc -> . empty
    (157) empty -> .

    VOID            reduce using rule 157 (empty -> .)
    INT             reduce using rule 157 (empty -> .)
    FLOAT           reduce using rule 157 (empty -> .)
    CHAR            reduce using rule 157 (empty -> .)
    STRING          reduce using rule 157 (empty -> .)
    BOOL            reduce using rule 157 (empty -> .)
    LKEY            reduce using rule 157 (empty -> .)

    initFunc                       shift and go to state 251
    empty                          shift and go to state 252

state 195

    (143) funct2 -> tipo ID . initParams funct3
    (144) initParams -> . empty
    (157) empty -> .

    COMA            reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)

    initParams                     shift and go to state 254
    empty                          shift and go to state 253

state 196

    (38) exp -> termino tagsacops exp2 .

    COMA            reduce using rule 38 (exp -> termino tagsacops exp2 .)
    RPARENT         reduce using rule 38 (exp -> termino tagsacops exp2 .)
    RBRACKET        reduce using rule 38 (exp -> termino tagsacops exp2 .)
    AND             reduce using rule 38 (exp -> termino tagsacops exp2 .)
    OR              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    CADENA          reduce using rule 38 (exp -> termino tagsacops exp2 .)
    LPARENT         reduce using rule 38 (exp -> termino tagsacops exp2 .)
    ID              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    ENTERO          reduce using rule 38 (exp -> termino tagsacops exp2 .)
    FLOTANTE        reduce using rule 38 (exp -> termino tagsacops exp2 .)
    CARACTER        reduce using rule 38 (exp -> termino tagsacops exp2 .)
    PUNTOCOMA       reduce using rule 38 (exp -> termino tagsacops exp2 .)
    RKEY            reduce using rule 38 (exp -> termino tagsacops exp2 .)
    GT              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    LT              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    LE              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    GE              reduce using rule 38 (exp -> termino tagsacops exp2 .)
    DIF             reduce using rule 38 (exp -> termino tagsacops exp2 .)
    SAME            reduce using rule 38 (exp -> termino tagsacops exp2 .)


state 197

    (41) exp2 -> empty .

    RBRACKET        reduce using rule 41 (exp2 -> empty .)
    COMA            reduce using rule 41 (exp2 -> empty .)
    GT              reduce using rule 41 (exp2 -> empty .)
    LT              reduce using rule 41 (exp2 -> empty .)
    LE              reduce using rule 41 (exp2 -> empty .)
    GE              reduce using rule 41 (exp2 -> empty .)
    DIF             reduce using rule 41 (exp2 -> empty .)
    SAME            reduce using rule 41 (exp2 -> empty .)
    AND             reduce using rule 41 (exp2 -> empty .)
    OR              reduce using rule 41 (exp2 -> empty .)
    RPARENT         reduce using rule 41 (exp2 -> empty .)
    CADENA          reduce using rule 41 (exp2 -> empty .)
    LPARENT         reduce using rule 41 (exp2 -> empty .)
    ID              reduce using rule 41 (exp2 -> empty .)
    ENTERO          reduce using rule 41 (exp2 -> empty .)
    FLOTANTE        reduce using rule 41 (exp2 -> empty .)
    CARACTER        reduce using rule 41 (exp2 -> empty .)
    PUNTOCOMA       reduce using rule 41 (exp2 -> empty .)
    RKEY            reduce using rule 41 (exp2 -> empty .)


state 198

    (40) exp2 -> RESTA . tagop exp
    (42) tagop -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagop                          shift and go to state 255
    empty                          shift and go to state 256

state 199

    (39) exp2 -> SUMA . tagop exp
    (42) tagop -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagop                          shift and go to state 257
    empty                          shift and go to state 256

state 200

    (76) factor -> LPARENT tagfondofalso expresion . RPARENT tagsacafondo

    RPARENT         shift and go to state 258


state 201

    (72) te2 -> DIV . tagm termino
    (74) tagm -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagm                           shift and go to state 259
    empty                          shift and go to state 260

state 202

    (73) te2 -> empty .

    SUMA            reduce using rule 73 (te2 -> empty .)
    RESTA           reduce using rule 73 (te2 -> empty .)
    RBRACKET        reduce using rule 73 (te2 -> empty .)
    COMA            reduce using rule 73 (te2 -> empty .)
    GT              reduce using rule 73 (te2 -> empty .)
    LT              reduce using rule 73 (te2 -> empty .)
    LE              reduce using rule 73 (te2 -> empty .)
    GE              reduce using rule 73 (te2 -> empty .)
    DIF             reduce using rule 73 (te2 -> empty .)
    SAME            reduce using rule 73 (te2 -> empty .)
    AND             reduce using rule 73 (te2 -> empty .)
    OR              reduce using rule 73 (te2 -> empty .)
    RPARENT         reduce using rule 73 (te2 -> empty .)
    CADENA          reduce using rule 73 (te2 -> empty .)
    LPARENT         reduce using rule 73 (te2 -> empty .)
    ID              reduce using rule 73 (te2 -> empty .)
    ENTERO          reduce using rule 73 (te2 -> empty .)
    FLOTANTE        reduce using rule 73 (te2 -> empty .)
    CARACTER        reduce using rule 73 (te2 -> empty .)
    PUNTOCOMA       reduce using rule 73 (te2 -> empty .)
    RKEY            reduce using rule 73 (te2 -> empty .)


state 203

    (70) termino -> factor tagsacopm te2 .

    SUMA            reduce using rule 70 (termino -> factor tagsacopm te2 .)
    RESTA           reduce using rule 70 (termino -> factor tagsacopm te2 .)
    COMA            reduce using rule 70 (termino -> factor tagsacopm te2 .)
    RBRACKET        reduce using rule 70 (termino -> factor tagsacopm te2 .)
    GT              reduce using rule 70 (termino -> factor tagsacopm te2 .)
    LT              reduce using rule 70 (termino -> factor tagsacopm te2 .)
    LE              reduce using rule 70 (termino -> factor tagsacopm te2 .)
    GE              reduce using rule 70 (termino -> factor tagsacopm te2 .)
    DIF             reduce using rule 70 (termino -> factor tagsacopm te2 .)
    SAME            reduce using rule 70 (termino -> factor tagsacopm te2 .)
    AND             reduce using rule 70 (termino -> factor tagsacopm te2 .)
    OR              reduce using rule 70 (termino -> factor tagsacopm te2 .)
    RPARENT         reduce using rule 70 (termino -> factor tagsacopm te2 .)
    CADENA          reduce using rule 70 (termino -> factor tagsacopm te2 .)
    LPARENT         reduce using rule 70 (termino -> factor tagsacopm te2 .)
    ID              reduce using rule 70 (termino -> factor tagsacopm te2 .)
    ENTERO          reduce using rule 70 (termino -> factor tagsacopm te2 .)
    FLOTANTE        reduce using rule 70 (termino -> factor tagsacopm te2 .)
    CARACTER        reduce using rule 70 (termino -> factor tagsacopm te2 .)
    PUNTOCOMA       reduce using rule 70 (termino -> factor tagsacopm te2 .)
    RKEY            reduce using rule 70 (termino -> factor tagsacopm te2 .)


state 204

    (71) te2 -> MULT . tagm termino
    (74) tagm -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagm                           shift and go to state 261
    empty                          shift and go to state 260

state 205

    (85) f7 -> ID LBRACKET exp . f8
    (86) f8 -> . COMA exp f8
    (87) f8 -> . RBRACKET

    COMA            shift and go to state 263
    RBRACKET        shift and go to state 264

    f8                             shift and go to state 262

state 206

    (49) decla2 -> COMA exp . decla2
    (48) decla2 -> . RBRACKET declafinal
    (49) decla2 -> . COMA exp decla2

    RBRACKET        shift and go to state 161
    COMA            shift and go to state 160

    decla2                         shift and go to state 265

state 207

    (48) decla2 -> RBRACKET declafinal .

    INT             reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    FLOAT           reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    CHAR            reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    STRING          reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    BOOL            reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    VOID            reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    LKEY            reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    ID              reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    PRINT           reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    IF              reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    WHILE           reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    DO              reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    FOR             reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    COMENTARIO      reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    CUADRADO        reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    TRIANGULO       reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    CASA            reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    RECTANGULO      reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    CUBO            reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    TRAPECIO        reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    ESTRELLA        reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    MUEVE           reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    LEVANTA         reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    APOYA           reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    DIMENSION       reduce using rule 48 (decla2 -> RBRACKET declafinal .)
    RKEY            reduce using rule 48 (decla2 -> RBRACKET declafinal .)


state 208

    (120) ciclodowhile -> DO bloque WHILE LPARENT . expresion RPARENT PUNTOCOMA
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    expresion2                     shift and go to state 166
    expresion                      shift and go to state 266
    exp                            shift and go to state 168

state 209

    (132) mueve -> MUEVE LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 267

state 210

    (23) expre2 -> AND . tagmetelog expresion tagsacalog
    (25) tagmetelog -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagmetelog                     shift and go to state 268
    empty                          shift and go to state 269

state 211

    (20) expresion -> expresion2 expre .

    RKEY            reduce using rule 20 (expresion -> expresion2 expre .)
    ID              reduce using rule 20 (expresion -> expresion2 expre .)
    RPARENT         reduce using rule 20 (expresion -> expresion2 expre .)
    CADENA          reduce using rule 20 (expresion -> expresion2 expre .)
    LPARENT         reduce using rule 20 (expresion -> expresion2 expre .)
    ENTERO          reduce using rule 20 (expresion -> expresion2 expre .)
    FLOTANTE        reduce using rule 20 (expresion -> expresion2 expre .)
    CARACTER        reduce using rule 20 (expresion -> expresion2 expre .)
    PUNTOCOMA       reduce using rule 20 (expresion -> expresion2 expre .)


state 212

    (21) expre -> expre2 .

    RPARENT         reduce using rule 21 (expre -> expre2 .)
    CADENA          reduce using rule 21 (expre -> expre2 .)
    LPARENT         reduce using rule 21 (expre -> expre2 .)
    ID              reduce using rule 21 (expre -> expre2 .)
    ENTERO          reduce using rule 21 (expre -> expre2 .)
    FLOTANTE        reduce using rule 21 (expre -> expre2 .)
    CARACTER        reduce using rule 21 (expre -> expre2 .)
    PUNTOCOMA       reduce using rule 21 (expre -> expre2 .)
    RKEY            reduce using rule 21 (expre -> expre2 .)


state 213

    (24) expre2 -> OR . tagmetelog expresion tagsacalog
    (25) tagmetelog -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagmetelog                     shift and go to state 270
    empty                          shift and go to state 269

state 214

    (22) expre -> empty .

    RPARENT         reduce using rule 22 (expre -> empty .)
    CADENA          reduce using rule 22 (expre -> empty .)
    LPARENT         reduce using rule 22 (expre -> empty .)
    ID              reduce using rule 22 (expre -> empty .)
    ENTERO          reduce using rule 22 (expre -> empty .)
    FLOTANTE        reduce using rule 22 (expre -> empty .)
    CARACTER        reduce using rule 22 (expre -> empty .)
    PUNTOCOMA       reduce using rule 22 (expre -> empty .)
    RKEY            reduce using rule 22 (expre -> empty .)


state 215

    (119) ciclowhile -> WHILE LPARENT expresion RPARENT . bloque
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 271

state 216

    (33) e3 -> GE . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagrel                         shift and go to state 272
    empty                          shift and go to state 273

state 217

    (34) e3 -> DIF . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagrel                         shift and go to state 274
    empty                          shift and go to state 273

state 218

    (32) e3 -> LE . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagrel                         shift and go to state 275
    empty                          shift and go to state 273

state 219

    (35) e3 -> SAME . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagrel                         shift and go to state 276
    empty                          shift and go to state 273

state 220

    (31) e3 -> LT . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagrel                         shift and go to state 277
    empty                          shift and go to state 273

state 221

    (30) e3 -> GT . tagrel exp tagsacrel
    (36) tagrel -> . empty
    (157) empty -> .

    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)

    tagrel                         shift and go to state 278
    empty                          shift and go to state 273

state 222

    (28) e2 -> e3 .

    AND             reduce using rule 28 (e2 -> e3 .)
    OR              reduce using rule 28 (e2 -> e3 .)
    RPARENT         reduce using rule 28 (e2 -> e3 .)
    CADENA          reduce using rule 28 (e2 -> e3 .)
    LPARENT         reduce using rule 28 (e2 -> e3 .)
    ID              reduce using rule 28 (e2 -> e3 .)
    ENTERO          reduce using rule 28 (e2 -> e3 .)
    FLOTANTE        reduce using rule 28 (e2 -> e3 .)
    CARACTER        reduce using rule 28 (e2 -> e3 .)
    PUNTOCOMA       reduce using rule 28 (e2 -> e3 .)
    RKEY            reduce using rule 28 (e2 -> e3 .)


state 223

    (29) e2 -> empty .

    AND             reduce using rule 29 (e2 -> empty .)
    OR              reduce using rule 29 (e2 -> empty .)
    RPARENT         reduce using rule 29 (e2 -> empty .)
    CADENA          reduce using rule 29 (e2 -> empty .)
    LPARENT         reduce using rule 29 (e2 -> empty .)
    ID              reduce using rule 29 (e2 -> empty .)
    ENTERO          reduce using rule 29 (e2 -> empty .)
    FLOTANTE        reduce using rule 29 (e2 -> empty .)
    CARACTER        reduce using rule 29 (e2 -> empty .)
    PUNTOCOMA       reduce using rule 29 (e2 -> empty .)
    RKEY            reduce using rule 29 (e2 -> empty .)


state 224

    (27) expresion2 -> exp e2 .

    AND             reduce using rule 27 (expresion2 -> exp e2 .)
    OR              reduce using rule 27 (expresion2 -> exp e2 .)
    RPARENT         reduce using rule 27 (expresion2 -> exp e2 .)
    CADENA          reduce using rule 27 (expresion2 -> exp e2 .)
    LPARENT         reduce using rule 27 (expresion2 -> exp e2 .)
    ID              reduce using rule 27 (expresion2 -> exp e2 .)
    ENTERO          reduce using rule 27 (expresion2 -> exp e2 .)
    FLOTANTE        reduce using rule 27 (expresion2 -> exp e2 .)
    CARACTER        reduce using rule 27 (expresion2 -> exp e2 .)
    PUNTOCOMA       reduce using rule 27 (expresion2 -> exp e2 .)
    RKEY            reduce using rule 27 (expresion2 -> exp e2 .)


state 225

    (135) trapecio -> TRAPECIO LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 279

state 226

    (66) pr3 -> RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 280


state 227

    (64) pr2 -> CADENA pr3 .

    ID              reduce using rule 64 (pr2 -> CADENA pr3 .)
    PRINT           reduce using rule 64 (pr2 -> CADENA pr3 .)
    IF              reduce using rule 64 (pr2 -> CADENA pr3 .)
    WHILE           reduce using rule 64 (pr2 -> CADENA pr3 .)
    DO              reduce using rule 64 (pr2 -> CADENA pr3 .)
    FOR             reduce using rule 64 (pr2 -> CADENA pr3 .)
    COMENTARIO      reduce using rule 64 (pr2 -> CADENA pr3 .)
    CUADRADO        reduce using rule 64 (pr2 -> CADENA pr3 .)
    TRIANGULO       reduce using rule 64 (pr2 -> CADENA pr3 .)
    CASA            reduce using rule 64 (pr2 -> CADENA pr3 .)
    RECTANGULO      reduce using rule 64 (pr2 -> CADENA pr3 .)
    CUBO            reduce using rule 64 (pr2 -> CADENA pr3 .)
    TRAPECIO        reduce using rule 64 (pr2 -> CADENA pr3 .)
    ESTRELLA        reduce using rule 64 (pr2 -> CADENA pr3 .)
    MUEVE           reduce using rule 64 (pr2 -> CADENA pr3 .)
    LEVANTA         reduce using rule 64 (pr2 -> CADENA pr3 .)
    APOYA           reduce using rule 64 (pr2 -> CADENA pr3 .)
    DIMENSION       reduce using rule 64 (pr2 -> CADENA pr3 .)
    RKEY            reduce using rule 64 (pr2 -> CADENA pr3 .)


state 228

    (65) pr3 -> pr2 .

    ID              reduce using rule 65 (pr3 -> pr2 .)
    PRINT           reduce using rule 65 (pr3 -> pr2 .)
    IF              reduce using rule 65 (pr3 -> pr2 .)
    WHILE           reduce using rule 65 (pr3 -> pr2 .)
    DO              reduce using rule 65 (pr3 -> pr2 .)
    FOR             reduce using rule 65 (pr3 -> pr2 .)
    COMENTARIO      reduce using rule 65 (pr3 -> pr2 .)
    CUADRADO        reduce using rule 65 (pr3 -> pr2 .)
    TRIANGULO       reduce using rule 65 (pr3 -> pr2 .)
    CASA            reduce using rule 65 (pr3 -> pr2 .)
    RECTANGULO      reduce using rule 65 (pr3 -> pr2 .)
    CUBO            reduce using rule 65 (pr3 -> pr2 .)
    TRAPECIO        reduce using rule 65 (pr3 -> pr2 .)
    ESTRELLA        reduce using rule 65 (pr3 -> pr2 .)
    MUEVE           reduce using rule 65 (pr3 -> pr2 .)
    LEVANTA         reduce using rule 65 (pr3 -> pr2 .)
    APOYA           reduce using rule 65 (pr3 -> pr2 .)
    DIMENSION       reduce using rule 65 (pr3 -> pr2 .)
    RKEY            reduce using rule 65 (pr3 -> pr2 .)


state 229

    (63) pr2 -> expresion pr3 .

    ID              reduce using rule 63 (pr2 -> expresion pr3 .)
    PRINT           reduce using rule 63 (pr2 -> expresion pr3 .)
    IF              reduce using rule 63 (pr2 -> expresion pr3 .)
    WHILE           reduce using rule 63 (pr2 -> expresion pr3 .)
    DO              reduce using rule 63 (pr2 -> expresion pr3 .)
    FOR             reduce using rule 63 (pr2 -> expresion pr3 .)
    COMENTARIO      reduce using rule 63 (pr2 -> expresion pr3 .)
    CUADRADO        reduce using rule 63 (pr2 -> expresion pr3 .)
    TRIANGULO       reduce using rule 63 (pr2 -> expresion pr3 .)
    CASA            reduce using rule 63 (pr2 -> expresion pr3 .)
    RECTANGULO      reduce using rule 63 (pr2 -> expresion pr3 .)
    CUBO            reduce using rule 63 (pr2 -> expresion pr3 .)
    TRAPECIO        reduce using rule 63 (pr2 -> expresion pr3 .)
    ESTRELLA        reduce using rule 63 (pr2 -> expresion pr3 .)
    MUEVE           reduce using rule 63 (pr2 -> expresion pr3 .)
    LEVANTA         reduce using rule 63 (pr2 -> expresion pr3 .)
    APOYA           reduce using rule 63 (pr2 -> expresion pr3 .)
    DIMENSION       reduce using rule 63 (pr2 -> expresion pr3 .)
    RKEY            reduce using rule 63 (pr2 -> expresion pr3 .)


state 230

    (129) casa -> CASA LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 281

state 231

    (128) rectangulo -> RECTANGULO LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 282

state 232

    (131) cubo -> CUBO LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 283


state 233

    (134) apoya -> APOYA LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 134 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)


state 234

    (127) triangulo -> TRIANGULO LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 284


state 235

    (122) ciclofor -> FOR LPARENT asignacion expresion . asignacion RPARENT bloque
    (56) asignacion -> . ID asig2

    ID              shift and go to state 179

    asignacion                     shift and go to state 285

state 236

    (61) asigfinal -> IGUAL . expresion PUNTOCOMA
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    expresion2                     shift and go to state 166
    expresion                      shift and go to state 186
    exp                            shift and go to state 168

state 237

    (153) llamaf2 -> exp llamaf3 .

    ID              reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    PRINT           reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    IF              reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    WHILE           reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    DO              reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    FOR             reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    COMENTARIO      reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    CUADRADO        reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    TRIANGULO       reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    CASA            reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    RECTANGULO      reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    CUBO            reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    TRAPECIO        reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    ESTRELLA        reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    MUEVE           reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    LEVANTA         reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    APOYA           reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    DIMENSION       reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    RKEY            reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    MULT            reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    DIV             reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    SUMA            reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    RESTA           reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    RBRACKET        reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    COMA            reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    GT              reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    LT              reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    LE              reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    GE              reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    DIF             reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    SAME            reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    AND             reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    OR              reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    RPARENT         reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    CADENA          reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    LPARENT         reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    ENTERO          reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    FLOTANTE        reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    CARACTER        reduce using rule 153 (llamaf2 -> exp llamaf3 .)
    PUNTOCOMA       reduce using rule 153 (llamaf2 -> exp llamaf3 .)


state 238

    (155) llamaf3 -> llamaf4 .

    ID              reduce using rule 155 (llamaf3 -> llamaf4 .)
    PRINT           reduce using rule 155 (llamaf3 -> llamaf4 .)
    IF              reduce using rule 155 (llamaf3 -> llamaf4 .)
    WHILE           reduce using rule 155 (llamaf3 -> llamaf4 .)
    DO              reduce using rule 155 (llamaf3 -> llamaf4 .)
    FOR             reduce using rule 155 (llamaf3 -> llamaf4 .)
    COMENTARIO      reduce using rule 155 (llamaf3 -> llamaf4 .)
    CUADRADO        reduce using rule 155 (llamaf3 -> llamaf4 .)
    TRIANGULO       reduce using rule 155 (llamaf3 -> llamaf4 .)
    CASA            reduce using rule 155 (llamaf3 -> llamaf4 .)
    RECTANGULO      reduce using rule 155 (llamaf3 -> llamaf4 .)
    CUBO            reduce using rule 155 (llamaf3 -> llamaf4 .)
    TRAPECIO        reduce using rule 155 (llamaf3 -> llamaf4 .)
    ESTRELLA        reduce using rule 155 (llamaf3 -> llamaf4 .)
    MUEVE           reduce using rule 155 (llamaf3 -> llamaf4 .)
    LEVANTA         reduce using rule 155 (llamaf3 -> llamaf4 .)
    APOYA           reduce using rule 155 (llamaf3 -> llamaf4 .)
    DIMENSION       reduce using rule 155 (llamaf3 -> llamaf4 .)
    RKEY            reduce using rule 155 (llamaf3 -> llamaf4 .)
    MULT            reduce using rule 155 (llamaf3 -> llamaf4 .)
    DIV             reduce using rule 155 (llamaf3 -> llamaf4 .)
    SUMA            reduce using rule 155 (llamaf3 -> llamaf4 .)
    RESTA           reduce using rule 155 (llamaf3 -> llamaf4 .)
    RBRACKET        reduce using rule 155 (llamaf3 -> llamaf4 .)
    COMA            reduce using rule 155 (llamaf3 -> llamaf4 .)
    GT              reduce using rule 155 (llamaf3 -> llamaf4 .)
    LT              reduce using rule 155 (llamaf3 -> llamaf4 .)
    LE              reduce using rule 155 (llamaf3 -> llamaf4 .)
    GE              reduce using rule 155 (llamaf3 -> llamaf4 .)
    DIF             reduce using rule 155 (llamaf3 -> llamaf4 .)
    SAME            reduce using rule 155 (llamaf3 -> llamaf4 .)
    AND             reduce using rule 155 (llamaf3 -> llamaf4 .)
    OR              reduce using rule 155 (llamaf3 -> llamaf4 .)
    RPARENT         reduce using rule 155 (llamaf3 -> llamaf4 .)
    CADENA          reduce using rule 155 (llamaf3 -> llamaf4 .)
    LPARENT         reduce using rule 155 (llamaf3 -> llamaf4 .)
    ENTERO          reduce using rule 155 (llamaf3 -> llamaf4 .)
    FLOTANTE        reduce using rule 155 (llamaf3 -> llamaf4 .)
    CARACTER        reduce using rule 155 (llamaf3 -> llamaf4 .)
    PUNTOCOMA       reduce using rule 155 (llamaf3 -> llamaf4 .)


state 239

    (154) llamaf3 -> COMA . llamaf2
    (153) llamaf2 -> . exp llamaf3
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    llamaf2                        shift and go to state 286
    exp                            shift and go to state 183

state 240

    (121) read -> ID IGUAL READ LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 287


state 241

    (61) asigfinal -> IGUAL expresion PUNTOCOMA .

    LPARENT         reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    ENTERO          reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    FLOTANTE        reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    CADENA          reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    CARACTER        reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    RPARENT         reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    PRINT           reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    WHILE           reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    DO              reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    FOR             reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    COMENTARIO      reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    CUADRADO        reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    TRIANGULO       reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    CASA            reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    RECTANGULO      reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    CUBO            reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    TRAPECIO        reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    ESTRELLA        reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    MUEVE           reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    LEVANTA         reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    APOYA           reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    DIMENSION       reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)
    RKEY            reduce using rule 61 (asigfinal -> IGUAL expresion PUNTOCOMA .)


state 242

    (57) asig2 -> LBRACKET exp asig3 .

    LPARENT         reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    ID              reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    ENTERO          reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    FLOTANTE        reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    CADENA          reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    CARACTER        reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    RPARENT         reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    PRINT           reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    IF              reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    WHILE           reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    DO              reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    FOR             reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    COMENTARIO      reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    CUADRADO        reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    TRIANGULO       reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    CASA            reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    RECTANGULO      reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    CUBO            reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    TRAPECIO        reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    ESTRELLA        reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    MUEVE           reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    LEVANTA         reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    APOYA           reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    DIMENSION       reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)
    RKEY            reduce using rule 57 (asig2 -> LBRACKET exp asig3 .)


state 243

    (59) asig3 -> COMA . exp asig3
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 288

state 244

    (60) asig3 -> RBRACKET . asigfinal
    (61) asigfinal -> . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 236

    asigfinal                      shift and go to state 289

state 245

    (136) dimension -> DIMENSION LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 290


state 246

    (123) if -> IF LPARENT expresion RPARENT . bloque if2
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 291

state 247

    (67) condicion -> IF LKEY expresion RKEY . bloque c2
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 292

state 248

    (130) estrella -> ESTRELLA LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 293


state 249

    (126) cuadrado -> CUADRADO LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 294


state 250

    (133) levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 133 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)


state 251

    (147) function4 -> RPARENT noinitFunc bloque initFunc .

    VOID            reduce using rule 147 (function4 -> RPARENT noinitFunc bloque initFunc .)
    INT             reduce using rule 147 (function4 -> RPARENT noinitFunc bloque initFunc .)
    FLOAT           reduce using rule 147 (function4 -> RPARENT noinitFunc bloque initFunc .)
    CHAR            reduce using rule 147 (function4 -> RPARENT noinitFunc bloque initFunc .)
    STRING          reduce using rule 147 (function4 -> RPARENT noinitFunc bloque initFunc .)
    BOOL            reduce using rule 147 (function4 -> RPARENT noinitFunc bloque initFunc .)
    LKEY            reduce using rule 147 (function4 -> RPARENT noinitFunc bloque initFunc .)


state 252

    (149) initFunc -> empty .

    VOID            reduce using rule 149 (initFunc -> empty .)
    INT             reduce using rule 149 (initFunc -> empty .)
    FLOAT           reduce using rule 149 (initFunc -> empty .)
    CHAR            reduce using rule 149 (initFunc -> empty .)
    STRING          reduce using rule 149 (initFunc -> empty .)
    BOOL            reduce using rule 149 (initFunc -> empty .)
    LKEY            reduce using rule 149 (initFunc -> empty .)


state 253

    (144) initParams -> empty .

    COMA            reduce using rule 144 (initParams -> empty .)
    RPARENT         reduce using rule 144 (initParams -> empty .)


state 254

    (143) funct2 -> tipo ID initParams . funct3
    (145) funct3 -> . COMA funct2
    (146) funct3 -> . function4
    (147) function4 -> . RPARENT noinitFunc bloque initFunc

    COMA            shift and go to state 297
    RPARENT         shift and go to state 97

    function4                      shift and go to state 295
    funct3                         shift and go to state 296

state 255

    (40) exp2 -> RESTA tagop . exp
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 298

state 256

    (42) tagop -> empty .

    LPARENT         reduce using rule 42 (tagop -> empty .)
    ID              reduce using rule 42 (tagop -> empty .)
    ENTERO          reduce using rule 42 (tagop -> empty .)
    FLOTANTE        reduce using rule 42 (tagop -> empty .)
    CADENA          reduce using rule 42 (tagop -> empty .)
    CARACTER        reduce using rule 42 (tagop -> empty .)


state 257

    (39) exp2 -> SUMA tagop . exp
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 299

state 258

    (76) factor -> LPARENT tagfondofalso expresion RPARENT . tagsacafondo
    (84) tagsacafondo -> . empty
    (157) empty -> .

    MULT            reduce using rule 157 (empty -> .)
    DIV             reduce using rule 157 (empty -> .)
    SUMA            reduce using rule 157 (empty -> .)
    RESTA           reduce using rule 157 (empty -> .)
    RBRACKET        reduce using rule 157 (empty -> .)
    COMA            reduce using rule 157 (empty -> .)
    GT              reduce using rule 157 (empty -> .)
    LT              reduce using rule 157 (empty -> .)
    LE              reduce using rule 157 (empty -> .)
    GE              reduce using rule 157 (empty -> .)
    DIF             reduce using rule 157 (empty -> .)
    SAME            reduce using rule 157 (empty -> .)
    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    empty                          shift and go to state 301
    tagsacafondo                   shift and go to state 300

state 259

    (72) te2 -> DIV tagm . termino
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    varcte                         shift and go to state 107
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    llamafuncion                   shift and go to state 108
    termino                        shift and go to state 302
    factor                         shift and go to state 110

state 260

    (74) tagm -> empty .

    LPARENT         reduce using rule 74 (tagm -> empty .)
    ID              reduce using rule 74 (tagm -> empty .)
    ENTERO          reduce using rule 74 (tagm -> empty .)
    FLOTANTE        reduce using rule 74 (tagm -> empty .)
    CADENA          reduce using rule 74 (tagm -> empty .)
    CARACTER        reduce using rule 74 (tagm -> empty .)


state 261

    (71) te2 -> MULT tagm . termino
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    varcte                         shift and go to state 107
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    llamafuncion                   shift and go to state 108
    termino                        shift and go to state 303
    factor                         shift and go to state 110

state 262

    (85) f7 -> ID LBRACKET exp f8 .

    MULT            reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    DIV             reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    SUMA            reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    RESTA           reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    COMA            reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    RBRACKET        reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    GT              reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    LT              reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    LE              reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    GE              reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    DIF             reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    SAME            reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    AND             reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    OR              reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    RPARENT         reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    CADENA          reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    LPARENT         reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    ID              reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    ENTERO          reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    FLOTANTE        reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    CARACTER        reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    PUNTOCOMA       reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)
    RKEY            reduce using rule 85 (f7 -> ID LBRACKET exp f8 .)


state 263

    (86) f8 -> COMA . exp f8
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 304

state 264

    (87) f8 -> RBRACKET .

    MULT            reduce using rule 87 (f8 -> RBRACKET .)
    DIV             reduce using rule 87 (f8 -> RBRACKET .)
    SUMA            reduce using rule 87 (f8 -> RBRACKET .)
    RESTA           reduce using rule 87 (f8 -> RBRACKET .)
    RBRACKET        reduce using rule 87 (f8 -> RBRACKET .)
    COMA            reduce using rule 87 (f8 -> RBRACKET .)
    GT              reduce using rule 87 (f8 -> RBRACKET .)
    LT              reduce using rule 87 (f8 -> RBRACKET .)
    LE              reduce using rule 87 (f8 -> RBRACKET .)
    GE              reduce using rule 87 (f8 -> RBRACKET .)
    DIF             reduce using rule 87 (f8 -> RBRACKET .)
    SAME            reduce using rule 87 (f8 -> RBRACKET .)
    AND             reduce using rule 87 (f8 -> RBRACKET .)
    OR              reduce using rule 87 (f8 -> RBRACKET .)
    RPARENT         reduce using rule 87 (f8 -> RBRACKET .)
    CADENA          reduce using rule 87 (f8 -> RBRACKET .)
    LPARENT         reduce using rule 87 (f8 -> RBRACKET .)
    ID              reduce using rule 87 (f8 -> RBRACKET .)
    ENTERO          reduce using rule 87 (f8 -> RBRACKET .)
    FLOTANTE        reduce using rule 87 (f8 -> RBRACKET .)
    CARACTER        reduce using rule 87 (f8 -> RBRACKET .)
    PUNTOCOMA       reduce using rule 87 (f8 -> RBRACKET .)
    RKEY            reduce using rule 87 (f8 -> RBRACKET .)


state 265

    (49) decla2 -> COMA exp decla2 .

    INT             reduce using rule 49 (decla2 -> COMA exp decla2 .)
    FLOAT           reduce using rule 49 (decla2 -> COMA exp decla2 .)
    CHAR            reduce using rule 49 (decla2 -> COMA exp decla2 .)
    STRING          reduce using rule 49 (decla2 -> COMA exp decla2 .)
    BOOL            reduce using rule 49 (decla2 -> COMA exp decla2 .)
    VOID            reduce using rule 49 (decla2 -> COMA exp decla2 .)
    LKEY            reduce using rule 49 (decla2 -> COMA exp decla2 .)
    ID              reduce using rule 49 (decla2 -> COMA exp decla2 .)
    PRINT           reduce using rule 49 (decla2 -> COMA exp decla2 .)
    IF              reduce using rule 49 (decla2 -> COMA exp decla2 .)
    WHILE           reduce using rule 49 (decla2 -> COMA exp decla2 .)
    DO              reduce using rule 49 (decla2 -> COMA exp decla2 .)
    FOR             reduce using rule 49 (decla2 -> COMA exp decla2 .)
    COMENTARIO      reduce using rule 49 (decla2 -> COMA exp decla2 .)
    CUADRADO        reduce using rule 49 (decla2 -> COMA exp decla2 .)
    TRIANGULO       reduce using rule 49 (decla2 -> COMA exp decla2 .)
    CASA            reduce using rule 49 (decla2 -> COMA exp decla2 .)
    RECTANGULO      reduce using rule 49 (decla2 -> COMA exp decla2 .)
    CUBO            reduce using rule 49 (decla2 -> COMA exp decla2 .)
    TRAPECIO        reduce using rule 49 (decla2 -> COMA exp decla2 .)
    ESTRELLA        reduce using rule 49 (decla2 -> COMA exp decla2 .)
    MUEVE           reduce using rule 49 (decla2 -> COMA exp decla2 .)
    LEVANTA         reduce using rule 49 (decla2 -> COMA exp decla2 .)
    APOYA           reduce using rule 49 (decla2 -> COMA exp decla2 .)
    DIMENSION       reduce using rule 49 (decla2 -> COMA exp decla2 .)
    RKEY            reduce using rule 49 (decla2 -> COMA exp decla2 .)


state 266

    (120) ciclodowhile -> DO bloque WHILE LPARENT expresion . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 305


state 267

    (132) mueve -> MUEVE LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 306


state 268

    (23) expre2 -> AND tagmetelog . expresion tagsacalog
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    expresion2                     shift and go to state 166
    expresion                      shift and go to state 307
    exp                            shift and go to state 168

state 269

    (25) tagmetelog -> empty .

    LPARENT         reduce using rule 25 (tagmetelog -> empty .)
    ID              reduce using rule 25 (tagmetelog -> empty .)
    ENTERO          reduce using rule 25 (tagmetelog -> empty .)
    FLOTANTE        reduce using rule 25 (tagmetelog -> empty .)
    CADENA          reduce using rule 25 (tagmetelog -> empty .)
    CARACTER        reduce using rule 25 (tagmetelog -> empty .)


state 270

    (24) expre2 -> OR tagmetelog . expresion tagsacalog
    (20) expresion -> . expresion2 expre
    (27) expresion2 -> . exp e2
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    expresion2                     shift and go to state 166
    expresion                      shift and go to state 308
    exp                            shift and go to state 168

state 271

    (119) ciclowhile -> WHILE LPARENT expresion RPARENT bloque .

    ID              reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    PRINT           reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    IF              reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    WHILE           reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    DO              reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    FOR             reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    COMENTARIO      reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    CUADRADO        reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    TRIANGULO       reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    CASA            reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    RECTANGULO      reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    CUBO            reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    TRAPECIO        reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    ESTRELLA        reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    MUEVE           reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    LEVANTA         reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    APOYA           reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    DIMENSION       reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    RKEY            reduce using rule 119 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)


state 272

    (33) e3 -> GE tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 309

state 273

    (36) tagrel -> empty .

    LPARENT         reduce using rule 36 (tagrel -> empty .)
    ID              reduce using rule 36 (tagrel -> empty .)
    ENTERO          reduce using rule 36 (tagrel -> empty .)
    FLOTANTE        reduce using rule 36 (tagrel -> empty .)
    CADENA          reduce using rule 36 (tagrel -> empty .)
    CARACTER        reduce using rule 36 (tagrel -> empty .)


state 274

    (34) e3 -> DIF tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 310

state 275

    (32) e3 -> LE tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 311

state 276

    (35) e3 -> SAME tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 312

state 277

    (31) e3 -> LT tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 313

state 278

    (30) e3 -> GT tagrel . exp tagsacrel
    (38) exp -> . termino tagsacops exp2
    (70) termino -> . factor tagsacopm te2
    (76) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (77) factor -> . f2
    (78) factor -> . f3
    (79) factor -> . f6
    (80) factor -> . f7
    (81) f2 -> . varcte
    (82) f3 -> . ID
    (88) f6 -> . llamafuncion
    (85) f7 -> . ID LBRACKET exp f8
    (111) varcte -> . ENTERO tagint
    (112) varcte -> . FLOTANTE tagfloat
    (113) varcte -> . CADENA tagcad
    (114) varcte -> . CARACTER tagcar
    (150) llamafuncion -> . ID LPARENT llamaf11

    LPARENT         shift and go to state 106
    ID              shift and go to state 113
    ENTERO          shift and go to state 111
    FLOTANTE        shift and go to state 115
    CADENA          shift and go to state 109
    CARACTER        shift and go to state 112

    f2                             shift and go to state 101
    f3                             shift and go to state 102
    f6                             shift and go to state 103
    f7                             shift and go to state 104
    termino                        shift and go to state 105
    varcte                         shift and go to state 107
    llamafuncion                   shift and go to state 108
    factor                         shift and go to state 110
    exp                            shift and go to state 314

state 279

    (135) trapecio -> TRAPECIO LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 315


state 280

    (66) pr3 -> RPARENT PUNTOCOMA .

    ID              reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    IF              reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    DO              reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    FOR             reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    CASA            reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 66 (pr3 -> RPARENT PUNTOCOMA .)


state 281

    (129) casa -> CASA LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 316


state 282

    (128) rectangulo -> RECTANGULO LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 317


state 283

    (131) cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 131 (cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA .)


state 284

    (127) triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 127 (triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA .)


state 285

    (122) ciclofor -> FOR LPARENT asignacion expresion asignacion . RPARENT bloque

    RPARENT         shift and go to state 318


state 286

    (154) llamaf3 -> COMA llamaf2 .

    ID              reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    PRINT           reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    IF              reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    WHILE           reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    DO              reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    FOR             reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    COMENTARIO      reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    CUADRADO        reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    TRIANGULO       reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    CASA            reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    RECTANGULO      reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    CUBO            reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    TRAPECIO        reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    ESTRELLA        reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    MUEVE           reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    LEVANTA         reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    APOYA           reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    DIMENSION       reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    RKEY            reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    MULT            reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    DIV             reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    SUMA            reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    RESTA           reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    RBRACKET        reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    COMA            reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    GT              reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    LT              reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    LE              reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    GE              reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    DIF             reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    SAME            reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    AND             reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    OR              reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    RPARENT         reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    CADENA          reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    LPARENT         reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    ENTERO          reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    FLOTANTE        reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    CARACTER        reduce using rule 154 (llamaf3 -> COMA llamaf2 .)
    PUNTOCOMA       reduce using rule 154 (llamaf3 -> COMA llamaf2 .)


state 287

    (121) read -> ID IGUAL READ LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 319


state 288

    (59) asig3 -> COMA exp . asig3
    (59) asig3 -> . COMA exp asig3
    (60) asig3 -> . RBRACKET asigfinal

    COMA            shift and go to state 243
    RBRACKET        shift and go to state 244

    asig3                          shift and go to state 320

state 289

    (60) asig3 -> RBRACKET asigfinal .

    ID              reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    PRINT           reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    IF              reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    WHILE           reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    DO              reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    FOR             reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    COMENTARIO      reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    CUADRADO        reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    TRIANGULO       reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    CASA            reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    RECTANGULO      reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    CUBO            reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    TRAPECIO        reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    ESTRELLA        reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    MUEVE           reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    LEVANTA         reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    APOYA           reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    DIMENSION       reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    RKEY            reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    LPARENT         reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    ENTERO          reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    FLOTANTE        reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    CADENA          reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    CARACTER        reduce using rule 60 (asig3 -> RBRACKET asigfinal .)
    RPARENT         reduce using rule 60 (asig3 -> RBRACKET asigfinal .)


state 290

    (136) dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 136 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)


state 291

    (123) if -> IF LPARENT expresion RPARENT bloque . if2
    (124) if2 -> . empty
    (125) if2 -> . ELSE bloque
    (157) empty -> .

    ELSE            shift and go to state 322
    ID              reduce using rule 157 (empty -> .)
    PRINT           reduce using rule 157 (empty -> .)
    IF              reduce using rule 157 (empty -> .)
    WHILE           reduce using rule 157 (empty -> .)
    DO              reduce using rule 157 (empty -> .)
    FOR             reduce using rule 157 (empty -> .)
    COMENTARIO      reduce using rule 157 (empty -> .)
    CUADRADO        reduce using rule 157 (empty -> .)
    TRIANGULO       reduce using rule 157 (empty -> .)
    CASA            reduce using rule 157 (empty -> .)
    RECTANGULO      reduce using rule 157 (empty -> .)
    CUBO            reduce using rule 157 (empty -> .)
    TRAPECIO        reduce using rule 157 (empty -> .)
    ESTRELLA        reduce using rule 157 (empty -> .)
    MUEVE           reduce using rule 157 (empty -> .)
    LEVANTA         reduce using rule 157 (empty -> .)
    APOYA           reduce using rule 157 (empty -> .)
    DIMENSION       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    empty                          shift and go to state 323
    if2                            shift and go to state 321

state 292

    (67) condicion -> IF LKEY expresion RKEY bloque . c2
    (68) c2 -> . ELSE bloque PUNTOCOMA
    (69) c2 -> . PUNTOCOMA

    ELSE            shift and go to state 325
    PUNTOCOMA       shift and go to state 324

    c2                             shift and go to state 326

state 293

    (130) estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 130 (estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA .)


state 294

    (126) cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 126 (cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA .)


state 295

    (146) funct3 -> function4 .

    VOID            reduce using rule 146 (funct3 -> function4 .)
    INT             reduce using rule 146 (funct3 -> function4 .)
    FLOAT           reduce using rule 146 (funct3 -> function4 .)
    CHAR            reduce using rule 146 (funct3 -> function4 .)
    STRING          reduce using rule 146 (funct3 -> function4 .)
    BOOL            reduce using rule 146 (funct3 -> function4 .)
    LKEY            reduce using rule 146 (funct3 -> function4 .)


state 296

    (143) funct2 -> tipo ID initParams funct3 .

    VOID            reduce using rule 143 (funct2 -> tipo ID initParams funct3 .)
    INT             reduce using rule 143 (funct2 -> tipo ID initParams funct3 .)
    FLOAT           reduce using rule 143 (funct2 -> tipo ID initParams funct3 .)
    CHAR            reduce using rule 143 (funct2 -> tipo ID initParams funct3 .)
    STRING          reduce using rule 143 (funct2 -> tipo ID initParams funct3 .)
    BOOL            reduce using rule 143 (funct2 -> tipo ID initParams funct3 .)
    LKEY            reduce using rule 143 (funct2 -> tipo ID initParams funct3 .)


state 297

    (145) funct3 -> COMA . funct2
    (143) funct2 -> . tipo ID initParams funct3
    (51) tipo -> . INT
    (52) tipo -> . FLOAT
    (53) tipo -> . CHAR
    (54) tipo -> . STRING
    (55) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 17
    STRING          shift and go to state 14
    BOOL            shift and go to state 22

    funct2                         shift and go to state 327
    tipo                           shift and go to state 144

state 298

    (40) exp2 -> RESTA tagop exp .

    RBRACKET        reduce using rule 40 (exp2 -> RESTA tagop exp .)
    COMA            reduce using rule 40 (exp2 -> RESTA tagop exp .)
    GT              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    LT              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    LE              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    GE              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    DIF             reduce using rule 40 (exp2 -> RESTA tagop exp .)
    SAME            reduce using rule 40 (exp2 -> RESTA tagop exp .)
    AND             reduce using rule 40 (exp2 -> RESTA tagop exp .)
    OR              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    RPARENT         reduce using rule 40 (exp2 -> RESTA tagop exp .)
    CADENA          reduce using rule 40 (exp2 -> RESTA tagop exp .)
    LPARENT         reduce using rule 40 (exp2 -> RESTA tagop exp .)
    ID              reduce using rule 40 (exp2 -> RESTA tagop exp .)
    ENTERO          reduce using rule 40 (exp2 -> RESTA tagop exp .)
    FLOTANTE        reduce using rule 40 (exp2 -> RESTA tagop exp .)
    CARACTER        reduce using rule 40 (exp2 -> RESTA tagop exp .)
    PUNTOCOMA       reduce using rule 40 (exp2 -> RESTA tagop exp .)
    RKEY            reduce using rule 40 (exp2 -> RESTA tagop exp .)


state 299

    (39) exp2 -> SUMA tagop exp .

    RBRACKET        reduce using rule 39 (exp2 -> SUMA tagop exp .)
    COMA            reduce using rule 39 (exp2 -> SUMA tagop exp .)
    GT              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    LT              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    LE              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    GE              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    DIF             reduce using rule 39 (exp2 -> SUMA tagop exp .)
    SAME            reduce using rule 39 (exp2 -> SUMA tagop exp .)
    AND             reduce using rule 39 (exp2 -> SUMA tagop exp .)
    OR              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    RPARENT         reduce using rule 39 (exp2 -> SUMA tagop exp .)
    CADENA          reduce using rule 39 (exp2 -> SUMA tagop exp .)
    LPARENT         reduce using rule 39 (exp2 -> SUMA tagop exp .)
    ID              reduce using rule 39 (exp2 -> SUMA tagop exp .)
    ENTERO          reduce using rule 39 (exp2 -> SUMA tagop exp .)
    FLOTANTE        reduce using rule 39 (exp2 -> SUMA tagop exp .)
    CARACTER        reduce using rule 39 (exp2 -> SUMA tagop exp .)
    PUNTOCOMA       reduce using rule 39 (exp2 -> SUMA tagop exp .)
    RKEY            reduce using rule 39 (exp2 -> SUMA tagop exp .)


state 300

    (76) factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .

    MULT            reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    DIV             reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    SUMA            reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RESTA           reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    COMA            reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RPARENT         reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    AND             reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    OR              reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    CADENA          reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    LPARENT         reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    ID              reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    ENTERO          reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    FLOTANTE        reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    CARACTER        reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    PUNTOCOMA       reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RKEY            reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RBRACKET        reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    GT              reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    LT              reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    LE              reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    GE              reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    DIF             reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    SAME            reduce using rule 76 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)


state 301

    (84) tagsacafondo -> empty .

    MULT            reduce using rule 84 (tagsacafondo -> empty .)
    DIV             reduce using rule 84 (tagsacafondo -> empty .)
    SUMA            reduce using rule 84 (tagsacafondo -> empty .)
    RESTA           reduce using rule 84 (tagsacafondo -> empty .)
    RBRACKET        reduce using rule 84 (tagsacafondo -> empty .)
    COMA            reduce using rule 84 (tagsacafondo -> empty .)
    GT              reduce using rule 84 (tagsacafondo -> empty .)
    LT              reduce using rule 84 (tagsacafondo -> empty .)
    LE              reduce using rule 84 (tagsacafondo -> empty .)
    GE              reduce using rule 84 (tagsacafondo -> empty .)
    DIF             reduce using rule 84 (tagsacafondo -> empty .)
    SAME            reduce using rule 84 (tagsacafondo -> empty .)
    AND             reduce using rule 84 (tagsacafondo -> empty .)
    OR              reduce using rule 84 (tagsacafondo -> empty .)
    RPARENT         reduce using rule 84 (tagsacafondo -> empty .)
    CADENA          reduce using rule 84 (tagsacafondo -> empty .)
    LPARENT         reduce using rule 84 (tagsacafondo -> empty .)
    ID              reduce using rule 84 (tagsacafondo -> empty .)
    ENTERO          reduce using rule 84 (tagsacafondo -> empty .)
    FLOTANTE        reduce using rule 84 (tagsacafondo -> empty .)
    CARACTER        reduce using rule 84 (tagsacafondo -> empty .)
    PUNTOCOMA       reduce using rule 84 (tagsacafondo -> empty .)
    RKEY            reduce using rule 84 (tagsacafondo -> empty .)


state 302

    (72) te2 -> DIV tagm termino .

    SUMA            reduce using rule 72 (te2 -> DIV tagm termino .)
    RESTA           reduce using rule 72 (te2 -> DIV tagm termino .)
    RBRACKET        reduce using rule 72 (te2 -> DIV tagm termino .)
    COMA            reduce using rule 72 (te2 -> DIV tagm termino .)
    GT              reduce using rule 72 (te2 -> DIV tagm termino .)
    LT              reduce using rule 72 (te2 -> DIV tagm termino .)
    LE              reduce using rule 72 (te2 -> DIV tagm termino .)
    GE              reduce using rule 72 (te2 -> DIV tagm termino .)
    DIF             reduce using rule 72 (te2 -> DIV tagm termino .)
    SAME            reduce using rule 72 (te2 -> DIV tagm termino .)
    AND             reduce using rule 72 (te2 -> DIV tagm termino .)
    OR              reduce using rule 72 (te2 -> DIV tagm termino .)
    RPARENT         reduce using rule 72 (te2 -> DIV tagm termino .)
    CADENA          reduce using rule 72 (te2 -> DIV tagm termino .)
    LPARENT         reduce using rule 72 (te2 -> DIV tagm termino .)
    ID              reduce using rule 72 (te2 -> DIV tagm termino .)
    ENTERO          reduce using rule 72 (te2 -> DIV tagm termino .)
    FLOTANTE        reduce using rule 72 (te2 -> DIV tagm termino .)
    CARACTER        reduce using rule 72 (te2 -> DIV tagm termino .)
    PUNTOCOMA       reduce using rule 72 (te2 -> DIV tagm termino .)
    RKEY            reduce using rule 72 (te2 -> DIV tagm termino .)


state 303

    (71) te2 -> MULT tagm termino .

    SUMA            reduce using rule 71 (te2 -> MULT tagm termino .)
    RESTA           reduce using rule 71 (te2 -> MULT tagm termino .)
    RBRACKET        reduce using rule 71 (te2 -> MULT tagm termino .)
    COMA            reduce using rule 71 (te2 -> MULT tagm termino .)
    GT              reduce using rule 71 (te2 -> MULT tagm termino .)
    LT              reduce using rule 71 (te2 -> MULT tagm termino .)
    LE              reduce using rule 71 (te2 -> MULT tagm termino .)
    GE              reduce using rule 71 (te2 -> MULT tagm termino .)
    DIF             reduce using rule 71 (te2 -> MULT tagm termino .)
    SAME            reduce using rule 71 (te2 -> MULT tagm termino .)
    AND             reduce using rule 71 (te2 -> MULT tagm termino .)
    OR              reduce using rule 71 (te2 -> MULT tagm termino .)
    RPARENT         reduce using rule 71 (te2 -> MULT tagm termino .)
    CADENA          reduce using rule 71 (te2 -> MULT tagm termino .)
    LPARENT         reduce using rule 71 (te2 -> MULT tagm termino .)
    ID              reduce using rule 71 (te2 -> MULT tagm termino .)
    ENTERO          reduce using rule 71 (te2 -> MULT tagm termino .)
    FLOTANTE        reduce using rule 71 (te2 -> MULT tagm termino .)
    CARACTER        reduce using rule 71 (te2 -> MULT tagm termino .)
    PUNTOCOMA       reduce using rule 71 (te2 -> MULT tagm termino .)
    RKEY            reduce using rule 71 (te2 -> MULT tagm termino .)


state 304

    (86) f8 -> COMA exp . f8
    (86) f8 -> . COMA exp f8
    (87) f8 -> . RBRACKET

    COMA            shift and go to state 263
    RBRACKET        shift and go to state 264

    f8                             shift and go to state 328

state 305

    (120) ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 329


state 306

    (132) mueve -> MUEVE LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 330


state 307

    (23) expre2 -> AND tagmetelog expresion . tagsacalog
    (26) tagsacalog -> . empty
    (157) empty -> .

    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagsacalog                     shift and go to state 331
    empty                          shift and go to state 332

state 308

    (24) expre2 -> OR tagmetelog expresion . tagsacalog
    (26) tagsacalog -> . empty
    (157) empty -> .

    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagsacalog                     shift and go to state 333
    empty                          shift and go to state 332

state 309

    (33) e3 -> GE tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (157) empty -> .

    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagsacrel                      shift and go to state 334
    empty                          shift and go to state 335

state 310

    (34) e3 -> DIF tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (157) empty -> .

    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagsacrel                      shift and go to state 336
    empty                          shift and go to state 335

state 311

    (32) e3 -> LE tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (157) empty -> .

    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagsacrel                      shift and go to state 337
    empty                          shift and go to state 335

state 312

    (35) e3 -> SAME tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (157) empty -> .

    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagsacrel                      shift and go to state 338
    empty                          shift and go to state 335

state 313

    (31) e3 -> LT tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (157) empty -> .

    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagsacrel                      shift and go to state 339
    empty                          shift and go to state 335

state 314

    (30) e3 -> GT tagrel exp . tagsacrel
    (37) tagsacrel -> . empty
    (157) empty -> .

    AND             reduce using rule 157 (empty -> .)
    OR              reduce using rule 157 (empty -> .)
    RPARENT         reduce using rule 157 (empty -> .)
    CADENA          reduce using rule 157 (empty -> .)
    LPARENT         reduce using rule 157 (empty -> .)
    ID              reduce using rule 157 (empty -> .)
    ENTERO          reduce using rule 157 (empty -> .)
    FLOTANTE        reduce using rule 157 (empty -> .)
    CARACTER        reduce using rule 157 (empty -> .)
    PUNTOCOMA       reduce using rule 157 (empty -> .)
    RKEY            reduce using rule 157 (empty -> .)

    tagsacrel                      shift and go to state 340
    empty                          shift and go to state 335

state 315

    (135) trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 341


state 316

    (129) casa -> CASA LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 342


state 317

    (128) rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 343


state 318

    (122) ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT . bloque
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 344

state 319

    (121) read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 121 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)


state 320

    (59) asig3 -> COMA exp asig3 .

    ID              reduce using rule 59 (asig3 -> COMA exp asig3 .)
    PRINT           reduce using rule 59 (asig3 -> COMA exp asig3 .)
    IF              reduce using rule 59 (asig3 -> COMA exp asig3 .)
    WHILE           reduce using rule 59 (asig3 -> COMA exp asig3 .)
    DO              reduce using rule 59 (asig3 -> COMA exp asig3 .)
    FOR             reduce using rule 59 (asig3 -> COMA exp asig3 .)
    COMENTARIO      reduce using rule 59 (asig3 -> COMA exp asig3 .)
    CUADRADO        reduce using rule 59 (asig3 -> COMA exp asig3 .)
    TRIANGULO       reduce using rule 59 (asig3 -> COMA exp asig3 .)
    CASA            reduce using rule 59 (asig3 -> COMA exp asig3 .)
    RECTANGULO      reduce using rule 59 (asig3 -> COMA exp asig3 .)
    CUBO            reduce using rule 59 (asig3 -> COMA exp asig3 .)
    TRAPECIO        reduce using rule 59 (asig3 -> COMA exp asig3 .)
    ESTRELLA        reduce using rule 59 (asig3 -> COMA exp asig3 .)
    MUEVE           reduce using rule 59 (asig3 -> COMA exp asig3 .)
    LEVANTA         reduce using rule 59 (asig3 -> COMA exp asig3 .)
    APOYA           reduce using rule 59 (asig3 -> COMA exp asig3 .)
    DIMENSION       reduce using rule 59 (asig3 -> COMA exp asig3 .)
    RKEY            reduce using rule 59 (asig3 -> COMA exp asig3 .)
    LPARENT         reduce using rule 59 (asig3 -> COMA exp asig3 .)
    ENTERO          reduce using rule 59 (asig3 -> COMA exp asig3 .)
    FLOTANTE        reduce using rule 59 (asig3 -> COMA exp asig3 .)
    CADENA          reduce using rule 59 (asig3 -> COMA exp asig3 .)
    CARACTER        reduce using rule 59 (asig3 -> COMA exp asig3 .)
    RPARENT         reduce using rule 59 (asig3 -> COMA exp asig3 .)


state 321

    (123) if -> IF LPARENT expresion RPARENT bloque if2 .

    ID              reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    PRINT           reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    IF              reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    WHILE           reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    DO              reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    FOR             reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    COMENTARIO      reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    CUADRADO        reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    TRIANGULO       reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    CASA            reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    RECTANGULO      reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    CUBO            reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    TRAPECIO        reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    ESTRELLA        reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    MUEVE           reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    LEVANTA         reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    APOYA           reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    DIMENSION       reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)
    RKEY            reduce using rule 123 (if -> IF LPARENT expresion RPARENT bloque if2 .)


state 322

    (125) if2 -> ELSE . bloque
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 345

state 323

    (124) if2 -> empty .

    ID              reduce using rule 124 (if2 -> empty .)
    PRINT           reduce using rule 124 (if2 -> empty .)
    IF              reduce using rule 124 (if2 -> empty .)
    WHILE           reduce using rule 124 (if2 -> empty .)
    DO              reduce using rule 124 (if2 -> empty .)
    FOR             reduce using rule 124 (if2 -> empty .)
    COMENTARIO      reduce using rule 124 (if2 -> empty .)
    CUADRADO        reduce using rule 124 (if2 -> empty .)
    TRIANGULO       reduce using rule 124 (if2 -> empty .)
    CASA            reduce using rule 124 (if2 -> empty .)
    RECTANGULO      reduce using rule 124 (if2 -> empty .)
    CUBO            reduce using rule 124 (if2 -> empty .)
    TRAPECIO        reduce using rule 124 (if2 -> empty .)
    ESTRELLA        reduce using rule 124 (if2 -> empty .)
    MUEVE           reduce using rule 124 (if2 -> empty .)
    LEVANTA         reduce using rule 124 (if2 -> empty .)
    APOYA           reduce using rule 124 (if2 -> empty .)
    DIMENSION       reduce using rule 124 (if2 -> empty .)
    RKEY            reduce using rule 124 (if2 -> empty .)


state 324

    (69) c2 -> PUNTOCOMA .

    ID              reduce using rule 69 (c2 -> PUNTOCOMA .)
    PRINT           reduce using rule 69 (c2 -> PUNTOCOMA .)
    IF              reduce using rule 69 (c2 -> PUNTOCOMA .)
    WHILE           reduce using rule 69 (c2 -> PUNTOCOMA .)
    DO              reduce using rule 69 (c2 -> PUNTOCOMA .)
    FOR             reduce using rule 69 (c2 -> PUNTOCOMA .)
    COMENTARIO      reduce using rule 69 (c2 -> PUNTOCOMA .)
    CUADRADO        reduce using rule 69 (c2 -> PUNTOCOMA .)
    TRIANGULO       reduce using rule 69 (c2 -> PUNTOCOMA .)
    CASA            reduce using rule 69 (c2 -> PUNTOCOMA .)
    RECTANGULO      reduce using rule 69 (c2 -> PUNTOCOMA .)
    CUBO            reduce using rule 69 (c2 -> PUNTOCOMA .)
    TRAPECIO        reduce using rule 69 (c2 -> PUNTOCOMA .)
    ESTRELLA        reduce using rule 69 (c2 -> PUNTOCOMA .)
    MUEVE           reduce using rule 69 (c2 -> PUNTOCOMA .)
    LEVANTA         reduce using rule 69 (c2 -> PUNTOCOMA .)
    APOYA           reduce using rule 69 (c2 -> PUNTOCOMA .)
    DIMENSION       reduce using rule 69 (c2 -> PUNTOCOMA .)
    RKEY            reduce using rule 69 (c2 -> PUNTOCOMA .)


state 325

    (68) c2 -> ELSE . bloque PUNTOCOMA
    (13) bloque -> . LKEY iniEnv b3 b4 b5

    LKEY            shift and go to state 24

    bloque                         shift and go to state 346

state 326

    (67) condicion -> IF LKEY expresion RKEY bloque c2 .

    ID              reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    PRINT           reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    IF              reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    WHILE           reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    DO              reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    FOR             reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    COMENTARIO      reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    CUADRADO        reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    TRIANGULO       reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    CASA            reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    RECTANGULO      reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    CUBO            reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    TRAPECIO        reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    ESTRELLA        reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    MUEVE           reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    LEVANTA         reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    APOYA           reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    DIMENSION       reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    RKEY            reduce using rule 67 (condicion -> IF LKEY expresion RKEY bloque c2 .)


state 327

    (145) funct3 -> COMA funct2 .

    VOID            reduce using rule 145 (funct3 -> COMA funct2 .)
    INT             reduce using rule 145 (funct3 -> COMA funct2 .)
    FLOAT           reduce using rule 145 (funct3 -> COMA funct2 .)
    CHAR            reduce using rule 145 (funct3 -> COMA funct2 .)
    STRING          reduce using rule 145 (funct3 -> COMA funct2 .)
    BOOL            reduce using rule 145 (funct3 -> COMA funct2 .)
    LKEY            reduce using rule 145 (funct3 -> COMA funct2 .)


state 328

    (86) f8 -> COMA exp f8 .

    MULT            reduce using rule 86 (f8 -> COMA exp f8 .)
    DIV             reduce using rule 86 (f8 -> COMA exp f8 .)
    SUMA            reduce using rule 86 (f8 -> COMA exp f8 .)
    RESTA           reduce using rule 86 (f8 -> COMA exp f8 .)
    RBRACKET        reduce using rule 86 (f8 -> COMA exp f8 .)
    COMA            reduce using rule 86 (f8 -> COMA exp f8 .)
    GT              reduce using rule 86 (f8 -> COMA exp f8 .)
    LT              reduce using rule 86 (f8 -> COMA exp f8 .)
    LE              reduce using rule 86 (f8 -> COMA exp f8 .)
    GE              reduce using rule 86 (f8 -> COMA exp f8 .)
    DIF             reduce using rule 86 (f8 -> COMA exp f8 .)
    SAME            reduce using rule 86 (f8 -> COMA exp f8 .)
    AND             reduce using rule 86 (f8 -> COMA exp f8 .)
    OR              reduce using rule 86 (f8 -> COMA exp f8 .)
    RPARENT         reduce using rule 86 (f8 -> COMA exp f8 .)
    CADENA          reduce using rule 86 (f8 -> COMA exp f8 .)
    LPARENT         reduce using rule 86 (f8 -> COMA exp f8 .)
    ID              reduce using rule 86 (f8 -> COMA exp f8 .)
    ENTERO          reduce using rule 86 (f8 -> COMA exp f8 .)
    FLOTANTE        reduce using rule 86 (f8 -> COMA exp f8 .)
    CARACTER        reduce using rule 86 (f8 -> COMA exp f8 .)
    PUNTOCOMA       reduce using rule 86 (f8 -> COMA exp f8 .)
    RKEY            reduce using rule 86 (f8 -> COMA exp f8 .)


state 329

    (120) ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .

    ID              reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    IF              reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    DO              reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    FOR             reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    CASA            reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 120 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)


state 330

    (132) mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 132 (mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 331

    (23) expre2 -> AND tagmetelog expresion tagsacalog .

    RPARENT         reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    CADENA          reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    LPARENT         reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    ID              reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    ENTERO          reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    FLOTANTE        reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    CARACTER        reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    PUNTOCOMA       reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)
    RKEY            reduce using rule 23 (expre2 -> AND tagmetelog expresion tagsacalog .)


state 332

    (26) tagsacalog -> empty .

    RPARENT         reduce using rule 26 (tagsacalog -> empty .)
    CADENA          reduce using rule 26 (tagsacalog -> empty .)
    LPARENT         reduce using rule 26 (tagsacalog -> empty .)
    ID              reduce using rule 26 (tagsacalog -> empty .)
    ENTERO          reduce using rule 26 (tagsacalog -> empty .)
    FLOTANTE        reduce using rule 26 (tagsacalog -> empty .)
    CARACTER        reduce using rule 26 (tagsacalog -> empty .)
    PUNTOCOMA       reduce using rule 26 (tagsacalog -> empty .)
    RKEY            reduce using rule 26 (tagsacalog -> empty .)


state 333

    (24) expre2 -> OR tagmetelog expresion tagsacalog .

    RPARENT         reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    CADENA          reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    LPARENT         reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    ID              reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    ENTERO          reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    FLOTANTE        reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    CARACTER        reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    PUNTOCOMA       reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)
    RKEY            reduce using rule 24 (expre2 -> OR tagmetelog expresion tagsacalog .)


state 334

    (33) e3 -> GE tagrel exp tagsacrel .

    AND             reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    OR              reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    RPARENT         reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    CADENA          reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    LPARENT         reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    ID              reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    ENTERO          reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    CARACTER        reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)
    RKEY            reduce using rule 33 (e3 -> GE tagrel exp tagsacrel .)


state 335

    (37) tagsacrel -> empty .

    AND             reduce using rule 37 (tagsacrel -> empty .)
    OR              reduce using rule 37 (tagsacrel -> empty .)
    RPARENT         reduce using rule 37 (tagsacrel -> empty .)
    CADENA          reduce using rule 37 (tagsacrel -> empty .)
    LPARENT         reduce using rule 37 (tagsacrel -> empty .)
    ID              reduce using rule 37 (tagsacrel -> empty .)
    ENTERO          reduce using rule 37 (tagsacrel -> empty .)
    FLOTANTE        reduce using rule 37 (tagsacrel -> empty .)
    CARACTER        reduce using rule 37 (tagsacrel -> empty .)
    PUNTOCOMA       reduce using rule 37 (tagsacrel -> empty .)
    RKEY            reduce using rule 37 (tagsacrel -> empty .)


state 336

    (34) e3 -> DIF tagrel exp tagsacrel .

    AND             reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    OR              reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    RPARENT         reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    CADENA          reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    LPARENT         reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    ID              reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    ENTERO          reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    CARACTER        reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)
    RKEY            reduce using rule 34 (e3 -> DIF tagrel exp tagsacrel .)


state 337

    (32) e3 -> LE tagrel exp tagsacrel .

    AND             reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    OR              reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    RPARENT         reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    CADENA          reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    LPARENT         reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    ID              reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    ENTERO          reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    CARACTER        reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)
    RKEY            reduce using rule 32 (e3 -> LE tagrel exp tagsacrel .)


state 338

    (35) e3 -> SAME tagrel exp tagsacrel .

    AND             reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    OR              reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    RPARENT         reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    CADENA          reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    LPARENT         reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    ID              reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    ENTERO          reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    CARACTER        reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)
    RKEY            reduce using rule 35 (e3 -> SAME tagrel exp tagsacrel .)


state 339

    (31) e3 -> LT tagrel exp tagsacrel .

    AND             reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    OR              reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    RPARENT         reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    CADENA          reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    LPARENT         reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    ID              reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    ENTERO          reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    CARACTER        reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)
    RKEY            reduce using rule 31 (e3 -> LT tagrel exp tagsacrel .)


state 340

    (30) e3 -> GT tagrel exp tagsacrel .

    AND             reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    OR              reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    RPARENT         reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    CADENA          reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    LPARENT         reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    ID              reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    ENTERO          reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    FLOTANTE        reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    CARACTER        reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)
    RKEY            reduce using rule 30 (e3 -> GT tagrel exp tagsacrel .)


state 341

    (135) trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 135 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 342

    (129) casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 129 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 343

    (128) rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 128 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 344

    (122) ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .

    ID              reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    PRINT           reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    IF              reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    WHILE           reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    DO              reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    FOR             reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    COMENTARIO      reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    CUADRADO        reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    TRIANGULO       reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    CASA            reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    RECTANGULO      reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    CUBO            reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    TRAPECIO        reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    ESTRELLA        reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    MUEVE           reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    LEVANTA         reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    APOYA           reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    DIMENSION       reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    RKEY            reduce using rule 122 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)


state 345

    (125) if2 -> ELSE bloque .

    ID              reduce using rule 125 (if2 -> ELSE bloque .)
    PRINT           reduce using rule 125 (if2 -> ELSE bloque .)
    IF              reduce using rule 125 (if2 -> ELSE bloque .)
    WHILE           reduce using rule 125 (if2 -> ELSE bloque .)
    DO              reduce using rule 125 (if2 -> ELSE bloque .)
    FOR             reduce using rule 125 (if2 -> ELSE bloque .)
    COMENTARIO      reduce using rule 125 (if2 -> ELSE bloque .)
    CUADRADO        reduce using rule 125 (if2 -> ELSE bloque .)
    TRIANGULO       reduce using rule 125 (if2 -> ELSE bloque .)
    CASA            reduce using rule 125 (if2 -> ELSE bloque .)
    RECTANGULO      reduce using rule 125 (if2 -> ELSE bloque .)
    CUBO            reduce using rule 125 (if2 -> ELSE bloque .)
    TRAPECIO        reduce using rule 125 (if2 -> ELSE bloque .)
    ESTRELLA        reduce using rule 125 (if2 -> ELSE bloque .)
    MUEVE           reduce using rule 125 (if2 -> ELSE bloque .)
    LEVANTA         reduce using rule 125 (if2 -> ELSE bloque .)
    APOYA           reduce using rule 125 (if2 -> ELSE bloque .)
    DIMENSION       reduce using rule 125 (if2 -> ELSE bloque .)
    RKEY            reduce using rule 125 (if2 -> ELSE bloque .)


state 346

    (68) c2 -> ELSE bloque . PUNTOCOMA

    PUNTOCOMA       shift and go to state 347


state 347

    (68) c2 -> ELSE bloque PUNTOCOMA .

    ID              reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    PRINT           reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    IF              reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    WHILE           reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    DO              reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    FOR             reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    COMENTARIO      reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    CUADRADO        reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    TRIANGULO       reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    CASA            reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    RECTANGULO      reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    CUBO            reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    TRAPECIO        reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    ESTRELLA        reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    MUEVE           reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    LEVANTA         reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    APOYA           reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    DIMENSION       reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)
    RKEY            reduce using rule 68 (c2 -> ELSE bloque PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LPARENT in state 113 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 170 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 170 resolved as shift
WARNING: shift/reduce conflict for LPARENT in state 170 resolved as shift
WARNING: shift/reduce conflict for ID in state 170 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 170 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 170 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 170 resolved as shift
WARNING: reduce/reduce conflict in state 18 resolved using rule (p2 -> p4)
WARNING: rejected rule (p3 -> p4) in state 18
WARNING: reduce/reduce conflict in state 19 resolved using rule (p2 -> p5)
WARNING: rejected rule (p4 -> p5) in state 19
