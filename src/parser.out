Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    NOESNADA
    PUNTO
    BEGIN
    POW
    BOLEANO
    END
    VAR
    COMSIMPLE
    RAIZ
    SQRT
    POTENCIA
    COMDOBLE
    CIRCULO

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2
Rule 2     initTop -> empty
Rule 3     p2 -> p3
Rule 4     p2 -> initFunctions p4
Rule 5     p2 -> p5
Rule 6     p3 -> declaracion p3
Rule 7     p3 -> initFunctions p4
Rule 8     initFunctions -> empty
Rule 9     p4 -> function p4
Rule 10    p4 -> p5
Rule 11    p5 -> cuadrupro2 bloque delMem
Rule 12    cuadrupro -> empty
Rule 13    cuadrupro2 -> empty
Rule 14    delMem -> empty
Rule 15    bloque -> iniEnv LKEY b3 b4 b5
Rule 16    iniEnv -> empty
Rule 17    b3 -> declaracion b3
Rule 18    b3 -> empty
Rule 19    b4 -> estatuto b4
Rule 20    b4 -> empty
Rule 21    b5 -> recEnv RKEY
Rule 22    recEnv -> empty
Rule 23    expresion -> expresion2 expre
Rule 24    expre -> expre2
Rule 25    expre -> empty
Rule 26    expre2 -> AND tagmetelog expresion tagsacalog
Rule 27    expre2 -> OR tagmetelog expresion tagsacalog
Rule 28    tagmetelog -> empty
Rule 29    tagsacalog -> empty
Rule 30    expresion2 -> exp e2
Rule 31    e2 -> e3
Rule 32    e2 -> empty
Rule 33    e3 -> GT tagrel exp tagsacrel
Rule 34    e3 -> LT tagrel exp tagsacrel
Rule 35    e3 -> LE tagrel exp tagsacrel
Rule 36    e3 -> GE tagrel exp tagsacrel
Rule 37    e3 -> DIF tagrel exp tagsacrel
Rule 38    e3 -> SAME tagrel exp tagsacrel
Rule 39    tagrel -> empty
Rule 40    tagsacrel -> empty
Rule 41    exp -> termino tagsacops exp2
Rule 42    exp2 -> SUMA tagop exp
Rule 43    exp2 -> RESTA tagop exp
Rule 44    exp2 -> empty
Rule 45    tagop -> empty
Rule 46    tagsacops -> empty
Rule 47    declaracion -> tipo ID savevar decla1
Rule 48    savevar -> empty
Rule 49    decla1 -> saveMemNormal declafinal
Rule 50    decla1 -> LBRACKET decDimensionada exp saveLimSup decla2
Rule 51    saveMemNormal -> empty
Rule 52    decDimensionada -> empty
Rule 53    saveLimSup -> empty
Rule 54    decla2 -> RBRACKET guardaMemDimen declafinal
Rule 55    decla2 -> COMA SigDimension exp saveLimSup decla2
Rule 56    SigDimension -> empty
Rule 57    guardaMemDimen -> empty
Rule 58    declafinal -> PUNTOCOMA
Rule 59    tipo -> INT
Rule 60    tipo -> FLOAT
Rule 61    tipo -> CHAR
Rule 62    tipo -> STRING
Rule 63    tipo -> BOOL
Rule 64    asignacion -> ID meteid asigfinal
Rule 65    asignacion -> f7 asigfinal
Rule 66    meteid -> empty
Rule 67    asig2 -> LBRACKET exp asig3
Rule 68    asig2 -> asigfinal
Rule 69    asig3 -> COMA exp asig3
Rule 70    asig3 -> RBRACKET asigfinal
Rule 71    asigfinal -> IGUAL tagmeteig asigf2
Rule 72    asigf2 -> expresion tagig PUNTOCOMA
Rule 73    asigf2 -> read tagig
Rule 74    asigf2 -> readint tagig
Rule 75    tagmeteig -> empty
Rule 76    tagig -> empty
Rule 77    print -> PRINT LPARENT pr2
Rule 78    pr2 -> expresion pr3
Rule 79    pr3 -> tagimprime RPARENT PUNTOCOMA
Rule 80    tagimprime -> empty
Rule 81    termino -> factor tagsacopm te2
Rule 82    te2 -> MULT tagm termino
Rule 83    te2 -> DIV tagm termino
Rule 84    te2 -> empty
Rule 85    tagm -> empty
Rule 86    tagsacopm -> empty
Rule 87    factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo
Rule 88    factor -> f2
Rule 89    factor -> f3
Rule 90    factor -> f6
Rule 91    factor -> f7
Rule 92    f2 -> varcte
Rule 93    f3 -> ID
Rule 94    tagfondofalso -> empty
Rule 95    tagsacafondo -> empty
Rule 96    f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8
Rule 97    f8 -> COMA tagotradim exp tagmetedim f8
Rule 98    f8 -> RBRACKET tagterminadim
Rule 99    tagrevisadime -> empty
Rule 100   tagmetedim -> empty
Rule 101   tagotradim -> empty
Rule 102   tagterminadim -> empty
Rule 103   f6 -> llamafuncion
Rule 104   guardafunc -> empty
Rule 105   estatuto -> asignacion
Rule 106   estatuto -> print
Rule 107   estatuto -> ciclowhile
Rule 108   estatuto -> ciclodowhile
Rule 109   estatuto -> ciclofor
Rule 110   estatuto -> read
Rule 111   estatuto -> readint
Rule 112   estatuto -> comentario
Rule 113   estatuto -> cuadrado
Rule 114   estatuto -> triangulo
Rule 115   estatuto -> casa
Rule 116   estatuto -> rectangulo
Rule 117   estatuto -> cubo
Rule 118   estatuto -> trapecio
Rule 119   estatuto -> estrella
Rule 120   estatuto -> mueve
Rule 121   estatuto -> levanta
Rule 122   estatuto -> apoya
Rule 123   estatuto -> dimension
Rule 124   estatuto -> llamafuncion
Rule 125   estatuto -> return
Rule 126   estatuto -> if
Rule 127   comentario -> COMENTARIO
Rule 128   varcte -> ENTERO tagint
Rule 129   varcte -> FLOTANTE tagfloat
Rule 130   varcte -> CADENA tagcad
Rule 131   varcte -> CARACTER tagcar
Rule 132   varcte -> TRUE tagbol
Rule 133   varcte -> FALSE tagbol
Rule 134   tagint -> empty
Rule 135   tagfloat -> empty
Rule 136   tagcad -> empty
Rule 137   tagcar -> empty
Rule 138   tagbol -> empty
Rule 139   ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile
Rule 140   taginiciawhile -> empty
Rule 141   tagwhile -> empty
Rule 142   tagregresawhile -> empty
Rule 143   ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA
Rule 144   taginiciado -> empty
Rule 145   tagcondiciondo -> empty
Rule 146   read -> READ LPARENT RPARENT PUNTOCOMA
Rule 147   readint -> READINT LPARENT RPARENT PUNTOCOMA
Rule 148   ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor
Rule 149   tagevaluafor -> empty
Rule 150   tagterminafor -> empty
Rule 151   tagespera -> empty
Rule 152   tagasigna -> empty
Rule 153   if -> IF LPARENT expresion tagif RPARENT bloque if2
Rule 154   if2 -> tagterminaif
Rule 155   if2 -> ELSE tagelse bloque tagterminaif
Rule 156   tagif -> empty
Rule 157   tagelse -> empty
Rule 158   tagterminaif -> empty
Rule 159   return -> RETURN llegoRet expresion PUNTOCOMA
Rule 160   llegoRet -> empty
Rule 161   cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA
Rule 162   tagcuadro -> empty
Rule 163   triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA
Rule 164   tagtriangulo -> empty
Rule 165   rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 166   casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 167   estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA
Rule 168   tagestrella -> empty
Rule 169   cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA
Rule 170   tagcubo -> empty
Rule 171   mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA
Rule 172   tagmueve -> empty
Rule 173   levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA
Rule 174   apoya -> APOYA LPARENT RPARENT PUNTOCOMA
Rule 175   trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
Rule 176   dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA
Rule 177   function -> FUNCTION pfunc
Rule 178   pfunc -> tipo ID buildFunc LPARENT funct11
Rule 179   pfunc -> VOID ID buildFunc LPARENT funct11
Rule 180   buildFunc -> empty
Rule 181   funct11 -> function4
Rule 182   funct11 -> initParamTable funct2
Rule 183   initParamTable -> empty
Rule 184   funct2 -> tipo ID initParams funct3
Rule 185   initParams -> empty
Rule 186   funct3 -> COMA funct2
Rule 187   funct3 -> function4
Rule 188   function4 -> RPARENT initFunc bloque noinitFunc
Rule 189   initFunc -> empty
Rule 190   noinitFunc -> empty
Rule 191   llamafuncion -> ID LPARENT tagverificafuncion llamaf11
Rule 192   llamaf11 -> llamaf2
Rule 193   llamaf11 -> llamaf4
Rule 194   llamaf2 -> exp tagrevisaparam llamaf3
Rule 195   llamaf3 -> COMA tagotroargumento llamaf2
Rule 196   llamaf3 -> llamaf4
Rule 197   llamaf4 -> RPARENT tagterminallamada PUNTOCOMA
Rule 198   tagverificafuncion -> empty
Rule 199   tagrevisaparam -> empty
Rule 200   tagotroargumento -> empty
Rule 201   tagterminallamada -> empty
Rule 202   empty -> <empty>

Terminals, with rules where they appear

AND                  : 26
APOYA                : 174
BEGIN                : 
BOLEANO              : 
BOOL                 : 63
CADENA               : 130
CARACTER             : 131
CASA                 : 166
CHAR                 : 61
CIRCULO              : 
COMA                 : 55 69 97 161 161 163 163 165 166 169 169 171 175 186 195
COMDOBLE             : 
COMENTARIO           : 127
COMSIMPLE            : 
CUADRADO             : 161
CUBO                 : 169
DIF                  : 37
DIMENSION            : 176
DIV                  : 83
DO                   : 143
DOSPUNTOS            : 1
ELSE                 : 155
END                  : 
ENTERO               : 128
ESTRELLA             : 167
FALSE                : 133
FLOAT                : 60
FLOTANTE             : 129
FOR                  : 148
FUNCTION             : 177
GE                   : 36
GT                   : 33
ID                   : 1 47 64 93 96 178 179 184 191
IF                   : 153
IGUAL                : 71
INT                  : 59
LBRACKET             : 50 67 96
LE                   : 35
LEVANTA              : 173
LKEY                 : 15
LPARENT              : 77 87 139 143 146 147 148 153 161 163 165 166 167 169 171 173 174 175 176 178 179 191
LT                   : 34
MUEVE                : 171
MULT                 : 82
NOESNADA             : 
OR                   : 27
POTENCIA             : 
POW                  : 
PRINT                : 77
PROGRAM              : 1
PUNTO                : 
PUNTOCOMA            : 58 72 79 143 146 147 159 161 163 165 166 167 169 171 173 174 175 176 197
RAIZ                 : 
RBRACKET             : 54 70 98
READ                 : 146
READINT              : 147
RECTANGULO           : 165
RESTA                : 43
RETURN               : 159
RKEY                 : 21
RPARENT              : 79 87 139 143 146 147 148 153 161 163 165 166 167 169 171 173 174 175 176 188 197
SAME                 : 38
SQRT                 : 
STRING               : 62
SUMA                 : 42
TRAPECIO             : 175
TRIANGULO            : 163
TRUE                 : 132
VAR                  : 
VOID                 : 179
WHILE                : 139 143
error                : 

Nonterminals, with rules where they appear

SigDimension         : 55
apoya                : 122
asig2                : 
asig3                : 67 69
asigf2               : 71
asigfinal            : 64 65 68 70
asignacion           : 105 148 148
b3                   : 15 17
b4                   : 15 19
b5                   : 15
bloque               : 11 139 143 148 153 155 188
buildFunc            : 178 179
casa                 : 115
ciclodowhile         : 108
ciclofor             : 109
ciclowhile           : 107
comentario           : 112
cuadrado             : 113
cuadrupro            : 1
cuadrupro2           : 11
cubo                 : 117
decDimensionada      : 50
decla1               : 47
decla2               : 50 55
declafinal           : 49 54
declaracion          : 6 17
delMem               : 11
dimension            : 123
e2                   : 30
e3                   : 31
empty                : 2 8 12 13 14 16 18 20 22 25 28 29 32 39 40 44 45 46 48 51 52 53 56 57 66 75 76 80 84 85 86 94 95 99 100 101 102 104 134 135 136 137 138 140 141 142 144 145 149 150 151 152 156 157 158 160 162 164 168 170 172 180 183 185 189 190 198 199 200 201
estatuto             : 19
estrella             : 119
exp                  : 30 33 34 35 36 37 38 42 43 50 55 67 69 96 97 161 161 161 163 163 163 165 165 166 166 167 169 169 169 171 171 175 175 176 194
exp2                 : 41
expre                : 23
expre2               : 24
expresion            : 26 27 72 78 87 139 143 148 153 159
expresion2           : 23
f2                   : 88
f3                   : 89
f6                   : 90
f7                   : 65 91
f8                   : 96 97
factor               : 81
funct11              : 178 179
funct2               : 182 186
funct3               : 184
function             : 9
function4            : 181 187
guardaMemDimen       : 54
guardafunc           : 
if                   : 126
if2                  : 153
iniEnv               : 15
initFunc             : 188
initFunctions        : 4 7
initParamTable       : 182
initParams           : 184
initTop              : 1
levanta              : 121
llamaf11             : 191
llamaf2              : 192 195
llamaf3              : 194
llamaf4              : 193 196
llamafuncion         : 103 124
llegoRet             : 159
meteid               : 64
mueve                : 120
noinitFunc           : 188
p2                   : 1
p3                   : 3 6
p4                   : 4 7 9
p5                   : 5 10
pfunc                : 177
pr2                  : 77
pr3                  : 78
print                : 106
program              : 0
read                 : 73 110
readint              : 74 111
recEnv               : 21
rectangulo           : 116
return               : 125
saveLimSup           : 50 55
saveMemNormal        : 49
savevar              : 47
tagasigna            : 148
tagbol               : 132 133
tagcad               : 130
tagcar               : 131
tagcondiciondo       : 143
tagcuadro            : 161
tagcubo              : 169
tagelse              : 155
tagespera            : 148
tagestrella          : 167
tagevaluafor         : 148
tagfloat             : 129
tagfondofalso        : 87
tagif                : 153
tagig                : 72 73 74
tagimprime           : 79
taginiciado          : 143
taginiciawhile       : 139
tagint               : 128
tagm                 : 82 83
tagmetedim           : 96 97
tagmeteig            : 71
tagmetelog           : 26 27
tagmueve             : 171
tagop                : 42 43
tagotradim           : 97
tagotroargumento     : 195
tagregresawhile      : 139
tagrel               : 33 34 35 36 37 38
tagrevisadime        : 96
tagrevisaparam       : 194
tagsacafondo         : 87
tagsacalog           : 26 27
tagsacopm            : 81
tagsacops            : 41
tagsacrel            : 33 34 35 36 37 38
tagterminadim        : 98
tagterminafor        : 148
tagterminaif         : 154 155
tagterminallamada    : 197
tagtriangulo         : 163
tagverificafuncion   : 191
tagwhile             : 139
te2                  : 81
termino              : 41 82 83
tipo                 : 47 178 184
trapecio             : 118
triangulo            : 114
varcte               : 92

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM cuadrupro ID initTop DOSPUNTOS p2

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . cuadrupro ID initTop DOSPUNTOS p2
    (12) cuadrupro -> . empty
    (202) empty -> .

    ID              reduce using rule 202 (empty -> .)

    cuadrupro                      shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) program -> PROGRAM cuadrupro . ID initTop DOSPUNTOS p2

    ID              shift and go to state 5


state 4

    (12) cuadrupro -> empty .

    ID              reduce using rule 12 (cuadrupro -> empty .)


state 5

    (1) program -> PROGRAM cuadrupro ID . initTop DOSPUNTOS p2
    (2) initTop -> . empty
    (202) empty -> .

    DOSPUNTOS       reduce using rule 202 (empty -> .)

    initTop                        shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) program -> PROGRAM cuadrupro ID initTop . DOSPUNTOS p2

    DOSPUNTOS       shift and go to state 8


state 7

    (2) initTop -> empty .

    DOSPUNTOS       reduce using rule 2 (initTop -> empty .)


state 8

    (1) program -> PROGRAM cuadrupro ID initTop DOSPUNTOS . p2
    (3) p2 -> . p3
    (4) p2 -> . initFunctions p4
    (5) p2 -> . p5
    (6) p3 -> . declaracion p3
    (7) p3 -> . initFunctions p4
    (8) initFunctions -> . empty
    (11) p5 -> . cuadrupro2 bloque delMem
    (47) declaracion -> . tipo ID savevar decla1
    (202) empty -> .
    (13) cuadrupro2 -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    FUNCTION        reduce using rule 202 (empty -> .)
    LKEY            reduce using rule 202 (empty -> .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 10
    STRING          shift and go to state 13
    BOOL            shift and go to state 19

    p2                             shift and go to state 14
    p3                             shift and go to state 15
    tipo                           shift and go to state 11
    p5                             shift and go to state 16
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 12
    initFunctions                  shift and go to state 20
    declaracion                    shift and go to state 21

state 9

    (11) p5 -> cuadrupro2 . bloque delMem
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (202) empty -> .

    LKEY            reduce using rule 202 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 23
    empty                          shift and go to state 24

state 10

    (61) tipo -> CHAR .

    ID              reduce using rule 61 (tipo -> CHAR .)


state 11

    (47) declaracion -> tipo . ID savevar decla1

    ID              shift and go to state 25


state 12

    (8) initFunctions -> empty .
    (13) cuadrupro2 -> empty .

  ! reduce/reduce conflict for LKEY resolved using rule 8 (initFunctions -> empty .)
    FUNCTION        reduce using rule 8 (initFunctions -> empty .)
    LKEY            reduce using rule 8 (initFunctions -> empty .)

  ! LKEY            [ reduce using rule 13 (cuadrupro2 -> empty .) ]


state 13

    (62) tipo -> STRING .

    ID              reduce using rule 62 (tipo -> STRING .)


state 14

    (1) program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2 .

    $end            reduce using rule 1 (program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2 .)


state 15

    (3) p2 -> p3 .

    $end            reduce using rule 3 (p2 -> p3 .)


state 16

    (5) p2 -> p5 .

    $end            reduce using rule 5 (p2 -> p5 .)


state 17

    (59) tipo -> INT .

    ID              reduce using rule 59 (tipo -> INT .)


state 18

    (60) tipo -> FLOAT .

    ID              reduce using rule 60 (tipo -> FLOAT .)


state 19

    (63) tipo -> BOOL .

    ID              reduce using rule 63 (tipo -> BOOL .)


state 20

    (4) p2 -> initFunctions . p4
    (7) p3 -> initFunctions . p4
    (9) p4 -> . function p4
    (10) p4 -> . p5
    (177) function -> . FUNCTION pfunc
    (11) p5 -> . cuadrupro2 bloque delMem
    (13) cuadrupro2 -> . empty
    (202) empty -> .

    FUNCTION        shift and go to state 27
    LKEY            reduce using rule 202 (empty -> .)

    function                       shift and go to state 26
    p5                             shift and go to state 29
    p4                             shift and go to state 28
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 30

state 21

    (6) p3 -> declaracion . p3
    (6) p3 -> . declaracion p3
    (7) p3 -> . initFunctions p4
    (47) declaracion -> . tipo ID savevar decla1
    (8) initFunctions -> . empty
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL
    (202) empty -> .

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 10
    STRING          shift and go to state 13
    BOOL            shift and go to state 19
    FUNCTION        reduce using rule 202 (empty -> .)
    LKEY            reduce using rule 202 (empty -> .)

    p3                             shift and go to state 31
    tipo                           shift and go to state 11
    empty                          shift and go to state 32
    initFunctions                  shift and go to state 33
    declaracion                    shift and go to state 21

state 22

    (15) bloque -> iniEnv . LKEY b3 b4 b5

    LKEY            shift and go to state 34


state 23

    (11) p5 -> cuadrupro2 bloque . delMem
    (14) delMem -> . empty
    (202) empty -> .

    $end            reduce using rule 202 (empty -> .)

    delMem                         shift and go to state 35
    empty                          shift and go to state 36

state 24

    (16) iniEnv -> empty .

    LKEY            reduce using rule 16 (iniEnv -> empty .)


state 25

    (47) declaracion -> tipo ID . savevar decla1
    (48) savevar -> . empty
    (202) empty -> .

    LBRACKET        reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)

    empty                          shift and go to state 37
    savevar                        shift and go to state 38

state 26

    (9) p4 -> function . p4
    (9) p4 -> . function p4
    (10) p4 -> . p5
    (177) function -> . FUNCTION pfunc
    (11) p5 -> . cuadrupro2 bloque delMem
    (13) cuadrupro2 -> . empty
    (202) empty -> .

    FUNCTION        shift and go to state 27
    LKEY            reduce using rule 202 (empty -> .)

    function                       shift and go to state 26
    p5                             shift and go to state 29
    p4                             shift and go to state 39
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 30

state 27

    (177) function -> FUNCTION . pfunc
    (178) pfunc -> . tipo ID buildFunc LPARENT funct11
    (179) pfunc -> . VOID ID buildFunc LPARENT funct11
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    VOID            shift and go to state 42
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 10
    STRING          shift and go to state 13
    BOOL            shift and go to state 19

    tipo                           shift and go to state 40
    pfunc                          shift and go to state 41

state 28

    (4) p2 -> initFunctions p4 .
    (7) p3 -> initFunctions p4 .

  ! reduce/reduce conflict for $end resolved using rule 4 (p2 -> initFunctions p4 .)
    $end            reduce using rule 4 (p2 -> initFunctions p4 .)

  ! $end            [ reduce using rule 7 (p3 -> initFunctions p4 .) ]


state 29

    (10) p4 -> p5 .

    $end            reduce using rule 10 (p4 -> p5 .)


state 30

    (13) cuadrupro2 -> empty .

    LKEY            reduce using rule 13 (cuadrupro2 -> empty .)


state 31

    (6) p3 -> declaracion p3 .

    $end            reduce using rule 6 (p3 -> declaracion p3 .)


state 32

    (8) initFunctions -> empty .

    FUNCTION        reduce using rule 8 (initFunctions -> empty .)
    LKEY            reduce using rule 8 (initFunctions -> empty .)


state 33

    (7) p3 -> initFunctions . p4
    (9) p4 -> . function p4
    (10) p4 -> . p5
    (177) function -> . FUNCTION pfunc
    (11) p5 -> . cuadrupro2 bloque delMem
    (13) cuadrupro2 -> . empty
    (202) empty -> .

    FUNCTION        shift and go to state 27
    LKEY            reduce using rule 202 (empty -> .)

    function                       shift and go to state 26
    p5                             shift and go to state 29
    p4                             shift and go to state 43
    cuadrupro2                     shift and go to state 9
    empty                          shift and go to state 30

state 34

    (15) bloque -> iniEnv LKEY . b3 b4 b5
    (17) b3 -> . declaracion b3
    (18) b3 -> . empty
    (47) declaracion -> . tipo ID savevar decla1
    (202) empty -> .
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    ID              reduce using rule 202 (empty -> .)
    PRINT           reduce using rule 202 (empty -> .)
    WHILE           reduce using rule 202 (empty -> .)
    DO              reduce using rule 202 (empty -> .)
    FOR             reduce using rule 202 (empty -> .)
    READ            reduce using rule 202 (empty -> .)
    READINT         reduce using rule 202 (empty -> .)
    COMENTARIO      reduce using rule 202 (empty -> .)
    CUADRADO        reduce using rule 202 (empty -> .)
    TRIANGULO       reduce using rule 202 (empty -> .)
    CASA            reduce using rule 202 (empty -> .)
    RECTANGULO      reduce using rule 202 (empty -> .)
    CUBO            reduce using rule 202 (empty -> .)
    TRAPECIO        reduce using rule 202 (empty -> .)
    ESTRELLA        reduce using rule 202 (empty -> .)
    MUEVE           reduce using rule 202 (empty -> .)
    LEVANTA         reduce using rule 202 (empty -> .)
    APOYA           reduce using rule 202 (empty -> .)
    DIMENSION       reduce using rule 202 (empty -> .)
    RETURN          reduce using rule 202 (empty -> .)
    IF              reduce using rule 202 (empty -> .)
    RKEY            reduce using rule 202 (empty -> .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 10
    STRING          shift and go to state 13
    BOOL            shift and go to state 19

    tipo                           shift and go to state 11
    declaracion                    shift and go to state 46
    b3                             shift and go to state 45
    empty                          shift and go to state 44

state 35

    (11) p5 -> cuadrupro2 bloque delMem .

    $end            reduce using rule 11 (p5 -> cuadrupro2 bloque delMem .)


state 36

    (14) delMem -> empty .

    $end            reduce using rule 14 (delMem -> empty .)


state 37

    (48) savevar -> empty .

    LBRACKET        reduce using rule 48 (savevar -> empty .)
    PUNTOCOMA       reduce using rule 48 (savevar -> empty .)


state 38

    (47) declaracion -> tipo ID savevar . decla1
    (49) decla1 -> . saveMemNormal declafinal
    (50) decla1 -> . LBRACKET decDimensionada exp saveLimSup decla2
    (51) saveMemNormal -> . empty
    (202) empty -> .

    LBRACKET        shift and go to state 47
    PUNTOCOMA       reduce using rule 202 (empty -> .)

    decla1                         shift and go to state 48
    saveMemNormal                  shift and go to state 49
    empty                          shift and go to state 50

state 39

    (9) p4 -> function p4 .

    $end            reduce using rule 9 (p4 -> function p4 .)


state 40

    (178) pfunc -> tipo . ID buildFunc LPARENT funct11

    ID              shift and go to state 51


state 41

    (177) function -> FUNCTION pfunc .

    FUNCTION        reduce using rule 177 (function -> FUNCTION pfunc .)
    LKEY            reduce using rule 177 (function -> FUNCTION pfunc .)


state 42

    (179) pfunc -> VOID . ID buildFunc LPARENT funct11

    ID              shift and go to state 52


state 43

    (7) p3 -> initFunctions p4 .

    $end            reduce using rule 7 (p3 -> initFunctions p4 .)


state 44

    (18) b3 -> empty .

    ID              reduce using rule 18 (b3 -> empty .)
    PRINT           reduce using rule 18 (b3 -> empty .)
    WHILE           reduce using rule 18 (b3 -> empty .)
    DO              reduce using rule 18 (b3 -> empty .)
    FOR             reduce using rule 18 (b3 -> empty .)
    READ            reduce using rule 18 (b3 -> empty .)
    READINT         reduce using rule 18 (b3 -> empty .)
    COMENTARIO      reduce using rule 18 (b3 -> empty .)
    CUADRADO        reduce using rule 18 (b3 -> empty .)
    TRIANGULO       reduce using rule 18 (b3 -> empty .)
    CASA            reduce using rule 18 (b3 -> empty .)
    RECTANGULO      reduce using rule 18 (b3 -> empty .)
    CUBO            reduce using rule 18 (b3 -> empty .)
    TRAPECIO        reduce using rule 18 (b3 -> empty .)
    ESTRELLA        reduce using rule 18 (b3 -> empty .)
    MUEVE           reduce using rule 18 (b3 -> empty .)
    LEVANTA         reduce using rule 18 (b3 -> empty .)
    APOYA           reduce using rule 18 (b3 -> empty .)
    DIMENSION       reduce using rule 18 (b3 -> empty .)
    RETURN          reduce using rule 18 (b3 -> empty .)
    IF              reduce using rule 18 (b3 -> empty .)
    RKEY            reduce using rule 18 (b3 -> empty .)


state 45

    (15) bloque -> iniEnv LKEY b3 . b4 b5
    (19) b4 -> . estatuto b4
    (20) b4 -> . empty
    (105) estatuto -> . asignacion
    (106) estatuto -> . print
    (107) estatuto -> . ciclowhile
    (108) estatuto -> . ciclodowhile
    (109) estatuto -> . ciclofor
    (110) estatuto -> . read
    (111) estatuto -> . readint
    (112) estatuto -> . comentario
    (113) estatuto -> . cuadrado
    (114) estatuto -> . triangulo
    (115) estatuto -> . casa
    (116) estatuto -> . rectangulo
    (117) estatuto -> . cubo
    (118) estatuto -> . trapecio
    (119) estatuto -> . estrella
    (120) estatuto -> . mueve
    (121) estatuto -> . levanta
    (122) estatuto -> . apoya
    (123) estatuto -> . dimension
    (124) estatuto -> . llamafuncion
    (125) estatuto -> . return
    (126) estatuto -> . if
    (202) empty -> .
    (64) asignacion -> . ID meteid asigfinal
    (65) asignacion -> . f7 asigfinal
    (77) print -> . PRINT LPARENT pr2
    (139) ciclowhile -> . WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile
    (143) ciclodowhile -> . DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA
    (148) ciclofor -> . FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor
    (146) read -> . READ LPARENT RPARENT PUNTOCOMA
    (147) readint -> . READINT LPARENT RPARENT PUNTOCOMA
    (127) comentario -> . COMENTARIO
    (161) cuadrado -> . CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA
    (163) triangulo -> . TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA
    (166) casa -> . CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
    (165) rectangulo -> . RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (169) cubo -> . CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA
    (175) trapecio -> . TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (167) estrella -> . ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA
    (171) mueve -> . MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA
    (173) levanta -> . LEVANTA LPARENT RPARENT PUNTOCOMA
    (174) apoya -> . APOYA LPARENT RPARENT PUNTOCOMA
    (176) dimension -> . DIMENSION LPARENT exp RPARENT PUNTOCOMA
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11
    (159) return -> . RETURN llegoRet expresion PUNTOCOMA
    (153) if -> . IF LPARENT expresion tagif RPARENT bloque if2
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8

    RKEY            reduce using rule 202 (empty -> .)
    ID              shift and go to state 89
    PRINT           shift and go to state 61
    WHILE           shift and go to state 58
    DO              shift and go to state 53
    FOR             shift and go to state 81
    READ            shift and go to state 55
    READINT         shift and go to state 96
    COMENTARIO      shift and go to state 79
    CUADRADO        shift and go to state 97
    TRIANGULO       shift and go to state 78
    CASA            shift and go to state 67
    RECTANGULO      shift and go to state 87
    CUBO            shift and go to state 75
    TRAPECIO        shift and go to state 60
    ESTRELLA        shift and go to state 92
    MUEVE           shift and go to state 56
    LEVANTA         shift and go to state 82
    APOYA           shift and go to state 98
    DIMENSION       shift and go to state 90
    RETURN          shift and go to state 93
    IF              shift and go to state 91

    f7                             shift and go to state 54
    b4                             shift and go to state 57
    apoya                          shift and go to state 59
    trapecio                       shift and go to state 62
    comentario                     shift and go to state 63
    levanta                        shift and go to state 64
    if                             shift and go to state 65
    triangulo                      shift and go to state 66
    readint                        shift and go to state 68
    estatuto                       shift and go to state 69
    mueve                          shift and go to state 70
    ciclowhile                     shift and go to state 71
    llamafuncion                   shift and go to state 72
    cuadrado                       shift and go to state 73
    rectangulo                     shift and go to state 74
    print                          shift and go to state 76
    empty                          shift and go to state 77
    return                         shift and go to state 80
    read                           shift and go to state 83
    cubo                           shift and go to state 84
    ciclofor                       shift and go to state 85
    estrella                       shift and go to state 86
    ciclodowhile                   shift and go to state 88
    casa                           shift and go to state 94
    asignacion                     shift and go to state 95
    dimension                      shift and go to state 99

state 46

    (17) b3 -> declaracion . b3
    (17) b3 -> . declaracion b3
    (18) b3 -> . empty
    (47) declaracion -> . tipo ID savevar decla1
    (202) empty -> .
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    ID              reduce using rule 202 (empty -> .)
    PRINT           reduce using rule 202 (empty -> .)
    WHILE           reduce using rule 202 (empty -> .)
    DO              reduce using rule 202 (empty -> .)
    FOR             reduce using rule 202 (empty -> .)
    READ            reduce using rule 202 (empty -> .)
    READINT         reduce using rule 202 (empty -> .)
    COMENTARIO      reduce using rule 202 (empty -> .)
    CUADRADO        reduce using rule 202 (empty -> .)
    TRIANGULO       reduce using rule 202 (empty -> .)
    CASA            reduce using rule 202 (empty -> .)
    RECTANGULO      reduce using rule 202 (empty -> .)
    CUBO            reduce using rule 202 (empty -> .)
    TRAPECIO        reduce using rule 202 (empty -> .)
    ESTRELLA        reduce using rule 202 (empty -> .)
    MUEVE           reduce using rule 202 (empty -> .)
    LEVANTA         reduce using rule 202 (empty -> .)
    APOYA           reduce using rule 202 (empty -> .)
    DIMENSION       reduce using rule 202 (empty -> .)
    RETURN          reduce using rule 202 (empty -> .)
    IF              reduce using rule 202 (empty -> .)
    RKEY            reduce using rule 202 (empty -> .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 10
    STRING          shift and go to state 13
    BOOL            shift and go to state 19

    declaracion                    shift and go to state 46
    tipo                           shift and go to state 11
    b3                             shift and go to state 100
    empty                          shift and go to state 44

state 47

    (50) decla1 -> LBRACKET . decDimensionada exp saveLimSup decla2
    (52) decDimensionada -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    empty                          shift and go to state 101
    decDimensionada                shift and go to state 102

state 48

    (47) declaracion -> tipo ID savevar decla1 .

    INT             reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    FLOAT           reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    CHAR            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    STRING          reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    BOOL            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    ID              reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    PRINT           reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    WHILE           reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    DO              reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    FOR             reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    READ            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    READINT         reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    COMENTARIO      reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    CUADRADO        reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    TRIANGULO       reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    CASA            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    RECTANGULO      reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    CUBO            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    TRAPECIO        reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    ESTRELLA        reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    MUEVE           reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    LEVANTA         reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    APOYA           reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    DIMENSION       reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    RETURN          reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    IF              reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    RKEY            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    FUNCTION        reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)
    LKEY            reduce using rule 47 (declaracion -> tipo ID savevar decla1 .)


state 49

    (49) decla1 -> saveMemNormal . declafinal
    (58) declafinal -> . PUNTOCOMA

    PUNTOCOMA       shift and go to state 104

    declafinal                     shift and go to state 103

state 50

    (51) saveMemNormal -> empty .

    PUNTOCOMA       reduce using rule 51 (saveMemNormal -> empty .)


state 51

    (178) pfunc -> tipo ID . buildFunc LPARENT funct11
    (180) buildFunc -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)

    buildFunc                      shift and go to state 105
    empty                          shift and go to state 106

state 52

    (179) pfunc -> VOID ID . buildFunc LPARENT funct11
    (180) buildFunc -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)

    buildFunc                      shift and go to state 107
    empty                          shift and go to state 106

state 53

    (143) ciclodowhile -> DO . taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA
    (144) taginiciado -> . empty
    (202) empty -> .

    LKEY            reduce using rule 202 (empty -> .)

    empty                          shift and go to state 108
    taginiciado                    shift and go to state 109

state 54

    (65) asignacion -> f7 . asigfinal
    (71) asigfinal -> . IGUAL tagmeteig asigf2

    IGUAL           shift and go to state 110

    asigfinal                      shift and go to state 111

state 55

    (146) read -> READ . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 112


state 56

    (171) mueve -> MUEVE . LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA

    LPARENT         shift and go to state 113


state 57

    (15) bloque -> iniEnv LKEY b3 b4 . b5
    (21) b5 -> . recEnv RKEY
    (22) recEnv -> . empty
    (202) empty -> .

    RKEY            reduce using rule 202 (empty -> .)

    b5                             shift and go to state 114
    recEnv                         shift and go to state 115
    empty                          shift and go to state 116

state 58

    (139) ciclowhile -> WHILE . taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile
    (140) taginiciawhile -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)

    taginiciawhile                 shift and go to state 117
    empty                          shift and go to state 118

state 59

    (122) estatuto -> apoya .

    ID              reduce using rule 122 (estatuto -> apoya .)
    PRINT           reduce using rule 122 (estatuto -> apoya .)
    WHILE           reduce using rule 122 (estatuto -> apoya .)
    DO              reduce using rule 122 (estatuto -> apoya .)
    FOR             reduce using rule 122 (estatuto -> apoya .)
    READ            reduce using rule 122 (estatuto -> apoya .)
    READINT         reduce using rule 122 (estatuto -> apoya .)
    COMENTARIO      reduce using rule 122 (estatuto -> apoya .)
    CUADRADO        reduce using rule 122 (estatuto -> apoya .)
    TRIANGULO       reduce using rule 122 (estatuto -> apoya .)
    CASA            reduce using rule 122 (estatuto -> apoya .)
    RECTANGULO      reduce using rule 122 (estatuto -> apoya .)
    CUBO            reduce using rule 122 (estatuto -> apoya .)
    TRAPECIO        reduce using rule 122 (estatuto -> apoya .)
    ESTRELLA        reduce using rule 122 (estatuto -> apoya .)
    MUEVE           reduce using rule 122 (estatuto -> apoya .)
    LEVANTA         reduce using rule 122 (estatuto -> apoya .)
    APOYA           reduce using rule 122 (estatuto -> apoya .)
    DIMENSION       reduce using rule 122 (estatuto -> apoya .)
    RETURN          reduce using rule 122 (estatuto -> apoya .)
    IF              reduce using rule 122 (estatuto -> apoya .)
    RKEY            reduce using rule 122 (estatuto -> apoya .)


state 60

    (175) trapecio -> TRAPECIO . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 119


state 61

    (77) print -> PRINT . LPARENT pr2

    LPARENT         shift and go to state 120


state 62

    (118) estatuto -> trapecio .

    ID              reduce using rule 118 (estatuto -> trapecio .)
    PRINT           reduce using rule 118 (estatuto -> trapecio .)
    WHILE           reduce using rule 118 (estatuto -> trapecio .)
    DO              reduce using rule 118 (estatuto -> trapecio .)
    FOR             reduce using rule 118 (estatuto -> trapecio .)
    READ            reduce using rule 118 (estatuto -> trapecio .)
    READINT         reduce using rule 118 (estatuto -> trapecio .)
    COMENTARIO      reduce using rule 118 (estatuto -> trapecio .)
    CUADRADO        reduce using rule 118 (estatuto -> trapecio .)
    TRIANGULO       reduce using rule 118 (estatuto -> trapecio .)
    CASA            reduce using rule 118 (estatuto -> trapecio .)
    RECTANGULO      reduce using rule 118 (estatuto -> trapecio .)
    CUBO            reduce using rule 118 (estatuto -> trapecio .)
    TRAPECIO        reduce using rule 118 (estatuto -> trapecio .)
    ESTRELLA        reduce using rule 118 (estatuto -> trapecio .)
    MUEVE           reduce using rule 118 (estatuto -> trapecio .)
    LEVANTA         reduce using rule 118 (estatuto -> trapecio .)
    APOYA           reduce using rule 118 (estatuto -> trapecio .)
    DIMENSION       reduce using rule 118 (estatuto -> trapecio .)
    RETURN          reduce using rule 118 (estatuto -> trapecio .)
    IF              reduce using rule 118 (estatuto -> trapecio .)
    RKEY            reduce using rule 118 (estatuto -> trapecio .)


state 63

    (112) estatuto -> comentario .

    ID              reduce using rule 112 (estatuto -> comentario .)
    PRINT           reduce using rule 112 (estatuto -> comentario .)
    WHILE           reduce using rule 112 (estatuto -> comentario .)
    DO              reduce using rule 112 (estatuto -> comentario .)
    FOR             reduce using rule 112 (estatuto -> comentario .)
    READ            reduce using rule 112 (estatuto -> comentario .)
    READINT         reduce using rule 112 (estatuto -> comentario .)
    COMENTARIO      reduce using rule 112 (estatuto -> comentario .)
    CUADRADO        reduce using rule 112 (estatuto -> comentario .)
    TRIANGULO       reduce using rule 112 (estatuto -> comentario .)
    CASA            reduce using rule 112 (estatuto -> comentario .)
    RECTANGULO      reduce using rule 112 (estatuto -> comentario .)
    CUBO            reduce using rule 112 (estatuto -> comentario .)
    TRAPECIO        reduce using rule 112 (estatuto -> comentario .)
    ESTRELLA        reduce using rule 112 (estatuto -> comentario .)
    MUEVE           reduce using rule 112 (estatuto -> comentario .)
    LEVANTA         reduce using rule 112 (estatuto -> comentario .)
    APOYA           reduce using rule 112 (estatuto -> comentario .)
    DIMENSION       reduce using rule 112 (estatuto -> comentario .)
    RETURN          reduce using rule 112 (estatuto -> comentario .)
    IF              reduce using rule 112 (estatuto -> comentario .)
    RKEY            reduce using rule 112 (estatuto -> comentario .)


state 64

    (121) estatuto -> levanta .

    ID              reduce using rule 121 (estatuto -> levanta .)
    PRINT           reduce using rule 121 (estatuto -> levanta .)
    WHILE           reduce using rule 121 (estatuto -> levanta .)
    DO              reduce using rule 121 (estatuto -> levanta .)
    FOR             reduce using rule 121 (estatuto -> levanta .)
    READ            reduce using rule 121 (estatuto -> levanta .)
    READINT         reduce using rule 121 (estatuto -> levanta .)
    COMENTARIO      reduce using rule 121 (estatuto -> levanta .)
    CUADRADO        reduce using rule 121 (estatuto -> levanta .)
    TRIANGULO       reduce using rule 121 (estatuto -> levanta .)
    CASA            reduce using rule 121 (estatuto -> levanta .)
    RECTANGULO      reduce using rule 121 (estatuto -> levanta .)
    CUBO            reduce using rule 121 (estatuto -> levanta .)
    TRAPECIO        reduce using rule 121 (estatuto -> levanta .)
    ESTRELLA        reduce using rule 121 (estatuto -> levanta .)
    MUEVE           reduce using rule 121 (estatuto -> levanta .)
    LEVANTA         reduce using rule 121 (estatuto -> levanta .)
    APOYA           reduce using rule 121 (estatuto -> levanta .)
    DIMENSION       reduce using rule 121 (estatuto -> levanta .)
    RETURN          reduce using rule 121 (estatuto -> levanta .)
    IF              reduce using rule 121 (estatuto -> levanta .)
    RKEY            reduce using rule 121 (estatuto -> levanta .)


state 65

    (126) estatuto -> if .

    ID              reduce using rule 126 (estatuto -> if .)
    PRINT           reduce using rule 126 (estatuto -> if .)
    WHILE           reduce using rule 126 (estatuto -> if .)
    DO              reduce using rule 126 (estatuto -> if .)
    FOR             reduce using rule 126 (estatuto -> if .)
    READ            reduce using rule 126 (estatuto -> if .)
    READINT         reduce using rule 126 (estatuto -> if .)
    COMENTARIO      reduce using rule 126 (estatuto -> if .)
    CUADRADO        reduce using rule 126 (estatuto -> if .)
    TRIANGULO       reduce using rule 126 (estatuto -> if .)
    CASA            reduce using rule 126 (estatuto -> if .)
    RECTANGULO      reduce using rule 126 (estatuto -> if .)
    CUBO            reduce using rule 126 (estatuto -> if .)
    TRAPECIO        reduce using rule 126 (estatuto -> if .)
    ESTRELLA        reduce using rule 126 (estatuto -> if .)
    MUEVE           reduce using rule 126 (estatuto -> if .)
    LEVANTA         reduce using rule 126 (estatuto -> if .)
    APOYA           reduce using rule 126 (estatuto -> if .)
    DIMENSION       reduce using rule 126 (estatuto -> if .)
    RETURN          reduce using rule 126 (estatuto -> if .)
    IF              reduce using rule 126 (estatuto -> if .)
    RKEY            reduce using rule 126 (estatuto -> if .)


state 66

    (114) estatuto -> triangulo .

    ID              reduce using rule 114 (estatuto -> triangulo .)
    PRINT           reduce using rule 114 (estatuto -> triangulo .)
    WHILE           reduce using rule 114 (estatuto -> triangulo .)
    DO              reduce using rule 114 (estatuto -> triangulo .)
    FOR             reduce using rule 114 (estatuto -> triangulo .)
    READ            reduce using rule 114 (estatuto -> triangulo .)
    READINT         reduce using rule 114 (estatuto -> triangulo .)
    COMENTARIO      reduce using rule 114 (estatuto -> triangulo .)
    CUADRADO        reduce using rule 114 (estatuto -> triangulo .)
    TRIANGULO       reduce using rule 114 (estatuto -> triangulo .)
    CASA            reduce using rule 114 (estatuto -> triangulo .)
    RECTANGULO      reduce using rule 114 (estatuto -> triangulo .)
    CUBO            reduce using rule 114 (estatuto -> triangulo .)
    TRAPECIO        reduce using rule 114 (estatuto -> triangulo .)
    ESTRELLA        reduce using rule 114 (estatuto -> triangulo .)
    MUEVE           reduce using rule 114 (estatuto -> triangulo .)
    LEVANTA         reduce using rule 114 (estatuto -> triangulo .)
    APOYA           reduce using rule 114 (estatuto -> triangulo .)
    DIMENSION       reduce using rule 114 (estatuto -> triangulo .)
    RETURN          reduce using rule 114 (estatuto -> triangulo .)
    IF              reduce using rule 114 (estatuto -> triangulo .)
    RKEY            reduce using rule 114 (estatuto -> triangulo .)


state 67

    (166) casa -> CASA . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 121


state 68

    (111) estatuto -> readint .

    ID              reduce using rule 111 (estatuto -> readint .)
    PRINT           reduce using rule 111 (estatuto -> readint .)
    WHILE           reduce using rule 111 (estatuto -> readint .)
    DO              reduce using rule 111 (estatuto -> readint .)
    FOR             reduce using rule 111 (estatuto -> readint .)
    READ            reduce using rule 111 (estatuto -> readint .)
    READINT         reduce using rule 111 (estatuto -> readint .)
    COMENTARIO      reduce using rule 111 (estatuto -> readint .)
    CUADRADO        reduce using rule 111 (estatuto -> readint .)
    TRIANGULO       reduce using rule 111 (estatuto -> readint .)
    CASA            reduce using rule 111 (estatuto -> readint .)
    RECTANGULO      reduce using rule 111 (estatuto -> readint .)
    CUBO            reduce using rule 111 (estatuto -> readint .)
    TRAPECIO        reduce using rule 111 (estatuto -> readint .)
    ESTRELLA        reduce using rule 111 (estatuto -> readint .)
    MUEVE           reduce using rule 111 (estatuto -> readint .)
    LEVANTA         reduce using rule 111 (estatuto -> readint .)
    APOYA           reduce using rule 111 (estatuto -> readint .)
    DIMENSION       reduce using rule 111 (estatuto -> readint .)
    RETURN          reduce using rule 111 (estatuto -> readint .)
    IF              reduce using rule 111 (estatuto -> readint .)
    RKEY            reduce using rule 111 (estatuto -> readint .)


state 69

    (19) b4 -> estatuto . b4
    (19) b4 -> . estatuto b4
    (20) b4 -> . empty
    (105) estatuto -> . asignacion
    (106) estatuto -> . print
    (107) estatuto -> . ciclowhile
    (108) estatuto -> . ciclodowhile
    (109) estatuto -> . ciclofor
    (110) estatuto -> . read
    (111) estatuto -> . readint
    (112) estatuto -> . comentario
    (113) estatuto -> . cuadrado
    (114) estatuto -> . triangulo
    (115) estatuto -> . casa
    (116) estatuto -> . rectangulo
    (117) estatuto -> . cubo
    (118) estatuto -> . trapecio
    (119) estatuto -> . estrella
    (120) estatuto -> . mueve
    (121) estatuto -> . levanta
    (122) estatuto -> . apoya
    (123) estatuto -> . dimension
    (124) estatuto -> . llamafuncion
    (125) estatuto -> . return
    (126) estatuto -> . if
    (202) empty -> .
    (64) asignacion -> . ID meteid asigfinal
    (65) asignacion -> . f7 asigfinal
    (77) print -> . PRINT LPARENT pr2
    (139) ciclowhile -> . WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile
    (143) ciclodowhile -> . DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA
    (148) ciclofor -> . FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor
    (146) read -> . READ LPARENT RPARENT PUNTOCOMA
    (147) readint -> . READINT LPARENT RPARENT PUNTOCOMA
    (127) comentario -> . COMENTARIO
    (161) cuadrado -> . CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA
    (163) triangulo -> . TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA
    (166) casa -> . CASA LPARENT exp COMA exp RPARENT PUNTOCOMA
    (165) rectangulo -> . RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (169) cubo -> . CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA
    (175) trapecio -> . TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA
    (167) estrella -> . ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA
    (171) mueve -> . MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA
    (173) levanta -> . LEVANTA LPARENT RPARENT PUNTOCOMA
    (174) apoya -> . APOYA LPARENT RPARENT PUNTOCOMA
    (176) dimension -> . DIMENSION LPARENT exp RPARENT PUNTOCOMA
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11
    (159) return -> . RETURN llegoRet expresion PUNTOCOMA
    (153) if -> . IF LPARENT expresion tagif RPARENT bloque if2
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8

    RKEY            reduce using rule 202 (empty -> .)
    ID              shift and go to state 89
    PRINT           shift and go to state 61
    WHILE           shift and go to state 58
    DO              shift and go to state 53
    FOR             shift and go to state 81
    READ            shift and go to state 55
    READINT         shift and go to state 96
    COMENTARIO      shift and go to state 79
    CUADRADO        shift and go to state 97
    TRIANGULO       shift and go to state 78
    CASA            shift and go to state 67
    RECTANGULO      shift and go to state 87
    CUBO            shift and go to state 75
    TRAPECIO        shift and go to state 60
    ESTRELLA        shift and go to state 92
    MUEVE           shift and go to state 56
    LEVANTA         shift and go to state 82
    APOYA           shift and go to state 98
    DIMENSION       shift and go to state 90
    RETURN          shift and go to state 93
    IF              shift and go to state 91

    f7                             shift and go to state 54
    b4                             shift and go to state 122
    apoya                          shift and go to state 59
    trapecio                       shift and go to state 62
    comentario                     shift and go to state 63
    levanta                        shift and go to state 64
    if                             shift and go to state 65
    triangulo                      shift and go to state 66
    readint                        shift and go to state 68
    estatuto                       shift and go to state 69
    mueve                          shift and go to state 70
    ciclowhile                     shift and go to state 71
    llamafuncion                   shift and go to state 72
    cuadrado                       shift and go to state 73
    rectangulo                     shift and go to state 74
    print                          shift and go to state 76
    empty                          shift and go to state 77
    return                         shift and go to state 80
    read                           shift and go to state 83
    cubo                           shift and go to state 84
    ciclofor                       shift and go to state 85
    estrella                       shift and go to state 86
    ciclodowhile                   shift and go to state 88
    casa                           shift and go to state 94
    asignacion                     shift and go to state 95
    dimension                      shift and go to state 99

state 70

    (120) estatuto -> mueve .

    ID              reduce using rule 120 (estatuto -> mueve .)
    PRINT           reduce using rule 120 (estatuto -> mueve .)
    WHILE           reduce using rule 120 (estatuto -> mueve .)
    DO              reduce using rule 120 (estatuto -> mueve .)
    FOR             reduce using rule 120 (estatuto -> mueve .)
    READ            reduce using rule 120 (estatuto -> mueve .)
    READINT         reduce using rule 120 (estatuto -> mueve .)
    COMENTARIO      reduce using rule 120 (estatuto -> mueve .)
    CUADRADO        reduce using rule 120 (estatuto -> mueve .)
    TRIANGULO       reduce using rule 120 (estatuto -> mueve .)
    CASA            reduce using rule 120 (estatuto -> mueve .)
    RECTANGULO      reduce using rule 120 (estatuto -> mueve .)
    CUBO            reduce using rule 120 (estatuto -> mueve .)
    TRAPECIO        reduce using rule 120 (estatuto -> mueve .)
    ESTRELLA        reduce using rule 120 (estatuto -> mueve .)
    MUEVE           reduce using rule 120 (estatuto -> mueve .)
    LEVANTA         reduce using rule 120 (estatuto -> mueve .)
    APOYA           reduce using rule 120 (estatuto -> mueve .)
    DIMENSION       reduce using rule 120 (estatuto -> mueve .)
    RETURN          reduce using rule 120 (estatuto -> mueve .)
    IF              reduce using rule 120 (estatuto -> mueve .)
    RKEY            reduce using rule 120 (estatuto -> mueve .)


state 71

    (107) estatuto -> ciclowhile .

    ID              reduce using rule 107 (estatuto -> ciclowhile .)
    PRINT           reduce using rule 107 (estatuto -> ciclowhile .)
    WHILE           reduce using rule 107 (estatuto -> ciclowhile .)
    DO              reduce using rule 107 (estatuto -> ciclowhile .)
    FOR             reduce using rule 107 (estatuto -> ciclowhile .)
    READ            reduce using rule 107 (estatuto -> ciclowhile .)
    READINT         reduce using rule 107 (estatuto -> ciclowhile .)
    COMENTARIO      reduce using rule 107 (estatuto -> ciclowhile .)
    CUADRADO        reduce using rule 107 (estatuto -> ciclowhile .)
    TRIANGULO       reduce using rule 107 (estatuto -> ciclowhile .)
    CASA            reduce using rule 107 (estatuto -> ciclowhile .)
    RECTANGULO      reduce using rule 107 (estatuto -> ciclowhile .)
    CUBO            reduce using rule 107 (estatuto -> ciclowhile .)
    TRAPECIO        reduce using rule 107 (estatuto -> ciclowhile .)
    ESTRELLA        reduce using rule 107 (estatuto -> ciclowhile .)
    MUEVE           reduce using rule 107 (estatuto -> ciclowhile .)
    LEVANTA         reduce using rule 107 (estatuto -> ciclowhile .)
    APOYA           reduce using rule 107 (estatuto -> ciclowhile .)
    DIMENSION       reduce using rule 107 (estatuto -> ciclowhile .)
    RETURN          reduce using rule 107 (estatuto -> ciclowhile .)
    IF              reduce using rule 107 (estatuto -> ciclowhile .)
    RKEY            reduce using rule 107 (estatuto -> ciclowhile .)


state 72

    (124) estatuto -> llamafuncion .

    ID              reduce using rule 124 (estatuto -> llamafuncion .)
    PRINT           reduce using rule 124 (estatuto -> llamafuncion .)
    WHILE           reduce using rule 124 (estatuto -> llamafuncion .)
    DO              reduce using rule 124 (estatuto -> llamafuncion .)
    FOR             reduce using rule 124 (estatuto -> llamafuncion .)
    READ            reduce using rule 124 (estatuto -> llamafuncion .)
    READINT         reduce using rule 124 (estatuto -> llamafuncion .)
    COMENTARIO      reduce using rule 124 (estatuto -> llamafuncion .)
    CUADRADO        reduce using rule 124 (estatuto -> llamafuncion .)
    TRIANGULO       reduce using rule 124 (estatuto -> llamafuncion .)
    CASA            reduce using rule 124 (estatuto -> llamafuncion .)
    RECTANGULO      reduce using rule 124 (estatuto -> llamafuncion .)
    CUBO            reduce using rule 124 (estatuto -> llamafuncion .)
    TRAPECIO        reduce using rule 124 (estatuto -> llamafuncion .)
    ESTRELLA        reduce using rule 124 (estatuto -> llamafuncion .)
    MUEVE           reduce using rule 124 (estatuto -> llamafuncion .)
    LEVANTA         reduce using rule 124 (estatuto -> llamafuncion .)
    APOYA           reduce using rule 124 (estatuto -> llamafuncion .)
    DIMENSION       reduce using rule 124 (estatuto -> llamafuncion .)
    RETURN          reduce using rule 124 (estatuto -> llamafuncion .)
    IF              reduce using rule 124 (estatuto -> llamafuncion .)
    RKEY            reduce using rule 124 (estatuto -> llamafuncion .)


state 73

    (113) estatuto -> cuadrado .

    ID              reduce using rule 113 (estatuto -> cuadrado .)
    PRINT           reduce using rule 113 (estatuto -> cuadrado .)
    WHILE           reduce using rule 113 (estatuto -> cuadrado .)
    DO              reduce using rule 113 (estatuto -> cuadrado .)
    FOR             reduce using rule 113 (estatuto -> cuadrado .)
    READ            reduce using rule 113 (estatuto -> cuadrado .)
    READINT         reduce using rule 113 (estatuto -> cuadrado .)
    COMENTARIO      reduce using rule 113 (estatuto -> cuadrado .)
    CUADRADO        reduce using rule 113 (estatuto -> cuadrado .)
    TRIANGULO       reduce using rule 113 (estatuto -> cuadrado .)
    CASA            reduce using rule 113 (estatuto -> cuadrado .)
    RECTANGULO      reduce using rule 113 (estatuto -> cuadrado .)
    CUBO            reduce using rule 113 (estatuto -> cuadrado .)
    TRAPECIO        reduce using rule 113 (estatuto -> cuadrado .)
    ESTRELLA        reduce using rule 113 (estatuto -> cuadrado .)
    MUEVE           reduce using rule 113 (estatuto -> cuadrado .)
    LEVANTA         reduce using rule 113 (estatuto -> cuadrado .)
    APOYA           reduce using rule 113 (estatuto -> cuadrado .)
    DIMENSION       reduce using rule 113 (estatuto -> cuadrado .)
    RETURN          reduce using rule 113 (estatuto -> cuadrado .)
    IF              reduce using rule 113 (estatuto -> cuadrado .)
    RKEY            reduce using rule 113 (estatuto -> cuadrado .)


state 74

    (116) estatuto -> rectangulo .

    ID              reduce using rule 116 (estatuto -> rectangulo .)
    PRINT           reduce using rule 116 (estatuto -> rectangulo .)
    WHILE           reduce using rule 116 (estatuto -> rectangulo .)
    DO              reduce using rule 116 (estatuto -> rectangulo .)
    FOR             reduce using rule 116 (estatuto -> rectangulo .)
    READ            reduce using rule 116 (estatuto -> rectangulo .)
    READINT         reduce using rule 116 (estatuto -> rectangulo .)
    COMENTARIO      reduce using rule 116 (estatuto -> rectangulo .)
    CUADRADO        reduce using rule 116 (estatuto -> rectangulo .)
    TRIANGULO       reduce using rule 116 (estatuto -> rectangulo .)
    CASA            reduce using rule 116 (estatuto -> rectangulo .)
    RECTANGULO      reduce using rule 116 (estatuto -> rectangulo .)
    CUBO            reduce using rule 116 (estatuto -> rectangulo .)
    TRAPECIO        reduce using rule 116 (estatuto -> rectangulo .)
    ESTRELLA        reduce using rule 116 (estatuto -> rectangulo .)
    MUEVE           reduce using rule 116 (estatuto -> rectangulo .)
    LEVANTA         reduce using rule 116 (estatuto -> rectangulo .)
    APOYA           reduce using rule 116 (estatuto -> rectangulo .)
    DIMENSION       reduce using rule 116 (estatuto -> rectangulo .)
    RETURN          reduce using rule 116 (estatuto -> rectangulo .)
    IF              reduce using rule 116 (estatuto -> rectangulo .)
    RKEY            reduce using rule 116 (estatuto -> rectangulo .)


state 75

    (169) cubo -> CUBO . LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA

    LPARENT         shift and go to state 123


state 76

    (106) estatuto -> print .

    ID              reduce using rule 106 (estatuto -> print .)
    PRINT           reduce using rule 106 (estatuto -> print .)
    WHILE           reduce using rule 106 (estatuto -> print .)
    DO              reduce using rule 106 (estatuto -> print .)
    FOR             reduce using rule 106 (estatuto -> print .)
    READ            reduce using rule 106 (estatuto -> print .)
    READINT         reduce using rule 106 (estatuto -> print .)
    COMENTARIO      reduce using rule 106 (estatuto -> print .)
    CUADRADO        reduce using rule 106 (estatuto -> print .)
    TRIANGULO       reduce using rule 106 (estatuto -> print .)
    CASA            reduce using rule 106 (estatuto -> print .)
    RECTANGULO      reduce using rule 106 (estatuto -> print .)
    CUBO            reduce using rule 106 (estatuto -> print .)
    TRAPECIO        reduce using rule 106 (estatuto -> print .)
    ESTRELLA        reduce using rule 106 (estatuto -> print .)
    MUEVE           reduce using rule 106 (estatuto -> print .)
    LEVANTA         reduce using rule 106 (estatuto -> print .)
    APOYA           reduce using rule 106 (estatuto -> print .)
    DIMENSION       reduce using rule 106 (estatuto -> print .)
    RETURN          reduce using rule 106 (estatuto -> print .)
    IF              reduce using rule 106 (estatuto -> print .)
    RKEY            reduce using rule 106 (estatuto -> print .)


state 77

    (20) b4 -> empty .

    RKEY            reduce using rule 20 (b4 -> empty .)


state 78

    (163) triangulo -> TRIANGULO . LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA

    LPARENT         shift and go to state 124


state 79

    (127) comentario -> COMENTARIO .

    ID              reduce using rule 127 (comentario -> COMENTARIO .)
    PRINT           reduce using rule 127 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 127 (comentario -> COMENTARIO .)
    DO              reduce using rule 127 (comentario -> COMENTARIO .)
    FOR             reduce using rule 127 (comentario -> COMENTARIO .)
    READ            reduce using rule 127 (comentario -> COMENTARIO .)
    READINT         reduce using rule 127 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 127 (comentario -> COMENTARIO .)
    CUADRADO        reduce using rule 127 (comentario -> COMENTARIO .)
    TRIANGULO       reduce using rule 127 (comentario -> COMENTARIO .)
    CASA            reduce using rule 127 (comentario -> COMENTARIO .)
    RECTANGULO      reduce using rule 127 (comentario -> COMENTARIO .)
    CUBO            reduce using rule 127 (comentario -> COMENTARIO .)
    TRAPECIO        reduce using rule 127 (comentario -> COMENTARIO .)
    ESTRELLA        reduce using rule 127 (comentario -> COMENTARIO .)
    MUEVE           reduce using rule 127 (comentario -> COMENTARIO .)
    LEVANTA         reduce using rule 127 (comentario -> COMENTARIO .)
    APOYA           reduce using rule 127 (comentario -> COMENTARIO .)
    DIMENSION       reduce using rule 127 (comentario -> COMENTARIO .)
    RETURN          reduce using rule 127 (comentario -> COMENTARIO .)
    IF              reduce using rule 127 (comentario -> COMENTARIO .)
    RKEY            reduce using rule 127 (comentario -> COMENTARIO .)


state 80

    (125) estatuto -> return .

    ID              reduce using rule 125 (estatuto -> return .)
    PRINT           reduce using rule 125 (estatuto -> return .)
    WHILE           reduce using rule 125 (estatuto -> return .)
    DO              reduce using rule 125 (estatuto -> return .)
    FOR             reduce using rule 125 (estatuto -> return .)
    READ            reduce using rule 125 (estatuto -> return .)
    READINT         reduce using rule 125 (estatuto -> return .)
    COMENTARIO      reduce using rule 125 (estatuto -> return .)
    CUADRADO        reduce using rule 125 (estatuto -> return .)
    TRIANGULO       reduce using rule 125 (estatuto -> return .)
    CASA            reduce using rule 125 (estatuto -> return .)
    RECTANGULO      reduce using rule 125 (estatuto -> return .)
    CUBO            reduce using rule 125 (estatuto -> return .)
    TRAPECIO        reduce using rule 125 (estatuto -> return .)
    ESTRELLA        reduce using rule 125 (estatuto -> return .)
    MUEVE           reduce using rule 125 (estatuto -> return .)
    LEVANTA         reduce using rule 125 (estatuto -> return .)
    APOYA           reduce using rule 125 (estatuto -> return .)
    DIMENSION       reduce using rule 125 (estatuto -> return .)
    RETURN          reduce using rule 125 (estatuto -> return .)
    IF              reduce using rule 125 (estatuto -> return .)
    RKEY            reduce using rule 125 (estatuto -> return .)


state 81

    (148) ciclofor -> FOR . LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor

    LPARENT         shift and go to state 125


state 82

    (173) levanta -> LEVANTA . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 126


state 83

    (110) estatuto -> read .

    ID              reduce using rule 110 (estatuto -> read .)
    PRINT           reduce using rule 110 (estatuto -> read .)
    WHILE           reduce using rule 110 (estatuto -> read .)
    DO              reduce using rule 110 (estatuto -> read .)
    FOR             reduce using rule 110 (estatuto -> read .)
    READ            reduce using rule 110 (estatuto -> read .)
    READINT         reduce using rule 110 (estatuto -> read .)
    COMENTARIO      reduce using rule 110 (estatuto -> read .)
    CUADRADO        reduce using rule 110 (estatuto -> read .)
    TRIANGULO       reduce using rule 110 (estatuto -> read .)
    CASA            reduce using rule 110 (estatuto -> read .)
    RECTANGULO      reduce using rule 110 (estatuto -> read .)
    CUBO            reduce using rule 110 (estatuto -> read .)
    TRAPECIO        reduce using rule 110 (estatuto -> read .)
    ESTRELLA        reduce using rule 110 (estatuto -> read .)
    MUEVE           reduce using rule 110 (estatuto -> read .)
    LEVANTA         reduce using rule 110 (estatuto -> read .)
    APOYA           reduce using rule 110 (estatuto -> read .)
    DIMENSION       reduce using rule 110 (estatuto -> read .)
    RETURN          reduce using rule 110 (estatuto -> read .)
    IF              reduce using rule 110 (estatuto -> read .)
    RKEY            reduce using rule 110 (estatuto -> read .)


state 84

    (117) estatuto -> cubo .

    ID              reduce using rule 117 (estatuto -> cubo .)
    PRINT           reduce using rule 117 (estatuto -> cubo .)
    WHILE           reduce using rule 117 (estatuto -> cubo .)
    DO              reduce using rule 117 (estatuto -> cubo .)
    FOR             reduce using rule 117 (estatuto -> cubo .)
    READ            reduce using rule 117 (estatuto -> cubo .)
    READINT         reduce using rule 117 (estatuto -> cubo .)
    COMENTARIO      reduce using rule 117 (estatuto -> cubo .)
    CUADRADO        reduce using rule 117 (estatuto -> cubo .)
    TRIANGULO       reduce using rule 117 (estatuto -> cubo .)
    CASA            reduce using rule 117 (estatuto -> cubo .)
    RECTANGULO      reduce using rule 117 (estatuto -> cubo .)
    CUBO            reduce using rule 117 (estatuto -> cubo .)
    TRAPECIO        reduce using rule 117 (estatuto -> cubo .)
    ESTRELLA        reduce using rule 117 (estatuto -> cubo .)
    MUEVE           reduce using rule 117 (estatuto -> cubo .)
    LEVANTA         reduce using rule 117 (estatuto -> cubo .)
    APOYA           reduce using rule 117 (estatuto -> cubo .)
    DIMENSION       reduce using rule 117 (estatuto -> cubo .)
    RETURN          reduce using rule 117 (estatuto -> cubo .)
    IF              reduce using rule 117 (estatuto -> cubo .)
    RKEY            reduce using rule 117 (estatuto -> cubo .)


state 85

    (109) estatuto -> ciclofor .

    ID              reduce using rule 109 (estatuto -> ciclofor .)
    PRINT           reduce using rule 109 (estatuto -> ciclofor .)
    WHILE           reduce using rule 109 (estatuto -> ciclofor .)
    DO              reduce using rule 109 (estatuto -> ciclofor .)
    FOR             reduce using rule 109 (estatuto -> ciclofor .)
    READ            reduce using rule 109 (estatuto -> ciclofor .)
    READINT         reduce using rule 109 (estatuto -> ciclofor .)
    COMENTARIO      reduce using rule 109 (estatuto -> ciclofor .)
    CUADRADO        reduce using rule 109 (estatuto -> ciclofor .)
    TRIANGULO       reduce using rule 109 (estatuto -> ciclofor .)
    CASA            reduce using rule 109 (estatuto -> ciclofor .)
    RECTANGULO      reduce using rule 109 (estatuto -> ciclofor .)
    CUBO            reduce using rule 109 (estatuto -> ciclofor .)
    TRAPECIO        reduce using rule 109 (estatuto -> ciclofor .)
    ESTRELLA        reduce using rule 109 (estatuto -> ciclofor .)
    MUEVE           reduce using rule 109 (estatuto -> ciclofor .)
    LEVANTA         reduce using rule 109 (estatuto -> ciclofor .)
    APOYA           reduce using rule 109 (estatuto -> ciclofor .)
    DIMENSION       reduce using rule 109 (estatuto -> ciclofor .)
    RETURN          reduce using rule 109 (estatuto -> ciclofor .)
    IF              reduce using rule 109 (estatuto -> ciclofor .)
    RKEY            reduce using rule 109 (estatuto -> ciclofor .)


state 86

    (119) estatuto -> estrella .

    ID              reduce using rule 119 (estatuto -> estrella .)
    PRINT           reduce using rule 119 (estatuto -> estrella .)
    WHILE           reduce using rule 119 (estatuto -> estrella .)
    DO              reduce using rule 119 (estatuto -> estrella .)
    FOR             reduce using rule 119 (estatuto -> estrella .)
    READ            reduce using rule 119 (estatuto -> estrella .)
    READINT         reduce using rule 119 (estatuto -> estrella .)
    COMENTARIO      reduce using rule 119 (estatuto -> estrella .)
    CUADRADO        reduce using rule 119 (estatuto -> estrella .)
    TRIANGULO       reduce using rule 119 (estatuto -> estrella .)
    CASA            reduce using rule 119 (estatuto -> estrella .)
    RECTANGULO      reduce using rule 119 (estatuto -> estrella .)
    CUBO            reduce using rule 119 (estatuto -> estrella .)
    TRAPECIO        reduce using rule 119 (estatuto -> estrella .)
    ESTRELLA        reduce using rule 119 (estatuto -> estrella .)
    MUEVE           reduce using rule 119 (estatuto -> estrella .)
    LEVANTA         reduce using rule 119 (estatuto -> estrella .)
    APOYA           reduce using rule 119 (estatuto -> estrella .)
    DIMENSION       reduce using rule 119 (estatuto -> estrella .)
    RETURN          reduce using rule 119 (estatuto -> estrella .)
    IF              reduce using rule 119 (estatuto -> estrella .)
    RKEY            reduce using rule 119 (estatuto -> estrella .)


state 87

    (165) rectangulo -> RECTANGULO . LPARENT exp COMA exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 127


state 88

    (108) estatuto -> ciclodowhile .

    ID              reduce using rule 108 (estatuto -> ciclodowhile .)
    PRINT           reduce using rule 108 (estatuto -> ciclodowhile .)
    WHILE           reduce using rule 108 (estatuto -> ciclodowhile .)
    DO              reduce using rule 108 (estatuto -> ciclodowhile .)
    FOR             reduce using rule 108 (estatuto -> ciclodowhile .)
    READ            reduce using rule 108 (estatuto -> ciclodowhile .)
    READINT         reduce using rule 108 (estatuto -> ciclodowhile .)
    COMENTARIO      reduce using rule 108 (estatuto -> ciclodowhile .)
    CUADRADO        reduce using rule 108 (estatuto -> ciclodowhile .)
    TRIANGULO       reduce using rule 108 (estatuto -> ciclodowhile .)
    CASA            reduce using rule 108 (estatuto -> ciclodowhile .)
    RECTANGULO      reduce using rule 108 (estatuto -> ciclodowhile .)
    CUBO            reduce using rule 108 (estatuto -> ciclodowhile .)
    TRAPECIO        reduce using rule 108 (estatuto -> ciclodowhile .)
    ESTRELLA        reduce using rule 108 (estatuto -> ciclodowhile .)
    MUEVE           reduce using rule 108 (estatuto -> ciclodowhile .)
    LEVANTA         reduce using rule 108 (estatuto -> ciclodowhile .)
    APOYA           reduce using rule 108 (estatuto -> ciclodowhile .)
    DIMENSION       reduce using rule 108 (estatuto -> ciclodowhile .)
    RETURN          reduce using rule 108 (estatuto -> ciclodowhile .)
    IF              reduce using rule 108 (estatuto -> ciclodowhile .)
    RKEY            reduce using rule 108 (estatuto -> ciclodowhile .)


state 89

    (64) asignacion -> ID . meteid asigfinal
    (191) llamafuncion -> ID . LPARENT tagverificafuncion llamaf11
    (96) f7 -> ID . LBRACKET tagrevisadime exp tagmetedim f8
    (66) meteid -> . empty
    (202) empty -> .

    LPARENT         shift and go to state 128
    LBRACKET        shift and go to state 129
    IGUAL           reduce using rule 202 (empty -> .)

    meteid                         shift and go to state 130
    empty                          shift and go to state 131

state 90

    (176) dimension -> DIMENSION . LPARENT exp RPARENT PUNTOCOMA

    LPARENT         shift and go to state 132


state 91

    (153) if -> IF . LPARENT expresion tagif RPARENT bloque if2

    LPARENT         shift and go to state 133


state 92

    (167) estrella -> ESTRELLA . LPARENT exp RPARENT tagestrella PUNTOCOMA

    LPARENT         shift and go to state 134


state 93

    (159) return -> RETURN . llegoRet expresion PUNTOCOMA
    (160) llegoRet -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    llegoRet                       shift and go to state 135
    empty                          shift and go to state 136

state 94

    (115) estatuto -> casa .

    ID              reduce using rule 115 (estatuto -> casa .)
    PRINT           reduce using rule 115 (estatuto -> casa .)
    WHILE           reduce using rule 115 (estatuto -> casa .)
    DO              reduce using rule 115 (estatuto -> casa .)
    FOR             reduce using rule 115 (estatuto -> casa .)
    READ            reduce using rule 115 (estatuto -> casa .)
    READINT         reduce using rule 115 (estatuto -> casa .)
    COMENTARIO      reduce using rule 115 (estatuto -> casa .)
    CUADRADO        reduce using rule 115 (estatuto -> casa .)
    TRIANGULO       reduce using rule 115 (estatuto -> casa .)
    CASA            reduce using rule 115 (estatuto -> casa .)
    RECTANGULO      reduce using rule 115 (estatuto -> casa .)
    CUBO            reduce using rule 115 (estatuto -> casa .)
    TRAPECIO        reduce using rule 115 (estatuto -> casa .)
    ESTRELLA        reduce using rule 115 (estatuto -> casa .)
    MUEVE           reduce using rule 115 (estatuto -> casa .)
    LEVANTA         reduce using rule 115 (estatuto -> casa .)
    APOYA           reduce using rule 115 (estatuto -> casa .)
    DIMENSION       reduce using rule 115 (estatuto -> casa .)
    RETURN          reduce using rule 115 (estatuto -> casa .)
    IF              reduce using rule 115 (estatuto -> casa .)
    RKEY            reduce using rule 115 (estatuto -> casa .)


state 95

    (105) estatuto -> asignacion .

    ID              reduce using rule 105 (estatuto -> asignacion .)
    PRINT           reduce using rule 105 (estatuto -> asignacion .)
    WHILE           reduce using rule 105 (estatuto -> asignacion .)
    DO              reduce using rule 105 (estatuto -> asignacion .)
    FOR             reduce using rule 105 (estatuto -> asignacion .)
    READ            reduce using rule 105 (estatuto -> asignacion .)
    READINT         reduce using rule 105 (estatuto -> asignacion .)
    COMENTARIO      reduce using rule 105 (estatuto -> asignacion .)
    CUADRADO        reduce using rule 105 (estatuto -> asignacion .)
    TRIANGULO       reduce using rule 105 (estatuto -> asignacion .)
    CASA            reduce using rule 105 (estatuto -> asignacion .)
    RECTANGULO      reduce using rule 105 (estatuto -> asignacion .)
    CUBO            reduce using rule 105 (estatuto -> asignacion .)
    TRAPECIO        reduce using rule 105 (estatuto -> asignacion .)
    ESTRELLA        reduce using rule 105 (estatuto -> asignacion .)
    MUEVE           reduce using rule 105 (estatuto -> asignacion .)
    LEVANTA         reduce using rule 105 (estatuto -> asignacion .)
    APOYA           reduce using rule 105 (estatuto -> asignacion .)
    DIMENSION       reduce using rule 105 (estatuto -> asignacion .)
    RETURN          reduce using rule 105 (estatuto -> asignacion .)
    IF              reduce using rule 105 (estatuto -> asignacion .)
    RKEY            reduce using rule 105 (estatuto -> asignacion .)


state 96

    (147) readint -> READINT . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 137


state 97

    (161) cuadrado -> CUADRADO . LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA

    LPARENT         shift and go to state 138


state 98

    (174) apoya -> APOYA . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 139


state 99

    (123) estatuto -> dimension .

    ID              reduce using rule 123 (estatuto -> dimension .)
    PRINT           reduce using rule 123 (estatuto -> dimension .)
    WHILE           reduce using rule 123 (estatuto -> dimension .)
    DO              reduce using rule 123 (estatuto -> dimension .)
    FOR             reduce using rule 123 (estatuto -> dimension .)
    READ            reduce using rule 123 (estatuto -> dimension .)
    READINT         reduce using rule 123 (estatuto -> dimension .)
    COMENTARIO      reduce using rule 123 (estatuto -> dimension .)
    CUADRADO        reduce using rule 123 (estatuto -> dimension .)
    TRIANGULO       reduce using rule 123 (estatuto -> dimension .)
    CASA            reduce using rule 123 (estatuto -> dimension .)
    RECTANGULO      reduce using rule 123 (estatuto -> dimension .)
    CUBO            reduce using rule 123 (estatuto -> dimension .)
    TRAPECIO        reduce using rule 123 (estatuto -> dimension .)
    ESTRELLA        reduce using rule 123 (estatuto -> dimension .)
    MUEVE           reduce using rule 123 (estatuto -> dimension .)
    LEVANTA         reduce using rule 123 (estatuto -> dimension .)
    APOYA           reduce using rule 123 (estatuto -> dimension .)
    DIMENSION       reduce using rule 123 (estatuto -> dimension .)
    RETURN          reduce using rule 123 (estatuto -> dimension .)
    IF              reduce using rule 123 (estatuto -> dimension .)
    RKEY            reduce using rule 123 (estatuto -> dimension .)


state 100

    (17) b3 -> declaracion b3 .

    ID              reduce using rule 17 (b3 -> declaracion b3 .)
    PRINT           reduce using rule 17 (b3 -> declaracion b3 .)
    WHILE           reduce using rule 17 (b3 -> declaracion b3 .)
    DO              reduce using rule 17 (b3 -> declaracion b3 .)
    FOR             reduce using rule 17 (b3 -> declaracion b3 .)
    READ            reduce using rule 17 (b3 -> declaracion b3 .)
    READINT         reduce using rule 17 (b3 -> declaracion b3 .)
    COMENTARIO      reduce using rule 17 (b3 -> declaracion b3 .)
    CUADRADO        reduce using rule 17 (b3 -> declaracion b3 .)
    TRIANGULO       reduce using rule 17 (b3 -> declaracion b3 .)
    CASA            reduce using rule 17 (b3 -> declaracion b3 .)
    RECTANGULO      reduce using rule 17 (b3 -> declaracion b3 .)
    CUBO            reduce using rule 17 (b3 -> declaracion b3 .)
    TRAPECIO        reduce using rule 17 (b3 -> declaracion b3 .)
    ESTRELLA        reduce using rule 17 (b3 -> declaracion b3 .)
    MUEVE           reduce using rule 17 (b3 -> declaracion b3 .)
    LEVANTA         reduce using rule 17 (b3 -> declaracion b3 .)
    APOYA           reduce using rule 17 (b3 -> declaracion b3 .)
    DIMENSION       reduce using rule 17 (b3 -> declaracion b3 .)
    RETURN          reduce using rule 17 (b3 -> declaracion b3 .)
    IF              reduce using rule 17 (b3 -> declaracion b3 .)
    RKEY            reduce using rule 17 (b3 -> declaracion b3 .)


state 101

    (52) decDimensionada -> empty .

    LPARENT         reduce using rule 52 (decDimensionada -> empty .)
    ID              reduce using rule 52 (decDimensionada -> empty .)
    ENTERO          reduce using rule 52 (decDimensionada -> empty .)
    FLOTANTE        reduce using rule 52 (decDimensionada -> empty .)
    CADENA          reduce using rule 52 (decDimensionada -> empty .)
    CARACTER        reduce using rule 52 (decDimensionada -> empty .)
    TRUE            reduce using rule 52 (decDimensionada -> empty .)
    FALSE           reduce using rule 52 (decDimensionada -> empty .)


state 102

    (50) decla1 -> LBRACKET decDimensionada . exp saveLimSup decla2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 155

state 103

    (49) decla1 -> saveMemNormal declafinal .

    INT             reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    FLOAT           reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    CHAR            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    STRING          reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    BOOL            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    FUNCTION        reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    LKEY            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    ID              reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    PRINT           reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    WHILE           reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    DO              reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    FOR             reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    READ            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    READINT         reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    COMENTARIO      reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    CUADRADO        reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    TRIANGULO       reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    CASA            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    RECTANGULO      reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    CUBO            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    TRAPECIO        reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    ESTRELLA        reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    MUEVE           reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    LEVANTA         reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    APOYA           reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    DIMENSION       reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    RETURN          reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    IF              reduce using rule 49 (decla1 -> saveMemNormal declafinal .)
    RKEY            reduce using rule 49 (decla1 -> saveMemNormal declafinal .)


state 104

    (58) declafinal -> PUNTOCOMA .

    INT             reduce using rule 58 (declafinal -> PUNTOCOMA .)
    FLOAT           reduce using rule 58 (declafinal -> PUNTOCOMA .)
    CHAR            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    STRING          reduce using rule 58 (declafinal -> PUNTOCOMA .)
    BOOL            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    FUNCTION        reduce using rule 58 (declafinal -> PUNTOCOMA .)
    LKEY            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    ID              reduce using rule 58 (declafinal -> PUNTOCOMA .)
    PRINT           reduce using rule 58 (declafinal -> PUNTOCOMA .)
    WHILE           reduce using rule 58 (declafinal -> PUNTOCOMA .)
    DO              reduce using rule 58 (declafinal -> PUNTOCOMA .)
    FOR             reduce using rule 58 (declafinal -> PUNTOCOMA .)
    READ            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    READINT         reduce using rule 58 (declafinal -> PUNTOCOMA .)
    COMENTARIO      reduce using rule 58 (declafinal -> PUNTOCOMA .)
    CUADRADO        reduce using rule 58 (declafinal -> PUNTOCOMA .)
    TRIANGULO       reduce using rule 58 (declafinal -> PUNTOCOMA .)
    CASA            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    RECTANGULO      reduce using rule 58 (declafinal -> PUNTOCOMA .)
    CUBO            reduce using rule 58 (declafinal -> PUNTOCOMA .)
    TRAPECIO        reduce using rule 58 (declafinal -> PUNTOCOMA .)
    ESTRELLA        reduce using rule 58 (declafinal -> PUNTOCOMA .)
    MUEVE           reduce using rule 58 (declafinal -> PUNTOCOMA .)
    LEVANTA         reduce using rule 58 (declafinal -> PUNTOCOMA .)
    APOYA           reduce using rule 58 (declafinal -> PUNTOCOMA .)
    DIMENSION       reduce using rule 58 (declafinal -> PUNTOCOMA .)
    RETURN          reduce using rule 58 (declafinal -> PUNTOCOMA .)
    IF              reduce using rule 58 (declafinal -> PUNTOCOMA .)
    RKEY            reduce using rule 58 (declafinal -> PUNTOCOMA .)


state 105

    (178) pfunc -> tipo ID buildFunc . LPARENT funct11

    LPARENT         shift and go to state 157


state 106

    (180) buildFunc -> empty .

    LPARENT         reduce using rule 180 (buildFunc -> empty .)


state 107

    (179) pfunc -> VOID ID buildFunc . LPARENT funct11

    LPARENT         shift and go to state 158


state 108

    (144) taginiciado -> empty .

    LKEY            reduce using rule 144 (taginiciado -> empty .)


state 109

    (143) ciclodowhile -> DO taginiciado . bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (202) empty -> .

    LKEY            reduce using rule 202 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 159
    empty                          shift and go to state 24

state 110

    (71) asigfinal -> IGUAL . tagmeteig asigf2
    (75) tagmeteig -> . empty
    (202) empty -> .

    READ            reduce using rule 202 (empty -> .)
    READINT         reduce using rule 202 (empty -> .)
    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    empty                          shift and go to state 160
    tagmeteig                      shift and go to state 161

state 111

    (65) asignacion -> f7 asigfinal .

    ID              reduce using rule 65 (asignacion -> f7 asigfinal .)
    PRINT           reduce using rule 65 (asignacion -> f7 asigfinal .)
    WHILE           reduce using rule 65 (asignacion -> f7 asigfinal .)
    DO              reduce using rule 65 (asignacion -> f7 asigfinal .)
    FOR             reduce using rule 65 (asignacion -> f7 asigfinal .)
    READ            reduce using rule 65 (asignacion -> f7 asigfinal .)
    READINT         reduce using rule 65 (asignacion -> f7 asigfinal .)
    COMENTARIO      reduce using rule 65 (asignacion -> f7 asigfinal .)
    CUADRADO        reduce using rule 65 (asignacion -> f7 asigfinal .)
    TRIANGULO       reduce using rule 65 (asignacion -> f7 asigfinal .)
    CASA            reduce using rule 65 (asignacion -> f7 asigfinal .)
    RECTANGULO      reduce using rule 65 (asignacion -> f7 asigfinal .)
    CUBO            reduce using rule 65 (asignacion -> f7 asigfinal .)
    TRAPECIO        reduce using rule 65 (asignacion -> f7 asigfinal .)
    ESTRELLA        reduce using rule 65 (asignacion -> f7 asigfinal .)
    MUEVE           reduce using rule 65 (asignacion -> f7 asigfinal .)
    LEVANTA         reduce using rule 65 (asignacion -> f7 asigfinal .)
    APOYA           reduce using rule 65 (asignacion -> f7 asigfinal .)
    DIMENSION       reduce using rule 65 (asignacion -> f7 asigfinal .)
    RETURN          reduce using rule 65 (asignacion -> f7 asigfinal .)
    IF              reduce using rule 65 (asignacion -> f7 asigfinal .)
    RKEY            reduce using rule 65 (asignacion -> f7 asigfinal .)
    LPARENT         reduce using rule 65 (asignacion -> f7 asigfinal .)
    ENTERO          reduce using rule 65 (asignacion -> f7 asigfinal .)
    FLOTANTE        reduce using rule 65 (asignacion -> f7 asigfinal .)
    CADENA          reduce using rule 65 (asignacion -> f7 asigfinal .)
    CARACTER        reduce using rule 65 (asignacion -> f7 asigfinal .)
    TRUE            reduce using rule 65 (asignacion -> f7 asigfinal .)
    FALSE           reduce using rule 65 (asignacion -> f7 asigfinal .)
    RPARENT         reduce using rule 65 (asignacion -> f7 asigfinal .)


state 112

    (146) read -> READ LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 162


state 113

    (171) mueve -> MUEVE LPARENT . exp COMA exp RPARENT tagmueve PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 163

state 114

    (15) bloque -> iniEnv LKEY b3 b4 b5 .

    $end            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    FUNCTION        reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    LKEY            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    WHILE           reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    ID              reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    PRINT           reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    DO              reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    FOR             reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    READ            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    READINT         reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    COMENTARIO      reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    CUADRADO        reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    TRIANGULO       reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    CASA            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    RECTANGULO      reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    CUBO            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    TRAPECIO        reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    ESTRELLA        reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    MUEVE           reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    LEVANTA         reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    APOYA           reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    DIMENSION       reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    RETURN          reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    IF              reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    RKEY            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)
    ELSE            reduce using rule 15 (bloque -> iniEnv LKEY b3 b4 b5 .)


state 115

    (21) b5 -> recEnv . RKEY

    RKEY            shift and go to state 164


state 116

    (22) recEnv -> empty .

    RKEY            reduce using rule 22 (recEnv -> empty .)


state 117

    (139) ciclowhile -> WHILE taginiciawhile . LPARENT expresion RPARENT tagwhile bloque tagregresawhile

    LPARENT         shift and go to state 165


state 118

    (140) taginiciawhile -> empty .

    LPARENT         reduce using rule 140 (taginiciawhile -> empty .)


state 119

    (175) trapecio -> TRAPECIO LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 166

state 120

    (77) print -> PRINT LPARENT . pr2
    (78) pr2 -> . expresion pr3
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    expresion2                     shift and go to state 167
    pr2                            shift and go to state 168
    expresion                      shift and go to state 169
    exp                            shift and go to state 170

state 121

    (166) casa -> CASA LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 171

state 122

    (19) b4 -> estatuto b4 .

    RKEY            reduce using rule 19 (b4 -> estatuto b4 .)


state 123

    (169) cubo -> CUBO LPARENT . exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 172

state 124

    (163) triangulo -> TRIANGULO LPARENT . exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 173

state 125

    (148) ciclofor -> FOR LPARENT . asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor
    (64) asignacion -> . ID meteid asigfinal
    (65) asignacion -> . f7 asigfinal
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8

    ID              shift and go to state 175

    asignacion                     shift and go to state 174
    f7                             shift and go to state 54

state 126

    (173) levanta -> LEVANTA LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 176


state 127

    (165) rectangulo -> RECTANGULO LPARENT . exp COMA exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 177

state 128

    (191) llamafuncion -> ID LPARENT . tagverificafuncion llamaf11
    (198) tagverificafuncion -> . empty
    (202) empty -> .

    RPARENT         reduce using rule 202 (empty -> .)
    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    empty                          shift and go to state 178
    tagverificafuncion             shift and go to state 179

state 129

    (96) f7 -> ID LBRACKET . tagrevisadime exp tagmetedim f8
    (99) tagrevisadime -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagrevisadime                  shift and go to state 180
    empty                          shift and go to state 181

state 130

    (64) asignacion -> ID meteid . asigfinal
    (71) asigfinal -> . IGUAL tagmeteig asigf2

    IGUAL           shift and go to state 110

    asigfinal                      shift and go to state 182

state 131

    (66) meteid -> empty .

    IGUAL           reduce using rule 66 (meteid -> empty .)


state 132

    (176) dimension -> DIMENSION LPARENT . exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 183

state 133

    (153) if -> IF LPARENT . expresion tagif RPARENT bloque if2
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    expresion2                     shift and go to state 167
    expresion                      shift and go to state 184
    exp                            shift and go to state 170

state 134

    (167) estrella -> ESTRELLA LPARENT . exp RPARENT tagestrella PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    f3                             shift and go to state 141
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 185

state 135

    (159) return -> RETURN llegoRet . expresion PUNTOCOMA
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    expresion2                     shift and go to state 167
    expresion                      shift and go to state 186
    exp                            shift and go to state 170

state 136

    (160) llegoRet -> empty .

    LPARENT         reduce using rule 160 (llegoRet -> empty .)
    ID              reduce using rule 160 (llegoRet -> empty .)
    ENTERO          reduce using rule 160 (llegoRet -> empty .)
    FLOTANTE        reduce using rule 160 (llegoRet -> empty .)
    CADENA          reduce using rule 160 (llegoRet -> empty .)
    CARACTER        reduce using rule 160 (llegoRet -> empty .)
    TRUE            reduce using rule 160 (llegoRet -> empty .)
    FALSE           reduce using rule 160 (llegoRet -> empty .)


state 137

    (147) readint -> READINT LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 187


state 138

    (161) cuadrado -> CUADRADO LPARENT . exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 188

state 139

    (174) apoya -> APOYA LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 189


state 140

    (88) factor -> f2 .

    MULT            reduce using rule 88 (factor -> f2 .)
    DIV             reduce using rule 88 (factor -> f2 .)
    SUMA            reduce using rule 88 (factor -> f2 .)
    RESTA           reduce using rule 88 (factor -> f2 .)
    COMA            reduce using rule 88 (factor -> f2 .)
    AND             reduce using rule 88 (factor -> f2 .)
    OR              reduce using rule 88 (factor -> f2 .)
    RPARENT         reduce using rule 88 (factor -> f2 .)
    PUNTOCOMA       reduce using rule 88 (factor -> f2 .)
    ID              reduce using rule 88 (factor -> f2 .)
    GT              reduce using rule 88 (factor -> f2 .)
    LT              reduce using rule 88 (factor -> f2 .)
    LE              reduce using rule 88 (factor -> f2 .)
    GE              reduce using rule 88 (factor -> f2 .)
    DIF             reduce using rule 88 (factor -> f2 .)
    SAME            reduce using rule 88 (factor -> f2 .)
    RBRACKET        reduce using rule 88 (factor -> f2 .)


state 141

    (89) factor -> f3 .

    MULT            reduce using rule 89 (factor -> f3 .)
    DIV             reduce using rule 89 (factor -> f3 .)
    SUMA            reduce using rule 89 (factor -> f3 .)
    RESTA           reduce using rule 89 (factor -> f3 .)
    COMA            reduce using rule 89 (factor -> f3 .)
    AND             reduce using rule 89 (factor -> f3 .)
    OR              reduce using rule 89 (factor -> f3 .)
    RPARENT         reduce using rule 89 (factor -> f3 .)
    PUNTOCOMA       reduce using rule 89 (factor -> f3 .)
    ID              reduce using rule 89 (factor -> f3 .)
    GT              reduce using rule 89 (factor -> f3 .)
    LT              reduce using rule 89 (factor -> f3 .)
    LE              reduce using rule 89 (factor -> f3 .)
    GE              reduce using rule 89 (factor -> f3 .)
    DIF             reduce using rule 89 (factor -> f3 .)
    SAME            reduce using rule 89 (factor -> f3 .)
    RBRACKET        reduce using rule 89 (factor -> f3 .)


state 142

    (90) factor -> f6 .

    MULT            reduce using rule 90 (factor -> f6 .)
    DIV             reduce using rule 90 (factor -> f6 .)
    SUMA            reduce using rule 90 (factor -> f6 .)
    RESTA           reduce using rule 90 (factor -> f6 .)
    COMA            reduce using rule 90 (factor -> f6 .)
    AND             reduce using rule 90 (factor -> f6 .)
    OR              reduce using rule 90 (factor -> f6 .)
    RPARENT         reduce using rule 90 (factor -> f6 .)
    PUNTOCOMA       reduce using rule 90 (factor -> f6 .)
    ID              reduce using rule 90 (factor -> f6 .)
    GT              reduce using rule 90 (factor -> f6 .)
    LT              reduce using rule 90 (factor -> f6 .)
    LE              reduce using rule 90 (factor -> f6 .)
    GE              reduce using rule 90 (factor -> f6 .)
    DIF             reduce using rule 90 (factor -> f6 .)
    SAME            reduce using rule 90 (factor -> f6 .)
    RBRACKET        reduce using rule 90 (factor -> f6 .)


state 143

    (91) factor -> f7 .

    MULT            reduce using rule 91 (factor -> f7 .)
    DIV             reduce using rule 91 (factor -> f7 .)
    SUMA            reduce using rule 91 (factor -> f7 .)
    RESTA           reduce using rule 91 (factor -> f7 .)
    COMA            reduce using rule 91 (factor -> f7 .)
    AND             reduce using rule 91 (factor -> f7 .)
    OR              reduce using rule 91 (factor -> f7 .)
    RPARENT         reduce using rule 91 (factor -> f7 .)
    PUNTOCOMA       reduce using rule 91 (factor -> f7 .)
    ID              reduce using rule 91 (factor -> f7 .)
    GT              reduce using rule 91 (factor -> f7 .)
    LT              reduce using rule 91 (factor -> f7 .)
    LE              reduce using rule 91 (factor -> f7 .)
    GE              reduce using rule 91 (factor -> f7 .)
    DIF             reduce using rule 91 (factor -> f7 .)
    SAME            reduce using rule 91 (factor -> f7 .)
    RBRACKET        reduce using rule 91 (factor -> f7 .)


state 144

    (41) exp -> termino . tagsacops exp2
    (46) tagsacops -> . empty
    (202) empty -> .

    SUMA            reduce using rule 202 (empty -> .)
    RESTA           reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagsacops                      shift and go to state 190
    empty                          shift and go to state 191

state 145

    (132) varcte -> TRUE . tagbol
    (138) tagbol -> . empty
    (202) empty -> .

    MULT            reduce using rule 202 (empty -> .)
    DIV             reduce using rule 202 (empty -> .)
    SUMA            reduce using rule 202 (empty -> .)
    RESTA           reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagbol                         shift and go to state 192
    empty                          shift and go to state 193

state 146

    (87) factor -> LPARENT . tagfondofalso expresion RPARENT tagsacafondo
    (94) tagfondofalso -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagfondofalso                  shift and go to state 194
    empty                          shift and go to state 195

state 147

    (92) f2 -> varcte .

    MULT            reduce using rule 92 (f2 -> varcte .)
    DIV             reduce using rule 92 (f2 -> varcte .)
    SUMA            reduce using rule 92 (f2 -> varcte .)
    RESTA           reduce using rule 92 (f2 -> varcte .)
    COMA            reduce using rule 92 (f2 -> varcte .)
    RBRACKET        reduce using rule 92 (f2 -> varcte .)
    RPARENT         reduce using rule 92 (f2 -> varcte .)
    GT              reduce using rule 92 (f2 -> varcte .)
    LT              reduce using rule 92 (f2 -> varcte .)
    LE              reduce using rule 92 (f2 -> varcte .)
    GE              reduce using rule 92 (f2 -> varcte .)
    DIF             reduce using rule 92 (f2 -> varcte .)
    SAME            reduce using rule 92 (f2 -> varcte .)
    AND             reduce using rule 92 (f2 -> varcte .)
    OR              reduce using rule 92 (f2 -> varcte .)
    PUNTOCOMA       reduce using rule 92 (f2 -> varcte .)
    ID              reduce using rule 92 (f2 -> varcte .)


state 148

    (130) varcte -> CADENA . tagcad
    (136) tagcad -> . empty
    (202) empty -> .

    MULT            reduce using rule 202 (empty -> .)
    DIV             reduce using rule 202 (empty -> .)
    SUMA            reduce using rule 202 (empty -> .)
    RESTA           reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagcad                         shift and go to state 196
    empty                          shift and go to state 197

state 149

    (103) f6 -> llamafuncion .

    MULT            reduce using rule 103 (f6 -> llamafuncion .)
    DIV             reduce using rule 103 (f6 -> llamafuncion .)
    SUMA            reduce using rule 103 (f6 -> llamafuncion .)
    RESTA           reduce using rule 103 (f6 -> llamafuncion .)
    RPARENT         reduce using rule 103 (f6 -> llamafuncion .)
    GT              reduce using rule 103 (f6 -> llamafuncion .)
    LT              reduce using rule 103 (f6 -> llamafuncion .)
    LE              reduce using rule 103 (f6 -> llamafuncion .)
    GE              reduce using rule 103 (f6 -> llamafuncion .)
    DIF             reduce using rule 103 (f6 -> llamafuncion .)
    SAME            reduce using rule 103 (f6 -> llamafuncion .)
    AND             reduce using rule 103 (f6 -> llamafuncion .)
    OR              reduce using rule 103 (f6 -> llamafuncion .)
    COMA            reduce using rule 103 (f6 -> llamafuncion .)
    RBRACKET        reduce using rule 103 (f6 -> llamafuncion .)
    PUNTOCOMA       reduce using rule 103 (f6 -> llamafuncion .)
    ID              reduce using rule 103 (f6 -> llamafuncion .)


state 150

    (81) termino -> factor . tagsacopm te2
    (86) tagsacopm -> . empty
    (202) empty -> .

    MULT            reduce using rule 202 (empty -> .)
    DIV             reduce using rule 202 (empty -> .)
    SUMA            reduce using rule 202 (empty -> .)
    RESTA           reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagsacopm                      shift and go to state 198
    empty                          shift and go to state 199

state 151

    (128) varcte -> ENTERO . tagint
    (134) tagint -> . empty
    (202) empty -> .

    MULT            reduce using rule 202 (empty -> .)
    DIV             reduce using rule 202 (empty -> .)
    SUMA            reduce using rule 202 (empty -> .)
    RESTA           reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagint                         shift and go to state 200
    empty                          shift and go to state 201

state 152

    (131) varcte -> CARACTER . tagcar
    (137) tagcar -> . empty
    (202) empty -> .

    MULT            reduce using rule 202 (empty -> .)
    DIV             reduce using rule 202 (empty -> .)
    SUMA            reduce using rule 202 (empty -> .)
    RESTA           reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagcar                         shift and go to state 202
    empty                          shift and go to state 203

state 153

    (93) f3 -> ID .
    (96) f7 -> ID . LBRACKET tagrevisadime exp tagmetedim f8
    (191) llamafuncion -> ID . LPARENT tagverificafuncion llamaf11

    MULT            reduce using rule 93 (f3 -> ID .)
    DIV             reduce using rule 93 (f3 -> ID .)
    SUMA            reduce using rule 93 (f3 -> ID .)
    RESTA           reduce using rule 93 (f3 -> ID .)
    RPARENT         reduce using rule 93 (f3 -> ID .)
    COMA            reduce using rule 93 (f3 -> ID .)
    AND             reduce using rule 93 (f3 -> ID .)
    OR              reduce using rule 93 (f3 -> ID .)
    PUNTOCOMA       reduce using rule 93 (f3 -> ID .)
    ID              reduce using rule 93 (f3 -> ID .)
    GT              reduce using rule 93 (f3 -> ID .)
    LT              reduce using rule 93 (f3 -> ID .)
    LE              reduce using rule 93 (f3 -> ID .)
    GE              reduce using rule 93 (f3 -> ID .)
    DIF             reduce using rule 93 (f3 -> ID .)
    SAME            reduce using rule 93 (f3 -> ID .)
    RBRACKET        reduce using rule 93 (f3 -> ID .)
    LBRACKET        shift and go to state 129
    LPARENT         shift and go to state 128


state 154

    (133) varcte -> FALSE . tagbol
    (138) tagbol -> . empty
    (202) empty -> .

    MULT            reduce using rule 202 (empty -> .)
    DIV             reduce using rule 202 (empty -> .)
    SUMA            reduce using rule 202 (empty -> .)
    RESTA           reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagbol                         shift and go to state 204
    empty                          shift and go to state 193

state 155

    (50) decla1 -> LBRACKET decDimensionada exp . saveLimSup decla2
    (53) saveLimSup -> . empty
    (202) empty -> .

    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)

    empty                          shift and go to state 206
    saveLimSup                     shift and go to state 205

state 156

    (129) varcte -> FLOTANTE . tagfloat
    (135) tagfloat -> . empty
    (202) empty -> .

    MULT            reduce using rule 202 (empty -> .)
    DIV             reduce using rule 202 (empty -> .)
    SUMA            reduce using rule 202 (empty -> .)
    RESTA           reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    empty                          shift and go to state 207
    tagfloat                       shift and go to state 208

state 157

    (178) pfunc -> tipo ID buildFunc LPARENT . funct11
    (181) funct11 -> . function4
    (182) funct11 -> . initParamTable funct2
    (188) function4 -> . RPARENT initFunc bloque noinitFunc
    (183) initParamTable -> . empty
    (202) empty -> .

    RPARENT         shift and go to state 211
    INT             reduce using rule 202 (empty -> .)
    FLOAT           reduce using rule 202 (empty -> .)
    CHAR            reduce using rule 202 (empty -> .)
    STRING          reduce using rule 202 (empty -> .)
    BOOL            reduce using rule 202 (empty -> .)

    function4                      shift and go to state 209
    funct11                        shift and go to state 210
    initParamTable                 shift and go to state 212
    empty                          shift and go to state 213

state 158

    (179) pfunc -> VOID ID buildFunc LPARENT . funct11
    (181) funct11 -> . function4
    (182) funct11 -> . initParamTable funct2
    (188) function4 -> . RPARENT initFunc bloque noinitFunc
    (183) initParamTable -> . empty
    (202) empty -> .

    RPARENT         shift and go to state 211
    INT             reduce using rule 202 (empty -> .)
    FLOAT           reduce using rule 202 (empty -> .)
    CHAR            reduce using rule 202 (empty -> .)
    STRING          reduce using rule 202 (empty -> .)
    BOOL            reduce using rule 202 (empty -> .)

    function4                      shift and go to state 209
    funct11                        shift and go to state 214
    initParamTable                 shift and go to state 212
    empty                          shift and go to state 213

state 159

    (143) ciclodowhile -> DO taginiciado bloque . WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA

    WHILE           shift and go to state 215


state 160

    (75) tagmeteig -> empty .

    READ            reduce using rule 75 (tagmeteig -> empty .)
    READINT         reduce using rule 75 (tagmeteig -> empty .)
    LPARENT         reduce using rule 75 (tagmeteig -> empty .)
    ID              reduce using rule 75 (tagmeteig -> empty .)
    ENTERO          reduce using rule 75 (tagmeteig -> empty .)
    FLOTANTE        reduce using rule 75 (tagmeteig -> empty .)
    CADENA          reduce using rule 75 (tagmeteig -> empty .)
    CARACTER        reduce using rule 75 (tagmeteig -> empty .)
    TRUE            reduce using rule 75 (tagmeteig -> empty .)
    FALSE           reduce using rule 75 (tagmeteig -> empty .)


state 161

    (71) asigfinal -> IGUAL tagmeteig . asigf2
    (72) asigf2 -> . expresion tagig PUNTOCOMA
    (73) asigf2 -> . read tagig
    (74) asigf2 -> . readint tagig
    (23) expresion -> . expresion2 expre
    (146) read -> . READ LPARENT RPARENT PUNTOCOMA
    (147) readint -> . READINT LPARENT RPARENT PUNTOCOMA
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    READ            shift and go to state 55
    READINT         shift and go to state 96
    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    asigf2                         shift and go to state 216
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    readint                        shift and go to state 217
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    expresion2                     shift and go to state 167
    read                           shift and go to state 218
    expresion                      shift and go to state 219
    exp                            shift and go to state 170

state 162

    (146) read -> READ LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 220


state 163

    (171) mueve -> MUEVE LPARENT exp . COMA exp RPARENT tagmueve PUNTOCOMA

    COMA            shift and go to state 221


state 164

    (21) b5 -> recEnv RKEY .

    $end            reduce using rule 21 (b5 -> recEnv RKEY .)
    WHILE           reduce using rule 21 (b5 -> recEnv RKEY .)
    FUNCTION        reduce using rule 21 (b5 -> recEnv RKEY .)
    LKEY            reduce using rule 21 (b5 -> recEnv RKEY .)
    ELSE            reduce using rule 21 (b5 -> recEnv RKEY .)
    ID              reduce using rule 21 (b5 -> recEnv RKEY .)
    PRINT           reduce using rule 21 (b5 -> recEnv RKEY .)
    DO              reduce using rule 21 (b5 -> recEnv RKEY .)
    FOR             reduce using rule 21 (b5 -> recEnv RKEY .)
    READ            reduce using rule 21 (b5 -> recEnv RKEY .)
    READINT         reduce using rule 21 (b5 -> recEnv RKEY .)
    COMENTARIO      reduce using rule 21 (b5 -> recEnv RKEY .)
    CUADRADO        reduce using rule 21 (b5 -> recEnv RKEY .)
    TRIANGULO       reduce using rule 21 (b5 -> recEnv RKEY .)
    CASA            reduce using rule 21 (b5 -> recEnv RKEY .)
    RECTANGULO      reduce using rule 21 (b5 -> recEnv RKEY .)
    CUBO            reduce using rule 21 (b5 -> recEnv RKEY .)
    TRAPECIO        reduce using rule 21 (b5 -> recEnv RKEY .)
    ESTRELLA        reduce using rule 21 (b5 -> recEnv RKEY .)
    MUEVE           reduce using rule 21 (b5 -> recEnv RKEY .)
    LEVANTA         reduce using rule 21 (b5 -> recEnv RKEY .)
    APOYA           reduce using rule 21 (b5 -> recEnv RKEY .)
    DIMENSION       reduce using rule 21 (b5 -> recEnv RKEY .)
    RETURN          reduce using rule 21 (b5 -> recEnv RKEY .)
    IF              reduce using rule 21 (b5 -> recEnv RKEY .)
    RKEY            reduce using rule 21 (b5 -> recEnv RKEY .)


state 165

    (139) ciclowhile -> WHILE taginiciawhile LPARENT . expresion RPARENT tagwhile bloque tagregresawhile
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    expresion2                     shift and go to state 167
    expresion                      shift and go to state 222
    exp                            shift and go to state 170

state 166

    (175) trapecio -> TRAPECIO LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 223


state 167

    (23) expresion -> expresion2 . expre
    (24) expre -> . expre2
    (25) expre -> . empty
    (26) expre2 -> . AND tagmetelog expresion tagsacalog
    (27) expre2 -> . OR tagmetelog expresion tagsacalog
    (202) empty -> .

    AND             shift and go to state 224
    OR              shift and go to state 227
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    expre                          shift and go to state 225
    expre2                         shift and go to state 226
    empty                          shift and go to state 228

state 168

    (77) print -> PRINT LPARENT pr2 .

    ID              reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    PRINT           reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    WHILE           reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    DO              reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    FOR             reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    READ            reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    READINT         reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    COMENTARIO      reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    CUADRADO        reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    TRIANGULO       reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    CASA            reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    RECTANGULO      reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    CUBO            reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    TRAPECIO        reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    ESTRELLA        reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    MUEVE           reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    LEVANTA         reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    APOYA           reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    DIMENSION       reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    RETURN          reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    IF              reduce using rule 77 (print -> PRINT LPARENT pr2 .)
    RKEY            reduce using rule 77 (print -> PRINT LPARENT pr2 .)


state 169

    (78) pr2 -> expresion . pr3
    (79) pr3 -> . tagimprime RPARENT PUNTOCOMA
    (80) tagimprime -> . empty
    (202) empty -> .

    RPARENT         reduce using rule 202 (empty -> .)

    tagimprime                     shift and go to state 230
    empty                          shift and go to state 231
    pr3                            shift and go to state 229

state 170

    (30) expresion2 -> exp . e2
    (31) e2 -> . e3
    (32) e2 -> . empty
    (33) e3 -> . GT tagrel exp tagsacrel
    (34) e3 -> . LT tagrel exp tagsacrel
    (35) e3 -> . LE tagrel exp tagsacrel
    (36) e3 -> . GE tagrel exp tagsacrel
    (37) e3 -> . DIF tagrel exp tagsacrel
    (38) e3 -> . SAME tagrel exp tagsacrel
    (202) empty -> .

    GT              shift and go to state 237
    LT              shift and go to state 236
    LE              shift and go to state 234
    GE              shift and go to state 232
    DIF             shift and go to state 233
    SAME            shift and go to state 235
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    e3                             shift and go to state 238
    empty                          shift and go to state 239
    e2                             shift and go to state 240

state 171

    (166) casa -> CASA LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 241


state 172

    (169) cubo -> CUBO LPARENT exp . COMA exp COMA exp RPARENT tagcubo PUNTOCOMA

    COMA            shift and go to state 242


state 173

    (163) triangulo -> TRIANGULO LPARENT exp . COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA

    COMA            shift and go to state 243


state 174

    (148) ciclofor -> FOR LPARENT asignacion . expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f7                             shift and go to state 143
    f3                             shift and go to state 141
    termino                        shift and go to state 144
    f6                             shift and go to state 142
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    expresion2                     shift and go to state 167
    expresion                      shift and go to state 244
    varcte                         shift and go to state 147
    exp                            shift and go to state 170

state 175

    (64) asignacion -> ID . meteid asigfinal
    (96) f7 -> ID . LBRACKET tagrevisadime exp tagmetedim f8
    (66) meteid -> . empty
    (202) empty -> .

    LBRACKET        shift and go to state 129
    IGUAL           reduce using rule 202 (empty -> .)

    meteid                         shift and go to state 130
    empty                          shift and go to state 131

state 176

    (173) levanta -> LEVANTA LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 245


state 177

    (165) rectangulo -> RECTANGULO LPARENT exp . COMA exp RPARENT PUNTOCOMA

    COMA            shift and go to state 246


state 178

    (198) tagverificafuncion -> empty .

    RPARENT         reduce using rule 198 (tagverificafuncion -> empty .)
    LPARENT         reduce using rule 198 (tagverificafuncion -> empty .)
    ID              reduce using rule 198 (tagverificafuncion -> empty .)
    ENTERO          reduce using rule 198 (tagverificafuncion -> empty .)
    FLOTANTE        reduce using rule 198 (tagverificafuncion -> empty .)
    CADENA          reduce using rule 198 (tagverificafuncion -> empty .)
    CARACTER        reduce using rule 198 (tagverificafuncion -> empty .)
    TRUE            reduce using rule 198 (tagverificafuncion -> empty .)
    FALSE           reduce using rule 198 (tagverificafuncion -> empty .)


state 179

    (191) llamafuncion -> ID LPARENT tagverificafuncion . llamaf11
    (192) llamaf11 -> . llamaf2
    (193) llamaf11 -> . llamaf4
    (194) llamaf2 -> . exp tagrevisaparam llamaf3
    (197) llamaf4 -> . RPARENT tagterminallamada PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    RPARENT         shift and go to state 247
    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    llamaf2                        shift and go to state 248
    llamaf4                        shift and go to state 249
    exp                            shift and go to state 250
    llamaf11                       shift and go to state 251

state 180

    (96) f7 -> ID LBRACKET tagrevisadime . exp tagmetedim f8
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 252

state 181

    (99) tagrevisadime -> empty .

    LPARENT         reduce using rule 99 (tagrevisadime -> empty .)
    ID              reduce using rule 99 (tagrevisadime -> empty .)
    ENTERO          reduce using rule 99 (tagrevisadime -> empty .)
    FLOTANTE        reduce using rule 99 (tagrevisadime -> empty .)
    CADENA          reduce using rule 99 (tagrevisadime -> empty .)
    CARACTER        reduce using rule 99 (tagrevisadime -> empty .)
    TRUE            reduce using rule 99 (tagrevisadime -> empty .)
    FALSE           reduce using rule 99 (tagrevisadime -> empty .)


state 182

    (64) asignacion -> ID meteid asigfinal .

    ID              reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    PRINT           reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    WHILE           reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    DO              reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    FOR             reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    READ            reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    READINT         reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    COMENTARIO      reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    CUADRADO        reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    TRIANGULO       reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    CASA            reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    RECTANGULO      reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    CUBO            reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    TRAPECIO        reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    ESTRELLA        reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    MUEVE           reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    LEVANTA         reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    APOYA           reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    DIMENSION       reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    RETURN          reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    IF              reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    RKEY            reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    LPARENT         reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    ENTERO          reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    FLOTANTE        reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    CADENA          reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    CARACTER        reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    TRUE            reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    FALSE           reduce using rule 64 (asignacion -> ID meteid asigfinal .)
    RPARENT         reduce using rule 64 (asignacion -> ID meteid asigfinal .)


state 183

    (176) dimension -> DIMENSION LPARENT exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 253


state 184

    (153) if -> IF LPARENT expresion . tagif RPARENT bloque if2
    (156) tagif -> . empty
    (202) empty -> .

    RPARENT         reduce using rule 202 (empty -> .)

    tagif                          shift and go to state 254
    empty                          shift and go to state 255

state 185

    (167) estrella -> ESTRELLA LPARENT exp . RPARENT tagestrella PUNTOCOMA

    RPARENT         shift and go to state 256


state 186

    (159) return -> RETURN llegoRet expresion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 257


state 187

    (147) readint -> READINT LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 258


state 188

    (161) cuadrado -> CUADRADO LPARENT exp . COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA

    COMA            shift and go to state 259


state 189

    (174) apoya -> APOYA LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 260


state 190

    (41) exp -> termino tagsacops . exp2
    (42) exp2 -> . SUMA tagop exp
    (43) exp2 -> . RESTA tagop exp
    (44) exp2 -> . empty
    (202) empty -> .

    SUMA            shift and go to state 264
    RESTA           shift and go to state 263
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    exp2                           shift and go to state 261
    empty                          shift and go to state 262

state 191

    (46) tagsacops -> empty .

    SUMA            reduce using rule 46 (tagsacops -> empty .)
    RESTA           reduce using rule 46 (tagsacops -> empty .)
    RBRACKET        reduce using rule 46 (tagsacops -> empty .)
    COMA            reduce using rule 46 (tagsacops -> empty .)
    GT              reduce using rule 46 (tagsacops -> empty .)
    LT              reduce using rule 46 (tagsacops -> empty .)
    LE              reduce using rule 46 (tagsacops -> empty .)
    GE              reduce using rule 46 (tagsacops -> empty .)
    DIF             reduce using rule 46 (tagsacops -> empty .)
    SAME            reduce using rule 46 (tagsacops -> empty .)
    AND             reduce using rule 46 (tagsacops -> empty .)
    OR              reduce using rule 46 (tagsacops -> empty .)
    RPARENT         reduce using rule 46 (tagsacops -> empty .)
    PUNTOCOMA       reduce using rule 46 (tagsacops -> empty .)
    ID              reduce using rule 46 (tagsacops -> empty .)


state 192

    (132) varcte -> TRUE tagbol .

    MULT            reduce using rule 132 (varcte -> TRUE tagbol .)
    DIV             reduce using rule 132 (varcte -> TRUE tagbol .)
    SUMA            reduce using rule 132 (varcte -> TRUE tagbol .)
    RESTA           reduce using rule 132 (varcte -> TRUE tagbol .)
    COMA            reduce using rule 132 (varcte -> TRUE tagbol .)
    GT              reduce using rule 132 (varcte -> TRUE tagbol .)
    LT              reduce using rule 132 (varcte -> TRUE tagbol .)
    LE              reduce using rule 132 (varcte -> TRUE tagbol .)
    GE              reduce using rule 132 (varcte -> TRUE tagbol .)
    DIF             reduce using rule 132 (varcte -> TRUE tagbol .)
    SAME            reduce using rule 132 (varcte -> TRUE tagbol .)
    AND             reduce using rule 132 (varcte -> TRUE tagbol .)
    OR              reduce using rule 132 (varcte -> TRUE tagbol .)
    RPARENT         reduce using rule 132 (varcte -> TRUE tagbol .)
    RBRACKET        reduce using rule 132 (varcte -> TRUE tagbol .)
    PUNTOCOMA       reduce using rule 132 (varcte -> TRUE tagbol .)
    ID              reduce using rule 132 (varcte -> TRUE tagbol .)


state 193

    (138) tagbol -> empty .

    MULT            reduce using rule 138 (tagbol -> empty .)
    DIV             reduce using rule 138 (tagbol -> empty .)
    SUMA            reduce using rule 138 (tagbol -> empty .)
    RESTA           reduce using rule 138 (tagbol -> empty .)
    RBRACKET        reduce using rule 138 (tagbol -> empty .)
    COMA            reduce using rule 138 (tagbol -> empty .)
    GT              reduce using rule 138 (tagbol -> empty .)
    LT              reduce using rule 138 (tagbol -> empty .)
    LE              reduce using rule 138 (tagbol -> empty .)
    GE              reduce using rule 138 (tagbol -> empty .)
    DIF             reduce using rule 138 (tagbol -> empty .)
    SAME            reduce using rule 138 (tagbol -> empty .)
    AND             reduce using rule 138 (tagbol -> empty .)
    OR              reduce using rule 138 (tagbol -> empty .)
    RPARENT         reduce using rule 138 (tagbol -> empty .)
    PUNTOCOMA       reduce using rule 138 (tagbol -> empty .)
    ID              reduce using rule 138 (tagbol -> empty .)


state 194

    (87) factor -> LPARENT tagfondofalso . expresion RPARENT tagsacafondo
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    expresion2                     shift and go to state 167
    expresion                      shift and go to state 265
    exp                            shift and go to state 170

state 195

    (94) tagfondofalso -> empty .

    LPARENT         reduce using rule 94 (tagfondofalso -> empty .)
    ID              reduce using rule 94 (tagfondofalso -> empty .)
    ENTERO          reduce using rule 94 (tagfondofalso -> empty .)
    FLOTANTE        reduce using rule 94 (tagfondofalso -> empty .)
    CADENA          reduce using rule 94 (tagfondofalso -> empty .)
    CARACTER        reduce using rule 94 (tagfondofalso -> empty .)
    TRUE            reduce using rule 94 (tagfondofalso -> empty .)
    FALSE           reduce using rule 94 (tagfondofalso -> empty .)


state 196

    (130) varcte -> CADENA tagcad .

    MULT            reduce using rule 130 (varcte -> CADENA tagcad .)
    DIV             reduce using rule 130 (varcte -> CADENA tagcad .)
    SUMA            reduce using rule 130 (varcte -> CADENA tagcad .)
    RESTA           reduce using rule 130 (varcte -> CADENA tagcad .)
    COMA            reduce using rule 130 (varcte -> CADENA tagcad .)
    GT              reduce using rule 130 (varcte -> CADENA tagcad .)
    LT              reduce using rule 130 (varcte -> CADENA tagcad .)
    LE              reduce using rule 130 (varcte -> CADENA tagcad .)
    GE              reduce using rule 130 (varcte -> CADENA tagcad .)
    DIF             reduce using rule 130 (varcte -> CADENA tagcad .)
    SAME            reduce using rule 130 (varcte -> CADENA tagcad .)
    AND             reduce using rule 130 (varcte -> CADENA tagcad .)
    OR              reduce using rule 130 (varcte -> CADENA tagcad .)
    RPARENT         reduce using rule 130 (varcte -> CADENA tagcad .)
    RBRACKET        reduce using rule 130 (varcte -> CADENA tagcad .)
    PUNTOCOMA       reduce using rule 130 (varcte -> CADENA tagcad .)
    ID              reduce using rule 130 (varcte -> CADENA tagcad .)


state 197

    (136) tagcad -> empty .

    MULT            reduce using rule 136 (tagcad -> empty .)
    DIV             reduce using rule 136 (tagcad -> empty .)
    SUMA            reduce using rule 136 (tagcad -> empty .)
    RESTA           reduce using rule 136 (tagcad -> empty .)
    RBRACKET        reduce using rule 136 (tagcad -> empty .)
    COMA            reduce using rule 136 (tagcad -> empty .)
    GT              reduce using rule 136 (tagcad -> empty .)
    LT              reduce using rule 136 (tagcad -> empty .)
    LE              reduce using rule 136 (tagcad -> empty .)
    GE              reduce using rule 136 (tagcad -> empty .)
    DIF             reduce using rule 136 (tagcad -> empty .)
    SAME            reduce using rule 136 (tagcad -> empty .)
    AND             reduce using rule 136 (tagcad -> empty .)
    OR              reduce using rule 136 (tagcad -> empty .)
    RPARENT         reduce using rule 136 (tagcad -> empty .)
    PUNTOCOMA       reduce using rule 136 (tagcad -> empty .)
    ID              reduce using rule 136 (tagcad -> empty .)


state 198

    (81) termino -> factor tagsacopm . te2
    (82) te2 -> . MULT tagm termino
    (83) te2 -> . DIV tagm termino
    (84) te2 -> . empty
    (202) empty -> .

    MULT            shift and go to state 269
    DIV             shift and go to state 266
    SUMA            reduce using rule 202 (empty -> .)
    RESTA           reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    te2                            shift and go to state 268
    empty                          shift and go to state 267

state 199

    (86) tagsacopm -> empty .

    MULT            reduce using rule 86 (tagsacopm -> empty .)
    DIV             reduce using rule 86 (tagsacopm -> empty .)
    SUMA            reduce using rule 86 (tagsacopm -> empty .)
    RESTA           reduce using rule 86 (tagsacopm -> empty .)
    RBRACKET        reduce using rule 86 (tagsacopm -> empty .)
    COMA            reduce using rule 86 (tagsacopm -> empty .)
    GT              reduce using rule 86 (tagsacopm -> empty .)
    LT              reduce using rule 86 (tagsacopm -> empty .)
    LE              reduce using rule 86 (tagsacopm -> empty .)
    GE              reduce using rule 86 (tagsacopm -> empty .)
    DIF             reduce using rule 86 (tagsacopm -> empty .)
    SAME            reduce using rule 86 (tagsacopm -> empty .)
    AND             reduce using rule 86 (tagsacopm -> empty .)
    OR              reduce using rule 86 (tagsacopm -> empty .)
    RPARENT         reduce using rule 86 (tagsacopm -> empty .)
    PUNTOCOMA       reduce using rule 86 (tagsacopm -> empty .)
    ID              reduce using rule 86 (tagsacopm -> empty .)


state 200

    (128) varcte -> ENTERO tagint .

    MULT            reduce using rule 128 (varcte -> ENTERO tagint .)
    DIV             reduce using rule 128 (varcte -> ENTERO tagint .)
    SUMA            reduce using rule 128 (varcte -> ENTERO tagint .)
    RESTA           reduce using rule 128 (varcte -> ENTERO tagint .)
    COMA            reduce using rule 128 (varcte -> ENTERO tagint .)
    GT              reduce using rule 128 (varcte -> ENTERO tagint .)
    LT              reduce using rule 128 (varcte -> ENTERO tagint .)
    LE              reduce using rule 128 (varcte -> ENTERO tagint .)
    GE              reduce using rule 128 (varcte -> ENTERO tagint .)
    DIF             reduce using rule 128 (varcte -> ENTERO tagint .)
    SAME            reduce using rule 128 (varcte -> ENTERO tagint .)
    AND             reduce using rule 128 (varcte -> ENTERO tagint .)
    OR              reduce using rule 128 (varcte -> ENTERO tagint .)
    RPARENT         reduce using rule 128 (varcte -> ENTERO tagint .)
    RBRACKET        reduce using rule 128 (varcte -> ENTERO tagint .)
    PUNTOCOMA       reduce using rule 128 (varcte -> ENTERO tagint .)
    ID              reduce using rule 128 (varcte -> ENTERO tagint .)


state 201

    (134) tagint -> empty .

    MULT            reduce using rule 134 (tagint -> empty .)
    DIV             reduce using rule 134 (tagint -> empty .)
    SUMA            reduce using rule 134 (tagint -> empty .)
    RESTA           reduce using rule 134 (tagint -> empty .)
    RBRACKET        reduce using rule 134 (tagint -> empty .)
    COMA            reduce using rule 134 (tagint -> empty .)
    GT              reduce using rule 134 (tagint -> empty .)
    LT              reduce using rule 134 (tagint -> empty .)
    LE              reduce using rule 134 (tagint -> empty .)
    GE              reduce using rule 134 (tagint -> empty .)
    DIF             reduce using rule 134 (tagint -> empty .)
    SAME            reduce using rule 134 (tagint -> empty .)
    AND             reduce using rule 134 (tagint -> empty .)
    OR              reduce using rule 134 (tagint -> empty .)
    RPARENT         reduce using rule 134 (tagint -> empty .)
    PUNTOCOMA       reduce using rule 134 (tagint -> empty .)
    ID              reduce using rule 134 (tagint -> empty .)


state 202

    (131) varcte -> CARACTER tagcar .

    MULT            reduce using rule 131 (varcte -> CARACTER tagcar .)
    DIV             reduce using rule 131 (varcte -> CARACTER tagcar .)
    SUMA            reduce using rule 131 (varcte -> CARACTER tagcar .)
    RESTA           reduce using rule 131 (varcte -> CARACTER tagcar .)
    COMA            reduce using rule 131 (varcte -> CARACTER tagcar .)
    GT              reduce using rule 131 (varcte -> CARACTER tagcar .)
    LT              reduce using rule 131 (varcte -> CARACTER tagcar .)
    LE              reduce using rule 131 (varcte -> CARACTER tagcar .)
    GE              reduce using rule 131 (varcte -> CARACTER tagcar .)
    DIF             reduce using rule 131 (varcte -> CARACTER tagcar .)
    SAME            reduce using rule 131 (varcte -> CARACTER tagcar .)
    AND             reduce using rule 131 (varcte -> CARACTER tagcar .)
    OR              reduce using rule 131 (varcte -> CARACTER tagcar .)
    RPARENT         reduce using rule 131 (varcte -> CARACTER tagcar .)
    RBRACKET        reduce using rule 131 (varcte -> CARACTER tagcar .)
    PUNTOCOMA       reduce using rule 131 (varcte -> CARACTER tagcar .)
    ID              reduce using rule 131 (varcte -> CARACTER tagcar .)


state 203

    (137) tagcar -> empty .

    MULT            reduce using rule 137 (tagcar -> empty .)
    DIV             reduce using rule 137 (tagcar -> empty .)
    SUMA            reduce using rule 137 (tagcar -> empty .)
    RESTA           reduce using rule 137 (tagcar -> empty .)
    RBRACKET        reduce using rule 137 (tagcar -> empty .)
    COMA            reduce using rule 137 (tagcar -> empty .)
    GT              reduce using rule 137 (tagcar -> empty .)
    LT              reduce using rule 137 (tagcar -> empty .)
    LE              reduce using rule 137 (tagcar -> empty .)
    GE              reduce using rule 137 (tagcar -> empty .)
    DIF             reduce using rule 137 (tagcar -> empty .)
    SAME            reduce using rule 137 (tagcar -> empty .)
    AND             reduce using rule 137 (tagcar -> empty .)
    OR              reduce using rule 137 (tagcar -> empty .)
    RPARENT         reduce using rule 137 (tagcar -> empty .)
    PUNTOCOMA       reduce using rule 137 (tagcar -> empty .)
    ID              reduce using rule 137 (tagcar -> empty .)


state 204

    (133) varcte -> FALSE tagbol .

    MULT            reduce using rule 133 (varcte -> FALSE tagbol .)
    DIV             reduce using rule 133 (varcte -> FALSE tagbol .)
    SUMA            reduce using rule 133 (varcte -> FALSE tagbol .)
    RESTA           reduce using rule 133 (varcte -> FALSE tagbol .)
    COMA            reduce using rule 133 (varcte -> FALSE tagbol .)
    GT              reduce using rule 133 (varcte -> FALSE tagbol .)
    LT              reduce using rule 133 (varcte -> FALSE tagbol .)
    LE              reduce using rule 133 (varcte -> FALSE tagbol .)
    GE              reduce using rule 133 (varcte -> FALSE tagbol .)
    DIF             reduce using rule 133 (varcte -> FALSE tagbol .)
    SAME            reduce using rule 133 (varcte -> FALSE tagbol .)
    AND             reduce using rule 133 (varcte -> FALSE tagbol .)
    OR              reduce using rule 133 (varcte -> FALSE tagbol .)
    RPARENT         reduce using rule 133 (varcte -> FALSE tagbol .)
    RBRACKET        reduce using rule 133 (varcte -> FALSE tagbol .)
    PUNTOCOMA       reduce using rule 133 (varcte -> FALSE tagbol .)
    ID              reduce using rule 133 (varcte -> FALSE tagbol .)


state 205

    (50) decla1 -> LBRACKET decDimensionada exp saveLimSup . decla2
    (54) decla2 -> . RBRACKET guardaMemDimen declafinal
    (55) decla2 -> . COMA SigDimension exp saveLimSup decla2

    RBRACKET        shift and go to state 272
    COMA            shift and go to state 271

    decla2                         shift and go to state 270

state 206

    (53) saveLimSup -> empty .

    RBRACKET        reduce using rule 53 (saveLimSup -> empty .)
    COMA            reduce using rule 53 (saveLimSup -> empty .)


state 207

    (135) tagfloat -> empty .

    MULT            reduce using rule 135 (tagfloat -> empty .)
    DIV             reduce using rule 135 (tagfloat -> empty .)
    SUMA            reduce using rule 135 (tagfloat -> empty .)
    RESTA           reduce using rule 135 (tagfloat -> empty .)
    RBRACKET        reduce using rule 135 (tagfloat -> empty .)
    COMA            reduce using rule 135 (tagfloat -> empty .)
    GT              reduce using rule 135 (tagfloat -> empty .)
    LT              reduce using rule 135 (tagfloat -> empty .)
    LE              reduce using rule 135 (tagfloat -> empty .)
    GE              reduce using rule 135 (tagfloat -> empty .)
    DIF             reduce using rule 135 (tagfloat -> empty .)
    SAME            reduce using rule 135 (tagfloat -> empty .)
    AND             reduce using rule 135 (tagfloat -> empty .)
    OR              reduce using rule 135 (tagfloat -> empty .)
    RPARENT         reduce using rule 135 (tagfloat -> empty .)
    PUNTOCOMA       reduce using rule 135 (tagfloat -> empty .)
    ID              reduce using rule 135 (tagfloat -> empty .)


state 208

    (129) varcte -> FLOTANTE tagfloat .

    MULT            reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    DIV             reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    SUMA            reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    RESTA           reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    COMA            reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    GT              reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    LT              reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    LE              reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    GE              reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    DIF             reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    SAME            reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    AND             reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    OR              reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    RPARENT         reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    RBRACKET        reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    PUNTOCOMA       reduce using rule 129 (varcte -> FLOTANTE tagfloat .)
    ID              reduce using rule 129 (varcte -> FLOTANTE tagfloat .)


state 209

    (181) funct11 -> function4 .

    FUNCTION        reduce using rule 181 (funct11 -> function4 .)
    LKEY            reduce using rule 181 (funct11 -> function4 .)


state 210

    (178) pfunc -> tipo ID buildFunc LPARENT funct11 .

    FUNCTION        reduce using rule 178 (pfunc -> tipo ID buildFunc LPARENT funct11 .)
    LKEY            reduce using rule 178 (pfunc -> tipo ID buildFunc LPARENT funct11 .)


state 211

    (188) function4 -> RPARENT . initFunc bloque noinitFunc
    (189) initFunc -> . empty
    (202) empty -> .

    LKEY            reduce using rule 202 (empty -> .)

    initFunc                       shift and go to state 273
    empty                          shift and go to state 274

state 212

    (182) funct11 -> initParamTable . funct2
    (184) funct2 -> . tipo ID initParams funct3
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 10
    STRING          shift and go to state 13
    BOOL            shift and go to state 19

    funct2                         shift and go to state 276
    tipo                           shift and go to state 275

state 213

    (183) initParamTable -> empty .

    INT             reduce using rule 183 (initParamTable -> empty .)
    FLOAT           reduce using rule 183 (initParamTable -> empty .)
    CHAR            reduce using rule 183 (initParamTable -> empty .)
    STRING          reduce using rule 183 (initParamTable -> empty .)
    BOOL            reduce using rule 183 (initParamTable -> empty .)


state 214

    (179) pfunc -> VOID ID buildFunc LPARENT funct11 .

    FUNCTION        reduce using rule 179 (pfunc -> VOID ID buildFunc LPARENT funct11 .)
    LKEY            reduce using rule 179 (pfunc -> VOID ID buildFunc LPARENT funct11 .)


state 215

    (143) ciclodowhile -> DO taginiciado bloque WHILE . LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA

    LPARENT         shift and go to state 277


state 216

    (71) asigfinal -> IGUAL tagmeteig asigf2 .

    ID              reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    PRINT           reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    WHILE           reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    DO              reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    FOR             reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    READ            reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    READINT         reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    COMENTARIO      reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    CUADRADO        reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    TRIANGULO       reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    CASA            reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    RECTANGULO      reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    CUBO            reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    TRAPECIO        reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    ESTRELLA        reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    MUEVE           reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    LEVANTA         reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    APOYA           reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    DIMENSION       reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    RETURN          reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    IF              reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    RKEY            reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    LPARENT         reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    ENTERO          reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    FLOTANTE        reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    CADENA          reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    CARACTER        reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    TRUE            reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    FALSE           reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)
    RPARENT         reduce using rule 71 (asigfinal -> IGUAL tagmeteig asigf2 .)


state 217

    (74) asigf2 -> readint . tagig
    (76) tagig -> . empty
    (202) empty -> .

    ID              reduce using rule 202 (empty -> .)
    PRINT           reduce using rule 202 (empty -> .)
    WHILE           reduce using rule 202 (empty -> .)
    DO              reduce using rule 202 (empty -> .)
    FOR             reduce using rule 202 (empty -> .)
    READ            reduce using rule 202 (empty -> .)
    READINT         reduce using rule 202 (empty -> .)
    COMENTARIO      reduce using rule 202 (empty -> .)
    CUADRADO        reduce using rule 202 (empty -> .)
    TRIANGULO       reduce using rule 202 (empty -> .)
    CASA            reduce using rule 202 (empty -> .)
    RECTANGULO      reduce using rule 202 (empty -> .)
    CUBO            reduce using rule 202 (empty -> .)
    TRAPECIO        reduce using rule 202 (empty -> .)
    ESTRELLA        reduce using rule 202 (empty -> .)
    MUEVE           reduce using rule 202 (empty -> .)
    LEVANTA         reduce using rule 202 (empty -> .)
    APOYA           reduce using rule 202 (empty -> .)
    DIMENSION       reduce using rule 202 (empty -> .)
    RETURN          reduce using rule 202 (empty -> .)
    IF              reduce using rule 202 (empty -> .)
    RKEY            reduce using rule 202 (empty -> .)
    LPARENT         reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)

    tagig                          shift and go to state 278
    empty                          shift and go to state 279

state 218

    (73) asigf2 -> read . tagig
    (76) tagig -> . empty
    (202) empty -> .

    ID              reduce using rule 202 (empty -> .)
    PRINT           reduce using rule 202 (empty -> .)
    WHILE           reduce using rule 202 (empty -> .)
    DO              reduce using rule 202 (empty -> .)
    FOR             reduce using rule 202 (empty -> .)
    READ            reduce using rule 202 (empty -> .)
    READINT         reduce using rule 202 (empty -> .)
    COMENTARIO      reduce using rule 202 (empty -> .)
    CUADRADO        reduce using rule 202 (empty -> .)
    TRIANGULO       reduce using rule 202 (empty -> .)
    CASA            reduce using rule 202 (empty -> .)
    RECTANGULO      reduce using rule 202 (empty -> .)
    CUBO            reduce using rule 202 (empty -> .)
    TRAPECIO        reduce using rule 202 (empty -> .)
    ESTRELLA        reduce using rule 202 (empty -> .)
    MUEVE           reduce using rule 202 (empty -> .)
    LEVANTA         reduce using rule 202 (empty -> .)
    APOYA           reduce using rule 202 (empty -> .)
    DIMENSION       reduce using rule 202 (empty -> .)
    RETURN          reduce using rule 202 (empty -> .)
    IF              reduce using rule 202 (empty -> .)
    RKEY            reduce using rule 202 (empty -> .)
    LPARENT         reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)

    tagig                          shift and go to state 280
    empty                          shift and go to state 279

state 219

    (72) asigf2 -> expresion . tagig PUNTOCOMA
    (76) tagig -> . empty
    (202) empty -> .

    PUNTOCOMA       reduce using rule 202 (empty -> .)

    tagig                          shift and go to state 281
    empty                          shift and go to state 279

state 220

    (146) read -> READ LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    READ            reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    READINT         reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    LPARENT         reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    ENTERO          reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    FLOTANTE        reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    CADENA          reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    CARACTER        reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    TRUE            reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    FALSE           reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)
    RPARENT         reduce using rule 146 (read -> READ LPARENT RPARENT PUNTOCOMA .)


state 221

    (171) mueve -> MUEVE LPARENT exp COMA . exp RPARENT tagmueve PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 282

state 222

    (139) ciclowhile -> WHILE taginiciawhile LPARENT expresion . RPARENT tagwhile bloque tagregresawhile

    RPARENT         shift and go to state 283


state 223

    (175) trapecio -> TRAPECIO LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 284

state 224

    (26) expre2 -> AND . tagmetelog expresion tagsacalog
    (28) tagmetelog -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagmetelog                     shift and go to state 285
    empty                          shift and go to state 286

state 225

    (23) expresion -> expresion2 expre .

    PUNTOCOMA       reduce using rule 23 (expresion -> expresion2 expre .)
    RPARENT         reduce using rule 23 (expresion -> expresion2 expre .)
    ID              reduce using rule 23 (expresion -> expresion2 expre .)


state 226

    (24) expre -> expre2 .

    RPARENT         reduce using rule 24 (expre -> expre2 .)
    PUNTOCOMA       reduce using rule 24 (expre -> expre2 .)
    ID              reduce using rule 24 (expre -> expre2 .)


state 227

    (27) expre2 -> OR . tagmetelog expresion tagsacalog
    (28) tagmetelog -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagmetelog                     shift and go to state 287
    empty                          shift and go to state 286

state 228

    (25) expre -> empty .

    RPARENT         reduce using rule 25 (expre -> empty .)
    PUNTOCOMA       reduce using rule 25 (expre -> empty .)
    ID              reduce using rule 25 (expre -> empty .)


state 229

    (78) pr2 -> expresion pr3 .

    ID              reduce using rule 78 (pr2 -> expresion pr3 .)
    PRINT           reduce using rule 78 (pr2 -> expresion pr3 .)
    WHILE           reduce using rule 78 (pr2 -> expresion pr3 .)
    DO              reduce using rule 78 (pr2 -> expresion pr3 .)
    FOR             reduce using rule 78 (pr2 -> expresion pr3 .)
    READ            reduce using rule 78 (pr2 -> expresion pr3 .)
    READINT         reduce using rule 78 (pr2 -> expresion pr3 .)
    COMENTARIO      reduce using rule 78 (pr2 -> expresion pr3 .)
    CUADRADO        reduce using rule 78 (pr2 -> expresion pr3 .)
    TRIANGULO       reduce using rule 78 (pr2 -> expresion pr3 .)
    CASA            reduce using rule 78 (pr2 -> expresion pr3 .)
    RECTANGULO      reduce using rule 78 (pr2 -> expresion pr3 .)
    CUBO            reduce using rule 78 (pr2 -> expresion pr3 .)
    TRAPECIO        reduce using rule 78 (pr2 -> expresion pr3 .)
    ESTRELLA        reduce using rule 78 (pr2 -> expresion pr3 .)
    MUEVE           reduce using rule 78 (pr2 -> expresion pr3 .)
    LEVANTA         reduce using rule 78 (pr2 -> expresion pr3 .)
    APOYA           reduce using rule 78 (pr2 -> expresion pr3 .)
    DIMENSION       reduce using rule 78 (pr2 -> expresion pr3 .)
    RETURN          reduce using rule 78 (pr2 -> expresion pr3 .)
    IF              reduce using rule 78 (pr2 -> expresion pr3 .)
    RKEY            reduce using rule 78 (pr2 -> expresion pr3 .)


state 230

    (79) pr3 -> tagimprime . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 288


state 231

    (80) tagimprime -> empty .

    RPARENT         reduce using rule 80 (tagimprime -> empty .)


state 232

    (36) e3 -> GE . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagrel                         shift and go to state 289
    empty                          shift and go to state 290

state 233

    (37) e3 -> DIF . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagrel                         shift and go to state 291
    empty                          shift and go to state 290

state 234

    (35) e3 -> LE . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagrel                         shift and go to state 292
    empty                          shift and go to state 290

state 235

    (38) e3 -> SAME . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagrel                         shift and go to state 293
    empty                          shift and go to state 290

state 236

    (34) e3 -> LT . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagrel                         shift and go to state 294
    empty                          shift and go to state 290

state 237

    (33) e3 -> GT . tagrel exp tagsacrel
    (39) tagrel -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagrel                         shift and go to state 295
    empty                          shift and go to state 290

state 238

    (31) e2 -> e3 .

    AND             reduce using rule 31 (e2 -> e3 .)
    OR              reduce using rule 31 (e2 -> e3 .)
    RPARENT         reduce using rule 31 (e2 -> e3 .)
    PUNTOCOMA       reduce using rule 31 (e2 -> e3 .)
    ID              reduce using rule 31 (e2 -> e3 .)


state 239

    (32) e2 -> empty .

    AND             reduce using rule 32 (e2 -> empty .)
    OR              reduce using rule 32 (e2 -> empty .)
    RPARENT         reduce using rule 32 (e2 -> empty .)
    PUNTOCOMA       reduce using rule 32 (e2 -> empty .)
    ID              reduce using rule 32 (e2 -> empty .)


state 240

    (30) expresion2 -> exp e2 .

    AND             reduce using rule 30 (expresion2 -> exp e2 .)
    OR              reduce using rule 30 (expresion2 -> exp e2 .)
    ID              reduce using rule 30 (expresion2 -> exp e2 .)
    RPARENT         reduce using rule 30 (expresion2 -> exp e2 .)
    PUNTOCOMA       reduce using rule 30 (expresion2 -> exp e2 .)


state 241

    (166) casa -> CASA LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 296

state 242

    (169) cubo -> CUBO LPARENT exp COMA . exp COMA exp RPARENT tagcubo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 297

state 243

    (163) triangulo -> TRIANGULO LPARENT exp COMA . exp COMA exp RPARENT tagtriangulo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 298

state 244

    (148) ciclofor -> FOR LPARENT asignacion expresion . tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor
    (149) tagevaluafor -> . empty
    (202) empty -> .

    ID              reduce using rule 202 (empty -> .)

    tagevaluafor                   shift and go to state 299
    empty                          shift and go to state 300

state 245

    (173) levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    READ            reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    READINT         reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 173 (levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA .)


state 246

    (165) rectangulo -> RECTANGULO LPARENT exp COMA . exp RPARENT PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 301

state 247

    (197) llamaf4 -> RPARENT . tagterminallamada PUNTOCOMA
    (201) tagterminallamada -> . empty
    (202) empty -> .

    PUNTOCOMA       reduce using rule 202 (empty -> .)

    tagterminallamada              shift and go to state 302
    empty                          shift and go to state 303

state 248

    (192) llamaf11 -> llamaf2 .

    ID              reduce using rule 192 (llamaf11 -> llamaf2 .)
    PRINT           reduce using rule 192 (llamaf11 -> llamaf2 .)
    WHILE           reduce using rule 192 (llamaf11 -> llamaf2 .)
    DO              reduce using rule 192 (llamaf11 -> llamaf2 .)
    FOR             reduce using rule 192 (llamaf11 -> llamaf2 .)
    READ            reduce using rule 192 (llamaf11 -> llamaf2 .)
    READINT         reduce using rule 192 (llamaf11 -> llamaf2 .)
    COMENTARIO      reduce using rule 192 (llamaf11 -> llamaf2 .)
    CUADRADO        reduce using rule 192 (llamaf11 -> llamaf2 .)
    TRIANGULO       reduce using rule 192 (llamaf11 -> llamaf2 .)
    CASA            reduce using rule 192 (llamaf11 -> llamaf2 .)
    RECTANGULO      reduce using rule 192 (llamaf11 -> llamaf2 .)
    CUBO            reduce using rule 192 (llamaf11 -> llamaf2 .)
    TRAPECIO        reduce using rule 192 (llamaf11 -> llamaf2 .)
    ESTRELLA        reduce using rule 192 (llamaf11 -> llamaf2 .)
    MUEVE           reduce using rule 192 (llamaf11 -> llamaf2 .)
    LEVANTA         reduce using rule 192 (llamaf11 -> llamaf2 .)
    APOYA           reduce using rule 192 (llamaf11 -> llamaf2 .)
    DIMENSION       reduce using rule 192 (llamaf11 -> llamaf2 .)
    RETURN          reduce using rule 192 (llamaf11 -> llamaf2 .)
    IF              reduce using rule 192 (llamaf11 -> llamaf2 .)
    RKEY            reduce using rule 192 (llamaf11 -> llamaf2 .)
    MULT            reduce using rule 192 (llamaf11 -> llamaf2 .)
    DIV             reduce using rule 192 (llamaf11 -> llamaf2 .)
    SUMA            reduce using rule 192 (llamaf11 -> llamaf2 .)
    RESTA           reduce using rule 192 (llamaf11 -> llamaf2 .)
    RBRACKET        reduce using rule 192 (llamaf11 -> llamaf2 .)
    COMA            reduce using rule 192 (llamaf11 -> llamaf2 .)
    GT              reduce using rule 192 (llamaf11 -> llamaf2 .)
    LT              reduce using rule 192 (llamaf11 -> llamaf2 .)
    LE              reduce using rule 192 (llamaf11 -> llamaf2 .)
    GE              reduce using rule 192 (llamaf11 -> llamaf2 .)
    DIF             reduce using rule 192 (llamaf11 -> llamaf2 .)
    SAME            reduce using rule 192 (llamaf11 -> llamaf2 .)
    AND             reduce using rule 192 (llamaf11 -> llamaf2 .)
    OR              reduce using rule 192 (llamaf11 -> llamaf2 .)
    RPARENT         reduce using rule 192 (llamaf11 -> llamaf2 .)
    PUNTOCOMA       reduce using rule 192 (llamaf11 -> llamaf2 .)


state 249

    (193) llamaf11 -> llamaf4 .

    ID              reduce using rule 193 (llamaf11 -> llamaf4 .)
    PRINT           reduce using rule 193 (llamaf11 -> llamaf4 .)
    WHILE           reduce using rule 193 (llamaf11 -> llamaf4 .)
    DO              reduce using rule 193 (llamaf11 -> llamaf4 .)
    FOR             reduce using rule 193 (llamaf11 -> llamaf4 .)
    READ            reduce using rule 193 (llamaf11 -> llamaf4 .)
    READINT         reduce using rule 193 (llamaf11 -> llamaf4 .)
    COMENTARIO      reduce using rule 193 (llamaf11 -> llamaf4 .)
    CUADRADO        reduce using rule 193 (llamaf11 -> llamaf4 .)
    TRIANGULO       reduce using rule 193 (llamaf11 -> llamaf4 .)
    CASA            reduce using rule 193 (llamaf11 -> llamaf4 .)
    RECTANGULO      reduce using rule 193 (llamaf11 -> llamaf4 .)
    CUBO            reduce using rule 193 (llamaf11 -> llamaf4 .)
    TRAPECIO        reduce using rule 193 (llamaf11 -> llamaf4 .)
    ESTRELLA        reduce using rule 193 (llamaf11 -> llamaf4 .)
    MUEVE           reduce using rule 193 (llamaf11 -> llamaf4 .)
    LEVANTA         reduce using rule 193 (llamaf11 -> llamaf4 .)
    APOYA           reduce using rule 193 (llamaf11 -> llamaf4 .)
    DIMENSION       reduce using rule 193 (llamaf11 -> llamaf4 .)
    RETURN          reduce using rule 193 (llamaf11 -> llamaf4 .)
    IF              reduce using rule 193 (llamaf11 -> llamaf4 .)
    RKEY            reduce using rule 193 (llamaf11 -> llamaf4 .)
    MULT            reduce using rule 193 (llamaf11 -> llamaf4 .)
    DIV             reduce using rule 193 (llamaf11 -> llamaf4 .)
    SUMA            reduce using rule 193 (llamaf11 -> llamaf4 .)
    RESTA           reduce using rule 193 (llamaf11 -> llamaf4 .)
    RBRACKET        reduce using rule 193 (llamaf11 -> llamaf4 .)
    COMA            reduce using rule 193 (llamaf11 -> llamaf4 .)
    GT              reduce using rule 193 (llamaf11 -> llamaf4 .)
    LT              reduce using rule 193 (llamaf11 -> llamaf4 .)
    LE              reduce using rule 193 (llamaf11 -> llamaf4 .)
    GE              reduce using rule 193 (llamaf11 -> llamaf4 .)
    DIF             reduce using rule 193 (llamaf11 -> llamaf4 .)
    SAME            reduce using rule 193 (llamaf11 -> llamaf4 .)
    AND             reduce using rule 193 (llamaf11 -> llamaf4 .)
    OR              reduce using rule 193 (llamaf11 -> llamaf4 .)
    RPARENT         reduce using rule 193 (llamaf11 -> llamaf4 .)
    PUNTOCOMA       reduce using rule 193 (llamaf11 -> llamaf4 .)


state 250

    (194) llamaf2 -> exp . tagrevisaparam llamaf3
    (199) tagrevisaparam -> . empty
    (202) empty -> .

    COMA            reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)

    tagrevisaparam                 shift and go to state 304
    empty                          shift and go to state 305

state 251

    (191) llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .

    MULT            reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    DIV             reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    SUMA            reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RESTA           reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RPARENT         reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    COMA            reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    GT              reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    LT              reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    LE              reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    GE              reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    DIF             reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    SAME            reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    AND             reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    OR              reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    PUNTOCOMA       reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    ID              reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RBRACKET        reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    PRINT           reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    WHILE           reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    DO              reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    FOR             reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    READ            reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    READINT         reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    COMENTARIO      reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    CUADRADO        reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    TRIANGULO       reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    CASA            reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RECTANGULO      reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    CUBO            reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    TRAPECIO        reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    ESTRELLA        reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    MUEVE           reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    LEVANTA         reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    APOYA           reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    DIMENSION       reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RETURN          reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    IF              reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)
    RKEY            reduce using rule 191 (llamafuncion -> ID LPARENT tagverificafuncion llamaf11 .)


state 252

    (96) f7 -> ID LBRACKET tagrevisadime exp . tagmetedim f8
    (100) tagmetedim -> . empty
    (202) empty -> .

    COMA            reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)

    empty                          shift and go to state 307
    tagmetedim                     shift and go to state 306

state 253

    (176) dimension -> DIMENSION LPARENT exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 308


state 254

    (153) if -> IF LPARENT expresion tagif . RPARENT bloque if2

    RPARENT         shift and go to state 309


state 255

    (156) tagif -> empty .

    RPARENT         reduce using rule 156 (tagif -> empty .)


state 256

    (167) estrella -> ESTRELLA LPARENT exp RPARENT . tagestrella PUNTOCOMA
    (168) tagestrella -> . empty
    (202) empty -> .

    PUNTOCOMA       reduce using rule 202 (empty -> .)

    tagestrella                    shift and go to state 310
    empty                          shift and go to state 311

state 257

    (159) return -> RETURN llegoRet expresion PUNTOCOMA .

    ID              reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    PRINT           reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    WHILE           reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    DO              reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    FOR             reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    READ            reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    READINT         reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    COMENTARIO      reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    CUADRADO        reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    TRIANGULO       reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    CASA            reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    RECTANGULO      reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    CUBO            reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    TRAPECIO        reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    ESTRELLA        reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    MUEVE           reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    LEVANTA         reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    APOYA           reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    DIMENSION       reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    RETURN          reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    IF              reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)
    RKEY            reduce using rule 159 (return -> RETURN llegoRet expresion PUNTOCOMA .)


state 258

    (147) readint -> READINT LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    READ            reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    READINT         reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    LPARENT         reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    ENTERO          reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    FLOTANTE        reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    CADENA          reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    CARACTER        reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    TRUE            reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    FALSE           reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)
    RPARENT         reduce using rule 147 (readint -> READINT LPARENT RPARENT PUNTOCOMA .)


state 259

    (161) cuadrado -> CUADRADO LPARENT exp COMA . exp COMA exp RPARENT tagcuadro PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 312

state 260

    (174) apoya -> APOYA LPARENT RPARENT PUNTOCOMA .

    ID              reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    READ            reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    READINT         reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CASA            reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 174 (apoya -> APOYA LPARENT RPARENT PUNTOCOMA .)


state 261

    (41) exp -> termino tagsacops exp2 .

    COMA            reduce using rule 41 (exp -> termino tagsacops exp2 .)
    RPARENT         reduce using rule 41 (exp -> termino tagsacops exp2 .)
    GT              reduce using rule 41 (exp -> termino tagsacops exp2 .)
    LT              reduce using rule 41 (exp -> termino tagsacops exp2 .)
    LE              reduce using rule 41 (exp -> termino tagsacops exp2 .)
    GE              reduce using rule 41 (exp -> termino tagsacops exp2 .)
    DIF             reduce using rule 41 (exp -> termino tagsacops exp2 .)
    SAME            reduce using rule 41 (exp -> termino tagsacops exp2 .)
    AND             reduce using rule 41 (exp -> termino tagsacops exp2 .)
    OR              reduce using rule 41 (exp -> termino tagsacops exp2 .)
    PUNTOCOMA       reduce using rule 41 (exp -> termino tagsacops exp2 .)
    ID              reduce using rule 41 (exp -> termino tagsacops exp2 .)
    RBRACKET        reduce using rule 41 (exp -> termino tagsacops exp2 .)


state 262

    (44) exp2 -> empty .

    RBRACKET        reduce using rule 44 (exp2 -> empty .)
    COMA            reduce using rule 44 (exp2 -> empty .)
    GT              reduce using rule 44 (exp2 -> empty .)
    LT              reduce using rule 44 (exp2 -> empty .)
    LE              reduce using rule 44 (exp2 -> empty .)
    GE              reduce using rule 44 (exp2 -> empty .)
    DIF             reduce using rule 44 (exp2 -> empty .)
    SAME            reduce using rule 44 (exp2 -> empty .)
    AND             reduce using rule 44 (exp2 -> empty .)
    OR              reduce using rule 44 (exp2 -> empty .)
    RPARENT         reduce using rule 44 (exp2 -> empty .)
    PUNTOCOMA       reduce using rule 44 (exp2 -> empty .)
    ID              reduce using rule 44 (exp2 -> empty .)


state 263

    (43) exp2 -> RESTA . tagop exp
    (45) tagop -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagop                          shift and go to state 313
    empty                          shift and go to state 314

state 264

    (42) exp2 -> SUMA . tagop exp
    (45) tagop -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagop                          shift and go to state 315
    empty                          shift and go to state 314

state 265

    (87) factor -> LPARENT tagfondofalso expresion . RPARENT tagsacafondo

    RPARENT         shift and go to state 316


state 266

    (83) te2 -> DIV . tagm termino
    (85) tagm -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagm                           shift and go to state 317
    empty                          shift and go to state 318

state 267

    (84) te2 -> empty .

    SUMA            reduce using rule 84 (te2 -> empty .)
    RESTA           reduce using rule 84 (te2 -> empty .)
    RBRACKET        reduce using rule 84 (te2 -> empty .)
    COMA            reduce using rule 84 (te2 -> empty .)
    GT              reduce using rule 84 (te2 -> empty .)
    LT              reduce using rule 84 (te2 -> empty .)
    LE              reduce using rule 84 (te2 -> empty .)
    GE              reduce using rule 84 (te2 -> empty .)
    DIF             reduce using rule 84 (te2 -> empty .)
    SAME            reduce using rule 84 (te2 -> empty .)
    AND             reduce using rule 84 (te2 -> empty .)
    OR              reduce using rule 84 (te2 -> empty .)
    RPARENT         reduce using rule 84 (te2 -> empty .)
    PUNTOCOMA       reduce using rule 84 (te2 -> empty .)
    ID              reduce using rule 84 (te2 -> empty .)


state 268

    (81) termino -> factor tagsacopm te2 .

    SUMA            reduce using rule 81 (termino -> factor tagsacopm te2 .)
    RESTA           reduce using rule 81 (termino -> factor tagsacopm te2 .)
    RPARENT         reduce using rule 81 (termino -> factor tagsacopm te2 .)
    GT              reduce using rule 81 (termino -> factor tagsacopm te2 .)
    LT              reduce using rule 81 (termino -> factor tagsacopm te2 .)
    LE              reduce using rule 81 (termino -> factor tagsacopm te2 .)
    GE              reduce using rule 81 (termino -> factor tagsacopm te2 .)
    DIF             reduce using rule 81 (termino -> factor tagsacopm te2 .)
    SAME            reduce using rule 81 (termino -> factor tagsacopm te2 .)
    AND             reduce using rule 81 (termino -> factor tagsacopm te2 .)
    OR              reduce using rule 81 (termino -> factor tagsacopm te2 .)
    PUNTOCOMA       reduce using rule 81 (termino -> factor tagsacopm te2 .)
    ID              reduce using rule 81 (termino -> factor tagsacopm te2 .)
    COMA            reduce using rule 81 (termino -> factor tagsacopm te2 .)
    RBRACKET        reduce using rule 81 (termino -> factor tagsacopm te2 .)


state 269

    (82) te2 -> MULT . tagm termino
    (85) tagm -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagm                           shift and go to state 319
    empty                          shift and go to state 318

state 270

    (50) decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .

    INT             reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    FLOAT           reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    CHAR            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    STRING          reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    BOOL            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    FUNCTION        reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    LKEY            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    ID              reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    PRINT           reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    WHILE           reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    DO              reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    FOR             reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    READ            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    READINT         reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    COMENTARIO      reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    CUADRADO        reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    TRIANGULO       reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    CASA            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    RECTANGULO      reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    CUBO            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    TRAPECIO        reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    ESTRELLA        reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    MUEVE           reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    LEVANTA         reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    APOYA           reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    DIMENSION       reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    RETURN          reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    IF              reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)
    RKEY            reduce using rule 50 (decla1 -> LBRACKET decDimensionada exp saveLimSup decla2 .)


state 271

    (55) decla2 -> COMA . SigDimension exp saveLimSup decla2
    (56) SigDimension -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    empty                          shift and go to state 321
    SigDimension                   shift and go to state 320

state 272

    (54) decla2 -> RBRACKET . guardaMemDimen declafinal
    (57) guardaMemDimen -> . empty
    (202) empty -> .

    PUNTOCOMA       reduce using rule 202 (empty -> .)

    guardaMemDimen                 shift and go to state 322
    empty                          shift and go to state 323

state 273

    (188) function4 -> RPARENT initFunc . bloque noinitFunc
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (202) empty -> .

    LKEY            reduce using rule 202 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 324
    empty                          shift and go to state 24

state 274

    (189) initFunc -> empty .

    LKEY            reduce using rule 189 (initFunc -> empty .)


state 275

    (184) funct2 -> tipo . ID initParams funct3

    ID              shift and go to state 325


state 276

    (182) funct11 -> initParamTable funct2 .

    FUNCTION        reduce using rule 182 (funct11 -> initParamTable funct2 .)
    LKEY            reduce using rule 182 (funct11 -> initParamTable funct2 .)


state 277

    (143) ciclodowhile -> DO taginiciado bloque WHILE LPARENT . expresion tagcondiciondo RPARENT PUNTOCOMA
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    expresion2                     shift and go to state 167
    expresion                      shift and go to state 326
    exp                            shift and go to state 170

state 278

    (74) asigf2 -> readint tagig .

    ID              reduce using rule 74 (asigf2 -> readint tagig .)
    PRINT           reduce using rule 74 (asigf2 -> readint tagig .)
    WHILE           reduce using rule 74 (asigf2 -> readint tagig .)
    DO              reduce using rule 74 (asigf2 -> readint tagig .)
    FOR             reduce using rule 74 (asigf2 -> readint tagig .)
    READ            reduce using rule 74 (asigf2 -> readint tagig .)
    READINT         reduce using rule 74 (asigf2 -> readint tagig .)
    COMENTARIO      reduce using rule 74 (asigf2 -> readint tagig .)
    CUADRADO        reduce using rule 74 (asigf2 -> readint tagig .)
    TRIANGULO       reduce using rule 74 (asigf2 -> readint tagig .)
    CASA            reduce using rule 74 (asigf2 -> readint tagig .)
    RECTANGULO      reduce using rule 74 (asigf2 -> readint tagig .)
    CUBO            reduce using rule 74 (asigf2 -> readint tagig .)
    TRAPECIO        reduce using rule 74 (asigf2 -> readint tagig .)
    ESTRELLA        reduce using rule 74 (asigf2 -> readint tagig .)
    MUEVE           reduce using rule 74 (asigf2 -> readint tagig .)
    LEVANTA         reduce using rule 74 (asigf2 -> readint tagig .)
    APOYA           reduce using rule 74 (asigf2 -> readint tagig .)
    DIMENSION       reduce using rule 74 (asigf2 -> readint tagig .)
    RETURN          reduce using rule 74 (asigf2 -> readint tagig .)
    IF              reduce using rule 74 (asigf2 -> readint tagig .)
    RKEY            reduce using rule 74 (asigf2 -> readint tagig .)
    LPARENT         reduce using rule 74 (asigf2 -> readint tagig .)
    ENTERO          reduce using rule 74 (asigf2 -> readint tagig .)
    FLOTANTE        reduce using rule 74 (asigf2 -> readint tagig .)
    CADENA          reduce using rule 74 (asigf2 -> readint tagig .)
    CARACTER        reduce using rule 74 (asigf2 -> readint tagig .)
    TRUE            reduce using rule 74 (asigf2 -> readint tagig .)
    FALSE           reduce using rule 74 (asigf2 -> readint tagig .)
    RPARENT         reduce using rule 74 (asigf2 -> readint tagig .)


state 279

    (76) tagig -> empty .

    ID              reduce using rule 76 (tagig -> empty .)
    PRINT           reduce using rule 76 (tagig -> empty .)
    WHILE           reduce using rule 76 (tagig -> empty .)
    DO              reduce using rule 76 (tagig -> empty .)
    FOR             reduce using rule 76 (tagig -> empty .)
    READ            reduce using rule 76 (tagig -> empty .)
    READINT         reduce using rule 76 (tagig -> empty .)
    COMENTARIO      reduce using rule 76 (tagig -> empty .)
    CUADRADO        reduce using rule 76 (tagig -> empty .)
    TRIANGULO       reduce using rule 76 (tagig -> empty .)
    CASA            reduce using rule 76 (tagig -> empty .)
    RECTANGULO      reduce using rule 76 (tagig -> empty .)
    CUBO            reduce using rule 76 (tagig -> empty .)
    TRAPECIO        reduce using rule 76 (tagig -> empty .)
    ESTRELLA        reduce using rule 76 (tagig -> empty .)
    MUEVE           reduce using rule 76 (tagig -> empty .)
    LEVANTA         reduce using rule 76 (tagig -> empty .)
    APOYA           reduce using rule 76 (tagig -> empty .)
    DIMENSION       reduce using rule 76 (tagig -> empty .)
    RETURN          reduce using rule 76 (tagig -> empty .)
    IF              reduce using rule 76 (tagig -> empty .)
    RKEY            reduce using rule 76 (tagig -> empty .)
    LPARENT         reduce using rule 76 (tagig -> empty .)
    ENTERO          reduce using rule 76 (tagig -> empty .)
    FLOTANTE        reduce using rule 76 (tagig -> empty .)
    CADENA          reduce using rule 76 (tagig -> empty .)
    CARACTER        reduce using rule 76 (tagig -> empty .)
    TRUE            reduce using rule 76 (tagig -> empty .)
    FALSE           reduce using rule 76 (tagig -> empty .)
    RPARENT         reduce using rule 76 (tagig -> empty .)
    PUNTOCOMA       reduce using rule 76 (tagig -> empty .)


state 280

    (73) asigf2 -> read tagig .

    ID              reduce using rule 73 (asigf2 -> read tagig .)
    PRINT           reduce using rule 73 (asigf2 -> read tagig .)
    WHILE           reduce using rule 73 (asigf2 -> read tagig .)
    DO              reduce using rule 73 (asigf2 -> read tagig .)
    FOR             reduce using rule 73 (asigf2 -> read tagig .)
    READ            reduce using rule 73 (asigf2 -> read tagig .)
    READINT         reduce using rule 73 (asigf2 -> read tagig .)
    COMENTARIO      reduce using rule 73 (asigf2 -> read tagig .)
    CUADRADO        reduce using rule 73 (asigf2 -> read tagig .)
    TRIANGULO       reduce using rule 73 (asigf2 -> read tagig .)
    CASA            reduce using rule 73 (asigf2 -> read tagig .)
    RECTANGULO      reduce using rule 73 (asigf2 -> read tagig .)
    CUBO            reduce using rule 73 (asigf2 -> read tagig .)
    TRAPECIO        reduce using rule 73 (asigf2 -> read tagig .)
    ESTRELLA        reduce using rule 73 (asigf2 -> read tagig .)
    MUEVE           reduce using rule 73 (asigf2 -> read tagig .)
    LEVANTA         reduce using rule 73 (asigf2 -> read tagig .)
    APOYA           reduce using rule 73 (asigf2 -> read tagig .)
    DIMENSION       reduce using rule 73 (asigf2 -> read tagig .)
    RETURN          reduce using rule 73 (asigf2 -> read tagig .)
    IF              reduce using rule 73 (asigf2 -> read tagig .)
    RKEY            reduce using rule 73 (asigf2 -> read tagig .)
    LPARENT         reduce using rule 73 (asigf2 -> read tagig .)
    ENTERO          reduce using rule 73 (asigf2 -> read tagig .)
    FLOTANTE        reduce using rule 73 (asigf2 -> read tagig .)
    CADENA          reduce using rule 73 (asigf2 -> read tagig .)
    CARACTER        reduce using rule 73 (asigf2 -> read tagig .)
    TRUE            reduce using rule 73 (asigf2 -> read tagig .)
    FALSE           reduce using rule 73 (asigf2 -> read tagig .)
    RPARENT         reduce using rule 73 (asigf2 -> read tagig .)


state 281

    (72) asigf2 -> expresion tagig . PUNTOCOMA

    PUNTOCOMA       shift and go to state 327


state 282

    (171) mueve -> MUEVE LPARENT exp COMA exp . RPARENT tagmueve PUNTOCOMA

    RPARENT         shift and go to state 328


state 283

    (139) ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT . tagwhile bloque tagregresawhile
    (141) tagwhile -> . empty
    (202) empty -> .

    LKEY            reduce using rule 202 (empty -> .)

    tagwhile                       shift and go to state 329
    empty                          shift and go to state 330

state 284

    (175) trapecio -> TRAPECIO LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 331


state 285

    (26) expre2 -> AND tagmetelog . expresion tagsacalog
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    expresion2                     shift and go to state 167
    expresion                      shift and go to state 332
    exp                            shift and go to state 170

state 286

    (28) tagmetelog -> empty .

    LPARENT         reduce using rule 28 (tagmetelog -> empty .)
    ID              reduce using rule 28 (tagmetelog -> empty .)
    ENTERO          reduce using rule 28 (tagmetelog -> empty .)
    FLOTANTE        reduce using rule 28 (tagmetelog -> empty .)
    CADENA          reduce using rule 28 (tagmetelog -> empty .)
    CARACTER        reduce using rule 28 (tagmetelog -> empty .)
    TRUE            reduce using rule 28 (tagmetelog -> empty .)
    FALSE           reduce using rule 28 (tagmetelog -> empty .)


state 287

    (27) expre2 -> OR tagmetelog . expresion tagsacalog
    (23) expresion -> . expresion2 expre
    (30) expresion2 -> . exp e2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    expresion2                     shift and go to state 167
    expresion                      shift and go to state 333
    exp                            shift and go to state 170

state 288

    (79) pr3 -> tagimprime RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 334


state 289

    (36) e3 -> GE tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 335

state 290

    (39) tagrel -> empty .

    LPARENT         reduce using rule 39 (tagrel -> empty .)
    ID              reduce using rule 39 (tagrel -> empty .)
    ENTERO          reduce using rule 39 (tagrel -> empty .)
    FLOTANTE        reduce using rule 39 (tagrel -> empty .)
    CADENA          reduce using rule 39 (tagrel -> empty .)
    CARACTER        reduce using rule 39 (tagrel -> empty .)
    TRUE            reduce using rule 39 (tagrel -> empty .)
    FALSE           reduce using rule 39 (tagrel -> empty .)


state 291

    (37) e3 -> DIF tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 336

state 292

    (35) e3 -> LE tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 337

state 293

    (38) e3 -> SAME tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 338

state 294

    (34) e3 -> LT tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 339

state 295

    (33) e3 -> GT tagrel . exp tagsacrel
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 340

state 296

    (166) casa -> CASA LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 341


state 297

    (169) cubo -> CUBO LPARENT exp COMA exp . COMA exp RPARENT tagcubo PUNTOCOMA

    COMA            shift and go to state 342


state 298

    (163) triangulo -> TRIANGULO LPARENT exp COMA exp . COMA exp RPARENT tagtriangulo PUNTOCOMA

    COMA            shift and go to state 343


state 299

    (148) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor . asignacion tagespera RPARENT bloque tagasigna tagterminafor
    (64) asignacion -> . ID meteid asigfinal
    (65) asignacion -> . f7 asigfinal
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8

    ID              shift and go to state 175

    asignacion                     shift and go to state 344
    f7                             shift and go to state 54

state 300

    (149) tagevaluafor -> empty .

    ID              reduce using rule 149 (tagevaluafor -> empty .)


state 301

    (165) rectangulo -> RECTANGULO LPARENT exp COMA exp . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 345


state 302

    (197) llamaf4 -> RPARENT tagterminallamada . PUNTOCOMA

    PUNTOCOMA       shift and go to state 346


state 303

    (201) tagterminallamada -> empty .

    PUNTOCOMA       reduce using rule 201 (tagterminallamada -> empty .)


state 304

    (194) llamaf2 -> exp tagrevisaparam . llamaf3
    (195) llamaf3 -> . COMA tagotroargumento llamaf2
    (196) llamaf3 -> . llamaf4
    (197) llamaf4 -> . RPARENT tagterminallamada PUNTOCOMA

    COMA            shift and go to state 349
    RPARENT         shift and go to state 247

    llamaf4                        shift and go to state 347
    llamaf3                        shift and go to state 348

state 305

    (199) tagrevisaparam -> empty .

    COMA            reduce using rule 199 (tagrevisaparam -> empty .)
    RPARENT         reduce using rule 199 (tagrevisaparam -> empty .)


state 306

    (96) f7 -> ID LBRACKET tagrevisadime exp tagmetedim . f8
    (97) f8 -> . COMA tagotradim exp tagmetedim f8
    (98) f8 -> . RBRACKET tagterminadim

    COMA            shift and go to state 351
    RBRACKET        shift and go to state 352

    f8                             shift and go to state 350

state 307

    (100) tagmetedim -> empty .

    COMA            reduce using rule 100 (tagmetedim -> empty .)
    RBRACKET        reduce using rule 100 (tagmetedim -> empty .)


state 308

    (176) dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .

    ID              reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    READ            reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    READINT         reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 176 (dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA .)


state 309

    (153) if -> IF LPARENT expresion tagif RPARENT . bloque if2
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (202) empty -> .

    LKEY            reduce using rule 202 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 353
    empty                          shift and go to state 24

state 310

    (167) estrella -> ESTRELLA LPARENT exp RPARENT tagestrella . PUNTOCOMA

    PUNTOCOMA       shift and go to state 354


state 311

    (168) tagestrella -> empty .

    PUNTOCOMA       reduce using rule 168 (tagestrella -> empty .)


state 312

    (161) cuadrado -> CUADRADO LPARENT exp COMA exp . COMA exp RPARENT tagcuadro PUNTOCOMA

    COMA            shift and go to state 355


state 313

    (43) exp2 -> RESTA tagop . exp
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 356

state 314

    (45) tagop -> empty .

    LPARENT         reduce using rule 45 (tagop -> empty .)
    ID              reduce using rule 45 (tagop -> empty .)
    ENTERO          reduce using rule 45 (tagop -> empty .)
    FLOTANTE        reduce using rule 45 (tagop -> empty .)
    CADENA          reduce using rule 45 (tagop -> empty .)
    CARACTER        reduce using rule 45 (tagop -> empty .)
    TRUE            reduce using rule 45 (tagop -> empty .)
    FALSE           reduce using rule 45 (tagop -> empty .)


state 315

    (42) exp2 -> SUMA tagop . exp
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 357

state 316

    (87) factor -> LPARENT tagfondofalso expresion RPARENT . tagsacafondo
    (95) tagsacafondo -> . empty
    (202) empty -> .

    MULT            reduce using rule 202 (empty -> .)
    DIV             reduce using rule 202 (empty -> .)
    SUMA            reduce using rule 202 (empty -> .)
    RESTA           reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    empty                          shift and go to state 359
    tagsacafondo                   shift and go to state 358

state 317

    (83) te2 -> DIV tagm . termino
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 360
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150

state 318

    (85) tagm -> empty .

    LPARENT         reduce using rule 85 (tagm -> empty .)
    ID              reduce using rule 85 (tagm -> empty .)
    ENTERO          reduce using rule 85 (tagm -> empty .)
    FLOTANTE        reduce using rule 85 (tagm -> empty .)
    CADENA          reduce using rule 85 (tagm -> empty .)
    CARACTER        reduce using rule 85 (tagm -> empty .)
    TRUE            reduce using rule 85 (tagm -> empty .)
    FALSE           reduce using rule 85 (tagm -> empty .)


state 319

    (82) te2 -> MULT tagm . termino
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 361
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150

state 320

    (55) decla2 -> COMA SigDimension . exp saveLimSup decla2
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 362

state 321

    (56) SigDimension -> empty .

    LPARENT         reduce using rule 56 (SigDimension -> empty .)
    ID              reduce using rule 56 (SigDimension -> empty .)
    ENTERO          reduce using rule 56 (SigDimension -> empty .)
    FLOTANTE        reduce using rule 56 (SigDimension -> empty .)
    CADENA          reduce using rule 56 (SigDimension -> empty .)
    CARACTER        reduce using rule 56 (SigDimension -> empty .)
    TRUE            reduce using rule 56 (SigDimension -> empty .)
    FALSE           reduce using rule 56 (SigDimension -> empty .)


state 322

    (54) decla2 -> RBRACKET guardaMemDimen . declafinal
    (58) declafinal -> . PUNTOCOMA

    PUNTOCOMA       shift and go to state 104

    declafinal                     shift and go to state 363

state 323

    (57) guardaMemDimen -> empty .

    PUNTOCOMA       reduce using rule 57 (guardaMemDimen -> empty .)


state 324

    (188) function4 -> RPARENT initFunc bloque . noinitFunc
    (190) noinitFunc -> . empty
    (202) empty -> .

    FUNCTION        reduce using rule 202 (empty -> .)
    LKEY            reduce using rule 202 (empty -> .)

    noinitFunc                     shift and go to state 364
    empty                          shift and go to state 365

state 325

    (184) funct2 -> tipo ID . initParams funct3
    (185) initParams -> . empty
    (202) empty -> .

    COMA            reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)

    initParams                     shift and go to state 367
    empty                          shift and go to state 366

state 326

    (143) ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion . tagcondiciondo RPARENT PUNTOCOMA
    (145) tagcondiciondo -> . empty
    (202) empty -> .

    RPARENT         reduce using rule 202 (empty -> .)

    tagcondiciondo                 shift and go to state 368
    empty                          shift and go to state 369

state 327

    (72) asigf2 -> expresion tagig PUNTOCOMA .

    ID              reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    PRINT           reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    WHILE           reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    DO              reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    FOR             reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    READ            reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    READINT         reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    COMENTARIO      reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    CUADRADO        reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    TRIANGULO       reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    CASA            reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    RECTANGULO      reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    CUBO            reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    TRAPECIO        reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    ESTRELLA        reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    MUEVE           reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    LEVANTA         reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    APOYA           reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    DIMENSION       reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    RETURN          reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    IF              reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    RKEY            reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    LPARENT         reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    ENTERO          reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    FLOTANTE        reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    CADENA          reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    CARACTER        reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    TRUE            reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    FALSE           reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)
    RPARENT         reduce using rule 72 (asigf2 -> expresion tagig PUNTOCOMA .)


state 328

    (171) mueve -> MUEVE LPARENT exp COMA exp RPARENT . tagmueve PUNTOCOMA
    (172) tagmueve -> . empty
    (202) empty -> .

    PUNTOCOMA       reduce using rule 202 (empty -> .)

    tagmueve                       shift and go to state 370
    empty                          shift and go to state 371

state 329

    (139) ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile . bloque tagregresawhile
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (202) empty -> .

    LKEY            reduce using rule 202 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 372
    empty                          shift and go to state 24

state 330

    (141) tagwhile -> empty .

    LKEY            reduce using rule 141 (tagwhile -> empty .)


state 331

    (175) trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 373


state 332

    (26) expre2 -> AND tagmetelog expresion . tagsacalog
    (29) tagsacalog -> . empty
    (202) empty -> .

    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagsacalog                     shift and go to state 374
    empty                          shift and go to state 375

state 333

    (27) expre2 -> OR tagmetelog expresion . tagsacalog
    (29) tagsacalog -> . empty
    (202) empty -> .

    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagsacalog                     shift and go to state 376
    empty                          shift and go to state 375

state 334

    (79) pr3 -> tagimprime RPARENT PUNTOCOMA .

    ID              reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    DO              reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    FOR             reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    READ            reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    READINT         reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    CASA            reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    IF              reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 79 (pr3 -> tagimprime RPARENT PUNTOCOMA .)


state 335

    (36) e3 -> GE tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (202) empty -> .

    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagsacrel                      shift and go to state 377
    empty                          shift and go to state 378

state 336

    (37) e3 -> DIF tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (202) empty -> .

    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagsacrel                      shift and go to state 379
    empty                          shift and go to state 378

state 337

    (35) e3 -> LE tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (202) empty -> .

    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagsacrel                      shift and go to state 380
    empty                          shift and go to state 378

state 338

    (38) e3 -> SAME tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (202) empty -> .

    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagsacrel                      shift and go to state 381
    empty                          shift and go to state 378

state 339

    (34) e3 -> LT tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (202) empty -> .

    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagsacrel                      shift and go to state 382
    empty                          shift and go to state 378

state 340

    (33) e3 -> GT tagrel exp . tagsacrel
    (40) tagsacrel -> . empty
    (202) empty -> .

    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagsacrel                      shift and go to state 383
    empty                          shift and go to state 378

state 341

    (166) casa -> CASA LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 384


state 342

    (169) cubo -> CUBO LPARENT exp COMA exp COMA . exp RPARENT tagcubo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 385

state 343

    (163) triangulo -> TRIANGULO LPARENT exp COMA exp COMA . exp RPARENT tagtriangulo PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 386

state 344

    (148) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion . tagespera RPARENT bloque tagasigna tagterminafor
    (151) tagespera -> . empty
    (202) empty -> .

    RPARENT         reduce using rule 202 (empty -> .)

    tagespera                      shift and go to state 387
    empty                          shift and go to state 388

state 345

    (165) rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 389


state 346

    (197) llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .

    ID              reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    PRINT           reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    WHILE           reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    DO              reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    FOR             reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    READ            reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    READINT         reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    COMENTARIO      reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    CUADRADO        reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    TRIANGULO       reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    CASA            reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RECTANGULO      reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    CUBO            reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    TRAPECIO        reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    ESTRELLA        reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    MUEVE           reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    LEVANTA         reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    APOYA           reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    DIMENSION       reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RETURN          reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    IF              reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RKEY            reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    MULT            reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    DIV             reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    SUMA            reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RESTA           reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RBRACKET        reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    COMA            reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    GT              reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    LT              reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    LE              reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    GE              reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    DIF             reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    SAME            reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    AND             reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    OR              reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    RPARENT         reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 197 (llamaf4 -> RPARENT tagterminallamada PUNTOCOMA .)


state 347

    (196) llamaf3 -> llamaf4 .

    ID              reduce using rule 196 (llamaf3 -> llamaf4 .)
    PRINT           reduce using rule 196 (llamaf3 -> llamaf4 .)
    WHILE           reduce using rule 196 (llamaf3 -> llamaf4 .)
    DO              reduce using rule 196 (llamaf3 -> llamaf4 .)
    FOR             reduce using rule 196 (llamaf3 -> llamaf4 .)
    READ            reduce using rule 196 (llamaf3 -> llamaf4 .)
    READINT         reduce using rule 196 (llamaf3 -> llamaf4 .)
    COMENTARIO      reduce using rule 196 (llamaf3 -> llamaf4 .)
    CUADRADO        reduce using rule 196 (llamaf3 -> llamaf4 .)
    TRIANGULO       reduce using rule 196 (llamaf3 -> llamaf4 .)
    CASA            reduce using rule 196 (llamaf3 -> llamaf4 .)
    RECTANGULO      reduce using rule 196 (llamaf3 -> llamaf4 .)
    CUBO            reduce using rule 196 (llamaf3 -> llamaf4 .)
    TRAPECIO        reduce using rule 196 (llamaf3 -> llamaf4 .)
    ESTRELLA        reduce using rule 196 (llamaf3 -> llamaf4 .)
    MUEVE           reduce using rule 196 (llamaf3 -> llamaf4 .)
    LEVANTA         reduce using rule 196 (llamaf3 -> llamaf4 .)
    APOYA           reduce using rule 196 (llamaf3 -> llamaf4 .)
    DIMENSION       reduce using rule 196 (llamaf3 -> llamaf4 .)
    RETURN          reduce using rule 196 (llamaf3 -> llamaf4 .)
    IF              reduce using rule 196 (llamaf3 -> llamaf4 .)
    RKEY            reduce using rule 196 (llamaf3 -> llamaf4 .)
    MULT            reduce using rule 196 (llamaf3 -> llamaf4 .)
    DIV             reduce using rule 196 (llamaf3 -> llamaf4 .)
    SUMA            reduce using rule 196 (llamaf3 -> llamaf4 .)
    RESTA           reduce using rule 196 (llamaf3 -> llamaf4 .)
    RBRACKET        reduce using rule 196 (llamaf3 -> llamaf4 .)
    COMA            reduce using rule 196 (llamaf3 -> llamaf4 .)
    GT              reduce using rule 196 (llamaf3 -> llamaf4 .)
    LT              reduce using rule 196 (llamaf3 -> llamaf4 .)
    LE              reduce using rule 196 (llamaf3 -> llamaf4 .)
    GE              reduce using rule 196 (llamaf3 -> llamaf4 .)
    DIF             reduce using rule 196 (llamaf3 -> llamaf4 .)
    SAME            reduce using rule 196 (llamaf3 -> llamaf4 .)
    AND             reduce using rule 196 (llamaf3 -> llamaf4 .)
    OR              reduce using rule 196 (llamaf3 -> llamaf4 .)
    RPARENT         reduce using rule 196 (llamaf3 -> llamaf4 .)
    PUNTOCOMA       reduce using rule 196 (llamaf3 -> llamaf4 .)


state 348

    (194) llamaf2 -> exp tagrevisaparam llamaf3 .

    ID              reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    PRINT           reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    WHILE           reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    DO              reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    FOR             reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    READ            reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    READINT         reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    COMENTARIO      reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    CUADRADO        reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    TRIANGULO       reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    CASA            reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RECTANGULO      reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    CUBO            reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    TRAPECIO        reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    ESTRELLA        reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    MUEVE           reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    LEVANTA         reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    APOYA           reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    DIMENSION       reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RETURN          reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    IF              reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RKEY            reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    MULT            reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    DIV             reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    SUMA            reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RESTA           reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RBRACKET        reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    COMA            reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    GT              reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    LT              reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    LE              reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    GE              reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    DIF             reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    SAME            reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    AND             reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    OR              reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    RPARENT         reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)
    PUNTOCOMA       reduce using rule 194 (llamaf2 -> exp tagrevisaparam llamaf3 .)


state 349

    (195) llamaf3 -> COMA . tagotroargumento llamaf2
    (200) tagotroargumento -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagotroargumento               shift and go to state 390
    empty                          shift and go to state 391

state 350

    (96) f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .

    IGUAL           reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    MULT            reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    DIV             reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    SUMA            reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    RESTA           reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    COMA            reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    RBRACKET        reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    GT              reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    LT              reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    LE              reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    GE              reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    DIF             reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    SAME            reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    AND             reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    OR              reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    RPARENT         reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    PUNTOCOMA       reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)
    ID              reduce using rule 96 (f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8 .)


state 351

    (97) f8 -> COMA . tagotradim exp tagmetedim f8
    (101) tagotradim -> . empty
    (202) empty -> .

    LPARENT         reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)
    ENTERO          reduce using rule 202 (empty -> .)
    FLOTANTE        reduce using rule 202 (empty -> .)
    CADENA          reduce using rule 202 (empty -> .)
    CARACTER        reduce using rule 202 (empty -> .)
    TRUE            reduce using rule 202 (empty -> .)
    FALSE           reduce using rule 202 (empty -> .)

    tagotradim                     shift and go to state 392
    empty                          shift and go to state 393

state 352

    (98) f8 -> RBRACKET . tagterminadim
    (102) tagterminadim -> . empty
    (202) empty -> .

    IGUAL           reduce using rule 202 (empty -> .)
    MULT            reduce using rule 202 (empty -> .)
    DIV             reduce using rule 202 (empty -> .)
    SUMA            reduce using rule 202 (empty -> .)
    RESTA           reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)
    GT              reduce using rule 202 (empty -> .)
    LT              reduce using rule 202 (empty -> .)
    LE              reduce using rule 202 (empty -> .)
    GE              reduce using rule 202 (empty -> .)
    DIF             reduce using rule 202 (empty -> .)
    SAME            reduce using rule 202 (empty -> .)
    AND             reduce using rule 202 (empty -> .)
    OR              reduce using rule 202 (empty -> .)
    RPARENT         reduce using rule 202 (empty -> .)
    PUNTOCOMA       reduce using rule 202 (empty -> .)
    ID              reduce using rule 202 (empty -> .)

    tagterminadim                  shift and go to state 394
    empty                          shift and go to state 395

state 353

    (153) if -> IF LPARENT expresion tagif RPARENT bloque . if2
    (154) if2 -> . tagterminaif
    (155) if2 -> . ELSE tagelse bloque tagterminaif
    (158) tagterminaif -> . empty
    (202) empty -> .

    ELSE            shift and go to state 398
    ID              reduce using rule 202 (empty -> .)
    PRINT           reduce using rule 202 (empty -> .)
    WHILE           reduce using rule 202 (empty -> .)
    DO              reduce using rule 202 (empty -> .)
    FOR             reduce using rule 202 (empty -> .)
    READ            reduce using rule 202 (empty -> .)
    READINT         reduce using rule 202 (empty -> .)
    COMENTARIO      reduce using rule 202 (empty -> .)
    CUADRADO        reduce using rule 202 (empty -> .)
    TRIANGULO       reduce using rule 202 (empty -> .)
    CASA            reduce using rule 202 (empty -> .)
    RECTANGULO      reduce using rule 202 (empty -> .)
    CUBO            reduce using rule 202 (empty -> .)
    TRAPECIO        reduce using rule 202 (empty -> .)
    ESTRELLA        reduce using rule 202 (empty -> .)
    MUEVE           reduce using rule 202 (empty -> .)
    LEVANTA         reduce using rule 202 (empty -> .)
    APOYA           reduce using rule 202 (empty -> .)
    DIMENSION       reduce using rule 202 (empty -> .)
    RETURN          reduce using rule 202 (empty -> .)
    IF              reduce using rule 202 (empty -> .)
    RKEY            reduce using rule 202 (empty -> .)

    if2                            shift and go to state 396
    tagterminaif                   shift and go to state 397
    empty                          shift and go to state 399

state 354

    (167) estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .

    ID              reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    PRINT           reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    WHILE           reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    DO              reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    FOR             reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    READ            reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    READINT         reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    COMENTARIO      reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    CUADRADO        reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    TRIANGULO       reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    CASA            reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    RECTANGULO      reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    CUBO            reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    TRAPECIO        reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    ESTRELLA        reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    MUEVE           reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    LEVANTA         reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    APOYA           reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    DIMENSION       reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    RETURN          reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    IF              reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)
    RKEY            reduce using rule 167 (estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA .)


state 355

    (161) cuadrado -> CUADRADO LPARENT exp COMA exp COMA . exp RPARENT tagcuadro PUNTOCOMA
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 400

state 356

    (43) exp2 -> RESTA tagop exp .

    RBRACKET        reduce using rule 43 (exp2 -> RESTA tagop exp .)
    COMA            reduce using rule 43 (exp2 -> RESTA tagop exp .)
    GT              reduce using rule 43 (exp2 -> RESTA tagop exp .)
    LT              reduce using rule 43 (exp2 -> RESTA tagop exp .)
    LE              reduce using rule 43 (exp2 -> RESTA tagop exp .)
    GE              reduce using rule 43 (exp2 -> RESTA tagop exp .)
    DIF             reduce using rule 43 (exp2 -> RESTA tagop exp .)
    SAME            reduce using rule 43 (exp2 -> RESTA tagop exp .)
    AND             reduce using rule 43 (exp2 -> RESTA tagop exp .)
    OR              reduce using rule 43 (exp2 -> RESTA tagop exp .)
    RPARENT         reduce using rule 43 (exp2 -> RESTA tagop exp .)
    PUNTOCOMA       reduce using rule 43 (exp2 -> RESTA tagop exp .)
    ID              reduce using rule 43 (exp2 -> RESTA tagop exp .)


state 357

    (42) exp2 -> SUMA tagop exp .

    RBRACKET        reduce using rule 42 (exp2 -> SUMA tagop exp .)
    COMA            reduce using rule 42 (exp2 -> SUMA tagop exp .)
    GT              reduce using rule 42 (exp2 -> SUMA tagop exp .)
    LT              reduce using rule 42 (exp2 -> SUMA tagop exp .)
    LE              reduce using rule 42 (exp2 -> SUMA tagop exp .)
    GE              reduce using rule 42 (exp2 -> SUMA tagop exp .)
    DIF             reduce using rule 42 (exp2 -> SUMA tagop exp .)
    SAME            reduce using rule 42 (exp2 -> SUMA tagop exp .)
    AND             reduce using rule 42 (exp2 -> SUMA tagop exp .)
    OR              reduce using rule 42 (exp2 -> SUMA tagop exp .)
    RPARENT         reduce using rule 42 (exp2 -> SUMA tagop exp .)
    PUNTOCOMA       reduce using rule 42 (exp2 -> SUMA tagop exp .)
    ID              reduce using rule 42 (exp2 -> SUMA tagop exp .)


state 358

    (87) factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .

    MULT            reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    DIV             reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    SUMA            reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RESTA           reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    COMA            reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    AND             reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    OR              reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RPARENT         reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    PUNTOCOMA       reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    ID              reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    GT              reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    LT              reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    LE              reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    GE              reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    DIF             reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    SAME            reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)
    RBRACKET        reduce using rule 87 (factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo .)


state 359

    (95) tagsacafondo -> empty .

    MULT            reduce using rule 95 (tagsacafondo -> empty .)
    DIV             reduce using rule 95 (tagsacafondo -> empty .)
    SUMA            reduce using rule 95 (tagsacafondo -> empty .)
    RESTA           reduce using rule 95 (tagsacafondo -> empty .)
    RBRACKET        reduce using rule 95 (tagsacafondo -> empty .)
    COMA            reduce using rule 95 (tagsacafondo -> empty .)
    GT              reduce using rule 95 (tagsacafondo -> empty .)
    LT              reduce using rule 95 (tagsacafondo -> empty .)
    LE              reduce using rule 95 (tagsacafondo -> empty .)
    GE              reduce using rule 95 (tagsacafondo -> empty .)
    DIF             reduce using rule 95 (tagsacafondo -> empty .)
    SAME            reduce using rule 95 (tagsacafondo -> empty .)
    AND             reduce using rule 95 (tagsacafondo -> empty .)
    OR              reduce using rule 95 (tagsacafondo -> empty .)
    RPARENT         reduce using rule 95 (tagsacafondo -> empty .)
    PUNTOCOMA       reduce using rule 95 (tagsacafondo -> empty .)
    ID              reduce using rule 95 (tagsacafondo -> empty .)


state 360

    (83) te2 -> DIV tagm termino .

    SUMA            reduce using rule 83 (te2 -> DIV tagm termino .)
    RESTA           reduce using rule 83 (te2 -> DIV tagm termino .)
    RBRACKET        reduce using rule 83 (te2 -> DIV tagm termino .)
    COMA            reduce using rule 83 (te2 -> DIV tagm termino .)
    GT              reduce using rule 83 (te2 -> DIV tagm termino .)
    LT              reduce using rule 83 (te2 -> DIV tagm termino .)
    LE              reduce using rule 83 (te2 -> DIV tagm termino .)
    GE              reduce using rule 83 (te2 -> DIV tagm termino .)
    DIF             reduce using rule 83 (te2 -> DIV tagm termino .)
    SAME            reduce using rule 83 (te2 -> DIV tagm termino .)
    AND             reduce using rule 83 (te2 -> DIV tagm termino .)
    OR              reduce using rule 83 (te2 -> DIV tagm termino .)
    RPARENT         reduce using rule 83 (te2 -> DIV tagm termino .)
    PUNTOCOMA       reduce using rule 83 (te2 -> DIV tagm termino .)
    ID              reduce using rule 83 (te2 -> DIV tagm termino .)


state 361

    (82) te2 -> MULT tagm termino .

    SUMA            reduce using rule 82 (te2 -> MULT tagm termino .)
    RESTA           reduce using rule 82 (te2 -> MULT tagm termino .)
    RBRACKET        reduce using rule 82 (te2 -> MULT tagm termino .)
    COMA            reduce using rule 82 (te2 -> MULT tagm termino .)
    GT              reduce using rule 82 (te2 -> MULT tagm termino .)
    LT              reduce using rule 82 (te2 -> MULT tagm termino .)
    LE              reduce using rule 82 (te2 -> MULT tagm termino .)
    GE              reduce using rule 82 (te2 -> MULT tagm termino .)
    DIF             reduce using rule 82 (te2 -> MULT tagm termino .)
    SAME            reduce using rule 82 (te2 -> MULT tagm termino .)
    AND             reduce using rule 82 (te2 -> MULT tagm termino .)
    OR              reduce using rule 82 (te2 -> MULT tagm termino .)
    RPARENT         reduce using rule 82 (te2 -> MULT tagm termino .)
    PUNTOCOMA       reduce using rule 82 (te2 -> MULT tagm termino .)
    ID              reduce using rule 82 (te2 -> MULT tagm termino .)


state 362

    (55) decla2 -> COMA SigDimension exp . saveLimSup decla2
    (53) saveLimSup -> . empty
    (202) empty -> .

    RBRACKET        reduce using rule 202 (empty -> .)
    COMA            reduce using rule 202 (empty -> .)

    empty                          shift and go to state 206
    saveLimSup                     shift and go to state 401

state 363

    (54) decla2 -> RBRACKET guardaMemDimen declafinal .

    INT             reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    FLOAT           reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    CHAR            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    STRING          reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    BOOL            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    FUNCTION        reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    LKEY            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    ID              reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    PRINT           reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    WHILE           reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    DO              reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    FOR             reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    READ            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    READINT         reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    COMENTARIO      reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    CUADRADO        reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    TRIANGULO       reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    CASA            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    RECTANGULO      reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    CUBO            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    TRAPECIO        reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    ESTRELLA        reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    MUEVE           reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    LEVANTA         reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    APOYA           reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    DIMENSION       reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    RETURN          reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    IF              reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)
    RKEY            reduce using rule 54 (decla2 -> RBRACKET guardaMemDimen declafinal .)


state 364

    (188) function4 -> RPARENT initFunc bloque noinitFunc .

    FUNCTION        reduce using rule 188 (function4 -> RPARENT initFunc bloque noinitFunc .)
    LKEY            reduce using rule 188 (function4 -> RPARENT initFunc bloque noinitFunc .)


state 365

    (190) noinitFunc -> empty .

    FUNCTION        reduce using rule 190 (noinitFunc -> empty .)
    LKEY            reduce using rule 190 (noinitFunc -> empty .)


state 366

    (185) initParams -> empty .

    COMA            reduce using rule 185 (initParams -> empty .)
    RPARENT         reduce using rule 185 (initParams -> empty .)


state 367

    (184) funct2 -> tipo ID initParams . funct3
    (186) funct3 -> . COMA funct2
    (187) funct3 -> . function4
    (188) function4 -> . RPARENT initFunc bloque noinitFunc

    COMA            shift and go to state 404
    RPARENT         shift and go to state 211

    function4                      shift and go to state 402
    funct3                         shift and go to state 403

state 368

    (143) ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 405


state 369

    (145) tagcondiciondo -> empty .

    RPARENT         reduce using rule 145 (tagcondiciondo -> empty .)


state 370

    (171) mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve . PUNTOCOMA

    PUNTOCOMA       shift and go to state 406


state 371

    (172) tagmueve -> empty .

    PUNTOCOMA       reduce using rule 172 (tagmueve -> empty .)


state 372

    (139) ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque . tagregresawhile
    (142) tagregresawhile -> . empty
    (202) empty -> .

    ID              reduce using rule 202 (empty -> .)
    PRINT           reduce using rule 202 (empty -> .)
    WHILE           reduce using rule 202 (empty -> .)
    DO              reduce using rule 202 (empty -> .)
    FOR             reduce using rule 202 (empty -> .)
    READ            reduce using rule 202 (empty -> .)
    READINT         reduce using rule 202 (empty -> .)
    COMENTARIO      reduce using rule 202 (empty -> .)
    CUADRADO        reduce using rule 202 (empty -> .)
    TRIANGULO       reduce using rule 202 (empty -> .)
    CASA            reduce using rule 202 (empty -> .)
    RECTANGULO      reduce using rule 202 (empty -> .)
    CUBO            reduce using rule 202 (empty -> .)
    TRAPECIO        reduce using rule 202 (empty -> .)
    ESTRELLA        reduce using rule 202 (empty -> .)
    MUEVE           reduce using rule 202 (empty -> .)
    LEVANTA         reduce using rule 202 (empty -> .)
    APOYA           reduce using rule 202 (empty -> .)
    DIMENSION       reduce using rule 202 (empty -> .)
    RETURN          reduce using rule 202 (empty -> .)
    IF              reduce using rule 202 (empty -> .)
    RKEY            reduce using rule 202 (empty -> .)

    tagregresawhile                shift and go to state 407
    empty                          shift and go to state 408

state 373

    (175) trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READ            reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READINT         reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 175 (trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 374

    (26) expre2 -> AND tagmetelog expresion tagsacalog .

    RPARENT         reduce using rule 26 (expre2 -> AND tagmetelog expresion tagsacalog .)
    PUNTOCOMA       reduce using rule 26 (expre2 -> AND tagmetelog expresion tagsacalog .)
    ID              reduce using rule 26 (expre2 -> AND tagmetelog expresion tagsacalog .)


state 375

    (29) tagsacalog -> empty .

    RPARENT         reduce using rule 29 (tagsacalog -> empty .)
    PUNTOCOMA       reduce using rule 29 (tagsacalog -> empty .)
    ID              reduce using rule 29 (tagsacalog -> empty .)


state 376

    (27) expre2 -> OR tagmetelog expresion tagsacalog .

    RPARENT         reduce using rule 27 (expre2 -> OR tagmetelog expresion tagsacalog .)
    PUNTOCOMA       reduce using rule 27 (expre2 -> OR tagmetelog expresion tagsacalog .)
    ID              reduce using rule 27 (expre2 -> OR tagmetelog expresion tagsacalog .)


state 377

    (36) e3 -> GE tagrel exp tagsacrel .

    AND             reduce using rule 36 (e3 -> GE tagrel exp tagsacrel .)
    OR              reduce using rule 36 (e3 -> GE tagrel exp tagsacrel .)
    RPARENT         reduce using rule 36 (e3 -> GE tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 36 (e3 -> GE tagrel exp tagsacrel .)
    ID              reduce using rule 36 (e3 -> GE tagrel exp tagsacrel .)


state 378

    (40) tagsacrel -> empty .

    AND             reduce using rule 40 (tagsacrel -> empty .)
    OR              reduce using rule 40 (tagsacrel -> empty .)
    RPARENT         reduce using rule 40 (tagsacrel -> empty .)
    PUNTOCOMA       reduce using rule 40 (tagsacrel -> empty .)
    ID              reduce using rule 40 (tagsacrel -> empty .)


state 379

    (37) e3 -> DIF tagrel exp tagsacrel .

    AND             reduce using rule 37 (e3 -> DIF tagrel exp tagsacrel .)
    OR              reduce using rule 37 (e3 -> DIF tagrel exp tagsacrel .)
    RPARENT         reduce using rule 37 (e3 -> DIF tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 37 (e3 -> DIF tagrel exp tagsacrel .)
    ID              reduce using rule 37 (e3 -> DIF tagrel exp tagsacrel .)


state 380

    (35) e3 -> LE tagrel exp tagsacrel .

    AND             reduce using rule 35 (e3 -> LE tagrel exp tagsacrel .)
    OR              reduce using rule 35 (e3 -> LE tagrel exp tagsacrel .)
    RPARENT         reduce using rule 35 (e3 -> LE tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 35 (e3 -> LE tagrel exp tagsacrel .)
    ID              reduce using rule 35 (e3 -> LE tagrel exp tagsacrel .)


state 381

    (38) e3 -> SAME tagrel exp tagsacrel .

    AND             reduce using rule 38 (e3 -> SAME tagrel exp tagsacrel .)
    OR              reduce using rule 38 (e3 -> SAME tagrel exp tagsacrel .)
    RPARENT         reduce using rule 38 (e3 -> SAME tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 38 (e3 -> SAME tagrel exp tagsacrel .)
    ID              reduce using rule 38 (e3 -> SAME tagrel exp tagsacrel .)


state 382

    (34) e3 -> LT tagrel exp tagsacrel .

    AND             reduce using rule 34 (e3 -> LT tagrel exp tagsacrel .)
    OR              reduce using rule 34 (e3 -> LT tagrel exp tagsacrel .)
    RPARENT         reduce using rule 34 (e3 -> LT tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 34 (e3 -> LT tagrel exp tagsacrel .)
    ID              reduce using rule 34 (e3 -> LT tagrel exp tagsacrel .)


state 383

    (33) e3 -> GT tagrel exp tagsacrel .

    AND             reduce using rule 33 (e3 -> GT tagrel exp tagsacrel .)
    OR              reduce using rule 33 (e3 -> GT tagrel exp tagsacrel .)
    RPARENT         reduce using rule 33 (e3 -> GT tagrel exp tagsacrel .)
    PUNTOCOMA       reduce using rule 33 (e3 -> GT tagrel exp tagsacrel .)
    ID              reduce using rule 33 (e3 -> GT tagrel exp tagsacrel .)


state 384

    (166) casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READ            reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READINT         reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 166 (casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 385

    (169) cubo -> CUBO LPARENT exp COMA exp COMA exp . RPARENT tagcubo PUNTOCOMA

    RPARENT         shift and go to state 409


state 386

    (163) triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp . RPARENT tagtriangulo PUNTOCOMA

    RPARENT         shift and go to state 410


state 387

    (148) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera . RPARENT bloque tagasigna tagterminafor

    RPARENT         shift and go to state 411


state 388

    (151) tagespera -> empty .

    RPARENT         reduce using rule 151 (tagespera -> empty .)


state 389

    (165) rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .

    ID              reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DO              reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    FOR             reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READ            reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    READINT         reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CASA            reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    IF              reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 165 (rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA .)


state 390

    (195) llamaf3 -> COMA tagotroargumento . llamaf2
    (194) llamaf2 -> . exp tagrevisaparam llamaf3
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    llamaf2                        shift and go to state 412
    exp                            shift and go to state 250

state 391

    (200) tagotroargumento -> empty .

    LPARENT         reduce using rule 200 (tagotroargumento -> empty .)
    ID              reduce using rule 200 (tagotroargumento -> empty .)
    ENTERO          reduce using rule 200 (tagotroargumento -> empty .)
    FLOTANTE        reduce using rule 200 (tagotroargumento -> empty .)
    CADENA          reduce using rule 200 (tagotroargumento -> empty .)
    CARACTER        reduce using rule 200 (tagotroargumento -> empty .)
    TRUE            reduce using rule 200 (tagotroargumento -> empty .)
    FALSE           reduce using rule 200 (tagotroargumento -> empty .)


state 392

    (97) f8 -> COMA tagotradim . exp tagmetedim f8
    (41) exp -> . termino tagsacops exp2
    (81) termino -> . factor tagsacopm te2
    (87) factor -> . LPARENT tagfondofalso expresion RPARENT tagsacafondo
    (88) factor -> . f2
    (89) factor -> . f3
    (90) factor -> . f6
    (91) factor -> . f7
    (92) f2 -> . varcte
    (93) f3 -> . ID
    (103) f6 -> . llamafuncion
    (96) f7 -> . ID LBRACKET tagrevisadime exp tagmetedim f8
    (128) varcte -> . ENTERO tagint
    (129) varcte -> . FLOTANTE tagfloat
    (130) varcte -> . CADENA tagcad
    (131) varcte -> . CARACTER tagcar
    (132) varcte -> . TRUE tagbol
    (133) varcte -> . FALSE tagbol
    (191) llamafuncion -> . ID LPARENT tagverificafuncion llamaf11

    LPARENT         shift and go to state 146
    ID              shift and go to state 153
    ENTERO          shift and go to state 151
    FLOTANTE        shift and go to state 156
    CADENA          shift and go to state 148
    CARACTER        shift and go to state 152
    TRUE            shift and go to state 145
    FALSE           shift and go to state 154

    f2                             shift and go to state 140
    f3                             shift and go to state 141
    f6                             shift and go to state 142
    f7                             shift and go to state 143
    termino                        shift and go to state 144
    varcte                         shift and go to state 147
    llamafuncion                   shift and go to state 149
    factor                         shift and go to state 150
    exp                            shift and go to state 413

state 393

    (101) tagotradim -> empty .

    LPARENT         reduce using rule 101 (tagotradim -> empty .)
    ID              reduce using rule 101 (tagotradim -> empty .)
    ENTERO          reduce using rule 101 (tagotradim -> empty .)
    FLOTANTE        reduce using rule 101 (tagotradim -> empty .)
    CADENA          reduce using rule 101 (tagotradim -> empty .)
    CARACTER        reduce using rule 101 (tagotradim -> empty .)
    TRUE            reduce using rule 101 (tagotradim -> empty .)
    FALSE           reduce using rule 101 (tagotradim -> empty .)


state 394

    (98) f8 -> RBRACKET tagterminadim .

    IGUAL           reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    MULT            reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    DIV             reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    SUMA            reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    RESTA           reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    RBRACKET        reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    COMA            reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    GT              reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    LT              reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    LE              reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    GE              reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    DIF             reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    SAME            reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    AND             reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    OR              reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    RPARENT         reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    PUNTOCOMA       reduce using rule 98 (f8 -> RBRACKET tagterminadim .)
    ID              reduce using rule 98 (f8 -> RBRACKET tagterminadim .)


state 395

    (102) tagterminadim -> empty .

    IGUAL           reduce using rule 102 (tagterminadim -> empty .)
    MULT            reduce using rule 102 (tagterminadim -> empty .)
    DIV             reduce using rule 102 (tagterminadim -> empty .)
    SUMA            reduce using rule 102 (tagterminadim -> empty .)
    RESTA           reduce using rule 102 (tagterminadim -> empty .)
    RBRACKET        reduce using rule 102 (tagterminadim -> empty .)
    COMA            reduce using rule 102 (tagterminadim -> empty .)
    GT              reduce using rule 102 (tagterminadim -> empty .)
    LT              reduce using rule 102 (tagterminadim -> empty .)
    LE              reduce using rule 102 (tagterminadim -> empty .)
    GE              reduce using rule 102 (tagterminadim -> empty .)
    DIF             reduce using rule 102 (tagterminadim -> empty .)
    SAME            reduce using rule 102 (tagterminadim -> empty .)
    AND             reduce using rule 102 (tagterminadim -> empty .)
    OR              reduce using rule 102 (tagterminadim -> empty .)
    RPARENT         reduce using rule 102 (tagterminadim -> empty .)
    PUNTOCOMA       reduce using rule 102 (tagterminadim -> empty .)
    ID              reduce using rule 102 (tagterminadim -> empty .)


state 396

    (153) if -> IF LPARENT expresion tagif RPARENT bloque if2 .

    ID              reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    PRINT           reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    WHILE           reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    DO              reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    FOR             reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    READ            reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    READINT         reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    COMENTARIO      reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    CUADRADO        reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    TRIANGULO       reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    CASA            reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    RECTANGULO      reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    CUBO            reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    TRAPECIO        reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    ESTRELLA        reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    MUEVE           reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    LEVANTA         reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    APOYA           reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    DIMENSION       reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    RETURN          reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    IF              reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)
    RKEY            reduce using rule 153 (if -> IF LPARENT expresion tagif RPARENT bloque if2 .)


state 397

    (154) if2 -> tagterminaif .

    ID              reduce using rule 154 (if2 -> tagterminaif .)
    PRINT           reduce using rule 154 (if2 -> tagterminaif .)
    WHILE           reduce using rule 154 (if2 -> tagterminaif .)
    DO              reduce using rule 154 (if2 -> tagterminaif .)
    FOR             reduce using rule 154 (if2 -> tagterminaif .)
    READ            reduce using rule 154 (if2 -> tagterminaif .)
    READINT         reduce using rule 154 (if2 -> tagterminaif .)
    COMENTARIO      reduce using rule 154 (if2 -> tagterminaif .)
    CUADRADO        reduce using rule 154 (if2 -> tagterminaif .)
    TRIANGULO       reduce using rule 154 (if2 -> tagterminaif .)
    CASA            reduce using rule 154 (if2 -> tagterminaif .)
    RECTANGULO      reduce using rule 154 (if2 -> tagterminaif .)
    CUBO            reduce using rule 154 (if2 -> tagterminaif .)
    TRAPECIO        reduce using rule 154 (if2 -> tagterminaif .)
    ESTRELLA        reduce using rule 154 (if2 -> tagterminaif .)
    MUEVE           reduce using rule 154 (if2 -> tagterminaif .)
    LEVANTA         reduce using rule 154 (if2 -> tagterminaif .)
    APOYA           reduce using rule 154 (if2 -> tagterminaif .)
    DIMENSION       reduce using rule 154 (if2 -> tagterminaif .)
    RETURN          reduce using rule 154 (if2 -> tagterminaif .)
    IF              reduce using rule 154 (if2 -> tagterminaif .)
    RKEY            reduce using rule 154 (if2 -> tagterminaif .)


state 398

    (155) if2 -> ELSE . tagelse bloque tagterminaif
    (157) tagelse -> . empty
    (202) empty -> .

    LKEY            reduce using rule 202 (empty -> .)

    tagelse                        shift and go to state 414
    empty                          shift and go to state 415

state 399

    (158) tagterminaif -> empty .

    ID              reduce using rule 158 (tagterminaif -> empty .)
    PRINT           reduce using rule 158 (tagterminaif -> empty .)
    WHILE           reduce using rule 158 (tagterminaif -> empty .)
    DO              reduce using rule 158 (tagterminaif -> empty .)
    FOR             reduce using rule 158 (tagterminaif -> empty .)
    READ            reduce using rule 158 (tagterminaif -> empty .)
    READINT         reduce using rule 158 (tagterminaif -> empty .)
    COMENTARIO      reduce using rule 158 (tagterminaif -> empty .)
    CUADRADO        reduce using rule 158 (tagterminaif -> empty .)
    TRIANGULO       reduce using rule 158 (tagterminaif -> empty .)
    CASA            reduce using rule 158 (tagterminaif -> empty .)
    RECTANGULO      reduce using rule 158 (tagterminaif -> empty .)
    CUBO            reduce using rule 158 (tagterminaif -> empty .)
    TRAPECIO        reduce using rule 158 (tagterminaif -> empty .)
    ESTRELLA        reduce using rule 158 (tagterminaif -> empty .)
    MUEVE           reduce using rule 158 (tagterminaif -> empty .)
    LEVANTA         reduce using rule 158 (tagterminaif -> empty .)
    APOYA           reduce using rule 158 (tagterminaif -> empty .)
    DIMENSION       reduce using rule 158 (tagterminaif -> empty .)
    RETURN          reduce using rule 158 (tagterminaif -> empty .)
    IF              reduce using rule 158 (tagterminaif -> empty .)
    RKEY            reduce using rule 158 (tagterminaif -> empty .)


state 400

    (161) cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp . RPARENT tagcuadro PUNTOCOMA

    RPARENT         shift and go to state 416


state 401

    (55) decla2 -> COMA SigDimension exp saveLimSup . decla2
    (54) decla2 -> . RBRACKET guardaMemDimen declafinal
    (55) decla2 -> . COMA SigDimension exp saveLimSup decla2

    RBRACKET        shift and go to state 272
    COMA            shift and go to state 271

    decla2                         shift and go to state 417

state 402

    (187) funct3 -> function4 .

    FUNCTION        reduce using rule 187 (funct3 -> function4 .)
    LKEY            reduce using rule 187 (funct3 -> function4 .)


state 403

    (184) funct2 -> tipo ID initParams funct3 .

    FUNCTION        reduce using rule 184 (funct2 -> tipo ID initParams funct3 .)
    LKEY            reduce using rule 184 (funct2 -> tipo ID initParams funct3 .)


state 404

    (186) funct3 -> COMA . funct2
    (184) funct2 -> . tipo ID initParams funct3
    (59) tipo -> . INT
    (60) tipo -> . FLOAT
    (61) tipo -> . CHAR
    (62) tipo -> . STRING
    (63) tipo -> . BOOL

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 10
    STRING          shift and go to state 13
    BOOL            shift and go to state 19

    funct2                         shift and go to state 418
    tipo                           shift and go to state 275

state 405

    (143) ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 419


state 406

    (171) mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .

    ID              reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    PRINT           reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    WHILE           reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    DO              reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    FOR             reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    READ            reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    READINT         reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    COMENTARIO      reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    CUADRADO        reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    TRIANGULO       reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    CASA            reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    RECTANGULO      reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    CUBO            reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    TRAPECIO        reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    ESTRELLA        reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    MUEVE           reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    LEVANTA         reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    APOYA           reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    DIMENSION       reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    RETURN          reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    IF              reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)
    RKEY            reduce using rule 171 (mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA .)


state 407

    (139) ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .

    ID              reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    PRINT           reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    WHILE           reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    DO              reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    FOR             reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    READ            reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    READINT         reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    COMENTARIO      reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    CUADRADO        reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    TRIANGULO       reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    CASA            reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    RECTANGULO      reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    CUBO            reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    TRAPECIO        reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    ESTRELLA        reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    MUEVE           reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    LEVANTA         reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    APOYA           reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    DIMENSION       reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    RETURN          reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    IF              reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)
    RKEY            reduce using rule 139 (ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile .)


state 408

    (142) tagregresawhile -> empty .

    ID              reduce using rule 142 (tagregresawhile -> empty .)
    PRINT           reduce using rule 142 (tagregresawhile -> empty .)
    WHILE           reduce using rule 142 (tagregresawhile -> empty .)
    DO              reduce using rule 142 (tagregresawhile -> empty .)
    FOR             reduce using rule 142 (tagregresawhile -> empty .)
    READ            reduce using rule 142 (tagregresawhile -> empty .)
    READINT         reduce using rule 142 (tagregresawhile -> empty .)
    COMENTARIO      reduce using rule 142 (tagregresawhile -> empty .)
    CUADRADO        reduce using rule 142 (tagregresawhile -> empty .)
    TRIANGULO       reduce using rule 142 (tagregresawhile -> empty .)
    CASA            reduce using rule 142 (tagregresawhile -> empty .)
    RECTANGULO      reduce using rule 142 (tagregresawhile -> empty .)
    CUBO            reduce using rule 142 (tagregresawhile -> empty .)
    TRAPECIO        reduce using rule 142 (tagregresawhile -> empty .)
    ESTRELLA        reduce using rule 142 (tagregresawhile -> empty .)
    MUEVE           reduce using rule 142 (tagregresawhile -> empty .)
    LEVANTA         reduce using rule 142 (tagregresawhile -> empty .)
    APOYA           reduce using rule 142 (tagregresawhile -> empty .)
    DIMENSION       reduce using rule 142 (tagregresawhile -> empty .)
    RETURN          reduce using rule 142 (tagregresawhile -> empty .)
    IF              reduce using rule 142 (tagregresawhile -> empty .)
    RKEY            reduce using rule 142 (tagregresawhile -> empty .)


state 409

    (169) cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT . tagcubo PUNTOCOMA
    (170) tagcubo -> . empty
    (202) empty -> .

    PUNTOCOMA       reduce using rule 202 (empty -> .)

    tagcubo                        shift and go to state 420
    empty                          shift and go to state 421

state 410

    (163) triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT . tagtriangulo PUNTOCOMA
    (164) tagtriangulo -> . empty
    (202) empty -> .

    PUNTOCOMA       reduce using rule 202 (empty -> .)

    empty                          shift and go to state 422
    tagtriangulo                   shift and go to state 423

state 411

    (148) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT . bloque tagasigna tagterminafor
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (202) empty -> .

    LKEY            reduce using rule 202 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 424
    empty                          shift and go to state 24

state 412

    (195) llamaf3 -> COMA tagotroargumento llamaf2 .

    ID              reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    PRINT           reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    WHILE           reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    DO              reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    FOR             reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    READ            reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    READINT         reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    COMENTARIO      reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    CUADRADO        reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    TRIANGULO       reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    CASA            reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RECTANGULO      reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    CUBO            reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    TRAPECIO        reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    ESTRELLA        reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    MUEVE           reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    LEVANTA         reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    APOYA           reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    DIMENSION       reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RETURN          reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    IF              reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RKEY            reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    MULT            reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    DIV             reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    SUMA            reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RESTA           reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RBRACKET        reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    COMA            reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    GT              reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    LT              reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    LE              reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    GE              reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    DIF             reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    SAME            reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    AND             reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    OR              reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    RPARENT         reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)
    PUNTOCOMA       reduce using rule 195 (llamaf3 -> COMA tagotroargumento llamaf2 .)


state 413

    (97) f8 -> COMA tagotradim exp . tagmetedim f8
    (100) tagmetedim -> . empty
    (202) empty -> .

    COMA            reduce using rule 202 (empty -> .)
    RBRACKET        reduce using rule 202 (empty -> .)

    empty                          shift and go to state 307
    tagmetedim                     shift and go to state 425

state 414

    (155) if2 -> ELSE tagelse . bloque tagterminaif
    (15) bloque -> . iniEnv LKEY b3 b4 b5
    (16) iniEnv -> . empty
    (202) empty -> .

    LKEY            reduce using rule 202 (empty -> .)

    iniEnv                         shift and go to state 22
    bloque                         shift and go to state 426
    empty                          shift and go to state 24

state 415

    (157) tagelse -> empty .

    LKEY            reduce using rule 157 (tagelse -> empty .)


state 416

    (161) cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT . tagcuadro PUNTOCOMA
    (162) tagcuadro -> . empty
    (202) empty -> .

    PUNTOCOMA       reduce using rule 202 (empty -> .)

    empty                          shift and go to state 427
    tagcuadro                      shift and go to state 428

state 417

    (55) decla2 -> COMA SigDimension exp saveLimSup decla2 .

    INT             reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    FLOAT           reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    CHAR            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    STRING          reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    BOOL            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    FUNCTION        reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    LKEY            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    ID              reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    PRINT           reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    WHILE           reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    DO              reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    FOR             reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    READ            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    READINT         reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    COMENTARIO      reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    CUADRADO        reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    TRIANGULO       reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    CASA            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    RECTANGULO      reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    CUBO            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    TRAPECIO        reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    ESTRELLA        reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    MUEVE           reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    LEVANTA         reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    APOYA           reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    DIMENSION       reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    RETURN          reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    IF              reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)
    RKEY            reduce using rule 55 (decla2 -> COMA SigDimension exp saveLimSup decla2 .)


state 418

    (186) funct3 -> COMA funct2 .

    FUNCTION        reduce using rule 186 (funct3 -> COMA funct2 .)
    LKEY            reduce using rule 186 (funct3 -> COMA funct2 .)


state 419

    (143) ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .

    ID              reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    DO              reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    FOR             reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    READ            reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    READINT         reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    CUADRADO        reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    TRIANGULO       reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    CASA            reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    RECTANGULO      reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    CUBO            reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    TRAPECIO        reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    ESTRELLA        reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    MUEVE           reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    LEVANTA         reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    APOYA           reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    DIMENSION       reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    RETURN          reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    IF              reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)
    RKEY            reduce using rule 143 (ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA .)


state 420

    (169) cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 429


state 421

    (170) tagcubo -> empty .

    PUNTOCOMA       reduce using rule 170 (tagcubo -> empty .)


state 422

    (164) tagtriangulo -> empty .

    PUNTOCOMA       reduce using rule 164 (tagtriangulo -> empty .)


state 423

    (163) triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo . PUNTOCOMA

    PUNTOCOMA       shift and go to state 430


state 424

    (148) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque . tagasigna tagterminafor
    (152) tagasigna -> . empty
    (202) empty -> .

    ID              reduce using rule 202 (empty -> .)
    PRINT           reduce using rule 202 (empty -> .)
    WHILE           reduce using rule 202 (empty -> .)
    DO              reduce using rule 202 (empty -> .)
    FOR             reduce using rule 202 (empty -> .)
    READ            reduce using rule 202 (empty -> .)
    READINT         reduce using rule 202 (empty -> .)
    COMENTARIO      reduce using rule 202 (empty -> .)
    CUADRADO        reduce using rule 202 (empty -> .)
    TRIANGULO       reduce using rule 202 (empty -> .)
    CASA            reduce using rule 202 (empty -> .)
    RECTANGULO      reduce using rule 202 (empty -> .)
    CUBO            reduce using rule 202 (empty -> .)
    TRAPECIO        reduce using rule 202 (empty -> .)
    ESTRELLA        reduce using rule 202 (empty -> .)
    MUEVE           reduce using rule 202 (empty -> .)
    LEVANTA         reduce using rule 202 (empty -> .)
    APOYA           reduce using rule 202 (empty -> .)
    DIMENSION       reduce using rule 202 (empty -> .)
    RETURN          reduce using rule 202 (empty -> .)
    IF              reduce using rule 202 (empty -> .)
    RKEY            reduce using rule 202 (empty -> .)

    tagasigna                      shift and go to state 431
    empty                          shift and go to state 432

state 425

    (97) f8 -> COMA tagotradim exp tagmetedim . f8
    (97) f8 -> . COMA tagotradim exp tagmetedim f8
    (98) f8 -> . RBRACKET tagterminadim

    COMA            shift and go to state 351
    RBRACKET        shift and go to state 352

    f8                             shift and go to state 433

state 426

    (155) if2 -> ELSE tagelse bloque . tagterminaif
    (158) tagterminaif -> . empty
    (202) empty -> .

    ID              reduce using rule 202 (empty -> .)
    PRINT           reduce using rule 202 (empty -> .)
    WHILE           reduce using rule 202 (empty -> .)
    DO              reduce using rule 202 (empty -> .)
    FOR             reduce using rule 202 (empty -> .)
    READ            reduce using rule 202 (empty -> .)
    READINT         reduce using rule 202 (empty -> .)
    COMENTARIO      reduce using rule 202 (empty -> .)
    CUADRADO        reduce using rule 202 (empty -> .)
    TRIANGULO       reduce using rule 202 (empty -> .)
    CASA            reduce using rule 202 (empty -> .)
    RECTANGULO      reduce using rule 202 (empty -> .)
    CUBO            reduce using rule 202 (empty -> .)
    TRAPECIO        reduce using rule 202 (empty -> .)
    ESTRELLA        reduce using rule 202 (empty -> .)
    MUEVE           reduce using rule 202 (empty -> .)
    LEVANTA         reduce using rule 202 (empty -> .)
    APOYA           reduce using rule 202 (empty -> .)
    DIMENSION       reduce using rule 202 (empty -> .)
    RETURN          reduce using rule 202 (empty -> .)
    IF              reduce using rule 202 (empty -> .)
    RKEY            reduce using rule 202 (empty -> .)

    tagterminaif                   shift and go to state 434
    empty                          shift and go to state 399

state 427

    (162) tagcuadro -> empty .

    PUNTOCOMA       reduce using rule 162 (tagcuadro -> empty .)


state 428

    (161) cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro . PUNTOCOMA

    PUNTOCOMA       shift and go to state 435


state 429

    (169) cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .

    ID              reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    PRINT           reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    WHILE           reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    DO              reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    FOR             reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    READ            reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    READINT         reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    COMENTARIO      reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    CUADRADO        reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    TRIANGULO       reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    CASA            reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    RECTANGULO      reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    CUBO            reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    TRAPECIO        reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    ESTRELLA        reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    MUEVE           reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    LEVANTA         reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    APOYA           reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    DIMENSION       reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    RETURN          reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    IF              reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)
    RKEY            reduce using rule 169 (cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA .)


state 430

    (163) triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .

    ID              reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    PRINT           reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    WHILE           reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    DO              reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    FOR             reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    READ            reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    READINT         reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    COMENTARIO      reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    CUADRADO        reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    TRIANGULO       reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    CASA            reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    RECTANGULO      reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    CUBO            reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    TRAPECIO        reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    ESTRELLA        reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    MUEVE           reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    LEVANTA         reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    APOYA           reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    DIMENSION       reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    RETURN          reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    IF              reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)
    RKEY            reduce using rule 163 (triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA .)


state 431

    (148) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna . tagterminafor
    (150) tagterminafor -> . empty
    (202) empty -> .

    ID              reduce using rule 202 (empty -> .)
    PRINT           reduce using rule 202 (empty -> .)
    WHILE           reduce using rule 202 (empty -> .)
    DO              reduce using rule 202 (empty -> .)
    FOR             reduce using rule 202 (empty -> .)
    READ            reduce using rule 202 (empty -> .)
    READINT         reduce using rule 202 (empty -> .)
    COMENTARIO      reduce using rule 202 (empty -> .)
    CUADRADO        reduce using rule 202 (empty -> .)
    TRIANGULO       reduce using rule 202 (empty -> .)
    CASA            reduce using rule 202 (empty -> .)
    RECTANGULO      reduce using rule 202 (empty -> .)
    CUBO            reduce using rule 202 (empty -> .)
    TRAPECIO        reduce using rule 202 (empty -> .)
    ESTRELLA        reduce using rule 202 (empty -> .)
    MUEVE           reduce using rule 202 (empty -> .)
    LEVANTA         reduce using rule 202 (empty -> .)
    APOYA           reduce using rule 202 (empty -> .)
    DIMENSION       reduce using rule 202 (empty -> .)
    RETURN          reduce using rule 202 (empty -> .)
    IF              reduce using rule 202 (empty -> .)
    RKEY            reduce using rule 202 (empty -> .)

    tagterminafor                  shift and go to state 436
    empty                          shift and go to state 437

state 432

    (152) tagasigna -> empty .

    ID              reduce using rule 152 (tagasigna -> empty .)
    PRINT           reduce using rule 152 (tagasigna -> empty .)
    WHILE           reduce using rule 152 (tagasigna -> empty .)
    DO              reduce using rule 152 (tagasigna -> empty .)
    FOR             reduce using rule 152 (tagasigna -> empty .)
    READ            reduce using rule 152 (tagasigna -> empty .)
    READINT         reduce using rule 152 (tagasigna -> empty .)
    COMENTARIO      reduce using rule 152 (tagasigna -> empty .)
    CUADRADO        reduce using rule 152 (tagasigna -> empty .)
    TRIANGULO       reduce using rule 152 (tagasigna -> empty .)
    CASA            reduce using rule 152 (tagasigna -> empty .)
    RECTANGULO      reduce using rule 152 (tagasigna -> empty .)
    CUBO            reduce using rule 152 (tagasigna -> empty .)
    TRAPECIO        reduce using rule 152 (tagasigna -> empty .)
    ESTRELLA        reduce using rule 152 (tagasigna -> empty .)
    MUEVE           reduce using rule 152 (tagasigna -> empty .)
    LEVANTA         reduce using rule 152 (tagasigna -> empty .)
    APOYA           reduce using rule 152 (tagasigna -> empty .)
    DIMENSION       reduce using rule 152 (tagasigna -> empty .)
    RETURN          reduce using rule 152 (tagasigna -> empty .)
    IF              reduce using rule 152 (tagasigna -> empty .)
    RKEY            reduce using rule 152 (tagasigna -> empty .)


state 433

    (97) f8 -> COMA tagotradim exp tagmetedim f8 .

    IGUAL           reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    MULT            reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    DIV             reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    SUMA            reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    RESTA           reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    RBRACKET        reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    COMA            reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    GT              reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    LT              reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    LE              reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    GE              reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    DIF             reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    SAME            reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    AND             reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    OR              reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    RPARENT         reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    PUNTOCOMA       reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)
    ID              reduce using rule 97 (f8 -> COMA tagotradim exp tagmetedim f8 .)


state 434

    (155) if2 -> ELSE tagelse bloque tagterminaif .

    ID              reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    PRINT           reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    WHILE           reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    DO              reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    FOR             reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    READ            reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    READINT         reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    COMENTARIO      reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    CUADRADO        reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    TRIANGULO       reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    CASA            reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    RECTANGULO      reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    CUBO            reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    TRAPECIO        reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    ESTRELLA        reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    MUEVE           reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    LEVANTA         reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    APOYA           reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    DIMENSION       reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    RETURN          reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    IF              reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)
    RKEY            reduce using rule 155 (if2 -> ELSE tagelse bloque tagterminaif .)


state 435

    (161) cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .

    ID              reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    PRINT           reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    WHILE           reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    DO              reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    FOR             reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    READ            reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    READINT         reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    COMENTARIO      reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    CUADRADO        reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    TRIANGULO       reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    CASA            reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    RECTANGULO      reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    CUBO            reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    TRAPECIO        reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    ESTRELLA        reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    MUEVE           reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    LEVANTA         reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    APOYA           reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    DIMENSION       reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    RETURN          reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    IF              reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)
    RKEY            reduce using rule 161 (cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA .)


state 436

    (148) ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .

    ID              reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    PRINT           reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    WHILE           reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    DO              reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    FOR             reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    READ            reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    READINT         reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    COMENTARIO      reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    CUADRADO        reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    TRIANGULO       reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    CASA            reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    RECTANGULO      reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    CUBO            reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    TRAPECIO        reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    ESTRELLA        reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    MUEVE           reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    LEVANTA         reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    APOYA           reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    DIMENSION       reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    RETURN          reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    IF              reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)
    RKEY            reduce using rule 148 (ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor .)


state 437

    (150) tagterminafor -> empty .

    ID              reduce using rule 150 (tagterminafor -> empty .)
    PRINT           reduce using rule 150 (tagterminafor -> empty .)
    WHILE           reduce using rule 150 (tagterminafor -> empty .)
    DO              reduce using rule 150 (tagterminafor -> empty .)
    FOR             reduce using rule 150 (tagterminafor -> empty .)
    READ            reduce using rule 150 (tagterminafor -> empty .)
    READINT         reduce using rule 150 (tagterminafor -> empty .)
    COMENTARIO      reduce using rule 150 (tagterminafor -> empty .)
    CUADRADO        reduce using rule 150 (tagterminafor -> empty .)
    TRIANGULO       reduce using rule 150 (tagterminafor -> empty .)
    CASA            reduce using rule 150 (tagterminafor -> empty .)
    RECTANGULO      reduce using rule 150 (tagterminafor -> empty .)
    CUBO            reduce using rule 150 (tagterminafor -> empty .)
    TRAPECIO        reduce using rule 150 (tagterminafor -> empty .)
    ESTRELLA        reduce using rule 150 (tagterminafor -> empty .)
    MUEVE           reduce using rule 150 (tagterminafor -> empty .)
    LEVANTA         reduce using rule 150 (tagterminafor -> empty .)
    APOYA           reduce using rule 150 (tagterminafor -> empty .)
    DIMENSION       reduce using rule 150 (tagterminafor -> empty .)
    RETURN          reduce using rule 150 (tagterminafor -> empty .)
    IF              reduce using rule 150 (tagterminafor -> empty .)
    RKEY            reduce using rule 150 (tagterminafor -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 12 resolved using rule (initFunctions -> empty)
WARNING: rejected rule (cuadrupro2 -> empty) in state 12
WARNING: reduce/reduce conflict in state 28 resolved using rule (p2 -> initFunctions p4)
WARNING: rejected rule (p3 -> initFunctions p4) in state 28
