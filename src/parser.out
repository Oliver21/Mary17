Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    NOESNADA
    BOLEANO
    BEGIN
    PUNTO
    FUNCTION
    END
    CARACTER
    VAR
    RAIZ
    LBRACKET
    COMSIMPLE
    POTENCIA
    RBRACKET
    COMDOBLE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID DOSPUNTOS p2
Rule 2     p2 -> declaracion p3
Rule 3     p3 -> p2
Rule 4     p3 -> bloque
Rule 5     bloque -> LKEY b2
Rule 6     bloque -> LKEY b3
Rule 7     b2 -> estatuto b3
Rule 8     b2 -> estatuto b2
Rule 9     b3 -> RKEY
Rule 10    expresion -> e2
Rule 11    expresion -> e2 e3 e2
Rule 12    e2 -> exp
Rule 13    e3 -> LT
Rule 14    e3 -> GT
Rule 15    e3 -> LT GT
Rule 16    exp -> termino
Rule 17    exp -> exp ex2 exp
Rule 18    ex2 -> SUMA
Rule 19    ex2 -> RESTA
Rule 20    declaracion -> tipo ID PUNTOCOMA
Rule 21    tipo -> INT
Rule 22    tipo -> FLOAT
Rule 23    tipo -> CHAR
Rule 24    tipo -> STRING
Rule 25    tipo -> BOOL
Rule 26    asignacion -> ID IGUAL expresion PUNTOCOMA
Rule 27    print -> PRINT LPARENT es2
Rule 28    es2 -> expresion es3
Rule 29    es2 -> varstring es3
Rule 30    es3 -> es2
Rule 31    es3 -> RPARENT PUNTOCOMA
Rule 32    condicion -> IF LKEY expresion RKEY bloque c2
Rule 33    c2 -> ELSE bloque PUNTOCOMA
Rule 34    c2 -> PUNTOCOMA
Rule 35    termino -> factor
Rule 36    termino -> factor t2
Rule 37    t2 -> MULT termino
Rule 38    t2 -> DIV termino
Rule 39    factor -> LKEY expresion RKEY
Rule 40    factor -> f2
Rule 41    f2 -> SUMA varcte
Rule 42    f2 -> RESTA varcte
Rule 43    f2 -> varcte
Rule 44    estatuto -> asignacion
Rule 45    estatuto -> print
Rule 46    estatuto -> condicion
Rule 47    estatuto -> ciclowhile
Rule 48    estatuto -> ciclodowhile
Rule 49    estatuto -> ciclofor
Rule 50    estatuto -> read
Rule 51    estatuto -> declaracion
Rule 52    estatuto -> comentario
Rule 53    estatuto -> potencia
Rule 54    estatuto -> raiz
Rule 55    comentario -> COMENTARIO
Rule 56    varcte -> ID
Rule 57    varcte -> ENTERO
Rule 58    varcte -> FLOTANTE
Rule 59    varstring -> CADENA
Rule 60    ciclowhile -> WHILE LPARENT expresion RPARENT bloque
Rule 61    ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
Rule 62    read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA
Rule 63    ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque
Rule 64    potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA
Rule 65    raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA

Terminals, with rules where they appear

BEGIN                : 
BOLEANO              : 
BOOL                 : 25
CADENA               : 59
CARACTER             : 
CHAR                 : 23
COMA                 : 64
COMDOBLE             : 
COMENTARIO           : 55
COMSIMPLE            : 
DIV                  : 38
DO                   : 61
DOSPUNTOS            : 1
ELSE                 : 33
END                  : 
ENTERO               : 57
FLOAT                : 22
FLOTANTE             : 58
FOR                  : 63
FUNCTION             : 
GT                   : 14 15
ID                   : 1 20 26 56 62
IF                   : 32
IGUAL                : 26 62
INT                  : 21
LBRACKET             : 
LKEY                 : 5 6 32 39
LPARENT              : 27 60 61 62 63 64 65
LT                   : 13 15
MULT                 : 37
NOESNADA             : 
POTENCIA             : 
POW                  : 64
PRINT                : 27
PROGRAM              : 1
PUNTO                : 
PUNTOCOMA            : 20 26 31 33 34 61 62 64 65
RAIZ                 : 
RBRACKET             : 
READ                 : 62
RESTA                : 19 42
RKEY                 : 9 32 39
RPARENT              : 31 60 61 62 63 64 65
SQRT                 : 65
STRING               : 24
SUMA                 : 18 41
VAR                  : 
WHILE                : 60 61
error                : 

Nonterminals, with rules where they appear

asignacion           : 44 63 63
b2                   : 5 8
b3                   : 6 7
bloque               : 4 32 33 60 61 63
c2                   : 32
ciclodowhile         : 48
ciclofor             : 49
ciclowhile           : 47
comentario           : 52
condicion            : 46
declaracion          : 2 51
e2                   : 10 11 11
e3                   : 11
es2                  : 27 30
es3                  : 28 29
estatuto             : 7 8
ex2                  : 17
exp                  : 12 17 17
expresion            : 26 28 32 39 60 61 63
f2                   : 40
factor               : 35 36
p2                   : 1 3
p3                   : 2
potencia             : 53
print                : 45
program              : 0
raiz                 : 54
read                 : 50
t2                   : 36
termino              : 16 37 38
tipo                 : 20
varcte               : 41 42 43 64 64 65
varstring            : 29

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID DOSPUNTOS p2

    PROGRAM         shift and go to state 1

    program                        shift and go to state 2

state 1

    (1) program -> PROGRAM . ID DOSPUNTOS p2

    ID              shift and go to state 3


state 2

    (0) S' -> program .



state 3

    (1) program -> PROGRAM ID . DOSPUNTOS p2

    DOSPUNTOS       shift and go to state 4


state 4

    (1) program -> PROGRAM ID DOSPUNTOS . p2
    (2) p2 -> . declaracion p3
    (20) declaracion -> . tipo ID PUNTOCOMA
    (21) tipo -> . INT
    (22) tipo -> . FLOAT
    (23) tipo -> . CHAR
    (24) tipo -> . STRING
    (25) tipo -> . BOOL

    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 6
    BOOL            shift and go to state 11

    p2                             shift and go to state 5
    tipo                           shift and go to state 7
    declaracion                    shift and go to state 12

state 5

    (1) program -> PROGRAM ID DOSPUNTOS p2 .

    $end            reduce using rule 1 (program -> PROGRAM ID DOSPUNTOS p2 .)


state 6

    (24) tipo -> STRING .

    ID              reduce using rule 24 (tipo -> STRING .)


state 7

    (20) declaracion -> tipo . ID PUNTOCOMA

    ID              shift and go to state 13


state 8

    (21) tipo -> INT .

    ID              reduce using rule 21 (tipo -> INT .)


state 9

    (22) tipo -> FLOAT .

    ID              reduce using rule 22 (tipo -> FLOAT .)


state 10

    (23) tipo -> CHAR .

    ID              reduce using rule 23 (tipo -> CHAR .)


state 11

    (25) tipo -> BOOL .

    ID              reduce using rule 25 (tipo -> BOOL .)


state 12

    (2) p2 -> declaracion . p3
    (3) p3 -> . p2
    (4) p3 -> . bloque
    (2) p2 -> . declaracion p3
    (5) bloque -> . LKEY b2
    (6) bloque -> . LKEY b3
    (20) declaracion -> . tipo ID PUNTOCOMA
    (21) tipo -> . INT
    (22) tipo -> . FLOAT
    (23) tipo -> . CHAR
    (24) tipo -> . STRING
    (25) tipo -> . BOOL

    LKEY            shift and go to state 16
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 6
    BOOL            shift and go to state 11

    p2                             shift and go to state 14
    p3                             shift and go to state 15
    tipo                           shift and go to state 7
    bloque                         shift and go to state 17
    declaracion                    shift and go to state 12

state 13

    (20) declaracion -> tipo ID . PUNTOCOMA

    PUNTOCOMA       shift and go to state 18


state 14

    (3) p3 -> p2 .

    $end            reduce using rule 3 (p3 -> p2 .)


state 15

    (2) p2 -> declaracion p3 .

    $end            reduce using rule 2 (p2 -> declaracion p3 .)


state 16

    (5) bloque -> LKEY . b2
    (6) bloque -> LKEY . b3
    (7) b2 -> . estatuto b3
    (8) b2 -> . estatuto b2
    (9) b3 -> . RKEY
    (44) estatuto -> . asignacion
    (45) estatuto -> . print
    (46) estatuto -> . condicion
    (47) estatuto -> . ciclowhile
    (48) estatuto -> . ciclodowhile
    (49) estatuto -> . ciclofor
    (50) estatuto -> . read
    (51) estatuto -> . declaracion
    (52) estatuto -> . comentario
    (53) estatuto -> . potencia
    (54) estatuto -> . raiz
    (26) asignacion -> . ID IGUAL expresion PUNTOCOMA
    (27) print -> . PRINT LPARENT es2
    (32) condicion -> . IF LKEY expresion RKEY bloque c2
    (60) ciclowhile -> . WHILE LPARENT expresion RPARENT bloque
    (61) ciclodowhile -> . DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (63) ciclofor -> . FOR LPARENT asignacion expresion asignacion RPARENT bloque
    (62) read -> . ID IGUAL READ LPARENT RPARENT PUNTOCOMA
    (20) declaracion -> . tipo ID PUNTOCOMA
    (55) comentario -> . COMENTARIO
    (64) potencia -> . POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA
    (65) raiz -> . SQRT LPARENT varcte RPARENT PUNTOCOMA
    (21) tipo -> . INT
    (22) tipo -> . FLOAT
    (23) tipo -> . CHAR
    (24) tipo -> . STRING
    (25) tipo -> . BOOL

    RKEY            shift and go to state 35
    ID              shift and go to state 38
    PRINT           shift and go to state 24
    IF              shift and go to state 39
    WHILE           shift and go to state 21
    DO              shift and go to state 19
    FOR             shift and go to state 33
    COMENTARIO      shift and go to state 20
    POW             shift and go to state 26
    SQRT            shift and go to state 41
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 6
    BOOL            shift and go to state 11

    raiz                           shift and go to state 37
    asignacion                     shift and go to state 40
    read                           shift and go to state 34
    estatuto                       shift and go to state 27
    ciclofor                       shift and go to state 36
    comentario                     shift and go to state 25
    condicion                      shift and go to state 30
    potencia                       shift and go to state 31
    b2                             shift and go to state 22
    b3                             shift and go to state 23
    print                          shift and go to state 32
    ciclodowhile                   shift and go to state 29
    ciclowhile                     shift and go to state 28
    declaracion                    shift and go to state 42
    tipo                           shift and go to state 7

state 17

    (4) p3 -> bloque .

    $end            reduce using rule 4 (p3 -> bloque .)


state 18

    (20) declaracion -> tipo ID PUNTOCOMA .

    RKEY            reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    ID              reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    PRINT           reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    IF              reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    WHILE           reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    DO              reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    FOR             reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    COMENTARIO      reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    POW             reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    SQRT            reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    INT             reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    FLOAT           reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    CHAR            reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    STRING          reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    BOOL            reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)
    LKEY            reduce using rule 20 (declaracion -> tipo ID PUNTOCOMA .)


state 19

    (61) ciclodowhile -> DO . bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (5) bloque -> . LKEY b2
    (6) bloque -> . LKEY b3

    LKEY            shift and go to state 16

    bloque                         shift and go to state 43

state 20

    (55) comentario -> COMENTARIO .

    RKEY            reduce using rule 55 (comentario -> COMENTARIO .)
    ID              reduce using rule 55 (comentario -> COMENTARIO .)
    PRINT           reduce using rule 55 (comentario -> COMENTARIO .)
    IF              reduce using rule 55 (comentario -> COMENTARIO .)
    WHILE           reduce using rule 55 (comentario -> COMENTARIO .)
    DO              reduce using rule 55 (comentario -> COMENTARIO .)
    FOR             reduce using rule 55 (comentario -> COMENTARIO .)
    COMENTARIO      reduce using rule 55 (comentario -> COMENTARIO .)
    POW             reduce using rule 55 (comentario -> COMENTARIO .)
    SQRT            reduce using rule 55 (comentario -> COMENTARIO .)
    INT             reduce using rule 55 (comentario -> COMENTARIO .)
    FLOAT           reduce using rule 55 (comentario -> COMENTARIO .)
    CHAR            reduce using rule 55 (comentario -> COMENTARIO .)
    STRING          reduce using rule 55 (comentario -> COMENTARIO .)
    BOOL            reduce using rule 55 (comentario -> COMENTARIO .)


state 21

    (60) ciclowhile -> WHILE . LPARENT expresion RPARENT bloque

    LPARENT         shift and go to state 44


state 22

    (5) bloque -> LKEY b2 .

    PUNTOCOMA       reduce using rule 5 (bloque -> LKEY b2 .)
    ELSE            reduce using rule 5 (bloque -> LKEY b2 .)
    RKEY            reduce using rule 5 (bloque -> LKEY b2 .)
    ID              reduce using rule 5 (bloque -> LKEY b2 .)
    PRINT           reduce using rule 5 (bloque -> LKEY b2 .)
    IF              reduce using rule 5 (bloque -> LKEY b2 .)
    WHILE           reduce using rule 5 (bloque -> LKEY b2 .)
    DO              reduce using rule 5 (bloque -> LKEY b2 .)
    FOR             reduce using rule 5 (bloque -> LKEY b2 .)
    COMENTARIO      reduce using rule 5 (bloque -> LKEY b2 .)
    POW             reduce using rule 5 (bloque -> LKEY b2 .)
    SQRT            reduce using rule 5 (bloque -> LKEY b2 .)
    INT             reduce using rule 5 (bloque -> LKEY b2 .)
    FLOAT           reduce using rule 5 (bloque -> LKEY b2 .)
    CHAR            reduce using rule 5 (bloque -> LKEY b2 .)
    STRING          reduce using rule 5 (bloque -> LKEY b2 .)
    BOOL            reduce using rule 5 (bloque -> LKEY b2 .)
    $end            reduce using rule 5 (bloque -> LKEY b2 .)


state 23

    (6) bloque -> LKEY b3 .

    PUNTOCOMA       reduce using rule 6 (bloque -> LKEY b3 .)
    ELSE            reduce using rule 6 (bloque -> LKEY b3 .)
    RKEY            reduce using rule 6 (bloque -> LKEY b3 .)
    ID              reduce using rule 6 (bloque -> LKEY b3 .)
    PRINT           reduce using rule 6 (bloque -> LKEY b3 .)
    IF              reduce using rule 6 (bloque -> LKEY b3 .)
    WHILE           reduce using rule 6 (bloque -> LKEY b3 .)
    DO              reduce using rule 6 (bloque -> LKEY b3 .)
    FOR             reduce using rule 6 (bloque -> LKEY b3 .)
    COMENTARIO      reduce using rule 6 (bloque -> LKEY b3 .)
    POW             reduce using rule 6 (bloque -> LKEY b3 .)
    SQRT            reduce using rule 6 (bloque -> LKEY b3 .)
    INT             reduce using rule 6 (bloque -> LKEY b3 .)
    FLOAT           reduce using rule 6 (bloque -> LKEY b3 .)
    CHAR            reduce using rule 6 (bloque -> LKEY b3 .)
    STRING          reduce using rule 6 (bloque -> LKEY b3 .)
    BOOL            reduce using rule 6 (bloque -> LKEY b3 .)
    $end            reduce using rule 6 (bloque -> LKEY b3 .)


state 24

    (27) print -> PRINT . LPARENT es2

    LPARENT         shift and go to state 45


state 25

    (52) estatuto -> comentario .

    RKEY            reduce using rule 52 (estatuto -> comentario .)
    ID              reduce using rule 52 (estatuto -> comentario .)
    PRINT           reduce using rule 52 (estatuto -> comentario .)
    IF              reduce using rule 52 (estatuto -> comentario .)
    WHILE           reduce using rule 52 (estatuto -> comentario .)
    DO              reduce using rule 52 (estatuto -> comentario .)
    FOR             reduce using rule 52 (estatuto -> comentario .)
    COMENTARIO      reduce using rule 52 (estatuto -> comentario .)
    POW             reduce using rule 52 (estatuto -> comentario .)
    SQRT            reduce using rule 52 (estatuto -> comentario .)
    INT             reduce using rule 52 (estatuto -> comentario .)
    FLOAT           reduce using rule 52 (estatuto -> comentario .)
    CHAR            reduce using rule 52 (estatuto -> comentario .)
    STRING          reduce using rule 52 (estatuto -> comentario .)
    BOOL            reduce using rule 52 (estatuto -> comentario .)


state 26

    (64) potencia -> POW . LPARENT varcte COMA varcte RPARENT PUNTOCOMA

    LPARENT         shift and go to state 46


state 27

    (7) b2 -> estatuto . b3
    (8) b2 -> estatuto . b2
    (9) b3 -> . RKEY
    (7) b2 -> . estatuto b3
    (8) b2 -> . estatuto b2
    (44) estatuto -> . asignacion
    (45) estatuto -> . print
    (46) estatuto -> . condicion
    (47) estatuto -> . ciclowhile
    (48) estatuto -> . ciclodowhile
    (49) estatuto -> . ciclofor
    (50) estatuto -> . read
    (51) estatuto -> . declaracion
    (52) estatuto -> . comentario
    (53) estatuto -> . potencia
    (54) estatuto -> . raiz
    (26) asignacion -> . ID IGUAL expresion PUNTOCOMA
    (27) print -> . PRINT LPARENT es2
    (32) condicion -> . IF LKEY expresion RKEY bloque c2
    (60) ciclowhile -> . WHILE LPARENT expresion RPARENT bloque
    (61) ciclodowhile -> . DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA
    (63) ciclofor -> . FOR LPARENT asignacion expresion asignacion RPARENT bloque
    (62) read -> . ID IGUAL READ LPARENT RPARENT PUNTOCOMA
    (20) declaracion -> . tipo ID PUNTOCOMA
    (55) comentario -> . COMENTARIO
    (64) potencia -> . POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA
    (65) raiz -> . SQRT LPARENT varcte RPARENT PUNTOCOMA
    (21) tipo -> . INT
    (22) tipo -> . FLOAT
    (23) tipo -> . CHAR
    (24) tipo -> . STRING
    (25) tipo -> . BOOL

    RKEY            shift and go to state 35
    ID              shift and go to state 38
    PRINT           shift and go to state 24
    IF              shift and go to state 39
    WHILE           shift and go to state 21
    DO              shift and go to state 19
    FOR             shift and go to state 33
    COMENTARIO      shift and go to state 20
    POW             shift and go to state 26
    SQRT            shift and go to state 41
    INT             shift and go to state 8
    FLOAT           shift and go to state 9
    CHAR            shift and go to state 10
    STRING          shift and go to state 6
    BOOL            shift and go to state 11

    raiz                           shift and go to state 37
    asignacion                     shift and go to state 40
    read                           shift and go to state 34
    estatuto                       shift and go to state 27
    ciclofor                       shift and go to state 36
    comentario                     shift and go to state 25
    condicion                      shift and go to state 30
    potencia                       shift and go to state 31
    b2                             shift and go to state 47
    b3                             shift and go to state 48
    print                          shift and go to state 32
    ciclodowhile                   shift and go to state 29
    ciclowhile                     shift and go to state 28
    declaracion                    shift and go to state 42
    tipo                           shift and go to state 7

state 28

    (47) estatuto -> ciclowhile .

    RKEY            reduce using rule 47 (estatuto -> ciclowhile .)
    ID              reduce using rule 47 (estatuto -> ciclowhile .)
    PRINT           reduce using rule 47 (estatuto -> ciclowhile .)
    IF              reduce using rule 47 (estatuto -> ciclowhile .)
    WHILE           reduce using rule 47 (estatuto -> ciclowhile .)
    DO              reduce using rule 47 (estatuto -> ciclowhile .)
    FOR             reduce using rule 47 (estatuto -> ciclowhile .)
    COMENTARIO      reduce using rule 47 (estatuto -> ciclowhile .)
    POW             reduce using rule 47 (estatuto -> ciclowhile .)
    SQRT            reduce using rule 47 (estatuto -> ciclowhile .)
    INT             reduce using rule 47 (estatuto -> ciclowhile .)
    FLOAT           reduce using rule 47 (estatuto -> ciclowhile .)
    CHAR            reduce using rule 47 (estatuto -> ciclowhile .)
    STRING          reduce using rule 47 (estatuto -> ciclowhile .)
    BOOL            reduce using rule 47 (estatuto -> ciclowhile .)


state 29

    (48) estatuto -> ciclodowhile .

    RKEY            reduce using rule 48 (estatuto -> ciclodowhile .)
    ID              reduce using rule 48 (estatuto -> ciclodowhile .)
    PRINT           reduce using rule 48 (estatuto -> ciclodowhile .)
    IF              reduce using rule 48 (estatuto -> ciclodowhile .)
    WHILE           reduce using rule 48 (estatuto -> ciclodowhile .)
    DO              reduce using rule 48 (estatuto -> ciclodowhile .)
    FOR             reduce using rule 48 (estatuto -> ciclodowhile .)
    COMENTARIO      reduce using rule 48 (estatuto -> ciclodowhile .)
    POW             reduce using rule 48 (estatuto -> ciclodowhile .)
    SQRT            reduce using rule 48 (estatuto -> ciclodowhile .)
    INT             reduce using rule 48 (estatuto -> ciclodowhile .)
    FLOAT           reduce using rule 48 (estatuto -> ciclodowhile .)
    CHAR            reduce using rule 48 (estatuto -> ciclodowhile .)
    STRING          reduce using rule 48 (estatuto -> ciclodowhile .)
    BOOL            reduce using rule 48 (estatuto -> ciclodowhile .)


state 30

    (46) estatuto -> condicion .

    RKEY            reduce using rule 46 (estatuto -> condicion .)
    ID              reduce using rule 46 (estatuto -> condicion .)
    PRINT           reduce using rule 46 (estatuto -> condicion .)
    IF              reduce using rule 46 (estatuto -> condicion .)
    WHILE           reduce using rule 46 (estatuto -> condicion .)
    DO              reduce using rule 46 (estatuto -> condicion .)
    FOR             reduce using rule 46 (estatuto -> condicion .)
    COMENTARIO      reduce using rule 46 (estatuto -> condicion .)
    POW             reduce using rule 46 (estatuto -> condicion .)
    SQRT            reduce using rule 46 (estatuto -> condicion .)
    INT             reduce using rule 46 (estatuto -> condicion .)
    FLOAT           reduce using rule 46 (estatuto -> condicion .)
    CHAR            reduce using rule 46 (estatuto -> condicion .)
    STRING          reduce using rule 46 (estatuto -> condicion .)
    BOOL            reduce using rule 46 (estatuto -> condicion .)


state 31

    (53) estatuto -> potencia .

    RKEY            reduce using rule 53 (estatuto -> potencia .)
    ID              reduce using rule 53 (estatuto -> potencia .)
    PRINT           reduce using rule 53 (estatuto -> potencia .)
    IF              reduce using rule 53 (estatuto -> potencia .)
    WHILE           reduce using rule 53 (estatuto -> potencia .)
    DO              reduce using rule 53 (estatuto -> potencia .)
    FOR             reduce using rule 53 (estatuto -> potencia .)
    COMENTARIO      reduce using rule 53 (estatuto -> potencia .)
    POW             reduce using rule 53 (estatuto -> potencia .)
    SQRT            reduce using rule 53 (estatuto -> potencia .)
    INT             reduce using rule 53 (estatuto -> potencia .)
    FLOAT           reduce using rule 53 (estatuto -> potencia .)
    CHAR            reduce using rule 53 (estatuto -> potencia .)
    STRING          reduce using rule 53 (estatuto -> potencia .)
    BOOL            reduce using rule 53 (estatuto -> potencia .)


state 32

    (45) estatuto -> print .

    RKEY            reduce using rule 45 (estatuto -> print .)
    ID              reduce using rule 45 (estatuto -> print .)
    PRINT           reduce using rule 45 (estatuto -> print .)
    IF              reduce using rule 45 (estatuto -> print .)
    WHILE           reduce using rule 45 (estatuto -> print .)
    DO              reduce using rule 45 (estatuto -> print .)
    FOR             reduce using rule 45 (estatuto -> print .)
    COMENTARIO      reduce using rule 45 (estatuto -> print .)
    POW             reduce using rule 45 (estatuto -> print .)
    SQRT            reduce using rule 45 (estatuto -> print .)
    INT             reduce using rule 45 (estatuto -> print .)
    FLOAT           reduce using rule 45 (estatuto -> print .)
    CHAR            reduce using rule 45 (estatuto -> print .)
    STRING          reduce using rule 45 (estatuto -> print .)
    BOOL            reduce using rule 45 (estatuto -> print .)


state 33

    (63) ciclofor -> FOR . LPARENT asignacion expresion asignacion RPARENT bloque

    LPARENT         shift and go to state 49


state 34

    (50) estatuto -> read .

    RKEY            reduce using rule 50 (estatuto -> read .)
    ID              reduce using rule 50 (estatuto -> read .)
    PRINT           reduce using rule 50 (estatuto -> read .)
    IF              reduce using rule 50 (estatuto -> read .)
    WHILE           reduce using rule 50 (estatuto -> read .)
    DO              reduce using rule 50 (estatuto -> read .)
    FOR             reduce using rule 50 (estatuto -> read .)
    COMENTARIO      reduce using rule 50 (estatuto -> read .)
    POW             reduce using rule 50 (estatuto -> read .)
    SQRT            reduce using rule 50 (estatuto -> read .)
    INT             reduce using rule 50 (estatuto -> read .)
    FLOAT           reduce using rule 50 (estatuto -> read .)
    CHAR            reduce using rule 50 (estatuto -> read .)
    STRING          reduce using rule 50 (estatuto -> read .)
    BOOL            reduce using rule 50 (estatuto -> read .)


state 35

    (9) b3 -> RKEY .

    $end            reduce using rule 9 (b3 -> RKEY .)
    WHILE           reduce using rule 9 (b3 -> RKEY .)
    RKEY            reduce using rule 9 (b3 -> RKEY .)
    ID              reduce using rule 9 (b3 -> RKEY .)
    PRINT           reduce using rule 9 (b3 -> RKEY .)
    IF              reduce using rule 9 (b3 -> RKEY .)
    DO              reduce using rule 9 (b3 -> RKEY .)
    FOR             reduce using rule 9 (b3 -> RKEY .)
    COMENTARIO      reduce using rule 9 (b3 -> RKEY .)
    POW             reduce using rule 9 (b3 -> RKEY .)
    SQRT            reduce using rule 9 (b3 -> RKEY .)
    INT             reduce using rule 9 (b3 -> RKEY .)
    FLOAT           reduce using rule 9 (b3 -> RKEY .)
    CHAR            reduce using rule 9 (b3 -> RKEY .)
    STRING          reduce using rule 9 (b3 -> RKEY .)
    BOOL            reduce using rule 9 (b3 -> RKEY .)
    ELSE            reduce using rule 9 (b3 -> RKEY .)
    PUNTOCOMA       reduce using rule 9 (b3 -> RKEY .)


state 36

    (49) estatuto -> ciclofor .

    RKEY            reduce using rule 49 (estatuto -> ciclofor .)
    ID              reduce using rule 49 (estatuto -> ciclofor .)
    PRINT           reduce using rule 49 (estatuto -> ciclofor .)
    IF              reduce using rule 49 (estatuto -> ciclofor .)
    WHILE           reduce using rule 49 (estatuto -> ciclofor .)
    DO              reduce using rule 49 (estatuto -> ciclofor .)
    FOR             reduce using rule 49 (estatuto -> ciclofor .)
    COMENTARIO      reduce using rule 49 (estatuto -> ciclofor .)
    POW             reduce using rule 49 (estatuto -> ciclofor .)
    SQRT            reduce using rule 49 (estatuto -> ciclofor .)
    INT             reduce using rule 49 (estatuto -> ciclofor .)
    FLOAT           reduce using rule 49 (estatuto -> ciclofor .)
    CHAR            reduce using rule 49 (estatuto -> ciclofor .)
    STRING          reduce using rule 49 (estatuto -> ciclofor .)
    BOOL            reduce using rule 49 (estatuto -> ciclofor .)


state 37

    (54) estatuto -> raiz .

    RKEY            reduce using rule 54 (estatuto -> raiz .)
    ID              reduce using rule 54 (estatuto -> raiz .)
    PRINT           reduce using rule 54 (estatuto -> raiz .)
    IF              reduce using rule 54 (estatuto -> raiz .)
    WHILE           reduce using rule 54 (estatuto -> raiz .)
    DO              reduce using rule 54 (estatuto -> raiz .)
    FOR             reduce using rule 54 (estatuto -> raiz .)
    COMENTARIO      reduce using rule 54 (estatuto -> raiz .)
    POW             reduce using rule 54 (estatuto -> raiz .)
    SQRT            reduce using rule 54 (estatuto -> raiz .)
    INT             reduce using rule 54 (estatuto -> raiz .)
    FLOAT           reduce using rule 54 (estatuto -> raiz .)
    CHAR            reduce using rule 54 (estatuto -> raiz .)
    STRING          reduce using rule 54 (estatuto -> raiz .)
    BOOL            reduce using rule 54 (estatuto -> raiz .)


state 38

    (26) asignacion -> ID . IGUAL expresion PUNTOCOMA
    (62) read -> ID . IGUAL READ LPARENT RPARENT PUNTOCOMA

    IGUAL           shift and go to state 50


state 39

    (32) condicion -> IF . LKEY expresion RKEY bloque c2

    LKEY            shift and go to state 51


state 40

    (44) estatuto -> asignacion .

    RKEY            reduce using rule 44 (estatuto -> asignacion .)
    ID              reduce using rule 44 (estatuto -> asignacion .)
    PRINT           reduce using rule 44 (estatuto -> asignacion .)
    IF              reduce using rule 44 (estatuto -> asignacion .)
    WHILE           reduce using rule 44 (estatuto -> asignacion .)
    DO              reduce using rule 44 (estatuto -> asignacion .)
    FOR             reduce using rule 44 (estatuto -> asignacion .)
    COMENTARIO      reduce using rule 44 (estatuto -> asignacion .)
    POW             reduce using rule 44 (estatuto -> asignacion .)
    SQRT            reduce using rule 44 (estatuto -> asignacion .)
    INT             reduce using rule 44 (estatuto -> asignacion .)
    FLOAT           reduce using rule 44 (estatuto -> asignacion .)
    CHAR            reduce using rule 44 (estatuto -> asignacion .)
    STRING          reduce using rule 44 (estatuto -> asignacion .)
    BOOL            reduce using rule 44 (estatuto -> asignacion .)


state 41

    (65) raiz -> SQRT . LPARENT varcte RPARENT PUNTOCOMA

    LPARENT         shift and go to state 52


state 42

    (51) estatuto -> declaracion .

    RKEY            reduce using rule 51 (estatuto -> declaracion .)
    ID              reduce using rule 51 (estatuto -> declaracion .)
    PRINT           reduce using rule 51 (estatuto -> declaracion .)
    IF              reduce using rule 51 (estatuto -> declaracion .)
    WHILE           reduce using rule 51 (estatuto -> declaracion .)
    DO              reduce using rule 51 (estatuto -> declaracion .)
    FOR             reduce using rule 51 (estatuto -> declaracion .)
    COMENTARIO      reduce using rule 51 (estatuto -> declaracion .)
    POW             reduce using rule 51 (estatuto -> declaracion .)
    SQRT            reduce using rule 51 (estatuto -> declaracion .)
    INT             reduce using rule 51 (estatuto -> declaracion .)
    FLOAT           reduce using rule 51 (estatuto -> declaracion .)
    CHAR            reduce using rule 51 (estatuto -> declaracion .)
    STRING          reduce using rule 51 (estatuto -> declaracion .)
    BOOL            reduce using rule 51 (estatuto -> declaracion .)


state 43

    (61) ciclodowhile -> DO bloque . WHILE LPARENT expresion RPARENT PUNTOCOMA

    WHILE           shift and go to state 53


state 44

    (60) ciclowhile -> WHILE LPARENT . expresion RPARENT bloque
    (10) expresion -> . e2
    (11) expresion -> . e2 e3 e2
    (12) e2 -> . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    expresion                      shift and go to state 54
    f2                             shift and go to state 56
    varcte                         shift and go to state 55
    termino                        shift and go to state 61
    exp                            shift and go to state 62
    factor                         shift and go to state 63
    e2                             shift and go to state 66

state 45

    (27) print -> PRINT LPARENT . es2
    (28) es2 -> . expresion es3
    (29) es2 -> . varstring es3
    (10) expresion -> . e2
    (11) expresion -> . e2 e3 e2
    (59) varstring -> . CADENA
    (12) e2 -> . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    CADENA          shift and go to state 67
    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    expresion                      shift and go to state 69
    varcte                         shift and go to state 55
    f2                             shift and go to state 56
    es2                            shift and go to state 70
    varstring                      shift and go to state 68
    termino                        shift and go to state 61
    exp                            shift and go to state 62
    factor                         shift and go to state 63
    e2                             shift and go to state 66

state 46

    (64) potencia -> POW LPARENT . varcte COMA varcte RPARENT PUNTOCOMA
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    varcte                         shift and go to state 71

state 47

    (8) b2 -> estatuto b2 .

    $end            reduce using rule 8 (b2 -> estatuto b2 .)
    WHILE           reduce using rule 8 (b2 -> estatuto b2 .)
    RKEY            reduce using rule 8 (b2 -> estatuto b2 .)
    ID              reduce using rule 8 (b2 -> estatuto b2 .)
    PRINT           reduce using rule 8 (b2 -> estatuto b2 .)
    IF              reduce using rule 8 (b2 -> estatuto b2 .)
    DO              reduce using rule 8 (b2 -> estatuto b2 .)
    FOR             reduce using rule 8 (b2 -> estatuto b2 .)
    COMENTARIO      reduce using rule 8 (b2 -> estatuto b2 .)
    POW             reduce using rule 8 (b2 -> estatuto b2 .)
    SQRT            reduce using rule 8 (b2 -> estatuto b2 .)
    INT             reduce using rule 8 (b2 -> estatuto b2 .)
    FLOAT           reduce using rule 8 (b2 -> estatuto b2 .)
    CHAR            reduce using rule 8 (b2 -> estatuto b2 .)
    STRING          reduce using rule 8 (b2 -> estatuto b2 .)
    BOOL            reduce using rule 8 (b2 -> estatuto b2 .)
    ELSE            reduce using rule 8 (b2 -> estatuto b2 .)
    PUNTOCOMA       reduce using rule 8 (b2 -> estatuto b2 .)


state 48

    (7) b2 -> estatuto b3 .

    $end            reduce using rule 7 (b2 -> estatuto b3 .)
    WHILE           reduce using rule 7 (b2 -> estatuto b3 .)
    RKEY            reduce using rule 7 (b2 -> estatuto b3 .)
    ID              reduce using rule 7 (b2 -> estatuto b3 .)
    PRINT           reduce using rule 7 (b2 -> estatuto b3 .)
    IF              reduce using rule 7 (b2 -> estatuto b3 .)
    DO              reduce using rule 7 (b2 -> estatuto b3 .)
    FOR             reduce using rule 7 (b2 -> estatuto b3 .)
    COMENTARIO      reduce using rule 7 (b2 -> estatuto b3 .)
    POW             reduce using rule 7 (b2 -> estatuto b3 .)
    SQRT            reduce using rule 7 (b2 -> estatuto b3 .)
    INT             reduce using rule 7 (b2 -> estatuto b3 .)
    FLOAT           reduce using rule 7 (b2 -> estatuto b3 .)
    CHAR            reduce using rule 7 (b2 -> estatuto b3 .)
    STRING          reduce using rule 7 (b2 -> estatuto b3 .)
    BOOL            reduce using rule 7 (b2 -> estatuto b3 .)
    ELSE            reduce using rule 7 (b2 -> estatuto b3 .)
    PUNTOCOMA       reduce using rule 7 (b2 -> estatuto b3 .)


state 49

    (63) ciclofor -> FOR LPARENT . asignacion expresion asignacion RPARENT bloque
    (26) asignacion -> . ID IGUAL expresion PUNTOCOMA

    ID              shift and go to state 73

    asignacion                     shift and go to state 72

state 50

    (26) asignacion -> ID IGUAL . expresion PUNTOCOMA
    (62) read -> ID IGUAL . READ LPARENT RPARENT PUNTOCOMA
    (10) expresion -> . e2
    (11) expresion -> . e2 e3 e2
    (12) e2 -> . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    READ            shift and go to state 74
    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    expresion                      shift and go to state 75
    f2                             shift and go to state 56
    varcte                         shift and go to state 55
    termino                        shift and go to state 61
    exp                            shift and go to state 62
    factor                         shift and go to state 63
    e2                             shift and go to state 66

state 51

    (32) condicion -> IF LKEY . expresion RKEY bloque c2
    (10) expresion -> . e2
    (11) expresion -> . e2 e3 e2
    (12) e2 -> . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    expresion                      shift and go to state 76
    f2                             shift and go to state 56
    varcte                         shift and go to state 55
    termino                        shift and go to state 61
    exp                            shift and go to state 62
    factor                         shift and go to state 63
    e2                             shift and go to state 66

state 52

    (65) raiz -> SQRT LPARENT . varcte RPARENT PUNTOCOMA
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    varcte                         shift and go to state 77

state 53

    (61) ciclodowhile -> DO bloque WHILE . LPARENT expresion RPARENT PUNTOCOMA

    LPARENT         shift and go to state 78


state 54

    (60) ciclowhile -> WHILE LPARENT expresion . RPARENT bloque

    RPARENT         shift and go to state 79


state 55

    (43) f2 -> varcte .

    MULT            reduce using rule 43 (f2 -> varcte .)
    DIV             reduce using rule 43 (f2 -> varcte .)
    SUMA            reduce using rule 43 (f2 -> varcte .)
    RESTA           reduce using rule 43 (f2 -> varcte .)
    LT              reduce using rule 43 (f2 -> varcte .)
    GT              reduce using rule 43 (f2 -> varcte .)
    RKEY            reduce using rule 43 (f2 -> varcte .)
    RPARENT         reduce using rule 43 (f2 -> varcte .)
    CADENA          reduce using rule 43 (f2 -> varcte .)
    LKEY            reduce using rule 43 (f2 -> varcte .)
    ID              reduce using rule 43 (f2 -> varcte .)
    ENTERO          reduce using rule 43 (f2 -> varcte .)
    FLOTANTE        reduce using rule 43 (f2 -> varcte .)
    PUNTOCOMA       reduce using rule 43 (f2 -> varcte .)


state 56

    (40) factor -> f2 .

    MULT            reduce using rule 40 (factor -> f2 .)
    DIV             reduce using rule 40 (factor -> f2 .)
    SUMA            reduce using rule 40 (factor -> f2 .)
    RESTA           reduce using rule 40 (factor -> f2 .)
    LT              reduce using rule 40 (factor -> f2 .)
    GT              reduce using rule 40 (factor -> f2 .)
    PUNTOCOMA       reduce using rule 40 (factor -> f2 .)
    RPARENT         reduce using rule 40 (factor -> f2 .)
    CADENA          reduce using rule 40 (factor -> f2 .)
    LKEY            reduce using rule 40 (factor -> f2 .)
    ID              reduce using rule 40 (factor -> f2 .)
    ENTERO          reduce using rule 40 (factor -> f2 .)
    FLOTANTE        reduce using rule 40 (factor -> f2 .)
    RKEY            reduce using rule 40 (factor -> f2 .)


state 57

    (39) factor -> LKEY . expresion RKEY
    (10) expresion -> . e2
    (11) expresion -> . e2 e3 e2
    (12) e2 -> . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    expresion                      shift and go to state 80
    f2                             shift and go to state 56
    varcte                         shift and go to state 55
    termino                        shift and go to state 61
    exp                            shift and go to state 62
    factor                         shift and go to state 63
    e2                             shift and go to state 66

state 58

    (58) varcte -> FLOTANTE .

    MULT            reduce using rule 58 (varcte -> FLOTANTE .)
    DIV             reduce using rule 58 (varcte -> FLOTANTE .)
    SUMA            reduce using rule 58 (varcte -> FLOTANTE .)
    RESTA           reduce using rule 58 (varcte -> FLOTANTE .)
    LT              reduce using rule 58 (varcte -> FLOTANTE .)
    GT              reduce using rule 58 (varcte -> FLOTANTE .)
    RPARENT         reduce using rule 58 (varcte -> FLOTANTE .)
    CADENA          reduce using rule 58 (varcte -> FLOTANTE .)
    LKEY            reduce using rule 58 (varcte -> FLOTANTE .)
    ID              reduce using rule 58 (varcte -> FLOTANTE .)
    ENTERO          reduce using rule 58 (varcte -> FLOTANTE .)
    FLOTANTE        reduce using rule 58 (varcte -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 58 (varcte -> FLOTANTE .)
    RKEY            reduce using rule 58 (varcte -> FLOTANTE .)
    COMA            reduce using rule 58 (varcte -> FLOTANTE .)


state 59

    (56) varcte -> ID .

    MULT            reduce using rule 56 (varcte -> ID .)
    DIV             reduce using rule 56 (varcte -> ID .)
    SUMA            reduce using rule 56 (varcte -> ID .)
    RESTA           reduce using rule 56 (varcte -> ID .)
    LT              reduce using rule 56 (varcte -> ID .)
    GT              reduce using rule 56 (varcte -> ID .)
    RPARENT         reduce using rule 56 (varcte -> ID .)
    CADENA          reduce using rule 56 (varcte -> ID .)
    LKEY            reduce using rule 56 (varcte -> ID .)
    ID              reduce using rule 56 (varcte -> ID .)
    ENTERO          reduce using rule 56 (varcte -> ID .)
    FLOTANTE        reduce using rule 56 (varcte -> ID .)
    PUNTOCOMA       reduce using rule 56 (varcte -> ID .)
    RKEY            reduce using rule 56 (varcte -> ID .)
    COMA            reduce using rule 56 (varcte -> ID .)


state 60

    (41) f2 -> SUMA . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    varcte                         shift and go to state 81

state 61

    (16) exp -> termino .

    SUMA            reduce using rule 16 (exp -> termino .)
    RESTA           reduce using rule 16 (exp -> termino .)
    LT              reduce using rule 16 (exp -> termino .)
    GT              reduce using rule 16 (exp -> termino .)
    PUNTOCOMA       reduce using rule 16 (exp -> termino .)
    RKEY            reduce using rule 16 (exp -> termino .)
    ID              reduce using rule 16 (exp -> termino .)
    RPARENT         reduce using rule 16 (exp -> termino .)
    CADENA          reduce using rule 16 (exp -> termino .)
    LKEY            reduce using rule 16 (exp -> termino .)
    ENTERO          reduce using rule 16 (exp -> termino .)
    FLOTANTE        reduce using rule 16 (exp -> termino .)


state 62

    (12) e2 -> exp .
    (17) exp -> exp . ex2 exp
    (18) ex2 -> . SUMA
    (19) ex2 -> . RESTA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
    LT              reduce using rule 12 (e2 -> exp .)
    GT              reduce using rule 12 (e2 -> exp .)
    RPARENT         reduce using rule 12 (e2 -> exp .)
    CADENA          reduce using rule 12 (e2 -> exp .)
    LKEY            reduce using rule 12 (e2 -> exp .)
    ID              reduce using rule 12 (e2 -> exp .)
    ENTERO          reduce using rule 12 (e2 -> exp .)
    FLOTANTE        reduce using rule 12 (e2 -> exp .)
    PUNTOCOMA       reduce using rule 12 (e2 -> exp .)
    RKEY            reduce using rule 12 (e2 -> exp .)
    SUMA            shift and go to state 84
    RESTA           shift and go to state 82

  ! SUMA            [ reduce using rule 12 (e2 -> exp .) ]
  ! RESTA           [ reduce using rule 12 (e2 -> exp .) ]

    ex2                            shift and go to state 83

state 63

    (35) termino -> factor .
    (36) termino -> factor . t2
    (37) t2 -> . MULT termino
    (38) t2 -> . DIV termino

    SUMA            reduce using rule 35 (termino -> factor .)
    RESTA           reduce using rule 35 (termino -> factor .)
    LT              reduce using rule 35 (termino -> factor .)
    GT              reduce using rule 35 (termino -> factor .)
    RPARENT         reduce using rule 35 (termino -> factor .)
    CADENA          reduce using rule 35 (termino -> factor .)
    LKEY            reduce using rule 35 (termino -> factor .)
    ID              reduce using rule 35 (termino -> factor .)
    ENTERO          reduce using rule 35 (termino -> factor .)
    FLOTANTE        reduce using rule 35 (termino -> factor .)
    PUNTOCOMA       reduce using rule 35 (termino -> factor .)
    RKEY            reduce using rule 35 (termino -> factor .)
    MULT            shift and go to state 87
    DIV             shift and go to state 85

    t2                             shift and go to state 86

state 64

    (57) varcte -> ENTERO .

    MULT            reduce using rule 57 (varcte -> ENTERO .)
    DIV             reduce using rule 57 (varcte -> ENTERO .)
    SUMA            reduce using rule 57 (varcte -> ENTERO .)
    RESTA           reduce using rule 57 (varcte -> ENTERO .)
    LT              reduce using rule 57 (varcte -> ENTERO .)
    GT              reduce using rule 57 (varcte -> ENTERO .)
    RPARENT         reduce using rule 57 (varcte -> ENTERO .)
    CADENA          reduce using rule 57 (varcte -> ENTERO .)
    LKEY            reduce using rule 57 (varcte -> ENTERO .)
    ID              reduce using rule 57 (varcte -> ENTERO .)
    ENTERO          reduce using rule 57 (varcte -> ENTERO .)
    FLOTANTE        reduce using rule 57 (varcte -> ENTERO .)
    PUNTOCOMA       reduce using rule 57 (varcte -> ENTERO .)
    RKEY            reduce using rule 57 (varcte -> ENTERO .)
    COMA            reduce using rule 57 (varcte -> ENTERO .)


state 65

    (42) f2 -> RESTA . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    varcte                         shift and go to state 88

state 66

    (10) expresion -> e2 .
    (11) expresion -> e2 . e3 e2
    (13) e3 -> . LT
    (14) e3 -> . GT
    (15) e3 -> . LT GT

    PUNTOCOMA       reduce using rule 10 (expresion -> e2 .)
    ID              reduce using rule 10 (expresion -> e2 .)
    RKEY            reduce using rule 10 (expresion -> e2 .)
    RPARENT         reduce using rule 10 (expresion -> e2 .)
    CADENA          reduce using rule 10 (expresion -> e2 .)
    LKEY            reduce using rule 10 (expresion -> e2 .)
    SUMA            reduce using rule 10 (expresion -> e2 .)
    RESTA           reduce using rule 10 (expresion -> e2 .)
    ENTERO          reduce using rule 10 (expresion -> e2 .)
    FLOTANTE        reduce using rule 10 (expresion -> e2 .)
    LT              shift and go to state 89
    GT              shift and go to state 90

    e3                             shift and go to state 91

state 67

    (59) varstring -> CADENA .

    RPARENT         reduce using rule 59 (varstring -> CADENA .)
    CADENA          reduce using rule 59 (varstring -> CADENA .)
    LKEY            reduce using rule 59 (varstring -> CADENA .)
    SUMA            reduce using rule 59 (varstring -> CADENA .)
    RESTA           reduce using rule 59 (varstring -> CADENA .)
    ID              reduce using rule 59 (varstring -> CADENA .)
    ENTERO          reduce using rule 59 (varstring -> CADENA .)
    FLOTANTE        reduce using rule 59 (varstring -> CADENA .)


state 68

    (29) es2 -> varstring . es3
    (30) es3 -> . es2
    (31) es3 -> . RPARENT PUNTOCOMA
    (28) es2 -> . expresion es3
    (29) es2 -> . varstring es3
    (10) expresion -> . e2
    (11) expresion -> . e2 e3 e2
    (59) varstring -> . CADENA
    (12) e2 -> . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    RPARENT         shift and go to state 92
    CADENA          shift and go to state 67
    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    expresion                      shift and go to state 69
    varcte                         shift and go to state 55
    f2                             shift and go to state 56
    es3                            shift and go to state 93
    es2                            shift and go to state 94
    varstring                      shift and go to state 68
    termino                        shift and go to state 61
    exp                            shift and go to state 62
    factor                         shift and go to state 63
    e2                             shift and go to state 66

state 69

    (28) es2 -> expresion . es3
    (30) es3 -> . es2
    (31) es3 -> . RPARENT PUNTOCOMA
    (28) es2 -> . expresion es3
    (29) es2 -> . varstring es3
    (10) expresion -> . e2
    (11) expresion -> . e2 e3 e2
    (59) varstring -> . CADENA
    (12) e2 -> . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    RPARENT         shift and go to state 92
    CADENA          shift and go to state 67
    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    expresion                      shift and go to state 69
    varcte                         shift and go to state 55
    f2                             shift and go to state 56
    es3                            shift and go to state 95
    es2                            shift and go to state 94
    varstring                      shift and go to state 68
    termino                        shift and go to state 61
    exp                            shift and go to state 62
    factor                         shift and go to state 63
    e2                             shift and go to state 66

state 70

    (27) print -> PRINT LPARENT es2 .

    RKEY            reduce using rule 27 (print -> PRINT LPARENT es2 .)
    ID              reduce using rule 27 (print -> PRINT LPARENT es2 .)
    PRINT           reduce using rule 27 (print -> PRINT LPARENT es2 .)
    IF              reduce using rule 27 (print -> PRINT LPARENT es2 .)
    WHILE           reduce using rule 27 (print -> PRINT LPARENT es2 .)
    DO              reduce using rule 27 (print -> PRINT LPARENT es2 .)
    FOR             reduce using rule 27 (print -> PRINT LPARENT es2 .)
    COMENTARIO      reduce using rule 27 (print -> PRINT LPARENT es2 .)
    POW             reduce using rule 27 (print -> PRINT LPARENT es2 .)
    SQRT            reduce using rule 27 (print -> PRINT LPARENT es2 .)
    INT             reduce using rule 27 (print -> PRINT LPARENT es2 .)
    FLOAT           reduce using rule 27 (print -> PRINT LPARENT es2 .)
    CHAR            reduce using rule 27 (print -> PRINT LPARENT es2 .)
    STRING          reduce using rule 27 (print -> PRINT LPARENT es2 .)
    BOOL            reduce using rule 27 (print -> PRINT LPARENT es2 .)


state 71

    (64) potencia -> POW LPARENT varcte . COMA varcte RPARENT PUNTOCOMA

    COMA            shift and go to state 96


state 72

    (63) ciclofor -> FOR LPARENT asignacion . expresion asignacion RPARENT bloque
    (10) expresion -> . e2
    (11) expresion -> . e2 e3 e2
    (12) e2 -> . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    expresion                      shift and go to state 97
    f2                             shift and go to state 56
    varcte                         shift and go to state 55
    termino                        shift and go to state 61
    exp                            shift and go to state 62
    factor                         shift and go to state 63
    e2                             shift and go to state 66

state 73

    (26) asignacion -> ID . IGUAL expresion PUNTOCOMA

    IGUAL           shift and go to state 98


state 74

    (62) read -> ID IGUAL READ . LPARENT RPARENT PUNTOCOMA

    LPARENT         shift and go to state 99


state 75

    (26) asignacion -> ID IGUAL expresion . PUNTOCOMA

    PUNTOCOMA       shift and go to state 100


state 76

    (32) condicion -> IF LKEY expresion . RKEY bloque c2

    RKEY            shift and go to state 101


state 77

    (65) raiz -> SQRT LPARENT varcte . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 102


state 78

    (61) ciclodowhile -> DO bloque WHILE LPARENT . expresion RPARENT PUNTOCOMA
    (10) expresion -> . e2
    (11) expresion -> . e2 e3 e2
    (12) e2 -> . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    expresion                      shift and go to state 103
    f2                             shift and go to state 56
    varcte                         shift and go to state 55
    termino                        shift and go to state 61
    exp                            shift and go to state 62
    factor                         shift and go to state 63
    e2                             shift and go to state 66

state 79

    (60) ciclowhile -> WHILE LPARENT expresion RPARENT . bloque
    (5) bloque -> . LKEY b2
    (6) bloque -> . LKEY b3

    LKEY            shift and go to state 16

    bloque                         shift and go to state 104

state 80

    (39) factor -> LKEY expresion . RKEY

    RKEY            shift and go to state 105


state 81

    (41) f2 -> SUMA varcte .

    MULT            reduce using rule 41 (f2 -> SUMA varcte .)
    DIV             reduce using rule 41 (f2 -> SUMA varcte .)
    SUMA            reduce using rule 41 (f2 -> SUMA varcte .)
    RESTA           reduce using rule 41 (f2 -> SUMA varcte .)
    LT              reduce using rule 41 (f2 -> SUMA varcte .)
    GT              reduce using rule 41 (f2 -> SUMA varcte .)
    RKEY            reduce using rule 41 (f2 -> SUMA varcte .)
    RPARENT         reduce using rule 41 (f2 -> SUMA varcte .)
    CADENA          reduce using rule 41 (f2 -> SUMA varcte .)
    LKEY            reduce using rule 41 (f2 -> SUMA varcte .)
    ID              reduce using rule 41 (f2 -> SUMA varcte .)
    ENTERO          reduce using rule 41 (f2 -> SUMA varcte .)
    FLOTANTE        reduce using rule 41 (f2 -> SUMA varcte .)
    PUNTOCOMA       reduce using rule 41 (f2 -> SUMA varcte .)


state 82

    (19) ex2 -> RESTA .

    LKEY            reduce using rule 19 (ex2 -> RESTA .)
    SUMA            reduce using rule 19 (ex2 -> RESTA .)
    RESTA           reduce using rule 19 (ex2 -> RESTA .)
    ID              reduce using rule 19 (ex2 -> RESTA .)
    ENTERO          reduce using rule 19 (ex2 -> RESTA .)
    FLOTANTE        reduce using rule 19 (ex2 -> RESTA .)


state 83

    (17) exp -> exp ex2 . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    f2                             shift and go to state 56
    varcte                         shift and go to state 55
    termino                        shift and go to state 61
    exp                            shift and go to state 106
    factor                         shift and go to state 63

state 84

    (18) ex2 -> SUMA .

    LKEY            reduce using rule 18 (ex2 -> SUMA .)
    SUMA            reduce using rule 18 (ex2 -> SUMA .)
    RESTA           reduce using rule 18 (ex2 -> SUMA .)
    ID              reduce using rule 18 (ex2 -> SUMA .)
    ENTERO          reduce using rule 18 (ex2 -> SUMA .)
    FLOTANTE        reduce using rule 18 (ex2 -> SUMA .)


state 85

    (38) t2 -> DIV . termino
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    f2                             shift and go to state 56
    varcte                         shift and go to state 55
    termino                        shift and go to state 107
    factor                         shift and go to state 63

state 86

    (36) termino -> factor t2 .

    SUMA            reduce using rule 36 (termino -> factor t2 .)
    RESTA           reduce using rule 36 (termino -> factor t2 .)
    LT              reduce using rule 36 (termino -> factor t2 .)
    GT              reduce using rule 36 (termino -> factor t2 .)
    RPARENT         reduce using rule 36 (termino -> factor t2 .)
    CADENA          reduce using rule 36 (termino -> factor t2 .)
    LKEY            reduce using rule 36 (termino -> factor t2 .)
    ID              reduce using rule 36 (termino -> factor t2 .)
    ENTERO          reduce using rule 36 (termino -> factor t2 .)
    FLOTANTE        reduce using rule 36 (termino -> factor t2 .)
    PUNTOCOMA       reduce using rule 36 (termino -> factor t2 .)
    RKEY            reduce using rule 36 (termino -> factor t2 .)


state 87

    (37) t2 -> MULT . termino
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    f2                             shift and go to state 56
    varcte                         shift and go to state 55
    termino                        shift and go to state 108
    factor                         shift and go to state 63

state 88

    (42) f2 -> RESTA varcte .

    MULT            reduce using rule 42 (f2 -> RESTA varcte .)
    DIV             reduce using rule 42 (f2 -> RESTA varcte .)
    SUMA            reduce using rule 42 (f2 -> RESTA varcte .)
    RESTA           reduce using rule 42 (f2 -> RESTA varcte .)
    LT              reduce using rule 42 (f2 -> RESTA varcte .)
    GT              reduce using rule 42 (f2 -> RESTA varcte .)
    RKEY            reduce using rule 42 (f2 -> RESTA varcte .)
    RPARENT         reduce using rule 42 (f2 -> RESTA varcte .)
    CADENA          reduce using rule 42 (f2 -> RESTA varcte .)
    LKEY            reduce using rule 42 (f2 -> RESTA varcte .)
    ID              reduce using rule 42 (f2 -> RESTA varcte .)
    ENTERO          reduce using rule 42 (f2 -> RESTA varcte .)
    FLOTANTE        reduce using rule 42 (f2 -> RESTA varcte .)
    PUNTOCOMA       reduce using rule 42 (f2 -> RESTA varcte .)


state 89

    (13) e3 -> LT .
    (15) e3 -> LT . GT

    LKEY            reduce using rule 13 (e3 -> LT .)
    SUMA            reduce using rule 13 (e3 -> LT .)
    RESTA           reduce using rule 13 (e3 -> LT .)
    ID              reduce using rule 13 (e3 -> LT .)
    ENTERO          reduce using rule 13 (e3 -> LT .)
    FLOTANTE        reduce using rule 13 (e3 -> LT .)
    GT              shift and go to state 109


state 90

    (14) e3 -> GT .

    LKEY            reduce using rule 14 (e3 -> GT .)
    SUMA            reduce using rule 14 (e3 -> GT .)
    RESTA           reduce using rule 14 (e3 -> GT .)
    ID              reduce using rule 14 (e3 -> GT .)
    ENTERO          reduce using rule 14 (e3 -> GT .)
    FLOTANTE        reduce using rule 14 (e3 -> GT .)


state 91

    (11) expresion -> e2 e3 . e2
    (12) e2 -> . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    f2                             shift and go to state 56
    varcte                         shift and go to state 55
    termino                        shift and go to state 61
    exp                            shift and go to state 62
    factor                         shift and go to state 63
    e2                             shift and go to state 110

state 92

    (31) es3 -> RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 111


state 93

    (29) es2 -> varstring es3 .

    RKEY            reduce using rule 29 (es2 -> varstring es3 .)
    ID              reduce using rule 29 (es2 -> varstring es3 .)
    PRINT           reduce using rule 29 (es2 -> varstring es3 .)
    IF              reduce using rule 29 (es2 -> varstring es3 .)
    WHILE           reduce using rule 29 (es2 -> varstring es3 .)
    DO              reduce using rule 29 (es2 -> varstring es3 .)
    FOR             reduce using rule 29 (es2 -> varstring es3 .)
    COMENTARIO      reduce using rule 29 (es2 -> varstring es3 .)
    POW             reduce using rule 29 (es2 -> varstring es3 .)
    SQRT            reduce using rule 29 (es2 -> varstring es3 .)
    INT             reduce using rule 29 (es2 -> varstring es3 .)
    FLOAT           reduce using rule 29 (es2 -> varstring es3 .)
    CHAR            reduce using rule 29 (es2 -> varstring es3 .)
    STRING          reduce using rule 29 (es2 -> varstring es3 .)
    BOOL            reduce using rule 29 (es2 -> varstring es3 .)


state 94

    (30) es3 -> es2 .

    RKEY            reduce using rule 30 (es3 -> es2 .)
    ID              reduce using rule 30 (es3 -> es2 .)
    PRINT           reduce using rule 30 (es3 -> es2 .)
    IF              reduce using rule 30 (es3 -> es2 .)
    WHILE           reduce using rule 30 (es3 -> es2 .)
    DO              reduce using rule 30 (es3 -> es2 .)
    FOR             reduce using rule 30 (es3 -> es2 .)
    COMENTARIO      reduce using rule 30 (es3 -> es2 .)
    POW             reduce using rule 30 (es3 -> es2 .)
    SQRT            reduce using rule 30 (es3 -> es2 .)
    INT             reduce using rule 30 (es3 -> es2 .)
    FLOAT           reduce using rule 30 (es3 -> es2 .)
    CHAR            reduce using rule 30 (es3 -> es2 .)
    STRING          reduce using rule 30 (es3 -> es2 .)
    BOOL            reduce using rule 30 (es3 -> es2 .)


state 95

    (28) es2 -> expresion es3 .

    RKEY            reduce using rule 28 (es2 -> expresion es3 .)
    ID              reduce using rule 28 (es2 -> expresion es3 .)
    PRINT           reduce using rule 28 (es2 -> expresion es3 .)
    IF              reduce using rule 28 (es2 -> expresion es3 .)
    WHILE           reduce using rule 28 (es2 -> expresion es3 .)
    DO              reduce using rule 28 (es2 -> expresion es3 .)
    FOR             reduce using rule 28 (es2 -> expresion es3 .)
    COMENTARIO      reduce using rule 28 (es2 -> expresion es3 .)
    POW             reduce using rule 28 (es2 -> expresion es3 .)
    SQRT            reduce using rule 28 (es2 -> expresion es3 .)
    INT             reduce using rule 28 (es2 -> expresion es3 .)
    FLOAT           reduce using rule 28 (es2 -> expresion es3 .)
    CHAR            reduce using rule 28 (es2 -> expresion es3 .)
    STRING          reduce using rule 28 (es2 -> expresion es3 .)
    BOOL            reduce using rule 28 (es2 -> expresion es3 .)


state 96

    (64) potencia -> POW LPARENT varcte COMA . varcte RPARENT PUNTOCOMA
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    varcte                         shift and go to state 112

state 97

    (63) ciclofor -> FOR LPARENT asignacion expresion . asignacion RPARENT bloque
    (26) asignacion -> . ID IGUAL expresion PUNTOCOMA

    ID              shift and go to state 73

    asignacion                     shift and go to state 113

state 98

    (26) asignacion -> ID IGUAL . expresion PUNTOCOMA
    (10) expresion -> . e2
    (11) expresion -> . e2 e3 e2
    (12) e2 -> . exp
    (16) exp -> . termino
    (17) exp -> . exp ex2 exp
    (35) termino -> . factor
    (36) termino -> . factor t2
    (39) factor -> . LKEY expresion RKEY
    (40) factor -> . f2
    (41) f2 -> . SUMA varcte
    (42) f2 -> . RESTA varcte
    (43) f2 -> . varcte
    (56) varcte -> . ID
    (57) varcte -> . ENTERO
    (58) varcte -> . FLOTANTE

    LKEY            shift and go to state 57
    SUMA            shift and go to state 60
    RESTA           shift and go to state 65
    ID              shift and go to state 59
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 58

    expresion                      shift and go to state 75
    f2                             shift and go to state 56
    varcte                         shift and go to state 55
    termino                        shift and go to state 61
    exp                            shift and go to state 62
    factor                         shift and go to state 63
    e2                             shift and go to state 66

state 99

    (62) read -> ID IGUAL READ LPARENT . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 114


state 100

    (26) asignacion -> ID IGUAL expresion PUNTOCOMA .

    RKEY            reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    ID              reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    PRINT           reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    IF              reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    WHILE           reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    DO              reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    FOR             reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    COMENTARIO      reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    POW             reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    SQRT            reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    INT             reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    FLOAT           reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    CHAR            reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    STRING          reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    BOOL            reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    RPARENT         reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    LKEY            reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    SUMA            reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    RESTA           reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    ENTERO          reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)
    FLOTANTE        reduce using rule 26 (asignacion -> ID IGUAL expresion PUNTOCOMA .)


state 101

    (32) condicion -> IF LKEY expresion RKEY . bloque c2
    (5) bloque -> . LKEY b2
    (6) bloque -> . LKEY b3

    LKEY            shift and go to state 16

    bloque                         shift and go to state 115

state 102

    (65) raiz -> SQRT LPARENT varcte RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 116


state 103

    (61) ciclodowhile -> DO bloque WHILE LPARENT expresion . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 117


state 104

    (60) ciclowhile -> WHILE LPARENT expresion RPARENT bloque .

    RKEY            reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    ID              reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    PRINT           reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    IF              reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    WHILE           reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    DO              reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    FOR             reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    COMENTARIO      reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    POW             reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    SQRT            reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    INT             reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    FLOAT           reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    CHAR            reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    STRING          reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)
    BOOL            reduce using rule 60 (ciclowhile -> WHILE LPARENT expresion RPARENT bloque .)


state 105

    (39) factor -> LKEY expresion RKEY .

    MULT            reduce using rule 39 (factor -> LKEY expresion RKEY .)
    DIV             reduce using rule 39 (factor -> LKEY expresion RKEY .)
    SUMA            reduce using rule 39 (factor -> LKEY expresion RKEY .)
    RESTA           reduce using rule 39 (factor -> LKEY expresion RKEY .)
    LT              reduce using rule 39 (factor -> LKEY expresion RKEY .)
    GT              reduce using rule 39 (factor -> LKEY expresion RKEY .)
    PUNTOCOMA       reduce using rule 39 (factor -> LKEY expresion RKEY .)
    RPARENT         reduce using rule 39 (factor -> LKEY expresion RKEY .)
    CADENA          reduce using rule 39 (factor -> LKEY expresion RKEY .)
    LKEY            reduce using rule 39 (factor -> LKEY expresion RKEY .)
    ID              reduce using rule 39 (factor -> LKEY expresion RKEY .)
    ENTERO          reduce using rule 39 (factor -> LKEY expresion RKEY .)
    FLOTANTE        reduce using rule 39 (factor -> LKEY expresion RKEY .)
    RKEY            reduce using rule 39 (factor -> LKEY expresion RKEY .)


state 106

    (17) exp -> exp ex2 exp .
    (17) exp -> exp . ex2 exp
    (18) ex2 -> . SUMA
    (19) ex2 -> . RESTA

  ! shift/reduce conflict for SUMA resolved as shift
  ! shift/reduce conflict for RESTA resolved as shift
    LT              reduce using rule 17 (exp -> exp ex2 exp .)
    GT              reduce using rule 17 (exp -> exp ex2 exp .)
    PUNTOCOMA       reduce using rule 17 (exp -> exp ex2 exp .)
    RKEY            reduce using rule 17 (exp -> exp ex2 exp .)
    ID              reduce using rule 17 (exp -> exp ex2 exp .)
    RPARENT         reduce using rule 17 (exp -> exp ex2 exp .)
    CADENA          reduce using rule 17 (exp -> exp ex2 exp .)
    LKEY            reduce using rule 17 (exp -> exp ex2 exp .)
    ENTERO          reduce using rule 17 (exp -> exp ex2 exp .)
    FLOTANTE        reduce using rule 17 (exp -> exp ex2 exp .)
    SUMA            shift and go to state 84
    RESTA           shift and go to state 82

  ! SUMA            [ reduce using rule 17 (exp -> exp ex2 exp .) ]
  ! RESTA           [ reduce using rule 17 (exp -> exp ex2 exp .) ]

    ex2                            shift and go to state 83

state 107

    (38) t2 -> DIV termino .

    SUMA            reduce using rule 38 (t2 -> DIV termino .)
    RESTA           reduce using rule 38 (t2 -> DIV termino .)
    LT              reduce using rule 38 (t2 -> DIV termino .)
    GT              reduce using rule 38 (t2 -> DIV termino .)
    RPARENT         reduce using rule 38 (t2 -> DIV termino .)
    CADENA          reduce using rule 38 (t2 -> DIV termino .)
    LKEY            reduce using rule 38 (t2 -> DIV termino .)
    ID              reduce using rule 38 (t2 -> DIV termino .)
    ENTERO          reduce using rule 38 (t2 -> DIV termino .)
    FLOTANTE        reduce using rule 38 (t2 -> DIV termino .)
    PUNTOCOMA       reduce using rule 38 (t2 -> DIV termino .)
    RKEY            reduce using rule 38 (t2 -> DIV termino .)


state 108

    (37) t2 -> MULT termino .

    SUMA            reduce using rule 37 (t2 -> MULT termino .)
    RESTA           reduce using rule 37 (t2 -> MULT termino .)
    LT              reduce using rule 37 (t2 -> MULT termino .)
    GT              reduce using rule 37 (t2 -> MULT termino .)
    RPARENT         reduce using rule 37 (t2 -> MULT termino .)
    CADENA          reduce using rule 37 (t2 -> MULT termino .)
    LKEY            reduce using rule 37 (t2 -> MULT termino .)
    ID              reduce using rule 37 (t2 -> MULT termino .)
    ENTERO          reduce using rule 37 (t2 -> MULT termino .)
    FLOTANTE        reduce using rule 37 (t2 -> MULT termino .)
    PUNTOCOMA       reduce using rule 37 (t2 -> MULT termino .)
    RKEY            reduce using rule 37 (t2 -> MULT termino .)


state 109

    (15) e3 -> LT GT .

    LKEY            reduce using rule 15 (e3 -> LT GT .)
    SUMA            reduce using rule 15 (e3 -> LT GT .)
    RESTA           reduce using rule 15 (e3 -> LT GT .)
    ID              reduce using rule 15 (e3 -> LT GT .)
    ENTERO          reduce using rule 15 (e3 -> LT GT .)
    FLOTANTE        reduce using rule 15 (e3 -> LT GT .)


state 110

    (11) expresion -> e2 e3 e2 .

    PUNTOCOMA       reduce using rule 11 (expresion -> e2 e3 e2 .)
    ID              reduce using rule 11 (expresion -> e2 e3 e2 .)
    RKEY            reduce using rule 11 (expresion -> e2 e3 e2 .)
    RPARENT         reduce using rule 11 (expresion -> e2 e3 e2 .)
    CADENA          reduce using rule 11 (expresion -> e2 e3 e2 .)
    LKEY            reduce using rule 11 (expresion -> e2 e3 e2 .)
    SUMA            reduce using rule 11 (expresion -> e2 e3 e2 .)
    RESTA           reduce using rule 11 (expresion -> e2 e3 e2 .)
    ENTERO          reduce using rule 11 (expresion -> e2 e3 e2 .)
    FLOTANTE        reduce using rule 11 (expresion -> e2 e3 e2 .)


state 111

    (31) es3 -> RPARENT PUNTOCOMA .

    RKEY            reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    ID              reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    IF              reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    DO              reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    FOR             reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    POW             reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    SQRT            reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    INT             reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    FLOAT           reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    CHAR            reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    STRING          reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)
    BOOL            reduce using rule 31 (es3 -> RPARENT PUNTOCOMA .)


state 112

    (64) potencia -> POW LPARENT varcte COMA varcte . RPARENT PUNTOCOMA

    RPARENT         shift and go to state 118


state 113

    (63) ciclofor -> FOR LPARENT asignacion expresion asignacion . RPARENT bloque

    RPARENT         shift and go to state 119


state 114

    (62) read -> ID IGUAL READ LPARENT RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 120


state 115

    (32) condicion -> IF LKEY expresion RKEY bloque . c2
    (33) c2 -> . ELSE bloque PUNTOCOMA
    (34) c2 -> . PUNTOCOMA

    ELSE            shift and go to state 122
    PUNTOCOMA       shift and go to state 121

    c2                             shift and go to state 123

state 116

    (65) raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .

    RKEY            reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    ID              reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    IF              reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    DO              reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    FOR             reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    POW             reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    SQRT            reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    INT             reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    FLOAT           reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    CHAR            reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    STRING          reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)
    BOOL            reduce using rule 65 (raiz -> SQRT LPARENT varcte RPARENT PUNTOCOMA .)


state 117

    (61) ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 124


state 118

    (64) potencia -> POW LPARENT varcte COMA varcte RPARENT . PUNTOCOMA

    PUNTOCOMA       shift and go to state 125


state 119

    (63) ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT . bloque
    (5) bloque -> . LKEY b2
    (6) bloque -> . LKEY b3

    LKEY            shift and go to state 16

    bloque                         shift and go to state 126

state 120

    (62) read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .

    RKEY            reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    ID              reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    IF              reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    DO              reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    FOR             reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    POW             reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    SQRT            reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    INT             reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    FLOAT           reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    CHAR            reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    STRING          reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)
    BOOL            reduce using rule 62 (read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA .)


state 121

    (34) c2 -> PUNTOCOMA .

    RKEY            reduce using rule 34 (c2 -> PUNTOCOMA .)
    ID              reduce using rule 34 (c2 -> PUNTOCOMA .)
    PRINT           reduce using rule 34 (c2 -> PUNTOCOMA .)
    IF              reduce using rule 34 (c2 -> PUNTOCOMA .)
    WHILE           reduce using rule 34 (c2 -> PUNTOCOMA .)
    DO              reduce using rule 34 (c2 -> PUNTOCOMA .)
    FOR             reduce using rule 34 (c2 -> PUNTOCOMA .)
    COMENTARIO      reduce using rule 34 (c2 -> PUNTOCOMA .)
    POW             reduce using rule 34 (c2 -> PUNTOCOMA .)
    SQRT            reduce using rule 34 (c2 -> PUNTOCOMA .)
    INT             reduce using rule 34 (c2 -> PUNTOCOMA .)
    FLOAT           reduce using rule 34 (c2 -> PUNTOCOMA .)
    CHAR            reduce using rule 34 (c2 -> PUNTOCOMA .)
    STRING          reduce using rule 34 (c2 -> PUNTOCOMA .)
    BOOL            reduce using rule 34 (c2 -> PUNTOCOMA .)


state 122

    (33) c2 -> ELSE . bloque PUNTOCOMA
    (5) bloque -> . LKEY b2
    (6) bloque -> . LKEY b3

    LKEY            shift and go to state 16

    bloque                         shift and go to state 127

state 123

    (32) condicion -> IF LKEY expresion RKEY bloque c2 .

    RKEY            reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    ID              reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    PRINT           reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    IF              reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    WHILE           reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    DO              reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    FOR             reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    COMENTARIO      reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    POW             reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    SQRT            reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    INT             reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    FLOAT           reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    CHAR            reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    STRING          reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)
    BOOL            reduce using rule 32 (condicion -> IF LKEY expresion RKEY bloque c2 .)


state 124

    (61) ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .

    RKEY            reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    ID              reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    IF              reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    DO              reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    FOR             reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    POW             reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    SQRT            reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    INT             reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    FLOAT           reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    CHAR            reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    STRING          reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)
    BOOL            reduce using rule 61 (ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA .)


state 125

    (64) potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .

    RKEY            reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    ID              reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    PRINT           reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    IF              reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    WHILE           reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    DO              reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    FOR             reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    COMENTARIO      reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    POW             reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    SQRT            reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    INT             reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    FLOAT           reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    CHAR            reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    STRING          reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)
    BOOL            reduce using rule 64 (potencia -> POW LPARENT varcte COMA varcte RPARENT PUNTOCOMA .)


state 126

    (63) ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .

    RKEY            reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    ID              reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    PRINT           reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    IF              reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    WHILE           reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    DO              reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    FOR             reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    COMENTARIO      reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    POW             reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    SQRT            reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    INT             reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    FLOAT           reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    CHAR            reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    STRING          reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)
    BOOL            reduce using rule 63 (ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque .)


state 127

    (33) c2 -> ELSE bloque . PUNTOCOMA

    PUNTOCOMA       shift and go to state 128


state 128

    (33) c2 -> ELSE bloque PUNTOCOMA .

    RKEY            reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    ID              reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    PRINT           reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    IF              reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    WHILE           reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    DO              reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    FOR             reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    COMENTARIO      reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    POW             reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    SQRT            reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    INT             reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    FLOAT           reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    CHAR            reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    STRING          reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)
    BOOL            reduce using rule 33 (c2 -> ELSE bloque PUNTOCOMA .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SUMA in state 62 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 62 resolved as shift
WARNING: shift/reduce conflict for SUMA in state 106 resolved as shift
WARNING: shift/reduce conflict for RESTA in state 106 resolved as shift
