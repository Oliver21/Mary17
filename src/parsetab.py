
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIGUALleftLTGTleftSUMARESTAleftMULTDIVleftLBRACKETRBRACKETleftLPARENTRPARENTleftLKEYRKEYINT FLOAT IF ELSE VAR PRINT PROGRAM DO WHILE CHAR STRING BEGIN END FOR FUNCTION BOOL READ POW SQRT CUADRADO TRIANGULO RECTANGULO CASA TRAPECIO ESTRELLA CIRCULO LEVANTA APOYA CUBO MUEVE DIMENSION VOID ID MULT DIV SUMA RESTA LPARENT RPARENT COMA PUNTOCOMA DOSPUNTOS PUNTO LBRACKET RBRACKET LKEY RKEY IGUAL LT GT COMSIMPLE COMDOBLE ENTERO FLOTANTE CARACTER CADENA NOESNADA COMENTARIO BOLEANO RAIZ POTENCIAprogram : PROGRAM  cuadrupro ID DOSPUNTOS p2p2 : p3\n\t| p4\n\t| p5p3 : declaracion p3\n\t| p4p4 : function p4\n\t| p5p5 : cuadrupro2 bloquecuadrupro : emptycuadrupro2 : emptybloque : LKEY b3 b4 b5b3 : declaracion b3\n\t| emptyb4 : estatuto b4\n\t| emptyb5 : RKEYexpresion : exp e2 e2 : e3 \n\t| emptye3 : GT exp\n\t| LT exp\n\t| LT GT expexp : termino tagsacops exp2exp2 : SUMA  tagop exp \n\t| RESTA tagop exp\n\t| emptytagop : emptytagsacops : emptydeclaracion : tipo ID decla1decla1 : declafinal\n\t| LBRACKET exp decla2decla2 : RBRACKET declafinal\n\t| COMA exp decla2declafinal : PUNTOCOMAtipo : INT\n\t| FLOAT\n\t| CHAR\n\t| STRING\n\t| BOOLasignacion : ID asig2asig2 : LBRACKET exp asig3\n\t| asigfinalasig3 : COMA exp asig3\n\t| RBRACKET asigfinalasigfinal : IGUAL expresion PUNTOCOMAprint : PRINT LPARENT pr2pr2 : expresion pr3\n\t| CADENA pr3pr3 : pr2\n\t| RPARENT PUNTOCOMAcondicion : IF LKEY expresion RKEY bloque c2c2 : ELSE bloque PUNTOCOMA\n\t| PUNTOCOMAtermino : factor tagsacopm te2te2 : MULT termino \n\t| DIV termino\n\t| emptytagsacopm : emptyfactor : LPARENT tagfondofalso expresion RPARENT tagsacafondo\n\t| f2\n\t| f3\n\t| f6\n\t| f7f2 : varctef3 : IDtagfondofalso : emptytagsacafondo : emptyf7 : ID LBRACKET exp f8f8 : COMA exp f8\n\t| RBRACKETf6 : llamafuncionestatuto : asignacion\n\t| print\n\t| condicion\n\t| ciclowhile\n\t| ciclodowhile\n\t| ciclofor\n\t| read\n\t| comentario\n\t| cuadrado\n\t| triangulo\n\t| casa\n\t| rectangulo\n\t| cubo\n\t| trapecio\n\t| estrella\n\t| mueve\n\t| levanta\n\t| apoya\n\t| dimension\n\t| llamafuncion\n\t| ifcomentario : COMENTARIOvarcte : ENTERO\n\t| FLOTANTE\n\t| CADENA\n\t| CARACTERciclowhile : WHILE LPARENT expresion RPARENT bloqueciclodowhile : DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMAread : ID IGUAL READ LPARENT RPARENT PUNTOCOMAciclofor : FOR LPARENT asignacion expresion asignacion RPARENT bloqueif : IF LPARENT expresion RPARENT bloque if2if2 : empty\n\t| ELSE bloquecuadrado : CUADRADO LPARENT exp RPARENT PUNTOCOMAtriangulo : TRIANGULO LPARENT exp RPARENT PUNTOCOMArectangulo : RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMAcasa : CASA LPARENT exp COMA exp RPARENT PUNTOCOMAestrella : ESTRELLA LPARENT exp RPARENT PUNTOCOMAcubo : CUBO LPARENT exp RPARENT PUNTOCOMAmueve : MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMAlevanta : LEVANTA LPARENT RPARENT PUNTOCOMAapoya : APOYA LPARENT RPARENT PUNTOCOMAtrapecio : TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMAdimension : DIMENSION LPARENT exp RPARENT PUNTOCOMAfunction : tipo ID LPARENT funct11\n\t| VOID ID LPARENT funct11funct11 : function4funct11 : funct2funct2 : tipo ID funct3funct3 : COMA funct2funct3 : function4function4 : RPARENT bloquellamafuncion : ID LPARENT llamaf11llamaf11 : llamaf2\n\t| llamaf4llamaf2 : exp llamaf3llamaf3 : COMA llamaf2\n\t| llamaf4llamaf4 : RPARENTempty :'
    
_lr_action_items = {'DO':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,44,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,44,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'READ':([122,],[164,]),'VOID':([6,12,21,38,39,40,86,88,89,106,109,110,133,141,173,174,187,222,232,],[8,8,8,-35,-30,-31,-119,-120,-118,-117,-12,-17,-124,-32,-123,-121,-33,-122,-34,]),'MUEVE':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,45,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,45,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'IGUAL':([77,158,215,],[122,207,207,]),'CHAR':([6,12,21,22,32,35,37,38,39,40,86,88,89,106,109,110,133,141,173,174,175,187,222,232,],[9,9,9,9,9,9,9,-35,-30,-31,-119,-120,-118,-117,-12,-17,-124,-32,-123,-121,9,-33,-122,-34,]),'WHILE':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,107,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,47,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,47,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,144,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'PROGRAM':([0,],[2,]),'PRINT':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,50,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,50,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'TRAPECIO':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,49,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,49,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'DIV':([91,92,93,94,97,98,99,100,101,102,103,105,138,139,149,159,160,161,163,208,209,226,229,231,246,257,258,275,],[-61,-62,-63,-64,-65,-72,-97,-132,-95,-98,-66,-96,183,-59,-97,-131,-126,-127,-125,-128,-130,-132,-69,-71,-129,-60,-68,-70,]),'COMENTARIO':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,69,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,69,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'MULT':([91,92,93,94,97,98,99,100,101,102,103,105,138,139,149,159,160,161,163,208,209,226,229,231,246,257,258,275,],[-61,-62,-63,-64,-65,-72,-97,-132,-95,-98,-66,-96,184,-59,-97,-131,-126,-127,-125,-128,-130,-132,-69,-71,-129,-60,-68,-70,]),'LKEY':([6,7,11,12,21,38,39,40,44,79,86,88,89,90,106,109,110,133,141,173,174,187,190,217,218,222,232,266,270,273,],[-132,22,-11,-132,-132,-35,-30,-31,22,128,-119,-120,-118,22,-117,-12,-17,-124,-32,-123,-121,-33,22,22,22,-122,-34,22,22,22,]),'LPARENT':([24,25,36,41,45,47,49,50,56,57,64,67,68,70,77,78,79,80,83,84,91,92,93,94,95,96,97,98,99,100,101,102,103,105,108,111,112,113,114,115,117,119,121,122,123,124,125,126,127,128,129,130,134,135,136,137,138,139,140,142,144,147,149,151,157,159,160,161,163,164,176,177,178,179,181,182,183,184,188,189,191,192,193,194,195,196,201,202,207,208,209,210,212,213,214,223,224,225,226,227,228,229,230,231,236,237,238,246,249,255,256,257,258,262,268,275,],[35,37,96,37,108,111,112,113,114,115,117,118,119,120,121,126,127,129,130,131,-61,-62,-63,-64,-132,-132,-65,-72,-97,-132,-95,-98,121,-96,96,96,96,96,96,96,96,96,96,96,96,-41,-43,96,96,96,96,96,-132,-29,96,-67,-132,-59,96,96,188,-132,96,96,96,-131,-126,-127,-125,211,-24,-27,-132,-132,-58,-55,96,96,96,96,96,96,-19,-20,-18,96,96,96,96,-128,-130,96,-46,-42,96,96,-28,96,-132,-57,-56,-69,96,-71,-21,96,-22,-129,-45,-26,-25,-60,-68,-23,-44,-70,]),'CASA':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,56,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,56,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'PUNTOCOMA':([25,42,91,92,93,94,95,97,98,99,100,101,102,103,105,109,110,134,135,138,139,143,147,155,159,160,161,163,165,172,176,177,181,182,193,194,195,197,203,205,208,209,216,219,220,226,227,228,229,231,236,238,246,247,252,255,256,257,258,260,261,262,263,264,265,275,283,],[38,38,-61,-62,-63,-64,-132,-65,-72,-97,-132,-95,-98,-66,-96,-12,-17,-132,-29,-132,-59,38,-132,204,-131,-126,-127,-125,212,221,-24,-27,-58,-55,-19,-20,-18,240,243,244,-128,-130,250,253,254,-132,-57,-56,-69,-71,-21,-22,-129,267,272,-26,-25,-60,-68,276,277,-23,278,279,280,-70,284,]),'LT':([91,92,93,94,95,97,98,99,100,101,102,103,105,134,135,138,139,147,149,159,160,161,163,176,177,181,182,208,209,226,227,228,229,231,246,255,256,257,258,275,],[-61,-62,-63,-64,-132,-65,-72,-97,-132,-95,-98,-66,-96,-132,-29,-132,-59,192,-97,-131,-126,-127,-125,-24,-27,-58,-55,-128,-130,-132,-57,-56,-69,-71,-129,-26,-25,-60,-68,-70,]),'RESTA':([91,92,93,94,95,97,98,99,100,101,102,103,105,134,135,138,139,149,159,160,161,163,181,182,208,209,226,227,228,229,231,246,257,258,275,],[-61,-62,-63,-64,-132,-65,-72,-97,-132,-95,-98,-66,-96,178,-29,-132,-59,-97,-131,-126,-127,-125,-58,-55,-128,-130,-132,-57,-56,-69,-71,-129,-60,-68,-70,]),'DIMENSION':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,78,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,78,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'CADENA':([36,91,92,93,94,95,96,97,98,99,100,101,102,103,105,108,111,112,113,114,115,117,119,121,122,123,124,125,126,127,128,129,130,134,135,136,137,138,139,140,142,147,149,151,157,159,160,161,163,176,177,178,179,181,182,183,184,188,189,191,192,193,194,195,196,201,202,207,208,209,210,212,213,214,223,224,225,226,227,228,229,230,231,236,237,238,246,249,255,256,257,258,262,268,275,],[99,-61,-62,-63,-64,-132,-132,-65,-72,-97,-132,-95,-98,-66,-96,99,99,99,149,99,99,99,99,99,99,99,-41,-43,99,99,99,99,99,-132,-29,99,-67,-132,-59,99,99,-132,149,149,99,-131,-126,-127,-125,-24,-27,-132,-132,-58,-55,99,99,99,99,99,99,-19,-20,-18,99,99,99,99,-128,-130,99,-46,-42,99,99,-28,99,-132,-57,-56,-69,99,-71,-21,99,-22,-129,-45,-26,-25,-60,-68,-23,-44,-70,]),'DOSPUNTOS':([5,],[6,]),'APOYA':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,67,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,67,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'LEVANTA':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,84,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,84,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'$end':([1,14,15,16,17,23,26,28,29,30,109,110,],[0,-1,-2,-3,-4,-9,-7,-8,-5,-6,-12,-17,]),'TRIANGULO':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,68,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,68,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'GT':([91,92,93,94,95,97,98,99,100,101,102,103,105,134,135,138,139,147,149,159,160,161,163,176,177,181,182,192,208,209,226,227,228,229,231,246,255,256,257,258,275,],[-61,-62,-63,-64,-132,-65,-72,-97,-132,-95,-98,-66,-96,-132,-29,-132,-59,191,-97,-131,-126,-127,-125,-24,-27,-58,-55,237,-128,-130,-132,-57,-56,-69,-71,-129,-26,-25,-60,-68,-70,]),'STRING':([6,12,21,22,32,35,37,38,39,40,86,88,89,106,109,110,133,141,173,174,175,187,222,232,],[13,13,13,13,13,13,13,-35,-30,-31,-119,-120,-118,-117,-12,-17,-124,-32,-123,-121,13,-33,-122,-34,]),'FOR':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,70,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,70,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'CUBO':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,64,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,64,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'RKEY':([22,32,33,34,38,39,40,43,46,48,51,52,53,54,55,58,59,60,61,62,63,65,66,69,71,72,73,74,75,76,81,82,85,91,92,93,94,95,97,98,99,100,101,102,103,105,109,110,116,124,125,134,135,138,139,141,147,150,159,160,161,163,169,176,177,181,182,187,193,194,195,198,199,200,204,208,209,212,213,221,226,227,228,229,231,232,235,236,238,240,243,244,246,249,250,251,253,254,255,256,257,258,262,267,268,269,271,272,274,275,276,277,278,279,280,281,282,284,],[-132,-132,-132,-14,-35,-30,-31,-13,110,-90,-86,-80,-89,-93,-82,-132,-88,-76,-92,-81,-84,-74,-16,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-61,-62,-63,-64,-132,-65,-72,-97,-132,-95,-98,-66,-96,-12,-17,-15,-41,-43,-132,-29,-132,-59,-32,-132,-47,-131,-126,-127,-125,218,-24,-27,-58,-55,-33,-19,-20,-18,-49,-50,-48,-114,-128,-130,-46,-42,-113,-132,-57,-56,-69,-71,-34,-99,-21,-22,-51,-111,-107,-129,-45,-116,-132,-110,-106,-26,-25,-60,-68,-23,-101,-44,-103,-104,-54,-52,-70,-100,-112,-115,-109,-108,-102,-105,-53,]),'ELSE':([109,110,251,252,],[-12,-17,270,273,]),'ESTRELLA':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,80,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,80,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'SUMA':([91,92,93,94,95,97,98,99,100,101,102,103,105,134,135,138,139,149,159,160,161,163,181,182,208,209,226,227,228,229,231,246,257,258,275,],[-61,-62,-63,-64,-132,-65,-72,-97,-132,-95,-98,-66,-96,179,-29,-132,-59,-97,-131,-126,-127,-125,-58,-55,-128,-130,-132,-57,-56,-69,-71,-129,-60,-68,-70,]),'CARACTER':([36,91,92,93,94,95,96,97,98,99,100,101,102,103,105,108,111,112,113,114,115,117,119,121,122,123,124,125,126,127,128,129,130,134,135,136,137,138,139,140,142,147,149,151,157,159,160,161,163,176,177,178,179,181,182,183,184,188,189,191,192,193,194,195,196,201,202,207,208,209,210,212,213,214,223,224,225,226,227,228,229,230,231,236,237,238,246,249,255,256,257,258,262,268,275,],[102,-61,-62,-63,-64,-132,-132,-65,-72,-97,-132,-95,-98,-66,-96,102,102,102,102,102,102,102,102,102,102,102,-41,-43,102,102,102,102,102,-132,-29,102,-67,-132,-59,102,102,-132,102,102,102,-131,-126,-127,-125,-24,-27,-132,-132,-58,-55,102,102,102,102,102,102,-19,-20,-18,102,102,102,102,-128,-130,102,-46,-42,102,102,-28,102,-132,-57,-56,-69,102,-71,-21,102,-22,-129,-45,-26,-25,-60,-68,-23,-44,-70,]),'COMA':([91,92,93,94,95,97,98,99,100,101,102,103,104,105,132,134,135,138,139,145,148,152,153,159,160,161,162,163,166,176,177,181,182,185,186,208,209,226,227,228,229,231,246,248,255,256,257,258,259,275,],[-61,-62,-63,-64,-132,-65,-72,-97,-132,-95,-98,-66,142,-96,175,-132,-29,-132,-59,189,196,201,202,-131,-126,-127,210,-125,214,-24,-27,-58,-55,230,142,-128,-130,-132,-57,-56,-69,-71,-129,214,-26,-25,-60,-68,230,-70,]),'ID':([2,3,4,8,9,10,13,18,19,20,22,27,31,32,33,34,36,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,87,91,92,93,94,95,96,97,98,99,100,101,102,103,105,108,109,110,111,112,113,114,115,117,119,120,121,122,123,124,125,126,127,128,129,130,134,135,136,137,138,139,140,141,142,147,149,150,151,157,159,160,161,163,176,177,178,179,181,182,183,184,187,188,189,191,192,193,194,195,196,198,199,200,201,202,204,206,207,208,209,210,212,213,214,221,223,224,225,226,227,228,229,230,231,232,235,236,237,238,240,243,244,246,249,250,251,253,254,255,256,257,258,262,267,268,269,271,272,274,275,276,277,278,279,280,281,282,284,],[-132,5,-10,24,-38,25,-39,-36,-37,-40,-132,41,42,-132,77,-14,103,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,77,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,132,-61,-62,-63,-64,-132,-132,-65,-72,-97,-132,-95,-98,-66,-96,103,-12,-17,103,103,103,103,103,103,103,158,103,103,103,-41,-43,103,103,103,103,103,-132,-29,103,-67,-132,-59,103,-32,103,-132,103,-47,103,103,-131,-126,-127,-125,-24,-27,-132,-132,-58,-55,103,103,-33,103,103,103,103,-19,-20,-18,103,-49,-50,-48,103,103,-114,158,103,-128,-130,103,-46,-42,103,-113,103,-28,103,-132,-57,-56,-69,103,-71,-34,-99,-21,103,-22,-51,-111,-107,-129,-45,-116,-132,-110,-106,-26,-25,-60,-68,-23,-101,-44,-103,-104,-54,-52,-70,-100,-112,-115,-109,-108,-102,-105,-53,]),'IF':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,79,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,79,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'RPARENT':([35,37,91,92,93,94,95,97,98,99,100,101,102,103,105,118,121,124,125,131,132,134,135,138,139,146,147,149,151,154,156,159,160,161,162,163,167,168,170,171,176,177,180,181,182,193,194,195,208,209,211,212,213,226,227,228,229,231,233,234,236,238,239,241,242,245,246,249,255,256,257,258,262,268,275,],[90,90,-61,-62,-63,-64,-132,-65,-72,-97,-132,-95,-98,-66,-96,155,159,-41,-43,172,90,-132,-29,-132,-59,190,-132,197,197,203,205,-131,-126,-127,159,-125,216,217,219,220,-24,-27,226,-58,-55,-19,-20,-18,-128,-130,247,-46,-42,-132,-57,-56,-69,-71,260,261,-21,-22,263,264,265,266,-129,-45,-26,-25,-60,-68,-23,-44,-70,]),'LBRACKET':([25,42,77,103,158,],[36,36,123,140,123,]),'INT':([6,12,21,22,32,35,37,38,39,40,86,88,89,106,109,110,133,141,173,174,175,187,222,232,],[18,18,18,18,18,18,18,-35,-30,-31,-119,-120,-118,-117,-12,-17,-124,-32,-123,-121,18,-33,-122,-34,]),'FLOAT':([6,12,21,22,32,35,37,38,39,40,86,88,89,106,109,110,133,141,173,174,175,187,222,232,],[19,19,19,19,19,19,19,-35,-30,-31,-119,-120,-118,-117,-12,-17,-124,-32,-123,-121,19,-33,-122,-34,]),'CUADRADO':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,83,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,83,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'BOOL':([6,12,21,22,32,35,37,38,39,40,86,88,89,106,109,110,133,141,173,174,175,187,222,232,],[20,20,20,20,20,20,20,-35,-30,-31,-119,-120,-118,-117,-12,-17,-124,-32,-123,-121,20,-33,-122,-34,]),'RECTANGULO':([22,32,33,34,38,39,40,43,48,51,52,53,54,55,58,59,60,61,62,63,65,69,71,72,73,74,75,76,81,82,85,109,110,124,125,141,150,159,160,161,163,187,198,199,200,204,208,209,212,213,221,232,235,240,243,244,246,249,250,251,253,254,267,268,269,271,272,274,276,277,278,279,280,281,282,284,],[-132,-132,57,-14,-35,-30,-31,-13,-90,-86,-80,-89,-93,-82,57,-88,-76,-92,-81,-84,-74,-94,-79,-85,-78,-87,-75,-77,-83,-73,-91,-12,-17,-41,-43,-32,-47,-131,-126,-127,-125,-33,-49,-50,-48,-114,-128,-130,-46,-42,-113,-34,-99,-51,-111,-107,-129,-45,-116,-132,-110,-106,-101,-44,-103,-104,-54,-52,-100,-112,-115,-109,-108,-102,-105,-53,]),'FLOTANTE':([36,91,92,93,94,95,96,97,98,99,100,101,102,103,105,108,111,112,113,114,115,117,119,121,122,123,124,125,126,127,128,129,130,134,135,136,137,138,139,140,142,147,149,151,157,159,160,161,163,176,177,178,179,181,182,183,184,188,189,191,192,193,194,195,196,201,202,207,208,209,210,212,213,214,223,224,225,226,227,228,229,230,231,236,237,238,246,249,255,256,257,258,262,268,275,],[105,-61,-62,-63,-64,-132,-132,-65,-72,-97,-132,-95,-98,-66,-96,105,105,105,105,105,105,105,105,105,105,105,-41,-43,105,105,105,105,105,-132,-29,105,-67,-132,-59,105,105,-132,105,105,105,-131,-126,-127,-125,-24,-27,-132,-132,-58,-55,105,105,105,105,105,105,-19,-20,-18,105,105,105,105,-128,-130,105,-46,-42,105,105,-28,105,-132,-57,-56,-69,105,-71,-21,105,-22,-129,-45,-26,-25,-60,-68,-23,-44,-70,]),'RBRACKET':([91,92,93,94,95,97,98,99,100,101,102,103,104,105,134,135,138,139,159,160,161,163,166,176,177,181,182,185,186,208,209,226,227,228,229,231,246,248,255,256,257,258,259,275,],[-61,-62,-63,-64,-132,-65,-72,-97,-132,-95,-98,-66,143,-96,-132,-29,-132,-59,-131,-126,-127,-125,215,-24,-27,-58,-55,231,143,-128,-130,-132,-57,-56,-69,-71,-129,215,-26,-25,-60,-68,231,-70,]),'ENTERO':([36,91,92,93,94,95,96,97,98,99,100,101,102,103,105,108,111,112,113,114,115,117,119,121,122,123,124,125,126,127,128,129,130,134,135,136,137,138,139,140,142,147,149,151,157,159,160,161,163,176,177,178,179,181,182,183,184,188,189,191,192,193,194,195,196,201,202,207,208,209,210,212,213,214,223,224,225,226,227,228,229,230,231,236,237,238,246,249,255,256,257,258,262,268,275,],[101,-61,-62,-63,-64,-132,-132,-65,-72,-97,-132,-95,-98,-66,-96,101,101,101,101,101,101,101,101,101,101,101,-41,-43,101,101,101,101,101,-132,-29,101,-67,-132,-59,101,101,-132,101,101,101,-131,-126,-127,-125,-24,-27,-132,-132,-58,-55,101,101,101,101,101,101,-19,-20,-18,101,101,101,101,-128,-130,101,-46,-42,101,101,-28,101,-132,-57,-56,-69,101,-71,-21,101,-22,-129,-45,-26,-25,-60,-68,-23,-44,-70,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuadrado':([33,58,],[62,62,]),'f2':([36,108,111,112,113,114,115,117,119,121,122,123,126,127,128,129,130,136,140,142,149,151,157,183,184,188,189,191,192,196,201,202,207,210,214,223,225,230,237,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'f3':([36,108,111,112,113,114,115,117,119,121,122,123,126,127,128,129,130,136,140,142,149,151,157,183,184,188,189,191,192,196,201,202,207,210,214,223,225,230,237,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'if2':([251,],[269,]),'f6':([36,108,111,112,113,114,115,117,119,121,122,123,126,127,128,129,130,136,140,142,149,151,157,183,184,188,189,191,192,196,201,202,207,210,214,223,225,230,237,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'cuadrupro2':([6,12,21,],[7,7,7,]),'tagfondofalso':([96,],[136,]),'tagsacafondo':([226,],[257,]),'asig3':([166,248,],[213,268,]),'b4':([33,58,],[46,116,]),'b5':([46,],[109,]),'apoya':([33,58,],[48,48,]),'b3':([22,32,],[33,43,]),'te2':([138,],[182,]),'trapecio':([33,58,],[51,51,]),'bloque':([7,44,90,190,217,218,266,270,273,],[23,107,133,235,251,252,281,282,283,]),'ciclowhile':([33,58,],[60,60,]),'levanta':([33,58,],[53,53,]),'if':([33,58,],[54,54,]),'triangulo':([33,58,],[55,55,]),'f7':([36,108,111,112,113,114,115,117,119,121,122,123,126,127,128,129,130,136,140,142,149,151,157,183,184,188,189,191,192,196,201,202,207,210,214,223,225,230,237,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'tagsacops':([95,],[134,]),'varcte':([36,108,111,112,113,114,115,117,119,121,122,123,126,127,128,129,130,136,140,142,149,151,157,183,184,188,189,191,192,196,201,202,207,210,214,223,225,230,237,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'tipo':([6,12,21,22,32,35,37,175,],[10,27,10,31,31,87,87,87,]),'tagop':([178,179,],[223,225,]),'asig2':([77,158,],[124,124,]),'estatuto':([33,58,],[58,58,]),'mueve':([33,58,],[59,59,]),'comentario':([33,58,],[52,52,]),'decla1':([25,42,],[39,39,]),'llamafuncion':([33,36,58,108,111,112,113,114,115,117,119,121,122,123,126,127,128,129,130,136,140,142,149,151,157,183,184,188,189,191,192,196,201,202,207,210,214,223,225,230,237,],[61,98,61,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'funct2':([35,37,175,],[88,88,222,]),'program':([0,],[1,]),'declafinal':([25,42,143,],[40,40,187,]),'rectangulo':([33,58,],[63,63,]),'factor':([36,108,111,112,113,114,115,117,119,121,122,123,126,127,128,129,130,136,140,142,149,151,157,183,184,188,189,191,192,196,201,202,207,210,214,223,225,230,237,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'print':([33,58,],[65,65,]),'tagsacopm':([100,],[138,]),'e2':([147,],[195,]),'empty':([2,6,12,21,22,32,33,58,95,96,100,134,138,147,178,179,226,251,],[4,11,11,11,34,34,66,66,135,137,139,177,181,194,224,224,258,271,]),'function':([6,12,21,],[12,12,12,]),'expresion':([111,113,122,127,128,136,149,151,157,188,207,],[146,151,165,168,169,180,151,151,206,233,165,]),'f8':([185,259,],[229,275,]),'funct3':([132,],[174,]),'read':([33,58,],[71,71,]),'cubo':([33,58,],[72,72,]),'ciclofor':([33,58,],[73,73,]),'estrella':([33,58,],[74,74,]),'funct11':([35,37,],[89,106,]),'condicion':([33,58,],[75,75,]),'pr3':([149,151,],[198,200,]),'pr2':([113,149,151,],[150,199,199,]),'c2':([252,],[274,]),'ciclodowhile':([33,58,],[76,76,]),'cuadrupro':([2,],[3,]),'asigfinal':([77,158,215,],[125,125,249,]),'e3':([147,],[193,]),'function4':([35,37,132,],[86,86,173,]),'p2':([6,],[14,]),'p3':([6,21,],[15,29,]),'casa':([33,58,],[81,81,]),'asignacion':([33,58,120,206,],[82,82,157,245,]),'p4':([6,12,21,],[16,26,30,]),'p5':([6,12,21,],[17,28,28,]),'llamaf2':([121,210,],[160,246,]),'llamaf3':([162,],[208,]),'decla2':([104,186,],[141,232,]),'llamaf4':([121,162,],[161,209,]),'llamaf11':([121,],[163,]),'exp':([36,108,111,112,113,114,115,117,119,121,122,123,126,127,128,129,130,136,140,142,149,151,157,188,189,191,192,196,201,202,207,210,214,223,225,230,237,],[104,145,147,148,147,152,153,154,156,162,147,166,167,147,147,170,171,147,185,186,147,147,147,147,234,236,238,239,241,242,147,162,248,255,256,259,262,]),'exp2':([134,],[176,]),'dimension':([33,58,],[85,85,]),'declaracion':([6,21,22,32,],[21,21,32,32,]),'termino':([36,108,111,112,113,114,115,117,119,121,122,123,126,127,128,129,130,136,140,142,149,151,157,183,184,188,189,191,192,196,201,202,207,210,214,223,225,230,237,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,227,228,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM cuadrupro ID DOSPUNTOS p2','program',5,'p_program','analizadorSintactico.py',211),
  ('p2 -> p3','p2',1,'p_p2','analizadorSintactico.py',218),
  ('p2 -> p4','p2',1,'p_p2','analizadorSintactico.py',219),
  ('p2 -> p5','p2',1,'p_p2','analizadorSintactico.py',220),
  ('p3 -> declaracion p3','p3',2,'p_p3','analizadorSintactico.py',223),
  ('p3 -> p4','p3',1,'p_p3','analizadorSintactico.py',224),
  ('p4 -> function p4','p4',2,'p_p4','analizadorSintactico.py',227),
  ('p4 -> p5','p4',1,'p_p4','analizadorSintactico.py',228),
  ('p5 -> cuadrupro2 bloque','p5',2,'p_p5','analizadorSintactico.py',231),
  ('cuadrupro -> empty','cuadrupro',1,'p_cuadrupro','analizadorSintactico.py',234),
  ('cuadrupro2 -> empty','cuadrupro2',1,'p_cuadrupro2','analizadorSintactico.py',240),
  ('bloque -> LKEY b3 b4 b5','bloque',4,'p_bloque','analizadorSintactico.py',247),
  ('b3 -> declaracion b3','b3',2,'p_b3','analizadorSintactico.py',257),
  ('b3 -> empty','b3',1,'p_b3','analizadorSintactico.py',258),
  ('b4 -> estatuto b4','b4',2,'p_b4','analizadorSintactico.py',261),
  ('b4 -> empty','b4',1,'p_b4','analizadorSintactico.py',262),
  ('b5 -> RKEY','b5',1,'p_b5','analizadorSintactico.py',265),
  ('expresion -> exp e2','expresion',2,'p_expresion','analizadorSintactico.py',274),
  ('e2 -> e3','e2',1,'p_e2','analizadorSintactico.py',279),
  ('e2 -> empty','e2',1,'p_e2','analizadorSintactico.py',280),
  ('e3 -> GT exp','e3',2,'p_e3','analizadorSintactico.py',283),
  ('e3 -> LT exp','e3',2,'p_e3','analizadorSintactico.py',284),
  ('e3 -> LT GT exp','e3',3,'p_e3','analizadorSintactico.py',285),
  ('exp -> termino tagsacops exp2','exp',3,'p_exp','analizadorSintactico.py',289),
  ('exp2 -> SUMA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',293),
  ('exp2 -> RESTA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',294),
  ('exp2 -> empty','exp2',1,'p_exp2','analizadorSintactico.py',295),
  ('tagop -> empty','tagop',1,'p_tagop','analizadorSintactico.py',298),
  ('tagsacops -> empty','tagsacops',1,'p_tagsacops','analizadorSintactico.py',303),
  ('declaracion -> tipo ID decla1','declaracion',3,'p_declaracion','analizadorSintactico.py',326),
  ('decla1 -> declafinal','decla1',1,'p_decla1','analizadorSintactico.py',330),
  ('decla1 -> LBRACKET exp decla2','decla1',3,'p_decla1','analizadorSintactico.py',331),
  ('decla2 -> RBRACKET declafinal','decla2',2,'p_decla2','analizadorSintactico.py',334),
  ('decla2 -> COMA exp decla2','decla2',3,'p_decla2','analizadorSintactico.py',335),
  ('declafinal -> PUNTOCOMA','declafinal',1,'p_declafinal','analizadorSintactico.py',339),
  ('tipo -> INT','tipo',1,'p_tipo','analizadorSintactico.py',349),
  ('tipo -> FLOAT','tipo',1,'p_tipo','analizadorSintactico.py',350),
  ('tipo -> CHAR','tipo',1,'p_tipo','analizadorSintactico.py',351),
  ('tipo -> STRING','tipo',1,'p_tipo','analizadorSintactico.py',352),
  ('tipo -> BOOL','tipo',1,'p_tipo','analizadorSintactico.py',353),
  ('asignacion -> ID asig2','asignacion',2,'p_asignacion','analizadorSintactico.py',363),
  ('asig2 -> LBRACKET exp asig3','asig2',3,'p_asig2','analizadorSintactico.py',367),
  ('asig2 -> asigfinal','asig2',1,'p_asig2','analizadorSintactico.py',368),
  ('asig3 -> COMA exp asig3','asig3',3,'p_asig3','analizadorSintactico.py',371),
  ('asig3 -> RBRACKET asigfinal','asig3',2,'p_asig3','analizadorSintactico.py',372),
  ('asigfinal -> IGUAL expresion PUNTOCOMA','asigfinal',3,'p_asigfinal','analizadorSintactico.py',376),
  ('print -> PRINT LPARENT pr2','print',3,'p_print','analizadorSintactico.py',385),
  ('pr2 -> expresion pr3','pr2',2,'p_pr2','analizadorSintactico.py',389),
  ('pr2 -> CADENA pr3','pr2',2,'p_pr2','analizadorSintactico.py',390),
  ('pr3 -> pr2','pr3',1,'p_pr3','analizadorSintactico.py',394),
  ('pr3 -> RPARENT PUNTOCOMA','pr3',2,'p_pr3','analizadorSintactico.py',395),
  ('condicion -> IF LKEY expresion RKEY bloque c2','condicion',6,'p_condicion','analizadorSintactico.py',398),
  ('c2 -> ELSE bloque PUNTOCOMA','c2',3,'p_c2','analizadorSintactico.py',402),
  ('c2 -> PUNTOCOMA','c2',1,'p_c2','analizadorSintactico.py',403),
  ('termino -> factor tagsacopm te2','termino',3,'p_termino','analizadorSintactico.py',408),
  ('te2 -> MULT termino','te2',2,'p_te2','analizadorSintactico.py',412),
  ('te2 -> DIV termino','te2',2,'p_te2','analizadorSintactico.py',413),
  ('te2 -> empty','te2',1,'p_te2','analizadorSintactico.py',414),
  ('tagsacopm -> empty','tagsacopm',1,'p_tagsacopm','analizadorSintactico.py',423),
  ('factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo','factor',5,'p_factor','analizadorSintactico.py',434),
  ('factor -> f2','factor',1,'p_factor','analizadorSintactico.py',435),
  ('factor -> f3','factor',1,'p_factor','analizadorSintactico.py',436),
  ('factor -> f6','factor',1,'p_factor','analizadorSintactico.py',437),
  ('factor -> f7','factor',1,'p_factor','analizadorSintactico.py',438),
  ('f2 -> varcte','f2',1,'p_f2','analizadorSintactico.py',447),
  ('f3 -> ID','f3',1,'p_f3','analizadorSintactico.py',453),
  ('tagfondofalso -> empty','tagfondofalso',1,'p_tagfondofalso','analizadorSintactico.py',458),
  ('tagsacafondo -> empty','tagsacafondo',1,'p_tagsacafondo','analizadorSintactico.py',462),
  ('f7 -> ID LBRACKET exp f8','f7',4,'p_f7','analizadorSintactico.py',483),
  ('f8 -> COMA exp f8','f8',3,'p_f8','analizadorSintactico.py',487),
  ('f8 -> RBRACKET','f8',1,'p_f8','analizadorSintactico.py',488),
  ('f6 -> llamafuncion','f6',1,'p_f6','analizadorSintactico.py',492),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','analizadorSintactico.py',498),
  ('estatuto -> print','estatuto',1,'p_estatuto','analizadorSintactico.py',499),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','analizadorSintactico.py',500),
  ('estatuto -> ciclowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',501),
  ('estatuto -> ciclodowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',502),
  ('estatuto -> ciclofor','estatuto',1,'p_estatuto','analizadorSintactico.py',503),
  ('estatuto -> read','estatuto',1,'p_estatuto','analizadorSintactico.py',504),
  ('estatuto -> comentario','estatuto',1,'p_estatuto','analizadorSintactico.py',505),
  ('estatuto -> cuadrado','estatuto',1,'p_estatuto','analizadorSintactico.py',506),
  ('estatuto -> triangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',507),
  ('estatuto -> casa','estatuto',1,'p_estatuto','analizadorSintactico.py',508),
  ('estatuto -> rectangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',509),
  ('estatuto -> cubo','estatuto',1,'p_estatuto','analizadorSintactico.py',510),
  ('estatuto -> trapecio','estatuto',1,'p_estatuto','analizadorSintactico.py',511),
  ('estatuto -> estrella','estatuto',1,'p_estatuto','analizadorSintactico.py',512),
  ('estatuto -> mueve','estatuto',1,'p_estatuto','analizadorSintactico.py',513),
  ('estatuto -> levanta','estatuto',1,'p_estatuto','analizadorSintactico.py',514),
  ('estatuto -> apoya','estatuto',1,'p_estatuto','analizadorSintactico.py',515),
  ('estatuto -> dimension','estatuto',1,'p_estatuto','analizadorSintactico.py',516),
  ('estatuto -> llamafuncion','estatuto',1,'p_estatuto','analizadorSintactico.py',517),
  ('estatuto -> if','estatuto',1,'p_estatuto','analizadorSintactico.py',518),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','analizadorSintactico.py',526),
  ('varcte -> ENTERO','varcte',1,'p_varcte','analizadorSintactico.py',532),
  ('varcte -> FLOTANTE','varcte',1,'p_varcte','analizadorSintactico.py',533),
  ('varcte -> CADENA','varcte',1,'p_varcte','analizadorSintactico.py',534),
  ('varcte -> CARACTER','varcte',1,'p_varcte','analizadorSintactico.py',535),
  ('ciclowhile -> WHILE LPARENT expresion RPARENT bloque','ciclowhile',5,'p_ciclowhile','analizadorSintactico.py',542),
  ('ciclodowhile -> DO bloque WHILE LPARENT expresion RPARENT PUNTOCOMA','ciclodowhile',7,'p_ciclodowhile','analizadorSintactico.py',546),
  ('read -> ID IGUAL READ LPARENT RPARENT PUNTOCOMA','read',6,'p_read','analizadorSintactico.py',550),
  ('ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque','ciclofor',7,'p_ciclofor','analizadorSintactico.py',554),
  ('if -> IF LPARENT expresion RPARENT bloque if2','if',6,'p_if','analizadorSintactico.py',558),
  ('if2 -> empty','if2',1,'p_if2','analizadorSintactico.py',562),
  ('if2 -> ELSE bloque','if2',2,'p_if2','analizadorSintactico.py',563),
  ('cuadrado -> CUADRADO LPARENT exp RPARENT PUNTOCOMA','cuadrado',5,'p_cuadrado','analizadorSintactico.py',582),
  ('triangulo -> TRIANGULO LPARENT exp RPARENT PUNTOCOMA','triangulo',5,'p_triangulo','analizadorSintactico.py',586),
  ('rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA','rectangulo',7,'p_rectangulo','analizadorSintactico.py',590),
  ('casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA','casa',7,'p_casa','analizadorSintactico.py',594),
  ('estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA','estrella',5,'p_estrella','analizadorSintactico.py',598),
  ('cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA','cubo',5,'p_cubo','analizadorSintactico.py',602),
  ('mueve -> MUEVE LPARENT exp COMA exp RPARENT PUNTOCOMA','mueve',7,'p_mueve','analizadorSintactico.py',606),
  ('levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA','levanta',4,'p_levanta','analizadorSintactico.py',610),
  ('apoya -> APOYA LPARENT RPARENT PUNTOCOMA','apoya',4,'p_apoya','analizadorSintactico.py',614),
  ('trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA','trapecio',7,'p_trapecio','analizadorSintactico.py',618),
  ('dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA','dimension',5,'p_dimension','analizadorSintactico.py',622),
  ('function -> tipo ID LPARENT funct11','function',4,'p_function','analizadorSintactico.py',627),
  ('function -> VOID ID LPARENT funct11','function',4,'p_function','analizadorSintactico.py',628),
  ('funct11 -> function4','funct11',1,'p_funct11','analizadorSintactico.py',636),
  ('funct11 -> funct2','funct11',1,'p_funct111','analizadorSintactico.py',639),
  ('funct2 -> tipo ID funct3','funct2',3,'p_funct2','analizadorSintactico.py',643),
  ('funct3 -> COMA funct2','funct3',2,'p_funtion3','analizadorSintactico.py',650),
  ('funct3 -> function4','funct3',1,'p_function31','analizadorSintactico.py',655),
  ('function4 -> RPARENT bloque','function4',2,'p_function4','analizadorSintactico.py',660),
  ('llamafuncion -> ID LPARENT llamaf11','llamafuncion',3,'p_llamafuncion','analizadorSintactico.py',664),
  ('llamaf11 -> llamaf2','llamaf11',1,'p_llamaf11','analizadorSintactico.py',668),
  ('llamaf11 -> llamaf4','llamaf11',1,'p_llamaf11','analizadorSintactico.py',669),
  ('llamaf2 -> exp llamaf3','llamaf2',2,'p_llamaf2','analizadorSintactico.py',672),
  ('llamaf3 -> COMA llamaf2','llamaf3',2,'p_llamaf3','analizadorSintactico.py',675),
  ('llamaf3 -> llamaf4','llamaf3',1,'p_llamaf3','analizadorSintactico.py',676),
  ('llamaf4 -> RPARENT','llamaf4',1,'p_llamaf4','analizadorSintactico.py',679),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',683),
]
