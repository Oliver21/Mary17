
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIGUALleftANDORleftLTGTLEGESAMEDIFleftSUMARESTAleftMULTDIVleftLBRACKETRBRACKETleftLPARENTRPARENTleftLKEYRKEYINT FLOAT IF ELSE VAR PRINT PROGRAM DO WHILE CHAR STRING BEGIN END FOR FUNCTION BOOL READ POW SQRT CUADRADO TRIANGULO RECTANGULO CASA TRAPECIO ESTRELLA CIRCULO LEVANTA APOYA CUBO MUEVE DIMENSION VOID TRUE FALSE ID MULT DIV SUMA RESTA LPARENT RPARENT COMA PUNTOCOMA DOSPUNTOS PUNTO LBRACKET RBRACKET LKEY RKEY IGUAL LT GT LE GE DIF SAME COMSIMPLE COMDOBLE ENTERO FLOTANTE CARACTER CADENA NOESNADA COMENTARIO BOLEANO RAIZ POTENCIA AND ORprogram : PROGRAM  cuadrupro ID initTop DOSPUNTOS p2initTop : emptyp2 : p3\n\t| p4\n\t| p5p3 : declaracion p3\n\t|  p4p4 : function p4\n\t| p5p5 : cuadrupro2 bloquecuadrupro : emptycuadrupro2 : emptybloque : LKEY  iniEnv b3 b4 b5iniEnv : emptyb3 : declaracion b3\n\t| emptyb4 : estatuto b4\n\t| emptyb5 : RKEYexpresion : expresion2 expreexpre : expre2\n\t| emptyexpre2 : AND tagmetelog expresion tagsacalog\n\t| OR tagmetelog expresion tagsacalogtagmetelog : emptytagsacalog : emptyexpresion2 : exp e2 e2 : e3 \n\t| emptye3 : GT tagrel exp tagsacrel\n\t| LT tagrel exp tagsacrel\n\t| LE tagrel exp tagsacrel\n\t| GE tagrel exp tagsacrel\n\t| DIF tagrel exp tagsacrel\n\t| SAME tagrel exp tagsacreltagrel : emptytagsacrel : emptyexp : termino tagsacops exp2exp2 : SUMA  tagop exp \n\t| RESTA tagop exp\n\t| emptytagop : emptytagsacops : emptydeclaracion : tipo ID savevar decla1savevar : emptydecla1 : declafinal\n\t| LBRACKET exp decla2decla2 : RBRACKET declafinal\n\t| COMA exp decla2declafinal : PUNTOCOMAtipo : INT\n\t| FLOAT\n\t| CHAR\n\t| STRING\n\t| BOOLasignacion : ID meteid asig2meteid :  emptyasig2 : LBRACKET exp asig3\n\t| asigfinalasig3 : COMA exp asig3\n\t| RBRACKET asigfinalasigfinal : IGUAL tagmeteig asigf2asigf2 : expresion tagig PUNTOCOMA\n\t| read tagigtagmeteig : emptytagig : emptyprint : PRINT LPARENT pr2pr2 : expresion pr3pr3 : tagimprime RPARENT PUNTOCOMAtagimprime : emptytermino : factor tagsacopm te2te2 : MULT tagm termino \n\t| DIV tagm termino\n\t| emptytagm : emptytagsacopm : emptyfactor : LPARENT tagfondofalso expresion RPARENT tagsacafondo\n\t| f2\n\t| f3\n\t| f6\n\t| f7f2 : varctef3 : IDtagfondofalso : emptytagsacafondo : emptyf7 : ID LBRACKET exp f8f8 : COMA exp f8\n\t| RBRACKETf6 : llamafuncionestatuto : asignacion\n\t| print\n\t| ciclowhile\n\t| ciclodowhile\n\t| ciclofor\n\t| read\n\t| comentario\n\t| cuadrado\n\t| triangulo\n\t| casa\n\t| rectangulo\n\t| cubo\n\t| trapecio\n\t| estrella\n\t| mueve\n\t| levanta\n\t| apoya\n\t| dimension\n\t| llamafuncion\n\t| ifcomentario : COMENTARIOvarcte : ENTERO tagint\n\t| FLOTANTE tagfloat\n\t| CADENA tagcad\n\t| CARACTER tagcar\n\t| TRUE tagbol\n\t| FALSE tagboltagint : emptytagfloat : emptytagcad : emptytagcar : emptytagbol : emptyciclowhile : WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhiletaginiciawhile : emptytagwhile : emptytagregresawhile : emptyciclodowhile : DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMAtaginiciado : emptytagcondiciondo : emptyread : READ LPARENT RPARENT PUNTOCOMAciclofor : FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafortagevaluafor : emptytagterminafor : emptytagasigna : emptyif : IF LPARENT expresion tagif RPARENT bloque if2if2 : tagterminaif\n\t| ELSE tagelse bloque tagterminaiftagif : emptytagelse : emptytagterminaif : emptycuadrado : CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMAtagcuadro : emptytriangulo : TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMAtagtriangulo : emptyrectangulo : RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMAcasa : CASA LPARENT exp COMA exp RPARENT PUNTOCOMAestrella : ESTRELLA LPARENT exp RPARENT PUNTOCOMAcubo : CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMAtagcubo : emptymueve : MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMAtagmueve : emptylevanta : LEVANTA LPARENT RPARENT PUNTOCOMAapoya : APOYA LPARENT RPARENT PUNTOCOMAtrapecio : TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMAdimension : DIMENSION LPARENT exp RPARENT PUNTOCOMAfunction : tipo ID buildFunc LPARENT funct11\n\t| VOID ID buildFunc LPARENT funct11buildFunc : emptyfunct11 : function4funct11 : initParamTable funct2initParamTable : emptyfunct2 : tipo ID initParams funct3initParams : emptyfunct3 : COMA funct2funct3 : function4function4 : RPARENT initFunc bloque noinitFuncinitFunc : emptynoinitFunc : emptyllamafuncion : ID LPARENT tagverificafuncion llamaf11llamaf11 : llamaf2\n\t| llamaf4llamaf2 : exp tagrevisaparam llamaf3llamaf3 : COMA tagotroargumento llamaf2\n\t| llamaf4llamaf4 : RPARENT  tagterminallamada PUNTOCOMAtagverificafuncion : emptytagrevisaparam : emptytagotroargumento : emptytagterminallamada : emptyempty :'
    
_lr_action_items = {'DO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,52,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,52,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'READ':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,190,209,211,220,237,239,240,242,244,245,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,53,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,53,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-179,-48,-129,-68,-151,-169,-170,-168,-65,53,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'VOID':([8,13,23,48,49,50,95,96,100,123,124,147,164,196,209,252,253,266,302,303,342,],[10,10,10,-50,-44,-46,-158,-156,-155,-19,-13,-159,-47,-179,-48,-165,-167,-49,-164,-161,-163,]),'MUEVE':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,54,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,54,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'IGUAL':([85,137,138,183,294,],[-179,190,-57,-179,190,]),'CHAR':([8,13,23,24,33,34,44,45,46,48,49,50,95,96,98,99,100,123,124,147,164,196,209,252,253,266,302,303,304,342,],[17,17,17,-179,17,-14,17,-179,-179,-50,-44,-46,-158,-156,17,-160,-155,-19,-13,-159,-47,-179,-48,-165,-167,-49,-164,-161,17,-163,]),'WHILE':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,169,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,56,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,56,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,210,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'PROGRAM':([0,],[2,]),'PRINT':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,59,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,59,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'TRAPECIO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,58,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,58,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'DIV':([101,102,103,104,106,108,109,110,111,112,113,114,115,117,150,151,154,155,156,157,158,159,160,161,163,167,168,239,240,242,259,263,265,307,308,331,332,333,343,381,],[-78,-79,-80,-81,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,-115,-121,-113,-119,203,-76,-111,-117,-114,-120,-116,-118,-112,-169,-170,-168,-179,-86,-88,-77,-85,-174,-173,-171,-87,-172,]),'TRUE':([47,107,122,127,128,129,130,132,133,136,139,140,141,142,152,153,162,165,172,182,185,186,187,188,189,190,200,201,203,206,211,212,214,215,218,223,224,225,226,227,228,232,233,234,235,244,245,250,256,257,258,260,261,262,264,267,271,272,273,275,276,277,278,279,280,281,292,293,295,296,328,329,334,336,337,338,341,365,366,367,368,],[106,-179,106,106,106,106,106,106,106,-179,106,106,106,106,106,-84,106,106,106,106,-175,106,-59,106,-56,-179,-179,-179,-179,-179,-129,106,106,-179,-179,-179,-179,-179,-179,-179,-179,106,106,106,106,-65,106,106,106,-42,106,106,-75,106,106,106,106,-25,106,106,-36,106,106,106,106,106,-58,106,-62,-179,106,106,-179,-61,-64,-66,106,106,-177,-60,-63,]),'COMENTARIO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,77,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,77,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'MULT':([101,102,103,104,106,108,109,110,111,112,113,114,115,117,150,151,154,155,156,157,158,159,160,161,163,167,168,239,240,242,259,263,265,307,308,331,332,333,343,381,],[-78,-79,-80,-81,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,-115,-121,-113,-119,206,-76,-111,-117,-114,-120,-116,-118,-112,-169,-170,-168,-179,-86,-88,-77,-85,-174,-173,-171,-87,-172,]),'LKEY':([8,9,12,13,23,48,49,50,52,95,96,97,100,119,120,123,124,144,145,147,164,196,209,252,253,266,269,299,302,303,314,315,342,364,371,382,383,],[-179,24,-12,-179,-179,-50,-44,-46,-179,-158,-156,-179,-155,-127,24,-19,-13,24,-166,-159,-47,-179,-48,-165,-167,-49,-179,24,-164,-161,24,-124,-163,24,-179,24,-138,]),'LPARENT':([26,27,35,36,37,39,40,47,53,54,56,58,59,65,66,73,76,78,79,85,86,87,88,91,92,107,114,122,125,126,127,128,129,130,132,133,136,139,140,141,142,152,153,162,165,172,182,185,186,187,188,189,190,200,201,203,206,210,211,212,214,215,218,223,224,225,226,227,228,232,233,234,235,244,245,250,256,257,258,260,261,262,264,267,271,272,273,275,276,277,278,279,280,281,292,293,295,296,328,329,334,336,337,338,341,365,366,367,368,],[-179,-179,45,-157,46,-157,-179,107,121,122,-179,127,128,129,130,132,133,134,135,136,139,140,141,142,143,-179,136,107,172,-123,107,107,107,107,107,107,-179,107,107,107,107,107,-84,107,107,107,107,-175,107,-59,107,-56,-179,-179,-179,-179,-179,267,-129,107,107,-179,-179,-179,-179,-179,-179,-179,-179,107,107,107,107,-65,107,107,107,-42,107,107,-75,107,107,107,107,-25,107,107,-36,107,107,107,107,107,-58,107,-62,-179,107,107,-179,-61,-64,-66,107,107,-177,-60,-63,]),'CASA':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,65,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,65,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'PUNTOCOMA':([27,38,39,51,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,118,148,149,150,151,154,155,156,157,158,159,160,161,163,166,167,168,170,174,177,184,195,198,199,204,205,216,217,219,229,230,231,238,239,240,242,246,249,259,263,265,274,288,289,297,305,306,307,308,309,310,313,316,317,318,320,321,322,323,324,325,326,327,331,332,333,338,339,343,346,347,350,351,352,353,354,355,356,357,358,359,374,378,379,381,384,386,387,388,389,393,394,],[-179,48,-45,-179,-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,-45,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,48,-118,-112,211,-179,-179,237,251,-38,-41,-74,-71,-20,-21,-22,-28,-29,-27,-179,-169,-170,-168,298,300,-179,-86,-88,319,331,-178,-179,-40,-39,-77,-85,-73,-72,-179,349,-179,-179,-179,-179,-179,-179,-179,-179,360,361,-174,-173,-171,-66,368,-87,375,-150,-23,-26,-24,-33,-37,-34,-32,-35,-31,-30,385,-179,-179,-172,-179,395,-148,-143,396,-141,400,]),'LT':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,177,198,199,204,205,239,240,242,259,263,265,305,306,307,308,309,310,331,332,333,343,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,227,-38,-41,-74,-71,-169,-170,-168,-179,-86,-88,-40,-39,-77,-85,-73,-72,-174,-173,-171,-87,-172,]),'RESTA':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,204,205,239,240,242,259,263,265,307,308,309,310,331,332,333,343,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,200,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,-74,-71,-169,-170,-168,-179,-86,-88,-77,-85,-73,-72,-174,-173,-171,-87,-172,]),'ID':([2,3,4,10,11,14,17,20,21,22,24,29,33,34,41,42,43,44,47,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,117,122,123,124,127,128,129,130,132,133,134,136,139,140,141,142,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,167,168,172,174,175,177,182,185,186,187,188,189,190,198,199,200,201,203,204,205,206,209,211,212,214,215,216,217,218,219,220,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,239,240,242,244,245,250,251,256,257,258,259,260,261,262,263,264,265,266,267,271,272,273,275,276,277,278,279,280,281,286,287,292,293,295,296,298,300,305,306,307,308,309,310,317,318,319,320,321,322,323,324,325,328,329,331,332,333,334,336,337,338,340,341,343,348,349,350,351,352,353,354,355,356,357,358,359,360,361,365,366,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,5,-11,26,27,-54,-53,-51,-52,-55,-179,40,-179,-14,51,-16,85,-179,114,-50,-44,-46,-106,-102,-96,-105,-109,-98,85,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-78,-79,-80,-81,-179,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,114,-19,-13,114,114,114,114,114,114,183,-179,114,114,114,114,197,-179,-43,-115,-121,114,-84,-113,-119,-179,-76,-111,-117,-114,-120,114,-116,-47,114,-118,-112,114,-179,-67,-179,114,-175,114,-59,114,-56,-179,-38,-41,-179,-179,-179,-74,-71,-179,-48,-129,114,114,-179,-20,-21,-179,-22,-68,-179,-179,-179,-179,-179,-179,-28,-29,-27,114,114,114,114,-179,-151,-169,-170,-168,-65,114,114,-152,114,-42,114,-179,114,-75,114,-86,114,-88,-49,114,114,-25,114,114,-36,114,114,114,114,114,183,-131,-58,114,-62,-179,-154,-146,-40,-39,-77,-85,-73,-72,-179,-179,-69,-179,-179,-179,-179,-179,-179,114,114,-174,-173,-171,-179,-61,-64,-66,-179,114,-87,-179,-153,-23,-26,-24,-33,-37,-34,-32,-35,-31,-30,-145,-144,114,-177,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'CADENA':([47,107,122,127,128,129,130,132,133,136,139,140,141,142,152,153,162,165,172,182,185,186,187,188,189,190,200,201,203,206,211,212,214,215,218,223,224,225,226,227,228,232,233,234,235,244,245,250,256,257,258,260,261,262,264,267,271,272,273,275,276,277,278,279,280,281,292,293,295,296,328,329,334,336,337,338,341,365,366,367,368,],[110,-179,110,110,110,110,110,110,110,-179,110,110,110,110,110,-84,110,110,110,110,-175,110,-59,110,-56,-179,-179,-179,-179,-179,-129,110,110,-179,-179,-179,-179,-179,-179,-179,-179,110,110,110,110,-65,110,110,110,-42,110,110,-75,110,110,110,110,-25,110,110,-36,110,110,110,110,110,-58,110,-62,-179,110,110,-179,-61,-64,-66,110,110,-177,-60,-63,]),'DOSPUNTOS':([5,6,7,],[-179,8,-2,]),'APOYA':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,92,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,92,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'DIF':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,177,198,199,204,205,239,240,242,259,263,265,305,306,307,308,309,310,331,332,333,343,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,224,-38,-41,-74,-71,-169,-170,-168,-179,-86,-88,-40,-39,-77,-85,-73,-72,-174,-173,-171,-87,-172,]),'LEVANTA':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,79,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,79,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'$end':([1,15,16,18,19,25,28,30,31,32,123,124,],[0,-1,-3,-4,-5,-10,-8,-9,-6,-7,-19,-13,]),'TRIANGULO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,76,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,76,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'AND':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,174,177,198,199,204,205,229,230,231,239,240,242,259,263,265,305,306,307,308,309,310,320,321,322,323,324,325,331,332,333,343,353,354,355,356,357,358,359,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,215,-179,-38,-41,-74,-71,-28,-29,-27,-169,-170,-168,-179,-86,-88,-40,-39,-77,-85,-73,-72,-179,-179,-179,-179,-179,-179,-174,-173,-171,-87,-33,-37,-34,-32,-35,-31,-30,-172,]),'GT':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,177,198,199,204,205,239,240,242,259,263,265,305,306,307,308,309,310,331,332,333,343,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,228,-38,-41,-74,-71,-169,-170,-168,-179,-86,-88,-40,-39,-77,-85,-73,-72,-174,-173,-171,-87,-172,]),'STRING':([8,13,23,24,33,34,44,45,46,48,49,50,95,96,98,99,100,123,124,147,164,196,209,252,253,266,302,303,304,342,],[14,14,14,-179,14,-14,14,-179,-179,-50,-44,-46,-158,-156,14,-160,-155,-19,-13,-159,-47,-179,-48,-165,-167,-49,-164,-161,14,-163,]),'FOR':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,78,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,78,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'CUBO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,73,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,73,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'RKEY':([24,33,34,42,43,44,48,49,50,55,57,60,61,62,63,64,67,68,69,70,71,72,74,75,77,80,81,82,83,84,89,90,93,94,123,124,131,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,-179,-179,-50,-44,-46,123,-106,-102,-96,-105,-109,-98,-179,-104,-92,-108,-97,-100,-91,-18,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-17,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'ELSE':([123,124,340,],[-19,-13,371,]),'ESTRELLA':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,88,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,88,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'GE':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,177,198,199,204,205,239,240,242,259,263,265,305,306,307,308,309,310,331,332,333,343,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,223,-38,-41,-74,-71,-169,-170,-168,-179,-86,-88,-40,-39,-77,-85,-73,-72,-174,-173,-171,-87,-172,]),'LE':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,177,198,199,204,205,239,240,242,259,263,265,305,306,307,308,309,310,331,332,333,343,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,225,-38,-41,-74,-71,-169,-170,-168,-179,-86,-88,-40,-39,-77,-85,-73,-72,-174,-173,-171,-87,-172,]),'CARACTER':([47,107,122,127,128,129,130,132,133,136,139,140,141,142,152,153,162,165,172,182,185,186,187,188,189,190,200,201,203,206,211,212,214,215,218,223,224,225,226,227,228,232,233,234,235,244,245,250,256,257,258,260,261,262,264,267,271,272,273,275,276,277,278,279,280,281,292,293,295,296,328,329,334,336,337,338,341,365,366,367,368,],[113,-179,113,113,113,113,113,113,113,-179,113,113,113,113,113,-84,113,113,113,113,-175,113,-59,113,-56,-179,-179,-179,-179,-179,-129,113,113,-179,-179,-179,-179,-179,-179,-179,-179,113,113,113,113,-65,113,113,113,-42,113,113,-75,113,113,113,113,-25,113,113,-36,113,113,113,113,113,-58,113,-62,-179,113,113,-179,-61,-64,-66,113,113,-177,-60,-63,]),'COMA':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,171,173,178,179,180,181,194,197,198,199,204,205,207,208,239,240,241,242,243,254,255,259,263,265,284,285,290,291,301,305,306,307,308,309,310,311,331,332,333,335,343,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,165,-179,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,212,214,232,233,234,235,250,-179,-38,-41,-74,-71,264,165,-169,-170,-179,-168,293,-162,304,-179,-86,-88,328,329,334,-176,341,-40,-39,-77,-85,-73,-72,264,-174,-173,-171,293,-87,-172,]),'DIMENSION':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,86,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,86,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'IF':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,87,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,87,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'RPARENT':([45,46,101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,121,135,136,143,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,174,176,177,185,186,187,189,191,192,193,197,198,199,202,204,205,211,213,216,217,219,221,222,229,230,231,239,240,241,242,247,248,254,255,259,263,265,268,270,282,283,290,291,292,295,296,305,306,307,308,309,310,312,317,318,320,321,322,323,324,325,330,331,332,333,336,337,338,343,344,345,350,351,352,353,354,355,356,357,358,359,362,363,367,368,373,381,],[97,97,-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,170,184,-179,195,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,-179,-179,-179,-175,238,-59,-56,246,-179,249,-179,-38,-41,259,-74,-71,-129,269,-20,-21,-22,274,-70,-28,-29,-27,-169,-170,-179,-168,299,-137,-162,97,-179,-86,-88,313,316,326,327,238,-176,-58,-62,-179,-40,-39,-77,-85,-73,-72,-179,-179,-179,-179,-179,-179,-179,-179,-179,364,-174,-173,-171,-61,-64,-66,-87,374,-128,-23,-26,-24,-33,-37,-34,-32,-35,-31,-30,378,379,-60,-63,384,-172,]),'LBRACKET':([27,38,39,51,85,114,118,137,138,183,],[-179,47,-45,-179,-179,162,-45,188,-57,-179,]),'FALSE':([47,107,122,127,128,129,130,132,133,136,139,140,141,142,152,153,162,165,172,182,185,186,187,188,189,190,200,201,203,206,211,212,214,215,218,223,224,225,226,227,228,232,233,234,235,244,245,250,256,257,258,260,261,262,264,267,271,272,273,275,276,277,278,279,280,281,292,293,295,296,328,329,334,336,337,338,341,365,366,367,368,],[115,-179,115,115,115,115,115,115,115,-179,115,115,115,115,115,-84,115,115,115,115,-175,115,-59,115,-56,-179,-179,-179,-179,-179,-129,115,115,-179,-179,-179,-179,-179,-179,-179,-179,115,115,115,115,-65,115,115,115,-42,115,115,-75,115,115,115,115,-25,115,115,-36,115,115,115,115,115,-58,115,-62,-179,115,115,-179,-61,-64,-66,115,115,-177,-60,-63,]),'INT':([8,13,23,24,33,34,44,45,46,48,49,50,95,96,98,99,100,123,124,147,164,196,209,252,253,266,302,303,304,342,],[20,20,20,-179,20,-14,20,-179,-179,-50,-44,-46,-158,-156,20,-160,-155,-19,-13,-159,-47,-179,-48,-165,-167,-49,-164,-161,20,-163,]),'FLOAT':([8,13,23,24,33,34,44,45,46,48,49,50,95,96,98,99,100,123,124,147,164,196,209,252,253,266,302,303,304,342,],[21,21,21,-179,21,-14,21,-179,-179,-50,-44,-46,-158,-156,21,-160,-155,-19,-13,-159,-47,-179,-48,-165,-167,-49,-164,-161,21,-163,]),'SAME':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,177,198,199,204,205,239,240,242,259,263,265,305,306,307,308,309,310,331,332,333,343,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,226,-38,-41,-74,-71,-169,-170,-168,-179,-86,-88,-40,-39,-77,-85,-73,-72,-174,-173,-171,-87,-172,]),'CUADRADO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,91,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,91,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'BOOL':([8,13,23,24,33,34,44,45,46,48,49,50,95,96,98,99,100,123,124,147,164,196,209,252,253,266,302,303,304,342,],[22,22,22,-179,22,-14,22,-179,-179,-50,-44,-46,-158,-156,22,-160,-155,-19,-13,-159,-47,-179,-48,-165,-167,-49,-164,-161,22,-163,]),'SUMA':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,204,205,239,240,242,259,263,265,307,308,309,310,331,332,333,343,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,201,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,-74,-71,-169,-170,-168,-179,-86,-88,-77,-85,-73,-72,-174,-173,-171,-87,-172,]),'RECTANGULO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,123,124,164,175,187,189,209,211,220,237,239,240,242,251,266,292,295,296,298,300,319,331,332,333,336,337,338,340,348,349,360,361,367,368,369,370,372,375,376,377,380,381,385,390,391,392,395,396,397,398,399,400,],[-179,-179,-14,-16,66,-179,-50,-44,-46,-106,-102,-96,-105,-109,-98,66,-104,-92,-108,-97,-100,-91,-110,-95,-101,-94,-103,-93,-99,-90,-107,-15,-19,-13,-47,-67,-59,-56,-48,-129,-68,-151,-169,-170,-168,-152,-49,-58,-62,-179,-154,-146,-69,-174,-173,-171,-61,-64,-66,-179,-179,-153,-145,-144,-60,-63,-134,-135,-139,-149,-122,-125,-179,-172,-126,-179,-133,-179,-147,-142,-130,-132,-136,-140,]),'FLOTANTE':([47,107,122,127,128,129,130,132,133,136,139,140,141,142,152,153,162,165,172,182,185,186,187,188,189,190,200,201,203,206,211,212,214,215,218,223,224,225,226,227,228,232,233,234,235,244,245,250,256,257,258,260,261,262,264,267,271,272,273,275,276,277,278,279,280,281,292,293,295,296,328,329,334,336,337,338,341,365,366,367,368,],[117,-179,117,117,117,117,117,117,117,-179,117,117,117,117,117,-84,117,117,117,117,-175,117,-59,117,-56,-179,-179,-179,-179,-179,-129,117,117,-179,-179,-179,-179,-179,-179,-179,-179,117,117,117,117,-65,117,117,117,-42,117,117,-75,117,117,117,117,-25,117,117,-36,117,117,117,117,117,-58,117,-62,-179,117,117,-179,-61,-64,-66,117,117,-177,-60,-63,]),'RBRACKET':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,116,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,198,199,204,205,207,208,239,240,242,243,259,263,265,305,306,307,308,309,310,311,331,332,333,335,343,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,166,-179,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,-38,-41,-74,-71,265,166,-169,-170,-168,294,-179,-86,-88,-40,-39,-77,-85,-73,-72,265,-174,-173,-171,294,-87,-172,]),'ENTERO':([47,107,122,127,128,129,130,132,133,136,139,140,141,142,152,153,162,165,172,182,185,186,187,188,189,190,200,201,203,206,211,212,214,215,218,223,224,225,226,227,228,232,233,234,235,244,245,250,256,257,258,260,261,262,264,267,271,272,273,275,276,277,278,279,280,281,292,293,295,296,328,329,334,336,337,338,341,365,366,367,368,],[112,-179,112,112,112,112,112,112,112,-179,112,112,112,112,112,-84,112,112,112,112,-175,112,-59,112,-56,-179,-179,-179,-179,-179,-129,112,112,-179,-179,-179,-179,-179,-179,-179,-179,112,112,112,112,-65,112,112,112,-42,112,112,-75,112,112,112,112,-25,112,112,-36,112,112,112,112,112,-58,112,-62,-179,112,112,-179,-61,-64,-66,112,112,-177,-60,-63,]),'OR':([101,102,103,104,105,106,108,109,110,111,112,113,114,115,117,148,149,150,151,154,155,156,157,158,159,160,161,163,167,168,174,177,198,199,204,205,229,230,231,239,240,242,259,263,265,305,306,307,308,309,310,320,321,322,323,324,325,331,332,333,343,353,354,355,356,357,358,359,381,],[-78,-79,-80,-81,-179,-179,-82,-89,-179,-179,-179,-179,-83,-179,-179,-179,-43,-115,-121,-113,-119,-179,-76,-111,-117,-114,-120,-116,-118,-112,218,-179,-38,-41,-74,-71,-28,-29,-27,-169,-170,-168,-179,-86,-88,-40,-39,-77,-85,-73,-72,-179,-179,-179,-179,-179,-179,-174,-173,-171,-87,-33,-37,-34,-32,-35,-31,-30,-172,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuadrado':([43,67,],[71,71,]),'tagasigna':([380,],[390,]),'tagsacrel':([320,321,322,323,324,325,],[353,355,356,357,358,359,]),'tagfondofalso':([107,],[152,]),'expre2':([174,],[217,]),'bloque':([9,120,144,299,314,364,382,],[25,169,196,340,348,380,392,]),'taginiciawhile':([56,],[125,]),'comentario':([43,67,],[61,61,]),'if2':([340,],[369,]),'tagop':([200,201,],[256,258,]),'tagrevisaparam':([241,],[290,]),'program':([0,],[1,]),'rectangulo':([43,67,],[72,72,]),'factor':([47,122,127,128,129,130,132,133,139,140,141,142,152,162,165,172,182,186,188,212,214,232,233,234,235,245,250,256,258,260,262,264,267,271,273,275,277,278,279,280,281,293,328,329,341,365,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'p3':([8,23,],[16,31,]),'read':([43,67,245,],[80,80,296,]),'cubo':([43,67,],[81,81,]),'buildFunc':([26,27,40,],[35,37,37,]),'estrella':([43,67,],[83,83,]),'meteid':([85,183,],[137,137,]),'expresion':([128,140,152,172,182,245,267,271,273,],[176,192,202,213,236,297,312,317,318,]),'tagbol':([106,115,],[150,163,]),'p4':([8,13,23,],[18,28,32,]),'tagcad':([110,],[154,]),'tagevaluafor':([236,],[286,]),'tagtriangulo':([379,],[389,]),'tagimprime':([176,],[221,]),'tagcar':([113,],[160,]),'taginiciado':([52,],[120,]),'tagwhile':([269,],[314,]),'b4':([43,67,],[55,131,]),'b5':([55,],[124,]),'asigf2':([245,],[295,]),'apoya':([43,67,],[57,57,]),'b3':([33,44,],[43,94,]),'tagterminafor':([390,],[397,]),'tagsacops':([105,],[148,]),'varcte':([47,122,127,128,129,130,132,133,139,140,141,142,152,162,165,172,182,186,188,212,214,232,233,234,235,245,250,256,258,260,262,264,267,271,273,275,277,278,279,280,281,293,328,329,341,365,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'tipo':([8,13,23,33,44,98,304,],[11,29,11,41,41,146,146,]),'tagif':([192,],[247,]),'tagig':([296,297,],[337,339,]),'funct2':([98,304,],[147,342,]),'funct3':([255,],[303,]),'declafinal':([38,166,],[50,209,]),'print':([43,67,],[74,74,]),'tagsacopm':([111,],[156,]),'tagcuadro':([384,],[394,]),'tagrel':([223,224,225,226,227,228,],[275,277,278,279,280,281,]),'initFunc':([97,],[144,]),'ciclofor':([43,67,],[82,82,]),'tagverificafuncion':([136,],[186,]),'tagm':([203,206,],[260,262,]),'te2':([156,],[205,]),'e3':([177,],[229,]),'e2':([177,],[231,]),'tagsacalog':([317,318,],[350,352,]),'initParams':([197,],[255,]),'declaracion':([8,23,33,44,],[23,23,44,44,]),'tagmueve':([313,],[346,]),'cuadrupro2':([8,13,23,],[9,9,9,]),'tagterminallamada':([238,],[288,]),'termino':([47,122,127,128,129,130,132,133,139,140,141,142,152,162,165,172,182,186,188,212,214,232,233,234,235,245,250,256,258,260,262,264,267,271,273,275,277,278,279,280,281,293,328,329,341,365,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,309,310,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'tagfloat':([117,],[168,]),'ciclowhile':([43,67,],[69,69,]),'levanta':([43,67,],[62,62,]),'triangulo':([43,67,],[64,64,]),'exp2':([148,],[198,]),'estatuto':([43,67,],[67,67,]),'tagcondiciondo':([312,],[344,]),'asig3':([243,335,],[292,367,]),'asig2':([137,],[189,]),'tagelse':([371,],[382,]),'empty':([2,5,8,13,23,24,26,27,33,40,43,44,45,46,51,52,56,67,85,97,105,106,107,110,111,112,113,115,117,136,148,156,174,176,177,183,190,192,196,197,200,201,203,206,215,218,223,224,225,226,227,228,236,238,241,259,269,296,297,312,313,317,318,320,321,322,323,324,325,334,340,348,371,378,379,380,384,390,392,],[4,7,12,12,12,34,36,39,42,36,75,42,99,99,118,119,126,75,138,145,149,151,153,155,157,159,161,151,167,185,199,204,219,222,230,138,244,248,253,254,257,257,261,261,272,272,276,276,276,276,276,276,287,289,291,308,315,338,338,345,347,351,351,354,354,354,354,354,354,366,372,377,383,387,388,391,393,398,372,]),'function':([8,13,23,],[13,13,13,]),'expresion2':([128,140,152,172,182,245,267,271,273,],[174,174,174,174,174,174,174,174,174,]),'tagterminaif':([340,392,],[370,399,]),'cuadrupro':([2,],[3,]),'tagint':([112,],[158,]),'p2':([8,],[15,]),'initTop':([5,],[6,]),'casa':([43,67,],[89,89,]),'asignacion':([43,67,134,286,],[90,90,182,330,]),'p5':([8,13,23,],[19,30,30,]),'llamaf2':([186,365,],[239,381,]),'llamaf3':([290,],[333,]),'llamaf4':([186,290,],[240,332,]),'tagcubo':([378,],[386,]),'noinitFunc':([196,],[252,]),'llamaf11':([186,],[242,]),'iniEnv':([24,],[33,]),'f2':([47,122,127,128,129,130,132,133,139,140,141,142,152,162,165,172,182,186,188,212,214,232,233,234,235,245,250,256,258,260,262,264,267,271,273,275,277,278,279,280,281,293,328,329,341,365,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'f3':([47,122,127,128,129,130,132,133,139,140,141,142,152,162,165,172,182,186,188,212,214,232,233,234,235,245,250,256,258,260,262,264,267,271,273,275,277,278,279,280,281,293,328,329,341,365,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'f6':([47,122,127,128,129,130,132,133,139,140,141,142,152,162,165,172,182,186,188,212,214,232,233,234,235,245,250,256,258,260,262,264,267,271,273,275,277,278,279,280,281,293,328,329,341,365,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'f7':([47,122,127,128,129,130,132,133,139,140,141,142,152,162,165,172,182,186,188,212,214,232,233,234,235,245,250,256,258,260,262,264,267,271,273,275,277,278,279,280,281,293,328,329,341,365,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'f8':([207,311,],[263,343,]),'trapecio':([43,67,],[60,60,]),'tagsacafondo':([259,],[307,]),'if':([43,67,],[63,63,]),'mueve':([43,67,],[68,68,]),'decla1':([38,],[49,]),'llamafuncion':([43,47,67,122,127,128,129,130,132,133,139,140,141,142,152,162,165,172,182,186,188,212,214,232,233,234,235,245,250,256,258,260,262,264,267,271,273,275,277,278,279,280,281,293,328,329,341,365,],[70,109,70,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'decla2':([116,208,],[164,266,]),'initParamTable':([45,46,],[98,98,]),'tagotroargumento':([334,],[365,]),'tagmeteig':([190,],[245,]),'funct11':([45,46,],[96,100,]),'pr3':([176,],[220,]),'pr2':([128,],[175,]),'ciclodowhile':([43,67,],[84,84,]),'asigfinal':([137,294,],[187,336,]),'function4':([45,46,255,],[95,95,302,]),'expre':([174,],[216,]),'tagmetelog':([215,218,],[271,273,]),'savevar':([27,51,],[38,38,]),'exp':([47,122,127,128,129,130,132,133,139,140,141,142,152,162,165,172,182,186,188,212,214,232,233,234,235,245,250,256,258,264,267,271,273,275,277,278,279,280,281,293,328,329,341,365,],[116,171,173,177,178,179,180,181,191,177,193,194,177,207,208,177,177,241,243,268,270,282,283,284,285,177,301,305,306,311,177,177,177,320,321,322,323,324,325,335,362,363,373,241,]),'tagregresawhile':([348,],[376,]),'dimension':([43,67,],[93,93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2','program',6,'p_program','analizadorSintactico.py',255),
  ('initTop -> empty','initTop',1,'p_initTop','analizadorSintactico.py',260),
  ('p2 -> p3','p2',1,'p_p2','analizadorSintactico.py',268),
  ('p2 -> p4','p2',1,'p_p2','analizadorSintactico.py',269),
  ('p2 -> p5','p2',1,'p_p2','analizadorSintactico.py',270),
  ('p3 -> declaracion p3','p3',2,'p_p3','analizadorSintactico.py',273),
  ('p3 -> p4','p3',1,'p_p3','analizadorSintactico.py',274),
  ('p4 -> function p4','p4',2,'p_p4','analizadorSintactico.py',277),
  ('p4 -> p5','p4',1,'p_p4','analizadorSintactico.py',278),
  ('p5 -> cuadrupro2 bloque','p5',2,'p_p5','analizadorSintactico.py',281),
  ('cuadrupro -> empty','cuadrupro',1,'p_cuadrupro','analizadorSintactico.py',284),
  ('cuadrupro2 -> empty','cuadrupro2',1,'p_cuadrupro2','analizadorSintactico.py',290),
  ('bloque -> LKEY iniEnv b3 b4 b5','bloque',5,'p_bloque','analizadorSintactico.py',295),
  ('iniEnv -> empty','iniEnv',1,'p_iniEnv','analizadorSintactico.py',299),
  ('b3 -> declaracion b3','b3',2,'p_b3','analizadorSintactico.py',309),
  ('b3 -> empty','b3',1,'p_b3','analizadorSintactico.py',310),
  ('b4 -> estatuto b4','b4',2,'p_b4','analizadorSintactico.py',313),
  ('b4 -> empty','b4',1,'p_b4','analizadorSintactico.py',314),
  ('b5 -> RKEY','b5',1,'p_b5','analizadorSintactico.py',317),
  ('expresion -> expresion2 expre','expresion',2,'p_expresion','analizadorSintactico.py',337),
  ('expre -> expre2','expre',1,'p_expre','analizadorSintactico.py',340),
  ('expre -> empty','expre',1,'p_expre','analizadorSintactico.py',341),
  ('expre2 -> AND tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',344),
  ('expre2 -> OR tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',345),
  ('tagmetelog -> empty','tagmetelog',1,'p_tagmetelog','analizadorSintactico.py',348),
  ('tagsacalog -> empty','tagsacalog',1,'p_tagsacalog','analizadorSintactico.py',352),
  ('expresion2 -> exp e2','expresion2',2,'p_expresion2','analizadorSintactico.py',384),
  ('e2 -> e3','e2',1,'p_e2','analizadorSintactico.py',389),
  ('e2 -> empty','e2',1,'p_e2','analizadorSintactico.py',390),
  ('e3 -> GT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',393),
  ('e3 -> LT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',394),
  ('e3 -> LE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',395),
  ('e3 -> GE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',396),
  ('e3 -> DIF tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',397),
  ('e3 -> SAME tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',398),
  ('tagrel -> empty','tagrel',1,'p_tagrel','analizadorSintactico.py',401),
  ('tagsacrel -> empty','tagsacrel',1,'p_tagsacrel','analizadorSintactico.py',406),
  ('exp -> termino tagsacops exp2','exp',3,'p_exp','analizadorSintactico.py',438),
  ('exp2 -> SUMA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',442),
  ('exp2 -> RESTA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',443),
  ('exp2 -> empty','exp2',1,'p_exp2','analizadorSintactico.py',444),
  ('tagop -> empty','tagop',1,'p_tagop','analizadorSintactico.py',447),
  ('tagsacops -> empty','tagsacops',1,'p_tagsacops','analizadorSintactico.py',452),
  ('declaracion -> tipo ID savevar decla1','declaracion',4,'p_declaracion','analizadorSintactico.py',494),
  ('savevar -> empty','savevar',1,'p_savevar','analizadorSintactico.py',498),
  ('decla1 -> declafinal','decla1',1,'p_decla1','analizadorSintactico.py',509),
  ('decla1 -> LBRACKET exp decla2','decla1',3,'p_decla1','analizadorSintactico.py',510),
  ('decla2 -> RBRACKET declafinal','decla2',2,'p_decla2','analizadorSintactico.py',513),
  ('decla2 -> COMA exp decla2','decla2',3,'p_decla2','analizadorSintactico.py',514),
  ('declafinal -> PUNTOCOMA','declafinal',1,'p_declafinal','analizadorSintactico.py',518),
  ('tipo -> INT','tipo',1,'p_tipo','analizadorSintactico.py',528),
  ('tipo -> FLOAT','tipo',1,'p_tipo','analizadorSintactico.py',529),
  ('tipo -> CHAR','tipo',1,'p_tipo','analizadorSintactico.py',530),
  ('tipo -> STRING','tipo',1,'p_tipo','analizadorSintactico.py',531),
  ('tipo -> BOOL','tipo',1,'p_tipo','analizadorSintactico.py',532),
  ('asignacion -> ID meteid asig2','asignacion',3,'p_asignacion','analizadorSintactico.py',542),
  ('meteid -> empty','meteid',1,'p_meteid','analizadorSintactico.py',550),
  ('asig2 -> LBRACKET exp asig3','asig2',3,'p_asig2','analizadorSintactico.py',557),
  ('asig2 -> asigfinal','asig2',1,'p_asig2','analizadorSintactico.py',558),
  ('asig3 -> COMA exp asig3','asig3',3,'p_asig3','analizadorSintactico.py',561),
  ('asig3 -> RBRACKET asigfinal','asig3',2,'p_asig3','analizadorSintactico.py',562),
  ('asigfinal -> IGUAL tagmeteig asigf2','asigfinal',3,'p_asigfinal','analizadorSintactico.py',566),
  ('asigf2 -> expresion tagig PUNTOCOMA','asigf2',3,'p_asigf2','analizadorSintactico.py',570),
  ('asigf2 -> read tagig','asigf2',2,'p_asigf2','analizadorSintactico.py',571),
  ('tagmeteig -> empty','tagmeteig',1,'p_tagmeteig','analizadorSintactico.py',574),
  ('tagig -> empty','tagig',1,'p_tagig','analizadorSintactico.py',579),
  ('print -> PRINT LPARENT pr2','print',3,'p_print','analizadorSintactico.py',606),
  ('pr2 -> expresion pr3','pr2',2,'p_pr2','analizadorSintactico.py',610),
  ('pr3 -> tagimprime RPARENT PUNTOCOMA','pr3',3,'p_pr3','analizadorSintactico.py',614),
  ('tagimprime -> empty','tagimprime',1,'p_tagimprime','analizadorSintactico.py',617),
  ('termino -> factor tagsacopm te2','termino',3,'p_termino','analizadorSintactico.py',623),
  ('te2 -> MULT tagm termino','te2',3,'p_te2','analizadorSintactico.py',627),
  ('te2 -> DIV tagm termino','te2',3,'p_te2','analizadorSintactico.py',628),
  ('te2 -> empty','te2',1,'p_te2','analizadorSintactico.py',629),
  ('tagm -> empty','tagm',1,'p_tagm','analizadorSintactico.py',634),
  ('tagsacopm -> empty','tagsacopm',1,'p_tagsacopm','analizadorSintactico.py',639),
  ('factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo','factor',5,'p_factor','analizadorSintactico.py',668),
  ('factor -> f2','factor',1,'p_factor','analizadorSintactico.py',669),
  ('factor -> f3','factor',1,'p_factor','analizadorSintactico.py',670),
  ('factor -> f6','factor',1,'p_factor','analizadorSintactico.py',671),
  ('factor -> f7','factor',1,'p_factor','analizadorSintactico.py',672),
  ('f2 -> varcte','f2',1,'p_f2','analizadorSintactico.py',681),
  ('f3 -> ID','f3',1,'p_f3','analizadorSintactico.py',687),
  ('tagfondofalso -> empty','tagfondofalso',1,'p_tagfondofalso','analizadorSintactico.py',694),
  ('tagsacafondo -> empty','tagsacafondo',1,'p_tagsacafondo','analizadorSintactico.py',698),
  ('f7 -> ID LBRACKET exp f8','f7',4,'p_f7','analizadorSintactico.py',719),
  ('f8 -> COMA exp f8','f8',3,'p_f8','analizadorSintactico.py',723),
  ('f8 -> RBRACKET','f8',1,'p_f8','analizadorSintactico.py',724),
  ('f6 -> llamafuncion','f6',1,'p_f6','analizadorSintactico.py',728),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','analizadorSintactico.py',734),
  ('estatuto -> print','estatuto',1,'p_estatuto','analizadorSintactico.py',735),
  ('estatuto -> ciclowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',736),
  ('estatuto -> ciclodowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',737),
  ('estatuto -> ciclofor','estatuto',1,'p_estatuto','analizadorSintactico.py',738),
  ('estatuto -> read','estatuto',1,'p_estatuto','analizadorSintactico.py',739),
  ('estatuto -> comentario','estatuto',1,'p_estatuto','analizadorSintactico.py',740),
  ('estatuto -> cuadrado','estatuto',1,'p_estatuto','analizadorSintactico.py',741),
  ('estatuto -> triangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',742),
  ('estatuto -> casa','estatuto',1,'p_estatuto','analizadorSintactico.py',743),
  ('estatuto -> rectangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',744),
  ('estatuto -> cubo','estatuto',1,'p_estatuto','analizadorSintactico.py',745),
  ('estatuto -> trapecio','estatuto',1,'p_estatuto','analizadorSintactico.py',746),
  ('estatuto -> estrella','estatuto',1,'p_estatuto','analizadorSintactico.py',747),
  ('estatuto -> mueve','estatuto',1,'p_estatuto','analizadorSintactico.py',748),
  ('estatuto -> levanta','estatuto',1,'p_estatuto','analizadorSintactico.py',749),
  ('estatuto -> apoya','estatuto',1,'p_estatuto','analizadorSintactico.py',750),
  ('estatuto -> dimension','estatuto',1,'p_estatuto','analizadorSintactico.py',751),
  ('estatuto -> llamafuncion','estatuto',1,'p_estatuto','analizadorSintactico.py',752),
  ('estatuto -> if','estatuto',1,'p_estatuto','analizadorSintactico.py',753),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','analizadorSintactico.py',761),
  ('varcte -> ENTERO tagint','varcte',2,'p_varcte','analizadorSintactico.py',767),
  ('varcte -> FLOTANTE tagfloat','varcte',2,'p_varcte','analizadorSintactico.py',768),
  ('varcte -> CADENA tagcad','varcte',2,'p_varcte','analizadorSintactico.py',769),
  ('varcte -> CARACTER tagcar','varcte',2,'p_varcte','analizadorSintactico.py',770),
  ('varcte -> TRUE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',771),
  ('varcte -> FALSE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',772),
  ('tagint -> empty','tagint',1,'p_tagint','analizadorSintactico.py',775),
  ('tagfloat -> empty','tagfloat',1,'p_tagfloat','analizadorSintactico.py',781),
  ('tagcad -> empty','tagcad',1,'p_tagcad','analizadorSintactico.py',787),
  ('tagcar -> empty','tagcar',1,'p_tagcar','analizadorSintactico.py',793),
  ('tagbol -> empty','tagbol',1,'p_tagbol','analizadorSintactico.py',799),
  ('ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile','ciclowhile',8,'p_ciclowhile','analizadorSintactico.py',807),
  ('taginiciawhile -> empty','taginiciawhile',1,'p_taginiciawhile','analizadorSintactico.py',811),
  ('tagwhile -> empty','tagwhile',1,'p_tagwhile','analizadorSintactico.py',815),
  ('tagregresawhile -> empty','tagregresawhile',1,'p_tagregresawhile','analizadorSintactico.py',827),
  ('ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA','ciclodowhile',9,'p_ciclodowhile','analizadorSintactico.py',836),
  ('taginiciado -> empty','taginiciado',1,'p_taginiciado','analizadorSintactico.py',841),
  ('tagcondiciondo -> empty','tagcondiciondo',1,'p_tagcondiciondo','analizadorSintactico.py',845),
  ('read -> READ LPARENT RPARENT PUNTOCOMA','read',4,'p_read','analizadorSintactico.py',859),
  ('ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor','ciclofor',10,'p_ciclofor','analizadorSintactico.py',867),
  ('tagevaluafor -> empty','tagevaluafor',1,'p_tagevaluafor','analizadorSintactico.py',871),
  ('tagterminafor -> empty','tagterminafor',1,'p_tagterminafor','analizadorSintactico.py',883),
  ('tagasigna -> empty','tagasigna',1,'p_tagasigna','analizadorSintactico.py',888),
  ('if -> IF LPARENT expresion tagif RPARENT bloque if2','if',7,'p_if','analizadorSintactico.py',895),
  ('if2 -> tagterminaif','if2',1,'p_if2','analizadorSintactico.py',899),
  ('if2 -> ELSE tagelse bloque tagterminaif','if2',4,'p_if2','analizadorSintactico.py',900),
  ('tagif -> empty','tagif',1,'p_tagif','analizadorSintactico.py',903),
  ('tagelse -> empty','tagelse',1,'p_tagelse','analizadorSintactico.py',914),
  ('tagterminaif -> empty','tagterminaif',1,'p_tagterminaif','analizadorSintactico.py',922),
  ('cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA','cuadrado',10,'p_cuadrado','analizadorSintactico.py',943),
  ('tagcuadro -> empty','tagcuadro',1,'p_tagcuadro','analizadorSintactico.py',947),
  ('triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA','triangulo',10,'p_triangulo','analizadorSintactico.py',953),
  ('tagtriangulo -> empty','tagtriangulo',1,'p_tagtriangulo','analizadorSintactico.py',957),
  ('rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA','rectangulo',7,'p_rectangulo','analizadorSintactico.py',962),
  ('casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA','casa',7,'p_casa','analizadorSintactico.py',966),
  ('estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA','estrella',5,'p_estrella','analizadorSintactico.py',970),
  ('cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA','cubo',10,'p_cubo','analizadorSintactico.py',974),
  ('tagcubo -> empty','tagcubo',1,'p_tagcubo','analizadorSintactico.py',978),
  ('mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA','mueve',8,'p_mueve','analizadorSintactico.py',983),
  ('tagmueve -> empty','tagmueve',1,'p_tagmueve','analizadorSintactico.py',987),
  ('levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA','levanta',4,'p_levanta','analizadorSintactico.py',992),
  ('apoya -> APOYA LPARENT RPARENT PUNTOCOMA','apoya',4,'p_apoya','analizadorSintactico.py',998),
  ('trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA','trapecio',7,'p_trapecio','analizadorSintactico.py',1004),
  ('dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA','dimension',5,'p_dimension','analizadorSintactico.py',1008),
  ('function -> tipo ID buildFunc LPARENT funct11','function',5,'p_function','analizadorSintactico.py',1013),
  ('function -> VOID ID buildFunc LPARENT funct11','function',5,'p_function','analizadorSintactico.py',1014),
  ('buildFunc -> empty','buildFunc',1,'p_buildFunc','analizadorSintactico.py',1018),
  ('funct11 -> function4','funct11',1,'p_funct11','analizadorSintactico.py',1027),
  ('funct11 -> initParamTable funct2','funct11',2,'p_funct111','analizadorSintactico.py',1030),
  ('initParamTable -> empty','initParamTable',1,'p_initParamTable','analizadorSintactico.py',1033),
  ('funct2 -> tipo ID initParams funct3','funct2',4,'p_funct2','analizadorSintactico.py',1042),
  ('initParams -> empty','initParams',1,'p_initParams','analizadorSintactico.py',1045),
  ('funct3 -> COMA funct2','funct3',2,'p_funtion3','analizadorSintactico.py',1057),
  ('funct3 -> function4','funct3',1,'p_function31','analizadorSintactico.py',1061),
  ('function4 -> RPARENT initFunc bloque noinitFunc','function4',4,'p_function4','analizadorSintactico.py',1065),
  ('initFunc -> empty','initFunc',1,'p_initFunc','analizadorSintactico.py',1068),
  ('noinitFunc -> empty','noinitFunc',1,'p_noinitFunc','analizadorSintactico.py',1074),
  ('llamafuncion -> ID LPARENT tagverificafuncion llamaf11','llamafuncion',4,'p_llamafuncion','analizadorSintactico.py',1084),
  ('llamaf11 -> llamaf2','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1087),
  ('llamaf11 -> llamaf4','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1088),
  ('llamaf2 -> exp tagrevisaparam llamaf3','llamaf2',3,'p_llamaf2','analizadorSintactico.py',1091),
  ('llamaf3 -> COMA tagotroargumento llamaf2','llamaf3',3,'p_llamaf3','analizadorSintactico.py',1094),
  ('llamaf3 -> llamaf4','llamaf3',1,'p_llamaf3','analizadorSintactico.py',1095),
  ('llamaf4 -> RPARENT tagterminallamada PUNTOCOMA','llamaf4',3,'p_llamaf4','analizadorSintactico.py',1098),
  ('tagverificafuncion -> empty','tagverificafuncion',1,'p_tagverificafuncion','analizadorSintactico.py',1101),
  ('tagrevisaparam -> empty','tagrevisaparam',1,'p_tagrevisaparam','analizadorSintactico.py',1117),
  ('tagotroargumento -> empty','tagotroargumento',1,'p_tagotroargumento','analizadorSintactico.py',1126),
  ('tagterminallamada -> empty','tagterminallamada',1,'p_tagterminallamada','analizadorSintactico.py',1131),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',1138),
]
