
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIGUALleftANDORleftLTGTLEGESAMEDIFleftSUMARESTAleftMULTDIVleftLBRACKETRBRACKETleftLPARENTRPARENTleftLKEYRKEYINT FLOAT IF ELSE VAR PRINT PROGRAM DO WHILE CHAR STRING BEGIN END FOR FUNCTION BOOL READ POW SQRT CUADRADO TRIANGULO RECTANGULO CASA TRAPECIO ESTRELLA CIRCULO LEVANTA APOYA CUBO MUEVE DIMENSION VOID TRUE FALSE ID MULT DIV SUMA RESTA LPARENT RPARENT COMA PUNTOCOMA DOSPUNTOS PUNTO LBRACKET RBRACKET LKEY RKEY IGUAL LT GT LE GE DIF SAME COMSIMPLE COMDOBLE ENTERO FLOTANTE CARACTER CADENA NOESNADA COMENTARIO BOLEANO RAIZ POTENCIA AND ORprogram : PROGRAM  cuadrupro ID initTop DOSPUNTOS p2initTop : emptyp2 : p3\n\t| initFunctions p4\n\t| p5p3 : declaracion p3\n\t| initFunctions p4initFunctions : emptyp4 : function p4\n\t| p5p5 : cuadrupro2 bloque delMemcuadrupro : emptycuadrupro2 : emptydelMem : emptybloque : iniEnv LKEY b3 b4 b5iniEnv : emptyb3 : declaracion b3\n\t| emptyb4 : estatuto b4\n\t| emptyb5 : recEnv RKEYrecEnv : emptyexpresion : expresion2 expreexpre : expre2\n\t| emptyexpre2 : AND tagmetelog expresion tagsacalog\n\t| OR tagmetelog expresion tagsacalogtagmetelog : emptytagsacalog : emptyexpresion2 : exp e2 e2 : e3 \n\t| emptye3 : GT tagrel exp tagsacrel\n\t| LT tagrel exp tagsacrel\n\t| LE tagrel exp tagsacrel\n\t| GE tagrel exp tagsacrel\n\t| DIF tagrel exp tagsacrel\n\t| SAME tagrel exp tagsacreltagrel : emptytagsacrel : emptyexp : termino tagsacops exp2exp2 : SUMA  tagop exp \n\t| RESTA tagop exp\n\t| emptytagop : emptytagsacops : emptydeclaracion : tipo ID savevar decla1savevar : emptydecla1 : declafinal\n\t| LBRACKET exp decla2decla2 : RBRACKET declafinal\n\t| COMA exp decla2declafinal : PUNTOCOMAtipo : INT\n\t| FLOAT\n\t| CHAR\n\t| STRING\n\t| BOOLasignacion : ID meteid asig2meteid :  emptyasig2 : LBRACKET exp asig3\n\t| asigfinalasig3 : COMA exp asig3\n\t| RBRACKET asigfinalasigfinal : IGUAL tagmeteig asigf2asigf2 : expresion tagig PUNTOCOMA\n\t| read tagigtagmeteig : emptytagig : emptyprint : PRINT LPARENT pr2pr2 : expresion pr3pr3 : tagimprime RPARENT PUNTOCOMAtagimprime : emptytermino : factor tagsacopm te2te2 : MULT tagm termino \n\t| DIV tagm termino\n\t| emptytagm : emptytagsacopm : emptyfactor : LPARENT tagfondofalso expresion RPARENT tagsacafondo\n\t| f2\n\t| f3\n\t| f6\n\t| f7f2 : varctef3 : IDtagfondofalso : emptytagsacafondo : emptyf7 : ID LBRACKET exp f8f8 : COMA exp f8\n\t| RBRACKETf6 : llamafuncionestatuto : asignacion\n\t| print\n\t| ciclowhile\n\t| ciclodowhile\n\t| ciclofor\n\t| read\n\t| comentario\n\t| cuadrado\n\t| triangulo\n\t| casa\n\t| rectangulo\n\t| cubo\n\t| trapecio\n\t| estrella\n\t| mueve\n\t| levanta\n\t| apoya\n\t| dimension\n\t| llamafuncion\n\t| ifcomentario : COMENTARIOvarcte : ENTERO tagint\n\t| FLOTANTE tagfloat\n\t| CADENA tagcad\n\t| CARACTER tagcar\n\t| TRUE tagbol\n\t| FALSE tagboltagint : emptytagfloat : emptytagcad : emptytagcar : emptytagbol : emptyciclowhile : WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhiletaginiciawhile : emptytagwhile : emptytagregresawhile : emptyciclodowhile : DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMAtaginiciado : emptytagcondiciondo : emptyread : READ LPARENT RPARENT PUNTOCOMAciclofor : FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafortagevaluafor : emptytagterminafor : emptytagasigna : emptyif : IF LPARENT expresion tagif RPARENT bloque if2if2 : tagterminaif\n\t| ELSE tagelse bloque tagterminaiftagif : emptytagelse : emptytagterminaif : emptycuadrado : CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMAtagcuadro : emptytriangulo : TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMAtagtriangulo : emptyrectangulo : RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMAcasa : CASA LPARENT exp COMA exp RPARENT PUNTOCOMAestrella : ESTRELLA LPARENT exp RPARENT PUNTOCOMAcubo : CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMAtagcubo : emptymueve : MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMAtagmueve : emptylevanta : LEVANTA LPARENT RPARENT PUNTOCOMAapoya : APOYA LPARENT RPARENT PUNTOCOMAtrapecio : TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMAdimension : DIMENSION LPARENT exp RPARENT PUNTOCOMAfunction : FUNCTION tipo ID buildFunc LPARENT funct11\n\t| VOID ID buildFunc LPARENT funct11buildFunc : emptyfunct11 : function4funct11 : initParamTable funct2initParamTable : emptyfunct2 : tipo ID initParams funct3initParams : emptyfunct3 : COMA funct2funct3 : function4function4 : RPARENT initFunc bloque noinitFuncinitFunc : emptynoinitFunc : emptyllamafuncion : ID LPARENT tagverificafuncion llamaf11llamaf11 : llamaf2\n\t| llamaf4llamaf2 : exp tagrevisaparam llamaf3llamaf3 : COMA tagotroargumento llamaf2\n\t| llamaf4llamaf4 : RPARENT  tagterminallamada PUNTOCOMAtagverificafuncion : emptytagrevisaparam : emptytagotroargumento : emptytagterminallamada : emptyempty :'
    
_lr_action_items = {'DO':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,54,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,54,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'READ':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,191,208,215,224,241,243,244,246,248,249,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,55,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,55,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-182,-51,-132,-71,-154,-172,-173,-171,-68,55,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'VOID':([8,11,20,21,26,33,34,48,49,50,120,158,164,165,172,208,209,213,266,267,311,312,346,347,379,],[-182,-8,30,-182,30,-8,30,-53,-47,-49,-15,-50,-161,-159,-21,-51,-158,-162,-52,-182,-168,-170,-167,-164,-166,]),'MUEVE':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,56,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,56,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'IGUAL':([87,135,136,184,296,],[-182,191,-60,-182,191,]),'LBRACKET':([25,38,39,87,110,135,136,184,],[-182,-48,47,-182,156,189,-60,-182,]),'WHILE':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,169,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,58,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,58,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,214,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'PROGRAM':([0,],[2,]),'RPARENT':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,115,118,133,134,141,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,163,175,177,178,186,187,188,190,192,193,194,197,198,201,203,204,215,217,220,221,223,225,226,233,234,235,243,244,245,246,251,252,259,263,265,268,270,272,284,285,292,293,294,297,298,304,305,306,307,308,309,313,314,315,320,321,323,324,325,326,327,328,333,334,335,336,339,340,341,345,349,350,355,356,357,358,359,360,361,362,363,364,367,368,372,373,378,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,166,170,185,-182,196,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,166,-182,-182,-182,-178,242,-62,-59,250,-182,253,-41,-44,259,-77,-74,-132,271,-23,-24,-25,276,-73,-31,-32,-30,-172,-173,-182,-171,301,-140,-182,-89,-91,-182,316,319,329,330,242,-179,-61,-65,-182,-43,-42,-80,-88,-76,-75,-165,166,-182,-182,-182,-182,-182,-182,-182,-182,-182,369,-177,-176,-174,-64,-67,-69,-90,380,-131,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,384,385,-63,-66,390,-175,]),'PRINT':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,61,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,61,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'TRAPECIO':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,60,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,60,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'DIV':([97,98,99,100,102,104,105,106,107,108,109,110,111,113,144,145,148,149,150,151,152,153,154,155,157,161,162,243,244,246,259,263,265,306,307,334,335,336,345,387,],[-81,-82,-83,-84,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,-118,-124,-116,-122,202,-79,-114,-120,-117,-123,-119,-121,-115,-172,-173,-171,-182,-89,-91,-80,-88,-177,-176,-174,-90,-175,]),'TRUE':([47,103,119,125,126,127,128,130,131,134,137,138,139,140,146,147,156,159,173,183,186,187,188,189,190,191,199,200,202,205,215,216,218,219,222,227,228,229,230,231,232,236,237,238,239,248,249,254,256,257,258,260,261,262,264,269,273,274,275,277,278,279,280,281,282,283,294,295,297,298,331,332,337,339,340,341,344,370,371,372,373,],[102,-182,102,102,102,102,102,102,102,-182,102,102,102,102,102,-87,102,102,102,102,-178,102,-62,102,-59,-182,-182,-182,-182,-182,-132,102,102,-182,-182,-182,-182,-182,-182,-182,-182,102,102,102,102,-68,102,102,102,-45,102,102,-78,102,102,102,102,-28,102,102,-39,102,102,102,102,102,-61,102,-65,-182,102,102,-182,-64,-67,-69,102,102,-180,-63,-66,]),'COMENTARIO':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,79,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,79,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'MULT':([97,98,99,100,102,104,105,106,107,108,109,110,111,113,144,145,148,149,150,151,152,153,154,155,157,161,162,243,244,246,259,263,265,306,307,334,335,336,345,387,],[-81,-82,-83,-84,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,-118,-124,-116,-122,205,-79,-114,-120,-117,-123,-119,-121,-115,-172,-173,-171,-182,-89,-91,-80,-88,-177,-176,-174,-90,-175,]),'STRING':([8,21,27,35,46,48,49,50,115,158,163,167,168,208,266,348,],[12,12,12,12,12,-53,-47,-49,-182,-50,-182,12,-163,-51,-52,12,]),'TRIANGULO':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,78,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,78,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'LPARENT':([42,47,51,52,53,55,56,58,60,61,67,68,75,78,80,81,87,88,89,90,93,94,103,110,114,119,123,124,125,126,127,128,130,131,134,137,138,139,140,146,147,156,159,173,183,186,187,188,189,190,191,199,200,202,205,214,215,216,218,219,222,227,228,229,230,231,232,236,237,238,239,248,249,254,256,257,258,260,261,262,264,269,273,274,275,277,278,279,280,281,282,283,294,295,297,298,331,332,337,339,340,341,344,370,371,372,373,],[-182,103,-182,115,-160,118,119,-182,125,126,127,128,130,131,132,133,134,137,138,139,140,141,-182,134,163,103,173,-126,103,103,103,103,103,103,-182,103,103,103,103,103,-87,103,103,103,103,-178,103,-62,103,-59,-182,-182,-182,-182,-182,269,-132,103,103,-182,-182,-182,-182,-182,-182,-182,-182,103,103,103,103,-68,103,103,103,-45,103,103,-78,103,103,103,103,-28,103,103,-39,103,103,103,103,103,-61,103,-65,-182,103,103,-182,-64,-67,-69,103,103,-180,-63,-66,]),'CASA':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,67,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,67,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'PUNTOCOMA':([25,38,39,97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,142,143,144,145,148,149,150,151,152,153,154,155,157,160,161,162,170,175,178,185,196,197,198,203,204,220,221,223,233,234,235,242,243,244,246,250,253,259,263,265,276,290,291,299,304,305,306,307,308,309,316,319,320,321,323,324,325,326,327,328,329,330,334,335,336,341,342,345,351,352,355,356,357,358,359,360,361,362,363,364,380,384,385,387,390,392,393,394,395,399,400,],[-182,-48,48,-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,48,-121,-115,215,-182,-182,241,255,-41,-44,-77,-74,-23,-24,-25,-31,-32,-30,-182,-172,-173,-171,300,302,-182,-89,-91,322,334,-181,-182,-43,-42,-80,-88,-76,-75,-182,354,-182,-182,-182,-182,-182,-182,-182,-182,365,366,-177,-176,-174,-69,373,-90,381,-153,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,391,-182,-182,-175,-182,401,-151,-146,402,-144,406,]),'LT':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,178,197,198,203,204,243,244,246,259,263,265,304,305,306,307,308,309,334,335,336,345,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,231,-41,-44,-77,-74,-172,-173,-171,-182,-89,-91,-43,-42,-80,-88,-76,-75,-177,-176,-174,-90,-175,]),'RESTA':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,203,204,243,244,246,259,263,265,306,307,308,309,334,335,336,345,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,199,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,-77,-74,-172,-173,-171,-182,-89,-91,-80,-88,-76,-75,-177,-176,-174,-90,-175,]),'DIMENSION':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,88,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,88,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'CADENA':([47,103,119,125,126,127,128,130,131,134,137,138,139,140,146,147,156,159,173,183,186,187,188,189,190,191,199,200,202,205,215,216,218,219,222,227,228,229,230,231,232,236,237,238,239,248,249,254,256,257,258,260,261,262,264,269,273,274,275,277,278,279,280,281,282,283,294,295,297,298,331,332,337,339,340,341,344,370,371,372,373,],[106,-182,106,106,106,106,106,106,106,-182,106,106,106,106,106,-87,106,106,106,106,-178,106,-62,106,-59,-182,-182,-182,-182,-182,-132,106,106,-182,-182,-182,-182,-182,-182,-182,-182,106,106,106,106,-68,106,106,106,-45,106,106,-78,106,106,106,106,-28,106,106,-39,106,106,106,106,106,-61,106,-65,-182,106,106,-182,-64,-67,-69,106,106,-180,-63,-66,]),'DOSPUNTOS':([5,6,7,],[-182,8,-2,]),'APOYA':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,94,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,94,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'DIF':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,178,197,198,203,204,243,244,246,259,263,265,304,305,306,307,308,309,334,335,336,345,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,228,-41,-44,-77,-74,-172,-173,-171,-182,-89,-91,-43,-42,-80,-88,-76,-75,-177,-176,-174,-90,-175,]),'LEVANTA':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,81,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,81,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'$end':([1,13,14,16,23,28,29,32,36,37,40,43,120,172,],[0,-1,-3,-5,-182,-4,-10,-6,-11,-14,-9,-7,-15,-21,]),'FUNCTION':([8,11,20,21,26,33,34,48,49,50,120,158,164,165,172,208,209,213,266,267,311,312,346,347,379,],[-182,-8,27,-182,27,-8,27,-53,-47,-49,-15,-50,-161,-159,-21,-51,-158,-162,-52,-182,-168,-170,-167,-164,-166,]),'GT':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,178,197,198,203,204,243,244,246,259,263,265,304,305,306,307,308,309,334,335,336,345,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,232,-41,-44,-77,-74,-172,-173,-171,-182,-89,-91,-43,-42,-80,-88,-76,-75,-177,-176,-174,-90,-175,]),'LKEY':([8,9,11,20,21,22,24,26,31,33,34,48,49,50,54,116,117,120,158,164,165,166,172,208,209,210,211,213,266,267,271,301,311,312,317,318,346,347,369,376,379,388,389,],[-182,-182,-8,-182,-182,35,-16,-182,-13,-8,-182,-53,-47,-49,-182,-130,-182,-15,-50,-161,-159,-182,-21,-51,-158,-182,-169,-162,-52,-182,-182,-182,-168,-170,-182,-127,-167,-164,-182,-182,-166,-182,-141,]),'FOR':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,80,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,80,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'CUBO':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,75,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,75,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'RKEY':([35,44,45,46,48,49,50,57,59,62,63,64,65,66,69,70,71,72,73,74,76,77,79,82,83,84,85,86,91,92,95,96,120,121,122,129,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,-182,-182,-53,-47,-49,-182,-109,-105,-99,-108,-112,-101,-182,-107,-95,-111,-100,-103,-94,-20,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,172,-22,-19,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'ELSE':([120,172,343,],[-15,-21,376,]),'ESTRELLA':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,90,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,90,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'GE':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,178,197,198,203,204,243,244,246,259,263,265,304,305,306,307,308,309,334,335,336,345,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,227,-41,-44,-77,-74,-172,-173,-171,-182,-89,-91,-43,-42,-80,-88,-76,-75,-177,-176,-174,-90,-175,]),'LE':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,178,197,198,203,204,243,244,246,259,263,265,304,305,306,307,308,309,334,335,336,345,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,229,-41,-44,-77,-74,-172,-173,-171,-182,-89,-91,-43,-42,-80,-88,-76,-75,-177,-176,-174,-90,-175,]),'CARACTER':([47,103,119,125,126,127,128,130,131,134,137,138,139,140,146,147,156,159,173,183,186,187,188,189,190,191,199,200,202,205,215,216,218,219,222,227,228,229,230,231,232,236,237,238,239,248,249,254,256,257,258,260,261,262,264,269,273,274,275,277,278,279,280,281,282,283,294,295,297,298,331,332,337,339,340,341,344,370,371,372,373,],[109,-182,109,109,109,109,109,109,109,-182,109,109,109,109,109,-87,109,109,109,109,-178,109,-62,109,-59,-182,-182,-182,-182,-182,-132,109,109,-182,-182,-182,-182,-182,-182,-182,-182,109,109,109,109,-68,109,109,109,-45,109,109,-78,109,109,109,109,-28,109,109,-39,109,109,109,109,109,-61,109,-65,-182,109,109,-182,-64,-67,-69,109,109,-180,-63,-66,]),'COMA':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,171,174,179,180,181,182,195,197,198,203,204,206,207,243,244,245,246,247,259,263,265,268,286,287,292,293,303,304,305,306,307,308,309,310,313,314,334,335,336,338,345,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,159,-182,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,216,218,236,237,238,239,254,-41,-44,-77,-74,264,159,-172,-173,-182,-171,295,-182,-89,-91,-182,331,332,337,-179,344,-43,-42,-80,-88,-76,-75,264,-165,348,-177,-176,-174,295,-90,-175,]),'ID':([2,3,4,10,12,15,17,18,19,30,35,41,44,45,46,47,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,113,119,120,125,126,127,128,130,131,132,134,137,138,139,140,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,172,173,175,176,178,183,186,187,188,189,190,191,197,198,199,200,202,203,204,205,208,212,215,216,218,219,220,221,222,223,224,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,243,244,246,248,249,254,255,256,257,258,259,260,261,262,263,264,265,266,269,273,274,275,277,278,279,280,281,282,283,288,289,294,295,297,298,300,302,304,305,306,307,308,309,320,321,322,323,324,325,326,327,328,331,332,334,335,336,337,339,340,341,343,344,345,353,354,355,356,357,358,359,360,361,362,363,364,365,366,370,371,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,5,-12,25,-57,-56,-54,-55,-58,42,-182,51,-18,87,-182,110,-53,-47,-49,-109,-105,-99,-108,-112,-101,87,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-81,-82,-83,-84,-182,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,110,-15,110,110,110,110,110,110,184,-182,110,110,110,110,-182,-46,-118,-124,110,-87,-116,-122,-182,-79,-114,-120,-117,-123,110,-119,-50,110,-121,-115,-21,110,-182,-70,-182,110,-178,110,-62,110,-59,-182,-41,-44,-182,-182,-182,-77,-74,-182,-51,268,-132,110,110,-182,-23,-24,-182,-25,-71,-182,-182,-182,-182,-182,-182,-31,-32,-30,110,110,110,110,-182,-154,-172,-173,-171,-68,110,110,-155,110,-45,110,-182,110,-78,110,-89,110,-91,-52,110,110,-28,110,110,-39,110,110,110,110,110,184,-134,-61,110,-65,-182,-157,-149,-43,-42,-80,-88,-76,-75,-182,-182,-72,-182,-182,-182,-182,-182,-182,110,110,-177,-176,-174,-182,-64,-67,-69,-182,110,-90,-182,-156,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,-148,-147,110,-180,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'IF':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,89,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,89,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'AND':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,175,178,197,198,203,204,233,234,235,243,244,246,259,263,265,304,305,306,307,308,309,323,324,325,326,327,328,334,335,336,345,358,359,360,361,362,363,364,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,219,-182,-41,-44,-77,-74,-31,-32,-30,-172,-173,-171,-182,-89,-91,-43,-42,-80,-88,-76,-75,-182,-182,-182,-182,-182,-182,-177,-176,-174,-90,-36,-40,-37,-35,-38,-34,-33,-175,]),'CHAR':([8,21,27,35,46,48,49,50,115,158,163,167,168,208,266,348,],[15,15,15,15,15,-53,-47,-49,-182,-50,-182,15,-163,-51,-52,15,]),'FALSE':([47,103,119,125,126,127,128,130,131,134,137,138,139,140,146,147,156,159,173,183,186,187,188,189,190,191,199,200,202,205,215,216,218,219,222,227,228,229,230,231,232,236,237,238,239,248,249,254,256,257,258,260,261,262,264,269,273,274,275,277,278,279,280,281,282,283,294,295,297,298,331,332,337,339,340,341,344,370,371,372,373,],[111,-182,111,111,111,111,111,111,111,-182,111,111,111,111,111,-87,111,111,111,111,-178,111,-62,111,-59,-182,-182,-182,-182,-182,-132,111,111,-182,-182,-182,-182,-182,-182,-182,-182,111,111,111,111,-68,111,111,111,-45,111,111,-78,111,111,111,111,-28,111,111,-39,111,111,111,111,111,-61,111,-65,-182,111,111,-182,-64,-67,-69,111,111,-180,-63,-66,]),'INT':([8,21,27,35,46,48,49,50,115,158,163,167,168,208,266,348,],[17,17,17,17,17,-53,-47,-49,-182,-50,-182,17,-163,-51,-52,17,]),'FLOAT':([8,21,27,35,46,48,49,50,115,158,163,167,168,208,266,348,],[18,18,18,18,18,-53,-47,-49,-182,-50,-182,18,-163,-51,-52,18,]),'SAME':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,178,197,198,203,204,243,244,246,259,263,265,304,305,306,307,308,309,334,335,336,345,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,230,-41,-44,-77,-74,-172,-173,-171,-182,-89,-91,-43,-42,-80,-88,-76,-75,-177,-176,-174,-90,-175,]),'CUADRADO':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,93,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,93,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'BOOL':([8,21,27,35,46,48,49,50,115,158,163,167,168,208,266,348,],[19,19,19,19,19,-53,-47,-49,-182,-50,-182,19,-163,-51,-52,19,]),'SUMA':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,203,204,243,244,246,259,263,265,306,307,308,309,334,335,336,345,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,200,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,-77,-74,-172,-173,-171,-182,-89,-91,-80,-88,-76,-75,-177,-176,-174,-90,-175,]),'RECTANGULO':([35,44,45,46,48,49,50,59,62,63,64,65,66,69,70,71,72,73,74,76,79,82,83,84,85,86,91,92,95,96,120,158,172,176,188,190,208,215,224,241,243,244,246,255,266,294,297,298,300,302,322,334,335,336,339,340,341,343,353,354,365,366,372,373,374,375,377,381,382,383,386,387,391,396,397,398,401,402,403,404,405,406,],[-182,-18,68,-182,-53,-47,-49,-109,-105,-99,-108,-112,-101,68,-107,-95,-111,-100,-103,-94,-113,-98,-104,-97,-106,-96,-102,-93,-110,-17,-15,-50,-21,-70,-62,-59,-51,-132,-71,-154,-172,-173,-171,-155,-52,-61,-65,-182,-157,-149,-72,-177,-176,-174,-64,-67,-69,-182,-182,-156,-148,-147,-63,-66,-137,-138,-142,-152,-125,-128,-182,-175,-129,-182,-136,-182,-150,-145,-133,-135,-139,-143,]),'FLOTANTE':([47,103,119,125,126,127,128,130,131,134,137,138,139,140,146,147,156,159,173,183,186,187,188,189,190,191,199,200,202,205,215,216,218,219,222,227,228,229,230,231,232,236,237,238,239,248,249,254,256,257,258,260,261,262,264,269,273,274,275,277,278,279,280,281,282,283,294,295,297,298,331,332,337,339,340,341,344,370,371,372,373,],[113,-182,113,113,113,113,113,113,113,-182,113,113,113,113,113,-87,113,113,113,113,-178,113,-62,113,-59,-182,-182,-182,-182,-182,-132,113,113,-182,-182,-182,-182,-182,-182,-182,-182,113,113,113,113,-68,113,113,113,-45,113,113,-78,113,113,113,113,-28,113,113,-39,113,113,113,113,113,-61,113,-65,-182,113,113,-182,-64,-67,-69,113,113,-180,-63,-66,]),'RBRACKET':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,197,198,203,204,206,207,243,244,246,247,259,263,265,304,305,306,307,308,309,310,334,335,336,338,345,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,160,-182,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,-41,-44,-77,-74,265,160,-172,-173,-171,296,-182,-89,-91,-43,-42,-80,-88,-76,-75,265,-177,-176,-174,296,-90,-175,]),'ENTERO':([47,103,119,125,126,127,128,130,131,134,137,138,139,140,146,147,156,159,173,183,186,187,188,189,190,191,199,200,202,205,215,216,218,219,222,227,228,229,230,231,232,236,237,238,239,248,249,254,256,257,258,260,261,262,264,269,273,274,275,277,278,279,280,281,282,283,294,295,297,298,331,332,337,339,340,341,344,370,371,372,373,],[108,-182,108,108,108,108,108,108,108,-182,108,108,108,108,108,-87,108,108,108,108,-178,108,-62,108,-59,-182,-182,-182,-182,-182,-132,108,108,-182,-182,-182,-182,-182,-182,-182,-182,108,108,108,108,-68,108,108,108,-45,108,108,-78,108,108,108,108,-28,108,108,-39,108,108,108,108,108,-61,108,-65,-182,108,108,-182,-64,-67,-69,108,108,-180,-63,-66,]),'OR':([97,98,99,100,101,102,104,105,106,107,108,109,110,111,113,142,143,144,145,148,149,150,151,152,153,154,155,157,161,162,175,178,197,198,203,204,233,234,235,243,244,246,259,263,265,304,305,306,307,308,309,323,324,325,326,327,328,334,335,336,345,358,359,360,361,362,363,364,387,],[-81,-82,-83,-84,-182,-182,-85,-92,-182,-182,-182,-182,-86,-182,-182,-182,-46,-118,-124,-116,-122,-182,-79,-114,-120,-117,-123,-119,-121,-115,222,-182,-41,-44,-77,-74,-31,-32,-30,-172,-173,-171,-182,-89,-91,-43,-42,-80,-88,-76,-75,-182,-182,-182,-182,-182,-182,-177,-176,-174,-90,-36,-40,-37,-35,-38,-34,-33,-175,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuadrado':([45,69,],[73,73,]),'tagasigna':([386,],[396,]),'tagsacrel':([323,324,325,326,327,328,],[358,360,361,362,363,364,]),'tagfondofalso':([103,],[146,]),'expre2':([175,],[221,]),'bloque':([9,117,210,301,317,369,388,],[23,169,267,343,353,386,398,]),'taginiciawhile':([58,],[123,]),'comentario':([45,69,],[63,63,]),'if2':([343,],[374,]),'tagop':([199,200,],[256,258,]),'tagrevisaparam':([245,],[292,]),'program':([0,],[1,]),'rectangulo':([45,69,],[74,74,]),'factor':([47,119,125,126,127,128,130,131,137,138,139,140,146,156,159,173,183,187,189,216,218,236,237,238,239,249,254,256,258,260,262,264,269,273,275,277,279,280,281,282,283,295,331,332,344,370,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'p3':([8,21,],[14,32,]),'read':([45,69,249,],[82,82,298,]),'cubo':([45,69,],[83,83,]),'buildFunc':([42,51,],[52,114,]),'estrella':([45,69,],[85,85,]),'meteid':([87,184,],[135,135,]),'expresion':([126,138,146,173,183,249,269,273,275,],[177,193,201,217,240,299,315,320,321,]),'tagbol':([102,111,],[144,157,]),'p4':([20,26,34,],[28,40,43,]),'tagcad':([106,],[148,]),'tagevaluafor':([240,],[288,]),'tagtriangulo':([385,],[395,]),'tagimprime':([177,],[225,]),'tagcar':([109,],[154,]),'taginiciado':([54,],[117,]),'tagwhile':([271,],[317,]),'initTop':([5,],[6,]),'b5':([57,],[120,]),'asigf2':([249,],[297,]),'apoya':([45,69,],[59,59,]),'b3':([35,46,],[45,96,]),'tagterminafor':([396,],[403,]),'tagsacops':([101,],[142,]),'varcte':([47,119,125,126,127,128,130,131,137,138,139,140,146,156,159,173,183,187,189,216,218,236,237,238,239,249,254,256,258,260,262,264,269,273,275,277,279,280,281,282,283,295,331,332,344,370,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'tipo':([8,21,27,35,46,167,348,],[10,10,41,10,10,212,212,]),'tagif':([193,],[251,]),'tagig':([298,299,],[340,342,]),'funct2':([167,348,],[213,379,]),'funct3':([314,],[347,]),'declafinal':([39,160,],[50,208,]),'print':([45,69,],[76,76,]),'tagsacopm':([107,],[150,]),'tagcuadro':([390,],[400,]),'tagrel':([227,228,229,230,231,232,],[277,279,280,281,282,283,]),'initFunc':([166,],[210,]),'tagelse':([376,],[388,]),'ciclofor':([45,69,],[84,84,]),'tagverificafuncion':([134,],[187,]),'tagm':([202,205,],[260,262,]),'te2':([150,],[204,]),'e3':([178,],[233,]),'e2':([178,],[235,]),'tagsacalog':([320,321,],[355,357,]),'initParams':([268,],[314,]),'declaracion':([8,21,35,46,],[21,21,46,46,]),'tagmueve':([316,],[351,]),'cuadrupro2':([8,20,26,34,],[9,9,9,9,]),'tagterminallamada':([242,],[290,]),'termino':([47,119,125,126,127,128,130,131,137,138,139,140,146,156,159,173,183,187,189,216,218,236,237,238,239,249,254,256,258,260,262,264,269,273,275,277,279,280,281,282,283,295,331,332,344,370,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,308,309,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'tagfloat':([113,],[162,]),'ciclowhile':([45,69,],[71,71,]),'levanta':([45,69,],[64,64,]),'triangulo':([45,69,],[66,66,]),'exp2':([142,],[197,]),'estatuto':([45,69,],[69,69,]),'tagcondiciondo':([315,],[349,]),'asig3':([247,338,],[294,372,]),'asig2':([135,],[190,]),'delMem':([23,],[36,]),'empty':([2,5,8,9,20,21,23,25,26,34,35,42,45,46,51,54,57,58,69,87,101,102,103,106,107,108,109,111,113,115,117,134,142,150,163,166,175,177,178,184,191,193,199,200,202,205,210,219,222,227,228,229,230,231,232,240,242,245,259,267,268,271,298,299,301,315,316,317,320,321,323,324,325,326,327,328,337,343,353,369,376,384,385,386,388,390,396,398,],[4,7,11,24,31,33,37,38,31,31,44,53,77,44,53,116,122,124,77,136,143,145,147,149,151,153,155,145,161,168,24,186,198,203,168,211,223,226,234,136,248,252,257,257,261,261,24,274,274,278,278,278,278,278,278,289,291,293,307,312,313,318,341,341,24,350,352,24,356,356,359,359,359,359,359,359,371,377,383,24,389,393,394,397,24,399,404,377,]),'function':([20,26,34,],[26,26,26,]),'expresion2':([126,138,146,173,183,249,269,273,275,],[175,175,175,175,175,175,175,175,175,]),'tagterminaif':([343,398,],[375,405,]),'cuadrupro':([2,],[3,]),'tagint':([108,],[152,]),'p2':([8,],[13,]),'b4':([45,69,],[57,129,]),'casa':([45,69,],[91,91,]),'asignacion':([45,69,132,288,],[92,92,183,333,]),'p5':([8,20,26,34,],[16,29,29,29,]),'llamaf2':([187,370,],[243,387,]),'llamaf3':([292,],[336,]),'llamaf4':([187,292,],[244,335,]),'tagcubo':([384,],[392,]),'noinitFunc':([267,],[311,]),'llamaf11':([187,],[246,]),'iniEnv':([9,117,210,301,317,369,388,],[22,22,22,22,22,22,22,]),'f2':([47,119,125,126,127,128,130,131,137,138,139,140,146,156,159,173,183,187,189,216,218,236,237,238,239,249,254,256,258,260,262,264,269,273,275,277,279,280,281,282,283,295,331,332,344,370,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'f3':([47,119,125,126,127,128,130,131,137,138,139,140,146,156,159,173,183,187,189,216,218,236,237,238,239,249,254,256,258,260,262,264,269,273,275,277,279,280,281,282,283,295,331,332,344,370,],[98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,]),'f6':([47,119,125,126,127,128,130,131,137,138,139,140,146,156,159,173,183,187,189,216,218,236,237,238,239,249,254,256,258,260,262,264,269,273,275,277,279,280,281,282,283,295,331,332,344,370,],[99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,]),'f7':([47,119,125,126,127,128,130,131,137,138,139,140,146,156,159,173,183,187,189,216,218,236,237,238,239,249,254,256,258,260,262,264,269,273,275,277,279,280,281,282,283,295,331,332,344,370,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'f8':([206,310,],[263,345,]),'trapecio':([45,69,],[62,62,]),'tagsacafondo':([259,],[306,]),'if':([45,69,],[65,65,]),'mueve':([45,69,],[70,70,]),'decla1':([39,],[49,]),'llamafuncion':([45,47,69,119,125,126,127,128,130,131,137,138,139,140,146,156,159,173,183,187,189,216,218,236,237,238,239,249,254,256,258,260,262,264,269,273,275,277,279,280,281,282,283,295,331,332,344,370,],[72,105,72,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'decla2':([112,207,],[158,266,]),'initParamTable':([115,163,],[167,167,]),'tagotroargumento':([337,],[370,]),'tagmeteig':([191,],[249,]),'funct11':([115,163,],[165,209,]),'pr3':([177,],[224,]),'pr2':([126,],[176,]),'ciclodowhile':([45,69,],[86,86,]),'asigfinal':([135,296,],[188,339,]),'function4':([115,163,314,],[164,164,346,]),'expre':([175,],[220,]),'tagmetelog':([219,222,],[273,275,]),'dimension':([45,69,],[95,95,]),'savevar':([25,],[39,]),'exp':([47,119,125,126,127,128,130,131,137,138,139,140,146,156,159,173,183,187,189,216,218,236,237,238,239,249,254,256,258,264,269,273,275,277,279,280,281,282,283,295,331,332,344,370,],[112,171,174,178,179,180,181,182,192,178,194,195,178,206,207,178,178,245,247,270,272,284,285,286,287,178,303,304,305,310,178,178,178,323,324,325,326,327,328,338,367,368,378,245,]),'tagregresawhile':([353,],[382,]),'initFunctions':([8,21,],[20,34,]),'recEnv':([57,],[121,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2','program',6,'p_program','analizadorSintactico.py',269),
  ('initTop -> empty','initTop',1,'p_initTop','analizadorSintactico.py',274),
  ('p2 -> p3','p2',1,'p_p2','analizadorSintactico.py',282),
  ('p2 -> initFunctions p4','p2',2,'p_p2','analizadorSintactico.py',283),
  ('p2 -> p5','p2',1,'p_p2','analizadorSintactico.py',284),
  ('p3 -> declaracion p3','p3',2,'p_p3','analizadorSintactico.py',287),
  ('p3 -> initFunctions p4','p3',2,'p_p3','analizadorSintactico.py',288),
  ('initFunctions -> empty','initFunctions',1,'p_initFunctions','analizadorSintactico.py',291),
  ('p4 -> function p4','p4',2,'p_p4','analizadorSintactico.py',300),
  ('p4 -> p5','p4',1,'p_p4','analizadorSintactico.py',301),
  ('p5 -> cuadrupro2 bloque delMem','p5',3,'p_p5','analizadorSintactico.py',304),
  ('cuadrupro -> empty','cuadrupro',1,'p_cuadrupro','analizadorSintactico.py',307),
  ('cuadrupro2 -> empty','cuadrupro2',1,'p_cuadrupro2','analizadorSintactico.py',313),
  ('delMem -> empty','delMem',1,'p_delMem','analizadorSintactico.py',324),
  ('bloque -> iniEnv LKEY b3 b4 b5','bloque',5,'p_bloque','analizadorSintactico.py',332),
  ('iniEnv -> empty','iniEnv',1,'p_iniEnv','analizadorSintactico.py',335),
  ('b3 -> declaracion b3','b3',2,'p_b3','analizadorSintactico.py',352),
  ('b3 -> empty','b3',1,'p_b3','analizadorSintactico.py',353),
  ('b4 -> estatuto b4','b4',2,'p_b4','analizadorSintactico.py',356),
  ('b4 -> empty','b4',1,'p_b4','analizadorSintactico.py',357),
  ('b5 -> recEnv RKEY','b5',2,'p_b5','analizadorSintactico.py',360),
  ('recEnv -> empty','recEnv',1,'p_recEnv','analizadorSintactico.py',363),
  ('expresion -> expresion2 expre','expresion',2,'p_expresion','analizadorSintactico.py',386),
  ('expre -> expre2','expre',1,'p_expre','analizadorSintactico.py',389),
  ('expre -> empty','expre',1,'p_expre','analizadorSintactico.py',390),
  ('expre2 -> AND tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',393),
  ('expre2 -> OR tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',394),
  ('tagmetelog -> empty','tagmetelog',1,'p_tagmetelog','analizadorSintactico.py',397),
  ('tagsacalog -> empty','tagsacalog',1,'p_tagsacalog','analizadorSintactico.py',401),
  ('expresion2 -> exp e2','expresion2',2,'p_expresion2','analizadorSintactico.py',433),
  ('e2 -> e3','e2',1,'p_e2','analizadorSintactico.py',438),
  ('e2 -> empty','e2',1,'p_e2','analizadorSintactico.py',439),
  ('e3 -> GT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',442),
  ('e3 -> LT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',443),
  ('e3 -> LE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',444),
  ('e3 -> GE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',445),
  ('e3 -> DIF tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',446),
  ('e3 -> SAME tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',447),
  ('tagrel -> empty','tagrel',1,'p_tagrel','analizadorSintactico.py',450),
  ('tagsacrel -> empty','tagsacrel',1,'p_tagsacrel','analizadorSintactico.py',455),
  ('exp -> termino tagsacops exp2','exp',3,'p_exp','analizadorSintactico.py',487),
  ('exp2 -> SUMA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',491),
  ('exp2 -> RESTA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',492),
  ('exp2 -> empty','exp2',1,'p_exp2','analizadorSintactico.py',493),
  ('tagop -> empty','tagop',1,'p_tagop','analizadorSintactico.py',496),
  ('tagsacops -> empty','tagsacops',1,'p_tagsacops','analizadorSintactico.py',501),
  ('declaracion -> tipo ID savevar decla1','declaracion',4,'p_declaracion','analizadorSintactico.py',543),
  ('savevar -> empty','savevar',1,'p_savevar','analizadorSintactico.py',547),
  ('decla1 -> declafinal','decla1',1,'p_decla1','analizadorSintactico.py',560),
  ('decla1 -> LBRACKET exp decla2','decla1',3,'p_decla1','analizadorSintactico.py',561),
  ('decla2 -> RBRACKET declafinal','decla2',2,'p_decla2','analizadorSintactico.py',564),
  ('decla2 -> COMA exp decla2','decla2',3,'p_decla2','analizadorSintactico.py',565),
  ('declafinal -> PUNTOCOMA','declafinal',1,'p_declafinal','analizadorSintactico.py',569),
  ('tipo -> INT','tipo',1,'p_tipo','analizadorSintactico.py',579),
  ('tipo -> FLOAT','tipo',1,'p_tipo','analizadorSintactico.py',580),
  ('tipo -> CHAR','tipo',1,'p_tipo','analizadorSintactico.py',581),
  ('tipo -> STRING','tipo',1,'p_tipo','analizadorSintactico.py',582),
  ('tipo -> BOOL','tipo',1,'p_tipo','analizadorSintactico.py',583),
  ('asignacion -> ID meteid asig2','asignacion',3,'p_asignacion','analizadorSintactico.py',593),
  ('meteid -> empty','meteid',1,'p_meteid','analizadorSintactico.py',601),
  ('asig2 -> LBRACKET exp asig3','asig2',3,'p_asig2','analizadorSintactico.py',609),
  ('asig2 -> asigfinal','asig2',1,'p_asig2','analizadorSintactico.py',610),
  ('asig3 -> COMA exp asig3','asig3',3,'p_asig3','analizadorSintactico.py',613),
  ('asig3 -> RBRACKET asigfinal','asig3',2,'p_asig3','analizadorSintactico.py',614),
  ('asigfinal -> IGUAL tagmeteig asigf2','asigfinal',3,'p_asigfinal','analizadorSintactico.py',618),
  ('asigf2 -> expresion tagig PUNTOCOMA','asigf2',3,'p_asigf2','analizadorSintactico.py',622),
  ('asigf2 -> read tagig','asigf2',2,'p_asigf2','analizadorSintactico.py',623),
  ('tagmeteig -> empty','tagmeteig',1,'p_tagmeteig','analizadorSintactico.py',626),
  ('tagig -> empty','tagig',1,'p_tagig','analizadorSintactico.py',631),
  ('print -> PRINT LPARENT pr2','print',3,'p_print','analizadorSintactico.py',658),
  ('pr2 -> expresion pr3','pr2',2,'p_pr2','analizadorSintactico.py',662),
  ('pr3 -> tagimprime RPARENT PUNTOCOMA','pr3',3,'p_pr3','analizadorSintactico.py',666),
  ('tagimprime -> empty','tagimprime',1,'p_tagimprime','analizadorSintactico.py',669),
  ('termino -> factor tagsacopm te2','termino',3,'p_termino','analizadorSintactico.py',675),
  ('te2 -> MULT tagm termino','te2',3,'p_te2','analizadorSintactico.py',679),
  ('te2 -> DIV tagm termino','te2',3,'p_te2','analizadorSintactico.py',680),
  ('te2 -> empty','te2',1,'p_te2','analizadorSintactico.py',681),
  ('tagm -> empty','tagm',1,'p_tagm','analizadorSintactico.py',686),
  ('tagsacopm -> empty','tagsacopm',1,'p_tagsacopm','analizadorSintactico.py',691),
  ('factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo','factor',5,'p_factor','analizadorSintactico.py',720),
  ('factor -> f2','factor',1,'p_factor','analizadorSintactico.py',721),
  ('factor -> f3','factor',1,'p_factor','analizadorSintactico.py',722),
  ('factor -> f6','factor',1,'p_factor','analizadorSintactico.py',723),
  ('factor -> f7','factor',1,'p_factor','analizadorSintactico.py',724),
  ('f2 -> varcte','f2',1,'p_f2','analizadorSintactico.py',733),
  ('f3 -> ID','f3',1,'p_f3','analizadorSintactico.py',739),
  ('tagfondofalso -> empty','tagfondofalso',1,'p_tagfondofalso','analizadorSintactico.py',746),
  ('tagsacafondo -> empty','tagsacafondo',1,'p_tagsacafondo','analizadorSintactico.py',750),
  ('f7 -> ID LBRACKET exp f8','f7',4,'p_f7','analizadorSintactico.py',771),
  ('f8 -> COMA exp f8','f8',3,'p_f8','analizadorSintactico.py',775),
  ('f8 -> RBRACKET','f8',1,'p_f8','analizadorSintactico.py',776),
  ('f6 -> llamafuncion','f6',1,'p_f6','analizadorSintactico.py',780),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','analizadorSintactico.py',786),
  ('estatuto -> print','estatuto',1,'p_estatuto','analizadorSintactico.py',787),
  ('estatuto -> ciclowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',788),
  ('estatuto -> ciclodowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',789),
  ('estatuto -> ciclofor','estatuto',1,'p_estatuto','analizadorSintactico.py',790),
  ('estatuto -> read','estatuto',1,'p_estatuto','analizadorSintactico.py',791),
  ('estatuto -> comentario','estatuto',1,'p_estatuto','analizadorSintactico.py',792),
  ('estatuto -> cuadrado','estatuto',1,'p_estatuto','analizadorSintactico.py',793),
  ('estatuto -> triangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',794),
  ('estatuto -> casa','estatuto',1,'p_estatuto','analizadorSintactico.py',795),
  ('estatuto -> rectangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',796),
  ('estatuto -> cubo','estatuto',1,'p_estatuto','analizadorSintactico.py',797),
  ('estatuto -> trapecio','estatuto',1,'p_estatuto','analizadorSintactico.py',798),
  ('estatuto -> estrella','estatuto',1,'p_estatuto','analizadorSintactico.py',799),
  ('estatuto -> mueve','estatuto',1,'p_estatuto','analizadorSintactico.py',800),
  ('estatuto -> levanta','estatuto',1,'p_estatuto','analizadorSintactico.py',801),
  ('estatuto -> apoya','estatuto',1,'p_estatuto','analizadorSintactico.py',802),
  ('estatuto -> dimension','estatuto',1,'p_estatuto','analizadorSintactico.py',803),
  ('estatuto -> llamafuncion','estatuto',1,'p_estatuto','analizadorSintactico.py',804),
  ('estatuto -> if','estatuto',1,'p_estatuto','analizadorSintactico.py',805),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','analizadorSintactico.py',813),
  ('varcte -> ENTERO tagint','varcte',2,'p_varcte','analizadorSintactico.py',819),
  ('varcte -> FLOTANTE tagfloat','varcte',2,'p_varcte','analizadorSintactico.py',820),
  ('varcte -> CADENA tagcad','varcte',2,'p_varcte','analizadorSintactico.py',821),
  ('varcte -> CARACTER tagcar','varcte',2,'p_varcte','analizadorSintactico.py',822),
  ('varcte -> TRUE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',823),
  ('varcte -> FALSE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',824),
  ('tagint -> empty','tagint',1,'p_tagint','analizadorSintactico.py',827),
  ('tagfloat -> empty','tagfloat',1,'p_tagfloat','analizadorSintactico.py',834),
  ('tagcad -> empty','tagcad',1,'p_tagcad','analizadorSintactico.py',841),
  ('tagcar -> empty','tagcar',1,'p_tagcar','analizadorSintactico.py',848),
  ('tagbol -> empty','tagbol',1,'p_tagbol','analizadorSintactico.py',855),
  ('ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile','ciclowhile',8,'p_ciclowhile','analizadorSintactico.py',864),
  ('taginiciawhile -> empty','taginiciawhile',1,'p_taginiciawhile','analizadorSintactico.py',868),
  ('tagwhile -> empty','tagwhile',1,'p_tagwhile','analizadorSintactico.py',872),
  ('tagregresawhile -> empty','tagregresawhile',1,'p_tagregresawhile','analizadorSintactico.py',884),
  ('ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA','ciclodowhile',9,'p_ciclodowhile','analizadorSintactico.py',893),
  ('taginiciado -> empty','taginiciado',1,'p_taginiciado','analizadorSintactico.py',898),
  ('tagcondiciondo -> empty','tagcondiciondo',1,'p_tagcondiciondo','analizadorSintactico.py',902),
  ('read -> READ LPARENT RPARENT PUNTOCOMA','read',4,'p_read','analizadorSintactico.py',916),
  ('ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor','ciclofor',10,'p_ciclofor','analizadorSintactico.py',924),
  ('tagevaluafor -> empty','tagevaluafor',1,'p_tagevaluafor','analizadorSintactico.py',928),
  ('tagterminafor -> empty','tagterminafor',1,'p_tagterminafor','analizadorSintactico.py',940),
  ('tagasigna -> empty','tagasigna',1,'p_tagasigna','analizadorSintactico.py',945),
  ('if -> IF LPARENT expresion tagif RPARENT bloque if2','if',7,'p_if','analizadorSintactico.py',952),
  ('if2 -> tagterminaif','if2',1,'p_if2','analizadorSintactico.py',956),
  ('if2 -> ELSE tagelse bloque tagterminaif','if2',4,'p_if2','analizadorSintactico.py',957),
  ('tagif -> empty','tagif',1,'p_tagif','analizadorSintactico.py',960),
  ('tagelse -> empty','tagelse',1,'p_tagelse','analizadorSintactico.py',971),
  ('tagterminaif -> empty','tagterminaif',1,'p_tagterminaif','analizadorSintactico.py',979),
  ('cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA','cuadrado',10,'p_cuadrado','analizadorSintactico.py',1000),
  ('tagcuadro -> empty','tagcuadro',1,'p_tagcuadro','analizadorSintactico.py',1004),
  ('triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA','triangulo',10,'p_triangulo','analizadorSintactico.py',1010),
  ('tagtriangulo -> empty','tagtriangulo',1,'p_tagtriangulo','analizadorSintactico.py',1014),
  ('rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA','rectangulo',7,'p_rectangulo','analizadorSintactico.py',1019),
  ('casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA','casa',7,'p_casa','analizadorSintactico.py',1023),
  ('estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA','estrella',5,'p_estrella','analizadorSintactico.py',1027),
  ('cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA','cubo',10,'p_cubo','analizadorSintactico.py',1031),
  ('tagcubo -> empty','tagcubo',1,'p_tagcubo','analizadorSintactico.py',1035),
  ('mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA','mueve',8,'p_mueve','analizadorSintactico.py',1040),
  ('tagmueve -> empty','tagmueve',1,'p_tagmueve','analizadorSintactico.py',1044),
  ('levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA','levanta',4,'p_levanta','analizadorSintactico.py',1049),
  ('apoya -> APOYA LPARENT RPARENT PUNTOCOMA','apoya',4,'p_apoya','analizadorSintactico.py',1055),
  ('trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA','trapecio',7,'p_trapecio','analizadorSintactico.py',1061),
  ('dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA','dimension',5,'p_dimension','analizadorSintactico.py',1065),
  ('function -> FUNCTION tipo ID buildFunc LPARENT funct11','function',6,'p_function','analizadorSintactico.py',1070),
  ('function -> VOID ID buildFunc LPARENT funct11','function',5,'p_function','analizadorSintactico.py',1071),
  ('buildFunc -> empty','buildFunc',1,'p_buildFunc','analizadorSintactico.py',1075),
  ('funct11 -> function4','funct11',1,'p_funct11','analizadorSintactico.py',1083),
  ('funct11 -> initParamTable funct2','funct11',2,'p_funct111','analizadorSintactico.py',1086),
  ('initParamTable -> empty','initParamTable',1,'p_initParamTable','analizadorSintactico.py',1089),
  ('funct2 -> tipo ID initParams funct3','funct2',4,'p_funct2','analizadorSintactico.py',1100),
  ('initParams -> empty','initParams',1,'p_initParams','analizadorSintactico.py',1103),
  ('funct3 -> COMA funct2','funct3',2,'p_funtion3','analizadorSintactico.py',1120),
  ('funct3 -> function4','funct3',1,'p_function31','analizadorSintactico.py',1124),
  ('function4 -> RPARENT initFunc bloque noinitFunc','function4',4,'p_function4','analizadorSintactico.py',1128),
  ('initFunc -> empty','initFunc',1,'p_initFunc','analizadorSintactico.py',1131),
  ('noinitFunc -> empty','noinitFunc',1,'p_noinitFunc','analizadorSintactico.py',1137),
  ('llamafuncion -> ID LPARENT tagverificafuncion llamaf11','llamafuncion',4,'p_llamafuncion','analizadorSintactico.py',1153),
  ('llamaf11 -> llamaf2','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1156),
  ('llamaf11 -> llamaf4','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1157),
  ('llamaf2 -> exp tagrevisaparam llamaf3','llamaf2',3,'p_llamaf2','analizadorSintactico.py',1160),
  ('llamaf3 -> COMA tagotroargumento llamaf2','llamaf3',3,'p_llamaf3','analizadorSintactico.py',1163),
  ('llamaf3 -> llamaf4','llamaf3',1,'p_llamaf3','analizadorSintactico.py',1164),
  ('llamaf4 -> RPARENT tagterminallamada PUNTOCOMA','llamaf4',3,'p_llamaf4','analizadorSintactico.py',1167),
  ('tagverificafuncion -> empty','tagverificafuncion',1,'p_tagverificafuncion','analizadorSintactico.py',1170),
  ('tagrevisaparam -> empty','tagrevisaparam',1,'p_tagrevisaparam','analizadorSintactico.py',1186),
  ('tagotroargumento -> empty','tagotroargumento',1,'p_tagotroargumento','analizadorSintactico.py',1195),
  ('tagterminallamada -> empty','tagterminallamada',1,'p_tagterminallamada','analizadorSintactico.py',1200),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',1208),
]
