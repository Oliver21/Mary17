
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIGUALleftANDORleftLTGTLEGESAMEDIFleftSUMARESTAleftMULTDIVleftLBRACKETRBRACKETleftLPARENTRPARENTleftLKEYRKEYINT FLOAT IF ELSE VAR PRINT PROGRAM DO WHILE CHAR STRING BEGIN END FOR FUNCTION BOOL READ POW SQRT CUADRADO TRIANGULO RECTANGULO CASA TRAPECIO ESTRELLA CIRCULO LEVANTA APOYA CUBO MUEVE DIMENSION VOID TRUE FALSE RETURN READINT ID MULT DIV SUMA RESTA LPARENT RPARENT COMA PUNTOCOMA DOSPUNTOS PUNTO LBRACKET RBRACKET LKEY RKEY IGUAL LT GT LE GE DIF SAME COMSIMPLE COMDOBLE ENTERO FLOTANTE CARACTER CADENA NOESNADA COMENTARIO BOLEANO RAIZ POTENCIA AND ORprogram : PROGRAM  cuadrupro ID initTop DOSPUNTOS p2initTop : emptyp2 : p3\n\t| initFunctions p4\n\t| p5p3 : declaracion p3\n\t| initFunctions p4initFunctions : emptyp4 : function p4\n\t| p5p5 : cuadrupro2 bloque delMemcuadrupro : emptycuadrupro2 : emptydelMem : emptybloque : iniEnv LKEY b3 b4 b5iniEnv : emptyb3 : declaracion b3\n\t| emptyb4 : estatuto b4\n\t| emptyb5 : recEnv RKEYrecEnv : emptyexpresion : expresion2 expreexpre : expre2\n\t| emptyexpre2 : AND tagmetelog expresion tagsacalog\n\t| OR tagmetelog expresion tagsacalogtagmetelog : emptytagsacalog : emptyexpresion2 : exp e2 e2 : e3 \n\t| emptye3 : GT tagrel exp tagsacrel\n\t| LT tagrel exp tagsacrel\n\t| LE tagrel exp tagsacrel\n\t| GE tagrel exp tagsacrel\n\t| DIF tagrel exp tagsacrel\n\t| SAME tagrel exp tagsacreltagrel : emptytagsacrel : emptyexp : termino tagsacops exp2exp2 : SUMA  tagop exp \n\t| RESTA tagop exp\n\t| emptytagop : emptytagsacops : emptydeclaracion : tipo ID savevar decla1savevar : emptydecla1 : saveMemNormal declafinal \n\t| LBRACKET decDimensionada exp saveLimSup decla2saveMemNormal : empty decDimensionada : emptysaveLimSup : emptydecla2 : RBRACKET guardaMemDimen declafinal\n\t| COMA SigDimension exp saveLimSup decla2SigDimension : empty guardaMemDimen : emptydeclafinal : PUNTOCOMAtipo : INT\n\t| FLOAT\n\t| CHAR\n\t| STRING\n\t| BOOLasignacion : ID meteid asigfinal\n\t| f7 asigfinalmeteid :  emptyasig2 : LBRACKET exp asig3\n\t| asigfinalasig3 : COMA exp asig3\n\t| RBRACKET asigfinalasigfinal : IGUAL tagmeteig asigf2asigf2 : expresion tagig PUNTOCOMA\n\t| read tagig\n\t| readint tagigtagmeteig : emptytagig : emptyprint : PRINT LPARENT pr2pr2 : expresion pr3pr3 : tagimprime RPARENT PUNTOCOMAtagimprime : emptytermino : factor tagsacopm te2te2 : MULT tagm termino \n\t| DIV tagm termino\n\t| emptytagm : emptytagsacopm : emptyfactor : LPARENT tagfondofalso expresion RPARENT tagsacafondo\n\t| f2\n\t| f3\n\t| f6\n\t| f7f2 : varctef3 : IDtagfondofalso : emptytagsacafondo : emptyf7 : ID LBRACKET tagrevisadime exp tagmetedim f8f8 : COMA tagotradim exp tagmetedim f8\n\t| RBRACKET tagterminadimtagrevisadime : emptytagmetedim : emptytagotradim : emptytagterminadim : emptyf6 : llamafuncionguardafunc : emptyestatuto : asignacion\n\t| print\n\t| ciclowhile\n\t| ciclodowhile\n\t| ciclofor\n\t| read\n\t| readint\n\t| comentario\n\t| cuadrado\n\t| triangulo\n\t| casa\n\t| rectangulo\n\t| cubo\n\t| trapecio\n\t| estrella\n\t| mueve\n\t| levanta\n\t| apoya\n\t| dimension\n\t| llamafuncion\n\t| return\n\t| ifcomentario : COMENTARIOvarcte : ENTERO tagint\n\t| FLOTANTE tagfloat\n\t| CADENA tagcad\n\t| CARACTER tagcar\n\t| TRUE tagbol\n\t| FALSE tagboltagint : emptytagfloat : emptytagcad : emptytagcar : emptytagbol : emptyciclowhile : WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhiletaginiciawhile : emptytagwhile : emptytagregresawhile : emptyciclodowhile : DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMAtaginiciado : emptytagcondiciondo : emptyread : READ LPARENT RPARENT PUNTOCOMAreadint : READINT LPARENT RPARENT PUNTOCOMAciclofor : FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafortagevaluafor : emptytagterminafor : emptytagespera : emptytagasigna : emptyif : IF LPARENT expresion tagif RPARENT bloque if2if2 : tagterminaif\n\t| ELSE tagelse bloque tagterminaiftagif : emptytagelse : emptytagterminaif : emptyreturn : RETURN llegoRet expresion PUNTOCOMAllegoRet : emptycuadrado : CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMAtagcuadro : emptytriangulo : TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMAtagtriangulo : emptyrectangulo : RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMAcasa : CASA LPARENT exp COMA exp RPARENT PUNTOCOMAestrella : ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMAtagestrella : emptycubo : CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMAtagcubo : emptymueve : MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMAtagmueve : emptylevanta : LEVANTA LPARENT RPARENT PUNTOCOMAapoya : APOYA LPARENT RPARENT PUNTOCOMAtrapecio : TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMAdimension : DIMENSION LPARENT exp RPARENT PUNTOCOMAfunction : FUNCTION pfuncpfunc : tipo ID buildFunc LPARENT funct11\n\t| VOID ID buildFunc LPARENT funct11buildFunc : emptyfunct11 : function4funct11 : initParamTable funct2initParamTable : emptyfunct2 : tipo ID initParams funct3initParams : emptyfunct3 : COMA funct2funct3 : function4function4 : RPARENT initFunc bloque noinitFuncinitFunc : emptynoinitFunc : emptyllamafuncion : ID LPARENT tagverificafuncion llamaf11llamaf11 : llamaf2\n\t| llamaf4llamaf2 : exp tagrevisaparam llamaf3llamaf3 : COMA tagotroargumento llamaf2\n\t| llamaf4llamaf4 : RPARENT  tagterminallamada PUNTOCOMAtagverificafuncion : emptytagrevisaparam : emptytagotroargumento : emptytagterminallamada : emptyempty :'
    
_lr_action_items = {'DO':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,53,-202,-47,-122,-118,-112,-121,-126,-114,-111,53,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'RETURN':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,93,-202,-47,-122,-118,-112,-121,-126,-114,-111,93,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'READ':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,110,111,114,160,161,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,55,-202,-47,-122,-118,-112,-121,-126,-114,-111,55,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-202,-65,-15,-75,55,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'VOID':([27,],[42,]),'MUEVE':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,56,-202,-47,-122,-118,-112,-121,-126,-114,-111,56,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'IGUAL':([54,89,130,131,175,350,352,394,395,433,],[110,-202,110,-66,-202,-96,-202,-98,-102,-97,]),'LBRACKET':([25,37,38,89,153,175,],[-202,-48,47,129,129,129,]),'WHILE':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,159,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,58,-202,-47,-122,-118,-112,-121,-126,-114,-111,58,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,215,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'PROGRAM':([0,],[2,]),'PRINT':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,61,-202,-47,-122,-118,-112,-121,-126,-114,-111,61,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'TRAPECIO':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,60,-202,-47,-122,-118,-112,-121,-126,-114,-111,60,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'DIV':([140,141,142,143,145,147,148,149,150,151,152,153,154,156,192,193,196,197,198,199,200,201,202,203,204,207,208,248,249,251,316,346,347,348,350,352,358,359,394,395,412,433,],[-88,-89,-90,-91,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,-132,-138,-130,-136,266,-86,-128,-134,-131,-137,-133,-135,-129,-192,-193,-191,-202,-197,-196,-194,-96,-202,-87,-95,-98,-102,-195,-97,]),'TRUE':([47,93,101,102,110,111,113,119,120,121,123,124,127,128,129,132,133,134,135,136,138,146,160,161,165,174,178,179,180,181,182,194,195,216,217,218,220,221,223,224,227,232,233,234,235,236,237,241,242,243,246,258,259,263,264,266,269,271,277,278,279,280,285,286,287,289,290,291,292,293,294,295,313,314,315,317,318,319,320,321,327,342,343,349,351,355,390,391,392,393,],[-202,-202,-52,145,-202,-65,145,145,145,145,145,145,145,-202,-202,145,145,145,145,-160,145,-202,-75,145,145,145,-198,145,145,-99,-64,145,-94,-71,-202,-202,-146,145,145,-202,-202,-202,-202,-202,-202,-202,-202,145,145,145,145,-147,145,-202,-202,-202,-202,-202,145,-74,-76,-73,145,-28,145,145,-39,145,145,145,145,145,145,-45,145,145,-85,145,145,-56,-72,145,145,-202,-202,145,145,-200,145,-101,]),'COMENTARIO':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,79,-202,-47,-122,-118,-112,-121,-126,-114,-111,79,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'MULT':([140,141,142,143,145,147,148,149,150,151,152,153,154,156,192,193,196,197,198,199,200,201,202,203,204,207,208,248,249,251,316,346,347,348,350,352,358,359,394,395,412,433,],[-88,-89,-90,-91,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,-132,-138,-130,-136,269,-86,-128,-134,-131,-137,-133,-135,-129,-192,-193,-191,-202,-197,-196,-194,-96,-202,-87,-95,-98,-102,-195,-97,]),'STRING':([8,21,27,34,46,48,103,104,157,158,212,213,270,363,404,417,],[13,13,13,13,13,-47,-49,-58,-202,-202,13,-183,-50,-54,13,-55,]),'TRIANGULO':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,78,-202,-47,-122,-118,-112,-121,-126,-114,-111,78,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'LPARENT':([47,51,52,55,56,58,60,61,67,75,78,81,82,87,89,90,91,92,93,96,97,98,101,102,105,106,107,110,111,113,117,118,119,120,121,123,124,127,128,129,132,133,134,135,136,138,146,153,160,161,165,174,178,179,180,181,182,194,195,215,216,217,218,220,221,223,224,227,232,233,234,235,236,237,241,242,243,246,258,259,263,264,266,269,271,277,278,279,280,285,286,287,289,290,291,292,293,294,295,313,314,315,317,318,319,320,321,327,342,343,349,351,355,390,391,392,393,],[-202,-202,-202,112,113,-202,119,120,121,123,124,125,126,127,128,132,133,134,-202,137,138,139,-52,146,157,-180,158,-202,-65,146,165,-140,146,146,146,146,146,146,-202,-202,146,146,146,146,-160,146,-202,128,-75,146,146,146,-198,146,146,-99,-64,146,-94,277,-71,-202,-202,-146,146,146,-202,-202,-202,-202,-202,-202,-202,-202,146,146,146,146,-147,146,-202,-202,-202,-202,-202,146,-74,-76,-73,146,-28,146,146,-39,146,146,146,146,146,146,-45,146,146,-85,146,146,-56,-72,146,146,-202,-202,146,146,-200,146,-101,]),'CASA':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,67,-202,-47,-122,-118,-112,-121,-126,-114,-111,67,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'PUNTOCOMA':([25,37,38,49,50,140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,162,167,170,176,186,187,189,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,219,225,226,228,238,239,240,247,248,249,251,253,256,261,262,267,268,272,279,281,288,302,303,310,311,316,322,323,328,331,332,333,335,336,337,338,339,340,341,345,346,347,348,350,352,356,357,358,359,360,361,370,371,374,375,376,377,378,379,380,381,382,383,394,395,405,409,410,412,416,420,421,422,423,427,428,433,],[-202,-48,-202,104,-51,-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,220,-202,-202,245,257,258,260,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-202,-23,-24,-25,-31,-32,-30,-202,-192,-193,-191,308,-202,-41,-44,-84,-81,-202,-76,327,334,346,-201,354,-168,-202,104,-57,-202,373,-202,-202,-202,-202,-202,-202,-202,-202,384,389,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,406,-172,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,-98,-102,419,-202,-202,-195,-202,429,-170,-164,430,-162,435,-97,]),'LT':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,170,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,248,249,251,261,262,267,268,316,346,347,348,350,352,356,357,358,359,360,361,394,395,412,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,236,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-192,-193,-191,-41,-44,-84,-81,-202,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,-98,-102,-195,-97,]),'RESTA':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,248,249,251,267,268,316,346,347,348,350,352,358,359,360,361,394,395,412,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,263,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-192,-193,-191,-84,-81,-202,-197,-196,-194,-96,-202,-87,-95,-83,-82,-98,-102,-195,-97,]),'DIMENSION':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,90,-202,-47,-122,-118,-112,-121,-126,-114,-111,90,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'CADENA':([47,93,101,102,110,111,113,119,120,121,123,124,127,128,129,132,133,134,135,136,138,146,160,161,165,174,178,179,180,181,182,194,195,216,217,218,220,221,223,224,227,232,233,234,235,236,237,241,242,243,246,258,259,263,264,266,269,271,277,278,279,280,285,286,287,289,290,291,292,293,294,295,313,314,315,317,318,319,320,321,327,342,343,349,351,355,390,391,392,393,],[-202,-202,-52,148,-202,-65,148,148,148,148,148,148,148,-202,-202,148,148,148,148,-160,148,-202,-75,148,148,148,-198,148,148,-99,-64,148,-94,-71,-202,-202,-146,148,148,-202,-202,-202,-202,-202,-202,-202,-202,148,148,148,148,-147,148,-202,-202,-202,-202,-202,148,-74,-76,-73,148,-28,148,148,-39,148,148,148,148,148,148,-45,148,148,-85,148,148,-56,-72,148,148,-202,-202,148,148,-200,148,-101,]),'DOSPUNTOS':([5,6,7,],[-202,8,-2,]),'APOYA':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,98,-202,-47,-122,-118,-112,-121,-126,-114,-111,98,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'DIF':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,170,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,248,249,251,261,262,267,268,316,346,347,348,350,352,356,357,358,359,360,361,394,395,412,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,233,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-192,-193,-191,-41,-44,-84,-81,-202,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,-98,-102,-195,-97,]),'LEVANTA':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,82,-202,-47,-122,-118,-112,-121,-126,-114,-111,82,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'$end':([1,14,15,16,23,28,29,31,35,36,39,43,114,164,],[0,-1,-3,-5,-202,-4,-10,-6,-11,-14,-9,-7,-15,-21,]),'FUNCTION':([8,12,20,21,26,32,33,41,48,103,104,114,164,209,210,214,270,276,324,363,364,365,402,403,417,418,],[-202,-8,27,-202,27,-8,27,-177,-47,-49,-58,-15,-21,-181,-178,-179,-50,-182,-202,-54,-188,-190,-187,-184,-55,-186,]),'AND':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,167,170,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,238,239,240,248,249,251,261,262,267,268,316,335,336,337,338,339,340,346,347,348,350,352,356,357,358,359,360,361,377,378,379,380,381,382,383,394,395,412,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,224,-202,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-31,-32,-30,-192,-193,-191,-41,-44,-84,-81,-202,-202,-202,-202,-202,-202,-202,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,-36,-40,-37,-35,-38,-34,-33,-98,-102,-195,-97,]),'GT':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,170,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,248,249,251,261,262,267,268,316,346,347,348,350,352,356,357,358,359,360,361,394,395,412,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,237,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-192,-193,-191,-41,-44,-84,-81,-202,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,-98,-102,-195,-97,]),'LKEY':([8,9,12,20,21,22,24,26,30,32,33,41,48,53,103,104,108,109,114,164,209,210,211,214,270,273,274,276,283,309,324,329,330,363,364,365,398,402,403,411,414,415,417,418,],[-202,-202,-8,-202,-202,34,-16,-202,-13,-8,-202,-177,-47,-202,-49,-58,-144,-202,-15,-21,-181,-178,-202,-179,-50,-202,-189,-182,-202,-202,-202,-202,-141,-54,-188,-190,-202,-187,-184,-202,-202,-157,-55,-186,]),'FOR':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,81,-202,-47,-122,-118,-112,-121,-126,-114,-111,81,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'READINT':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,110,111,114,160,161,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,96,-202,-47,-122,-118,-112,-121,-126,-114,-111,96,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-202,-65,-15,-75,96,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'CUBO':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,75,-202,-47,-122,-118,-112,-121,-126,-114,-111,75,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'RKEY':([34,44,45,46,48,57,59,62,63,64,65,66,68,69,70,71,72,73,74,76,77,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,115,116,122,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,-202,-202,-47,-202,-122,-118,-112,-121,-126,-114,-111,-202,-120,-107,-124,-113,-116,-106,-20,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,164,-22,-19,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'ELSE':([114,164,353,],[-15,-21,398,]),'ESTRELLA':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,92,-202,-47,-122,-118,-112,-121,-126,-114,-111,92,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'GE':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,170,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,248,249,251,261,262,267,268,316,346,347,348,350,352,356,357,358,359,360,361,394,395,412,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,232,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-192,-193,-191,-41,-44,-84,-81,-202,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,-98,-102,-195,-97,]),'LE':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,170,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,248,249,251,261,262,267,268,316,346,347,348,350,352,356,357,358,359,360,361,394,395,412,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,234,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-192,-193,-191,-41,-44,-84,-81,-202,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,-98,-102,-195,-97,]),'CARACTER':([47,93,101,102,110,111,113,119,120,121,123,124,127,128,129,132,133,134,135,136,138,146,160,161,165,174,178,179,180,181,182,194,195,216,217,218,220,221,223,224,227,232,233,234,235,236,237,241,242,243,246,258,259,263,264,266,269,271,277,278,279,280,285,286,287,289,290,291,292,293,294,295,313,314,315,317,318,319,320,321,327,342,343,349,351,355,390,391,392,393,],[-202,-202,-52,152,-202,-65,152,152,152,152,152,152,152,-202,-202,152,152,152,152,-160,152,-202,-75,152,152,152,-198,152,152,-99,-64,152,-94,-71,-202,-202,-146,152,152,-202,-202,-202,-202,-202,-202,-202,-202,152,152,152,152,-147,152,-202,-202,-202,-202,-202,152,-74,-76,-73,152,-28,152,152,-39,152,152,152,152,152,152,-45,152,152,-85,152,152,-56,-72,152,152,-202,-202,152,152,-200,152,-101,]),'COMA':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,163,166,171,172,173,177,188,190,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,248,249,250,251,252,261,262,267,268,297,298,304,305,306,307,312,316,325,346,347,348,350,352,356,357,358,359,360,361,362,366,367,394,395,401,412,413,425,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,-202,221,223,241,242,243,246,259,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,271,-53,-135,-129,-192,-193,-202,-191,-202,-41,-44,-84,-81,342,343,349,-199,351,-100,355,-202,-202,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,-202,-185,404,-98,-102,271,-195,-202,351,-97,]),'ID':([2,3,4,10,11,13,17,18,19,34,40,42,44,45,46,47,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,93,94,95,99,100,101,102,103,104,110,111,113,114,119,120,121,123,124,125,127,128,129,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,160,161,164,165,167,168,170,174,178,179,180,181,182,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,207,208,216,217,218,220,221,223,224,225,226,227,228,229,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,248,249,251,257,258,259,260,261,262,263,264,266,267,268,269,270,271,275,277,278,279,280,285,286,287,289,290,291,292,293,294,295,299,300,308,313,314,315,316,317,318,319,320,321,327,332,333,334,335,336,337,338,339,340,342,343,346,347,348,349,350,351,352,353,354,355,356,357,358,359,360,361,363,372,373,374,375,376,377,378,379,380,381,382,383,384,389,390,391,392,393,394,395,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,433,434,435,436,437,],[-202,5,-12,-61,25,-62,-59,-60,-63,-202,51,52,-18,89,-202,-202,-47,-122,-118,-112,-121,-126,-114,-111,89,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-202,-115,-105,-123,-17,-52,153,-49,-58,-202,-65,153,-15,153,153,153,153,153,175,153,-202,-202,153,153,153,153,-160,153,-88,-89,-90,-91,-202,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,-75,153,-21,153,-202,-77,-202,153,-198,153,153,-99,-64,-202,-46,-132,-138,153,-94,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-71,-202,-202,-146,153,153,-202,-23,-24,-202,-25,-78,-202,-202,-202,-202,-202,-202,-31,-32,-30,153,153,153,-202,-173,153,-192,-193,-191,-159,-147,153,-174,-41,-44,-202,-202,-202,-84,-81,-202,-50,-202,325,153,-74,-76,-73,153,-28,153,153,-39,153,153,153,153,153,175,-149,-176,153,-45,153,-202,153,-85,153,153,-56,-72,-202,-202,-79,-202,-202,-202,-202,-202,-202,153,153,-197,-196,-194,-202,-96,-202,-202,-202,-167,153,-43,-42,-87,-95,-83,-82,-54,-202,-175,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,-166,-165,153,-200,153,-101,-98,-102,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-97,-155,-161,-148,-150,]),'IF':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,91,-202,-47,-122,-118,-112,-121,-126,-114,-111,91,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'RPARENT':([111,112,126,128,137,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,157,158,167,169,170,178,179,182,183,184,185,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,216,217,218,220,222,225,226,228,230,231,238,239,240,248,249,250,251,254,255,258,261,262,265,267,268,278,279,280,282,284,296,301,304,305,316,325,326,327,332,333,335,336,337,338,339,340,344,346,347,348,350,352,356,357,358,359,360,361,366,367,368,369,374,375,376,377,378,379,380,381,382,383,385,386,387,388,394,395,400,412,433,],[-65,162,176,-202,187,189,-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,211,211,-202,-202,-202,-198,247,-64,253,-202,256,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-71,-202,-202,-146,283,-23,-24,-25,288,-80,-31,-32,-30,-192,-193,-202,-191,309,-156,-147,-41,-44,316,-84,-81,-74,-76,-73,328,331,341,345,247,-199,-202,-202,-202,-72,-202,-202,-202,-202,-202,-202,-202,-202,-202,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,-185,211,405,-145,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,409,410,411,-151,-98,-102,416,-195,-97,]),'CHAR':([8,21,27,34,46,48,103,104,157,158,212,213,270,363,404,417,],[10,10,10,10,10,-47,-49,-58,-202,-202,10,-183,-50,-54,10,-55,]),'FALSE':([47,93,101,102,110,111,113,119,120,121,123,124,127,128,129,132,133,134,135,136,138,146,160,161,165,174,178,179,180,181,182,194,195,216,217,218,220,221,223,224,227,232,233,234,235,236,237,241,242,243,246,258,259,263,264,266,269,271,277,278,279,280,285,286,287,289,290,291,292,293,294,295,313,314,315,317,318,319,320,321,327,342,343,349,351,355,390,391,392,393,],[-202,-202,-52,154,-202,-65,154,154,154,154,154,154,154,-202,-202,154,154,154,154,-160,154,-202,-75,154,154,154,-198,154,154,-99,-64,154,-94,-71,-202,-202,-146,154,154,-202,-202,-202,-202,-202,-202,-202,-202,154,154,154,154,-147,154,-202,-202,-202,-202,-202,154,-74,-76,-73,154,-28,154,154,-39,154,154,154,154,154,154,-45,154,154,-85,154,154,-56,-72,154,154,-202,-202,154,154,-200,154,-101,]),'INT':([8,21,27,34,46,48,103,104,157,158,212,213,270,363,404,417,],[17,17,17,17,17,-47,-49,-58,-202,-202,17,-183,-50,-54,17,-55,]),'FLOAT':([8,21,27,34,46,48,103,104,157,158,212,213,270,363,404,417,],[18,18,18,18,18,-47,-49,-58,-202,-202,18,-183,-50,-54,18,-55,]),'SAME':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,170,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,248,249,251,261,262,267,268,316,346,347,348,350,352,356,357,358,359,360,361,394,395,412,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,235,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-192,-193,-191,-41,-44,-84,-81,-202,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,-98,-102,-195,-97,]),'CUADRADO':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,97,-202,-47,-122,-118,-112,-121,-126,-114,-111,97,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'BOOL':([8,21,27,34,46,48,103,104,157,158,212,213,270,363,404,417,],[19,19,19,19,19,-47,-49,-58,-202,-202,19,-183,-50,-54,19,-55,]),'SUMA':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,248,249,251,267,268,316,346,347,348,350,352,358,359,360,361,394,395,412,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,264,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-192,-193,-191,-84,-81,-202,-197,-196,-194,-96,-202,-87,-95,-83,-82,-98,-102,-195,-97,]),'RECTANGULO':([34,44,45,46,48,59,62,63,64,65,66,68,69,70,71,72,73,74,76,79,80,83,84,85,86,88,94,95,99,100,103,104,111,114,164,168,182,216,217,218,220,229,245,248,249,251,257,258,260,270,278,279,280,308,327,334,346,347,348,353,354,363,372,373,384,389,396,397,399,406,407,408,412,417,419,424,426,429,430,431,432,434,435,436,437,],[-202,-18,87,-202,-47,-122,-118,-112,-121,-126,-114,-111,87,-120,-107,-124,-113,-116,-106,-127,-125,-110,-117,-109,-119,-108,-115,-105,-123,-17,-49,-58,-65,-15,-21,-77,-64,-71,-202,-202,-146,-78,-173,-192,-193,-191,-159,-147,-174,-50,-74,-76,-73,-176,-72,-79,-197,-196,-194,-202,-167,-54,-202,-175,-166,-165,-153,-154,-158,-171,-139,-142,-195,-55,-143,-202,-202,-169,-163,-202,-152,-155,-161,-148,-150,]),'FLOTANTE':([47,93,101,102,110,111,113,119,120,121,123,124,127,128,129,132,133,134,135,136,138,146,160,161,165,174,178,179,180,181,182,194,195,216,217,218,220,221,223,224,227,232,233,234,235,236,237,241,242,243,246,258,259,263,264,266,269,271,277,278,279,280,285,286,287,289,290,291,292,293,294,295,313,314,315,317,318,319,320,321,327,342,343,349,351,355,390,391,392,393,],[-202,-202,-52,156,-202,-65,156,156,156,156,156,156,156,-202,-202,156,156,156,156,-160,156,-202,-75,156,156,156,-198,156,156,-99,-64,156,-94,-71,-202,-202,-146,156,156,-202,-202,-202,-202,-202,-202,-202,-202,156,156,156,156,-147,156,-202,-202,-202,-202,-202,156,-74,-76,-73,156,-28,156,156,-39,156,156,156,156,156,156,-45,156,156,-85,156,156,-56,-72,156,156,-202,-202,156,156,-200,156,-101,]),'RBRACKET':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,190,191,192,193,196,197,198,199,200,201,202,203,204,205,206,207,208,248,249,251,252,261,262,267,268,306,307,316,346,347,348,350,352,356,357,358,359,360,361,362,394,395,401,412,413,425,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,-202,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,272,-53,-135,-129,-192,-193,-191,-202,-41,-44,-84,-81,352,-100,-202,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,-202,-98,-102,272,-195,-202,352,-97,]),'ENTERO':([47,93,101,102,110,111,113,119,120,121,123,124,127,128,129,132,133,134,135,136,138,146,160,161,165,174,178,179,180,181,182,194,195,216,217,218,220,221,223,224,227,232,233,234,235,236,237,241,242,243,246,258,259,263,264,266,269,271,277,278,279,280,285,286,287,289,290,291,292,293,294,295,313,314,315,317,318,319,320,321,327,342,343,349,351,355,390,391,392,393,],[-202,-202,-52,151,-202,-65,151,151,151,151,151,151,151,-202,-202,151,151,151,151,-160,151,-202,-75,151,151,151,-198,151,151,-99,-64,151,-94,-71,-202,-202,-146,151,151,-202,-202,-202,-202,-202,-202,-202,-202,151,151,151,151,-147,151,-202,-202,-202,-202,-202,151,-74,-76,-73,151,-28,151,151,-39,151,151,151,151,151,151,-45,151,151,-85,151,151,-56,-72,151,151,-202,-202,151,151,-200,151,-101,]),'OR':([140,141,142,143,144,145,147,148,149,150,151,152,153,154,156,167,170,190,191,192,193,196,197,198,199,200,201,202,203,204,207,208,238,239,240,248,249,251,261,262,267,268,316,335,336,337,338,339,340,346,347,348,350,352,356,357,358,359,360,361,377,378,379,380,381,382,383,394,395,412,433,],[-88,-89,-90,-91,-202,-202,-92,-202,-103,-202,-202,-202,-93,-202,-202,227,-202,-202,-46,-132,-138,-130,-136,-202,-86,-128,-134,-131,-137,-133,-135,-129,-31,-32,-30,-192,-193,-191,-41,-44,-84,-81,-202,-202,-202,-202,-202,-202,-202,-197,-196,-194,-96,-202,-43,-42,-87,-95,-83,-82,-36,-40,-37,-35,-38,-34,-33,-98,-102,-195,-97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'tagsacrel':([335,336,337,338,339,340,],[377,379,380,381,382,383,]),'tagasigna':([424,],[431,]),'tagfondofalso':([146,],[194,]),'tagmetedim':([252,413,],[306,425,]),'expre2':([167,],[226,]),'bloque':([9,109,273,309,329,411,414,],[23,159,324,353,372,424,426,]),'taginiciawhile':([58,],[117,]),'comentario':([45,69,],[63,63,]),'if2':([353,],[396,]),'tagop':([263,264,],[313,315,]),'tagrevisaparam':([250,],[304,]),'program':([0,],[1,]),'rectangulo':([45,69,],[74,74,]),'factor':([102,113,119,120,121,123,124,127,132,133,134,135,138,161,165,174,179,180,194,221,223,241,242,243,246,259,277,285,287,289,291,292,293,294,295,313,315,317,319,320,342,343,355,390,392,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'saveMemNormal':([38,],[49,]),'return':([45,69,],[80,80,]),'p3':([8,21,],[15,31,]),'read':([45,69,161,],[83,83,218,]),'cubo':([45,69,],[84,84,]),'buildFunc':([51,52,],[105,107,]),'estrella':([45,69,],[86,86,]),'meteid':([89,175,],[130,130,]),'decDimensionada':([47,],[102,]),'expresion':([120,133,135,161,165,174,194,277,285,287,],[169,184,186,219,222,244,265,326,332,333,]),'tagbol':([145,154,],[192,204,]),'p4':([20,26,33,],[28,39,43,]),'tagcad':([148,],[196,]),'tagevaluafor':([244,],[299,]),'tagtriangulo':([410,],[423,]),'tagimprime':([169,],[230,]),'tagcar':([152,],[202,]),'taginiciado':([53,],[109,]),'tagespera':([344,],[387,]),'llegoRet':([93,],[135,]),'tagwhile':([283,],[329,]),'initTop':([5,],[6,]),'b5':([57,],[114,]),'asigf2':([161,],[216,]),'apoya':([45,69,],[59,59,]),'b3':([34,46,],[45,100,]),'tagterminafor':([431,],[436,]),'tagsacops':([144,],[190,]),'varcte':([102,113,119,120,121,123,124,127,132,133,134,135,138,161,165,174,179,180,194,221,223,241,242,243,246,259,277,285,287,289,291,292,293,294,295,313,315,317,319,320,342,343,355,390,392,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'tipo':([8,21,27,34,46,212,404,],[11,11,40,11,11,275,275,]),'readint':([45,69,161,],[68,68,217,]),'tagig':([217,218,219,],[278,280,281,]),'SigDimension':([271,],[320,]),'funct2':([212,404,],[276,418,]),'funct3':([367,],[403,]),'declafinal':([49,322,],[103,363,]),'print':([45,69,],[76,76,]),'tagsacopm':([150,],[198,]),'tagcuadro':([416,],[428,]),'tagrel':([232,233,234,235,236,237,],[289,291,292,293,294,295,]),'initFunc':([211,],[273,]),'tagelse':([398,],[414,]),'ciclofor':([45,69,],[85,85,]),'tagverificafuncion':([128,],[179,]),'tagm':([266,269,],[317,319,]),'te2':([198,],[268,]),'e3':([170,],[238,]),'e2':([170,],[240,]),'tagsacalog':([332,333,],[374,376,]),'initParams':([325,],[367,]),'declaracion':([8,21,34,46,],[21,21,46,46,]),'tagmueve':([328,],[370,]),'cuadrupro2':([8,20,26,33,],[9,9,9,9,]),'tagterminallamada':([247,],[302,]),'guardaMemDimen':([272,],[322,]),'tagestrella':([256,],[310,]),'termino':([102,113,119,120,121,123,124,127,132,133,134,135,138,161,165,174,179,180,194,221,223,241,242,243,246,259,277,285,287,289,291,292,293,294,295,313,315,317,319,320,342,343,355,390,392,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,360,361,144,144,144,144,144,144,]),'tagfloat':([156,],[208,]),'ciclowhile':([45,69,],[71,71,]),'levanta':([45,69,],[64,64,]),'triangulo':([45,69,],[66,66,]),'exp2':([190,],[261,]),'estatuto':([45,69,],[69,69,]),'tagcondiciondo':([326,],[368,]),'cuadrado':([45,69,],[73,73,]),'delMem':([23,],[35,]),'empty':([2,5,8,9,20,21,23,25,26,33,34,38,45,46,47,51,52,53,57,58,69,89,93,109,110,128,129,144,145,146,148,150,151,152,154,155,156,157,158,167,169,170,175,184,190,198,211,217,218,219,224,227,232,233,234,235,236,237,244,247,250,252,256,263,264,266,269,271,272,273,283,309,316,324,325,326,328,329,332,333,335,336,337,338,339,340,344,349,351,352,353,362,372,398,409,410,411,413,414,416,424,426,431,],[4,7,12,24,30,32,36,37,30,30,44,50,77,44,101,106,106,108,116,118,77,131,136,24,160,178,181,191,193,195,197,199,201,203,193,206,207,213,213,228,231,239,131,255,262,267,274,279,279,279,286,286,290,290,290,290,290,290,300,303,305,307,311,314,314,318,318,321,323,24,330,24,359,365,366,369,371,24,375,375,378,378,378,378,378,378,388,391,393,395,399,206,408,415,421,422,24,307,24,427,432,399,437,]),'function':([20,26,33,],[26,26,26,]),'expresion2':([120,133,135,161,165,174,194,277,285,287,],[167,167,167,167,167,167,167,167,167,167,]),'tagterminaif':([353,426,],[397,434,]),'tagterminadim':([352,],[394,]),'cuadrupro':([2,],[3,]),'tagint':([151,],[200,]),'p2':([8,],[14,]),'b4':([45,69,],[57,122,]),'casa':([45,69,],[94,94,]),'asignacion':([45,69,125,299,],[95,95,174,344,]),'p5':([8,20,26,33,],[16,29,29,29,]),'llamaf2':([179,390,],[248,412,]),'llamaf3':([304,],[348,]),'llamaf4':([179,304,],[249,347,]),'tagcubo':([409,],[420,]),'noinitFunc':([324,],[364,]),'llamaf11':([179,],[251,]),'iniEnv':([9,109,273,309,329,411,414,],[22,22,22,22,22,22,22,]),'f2':([102,113,119,120,121,123,124,127,132,133,134,135,138,161,165,174,179,180,194,221,223,241,242,243,246,259,277,285,287,289,291,292,293,294,295,313,315,317,319,320,342,343,355,390,392,],[140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,140,]),'f3':([102,113,119,120,121,123,124,127,132,133,134,135,138,161,165,174,179,180,194,221,223,241,242,243,246,259,277,285,287,289,291,292,293,294,295,313,315,317,319,320,342,343,355,390,392,],[141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,141,]),'f6':([102,113,119,120,121,123,124,127,132,133,134,135,138,161,165,174,179,180,194,221,223,241,242,243,246,259,277,285,287,289,291,292,293,294,295,313,315,317,319,320,342,343,355,390,392,],[142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,142,]),'f7':([45,69,102,113,119,120,121,123,124,125,127,132,133,134,135,138,161,165,174,179,180,194,221,223,241,242,243,246,259,277,285,287,289,291,292,293,294,295,299,313,315,317,319,320,342,343,355,390,392,],[54,54,143,143,143,143,143,143,143,54,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,54,143,143,143,143,143,143,143,143,143,143,]),'f8':([306,425,],[350,433,]),'trapecio':([45,69,],[62,62,]),'tagsacafondo':([316,],[358,]),'if':([45,69,],[65,65,]),'pfunc':([27,],[41,]),'mueve':([45,69,],[70,70,]),'decla1':([38,],[48,]),'llamafuncion':([45,69,102,113,119,120,121,123,124,127,132,133,134,135,138,161,165,174,179,180,194,221,223,241,242,243,246,259,277,285,287,289,291,292,293,294,295,313,315,317,319,320,342,343,355,390,392,],[72,72,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,149,]),'decla2':([205,401,],[270,417,]),'initParamTable':([157,158,],[212,212,]),'tagotradim':([351,],[392,]),'tagotroargumento':([349,],[390,]),'tagrevisadime':([129,],[180,]),'saveLimSup':([155,362,],[205,401,]),'tagmeteig':([110,],[161,]),'funct11':([157,158,],[210,214,]),'pr3':([169,],[229,]),'pr2':([120,],[168,]),'ciclodowhile':([45,69,],[88,88,]),'asigfinal':([54,130,],[111,182,]),'function4':([157,158,367,],[209,209,402,]),'expre':([167,],[225,]),'tagmetelog':([224,227,],[285,287,]),'dimension':([45,69,],[99,99,]),'tagif':([184,],[254,]),'savevar':([25,],[38,]),'exp':([102,113,119,120,121,123,124,127,132,133,134,135,138,161,165,174,179,180,194,221,223,241,242,243,246,259,277,285,287,289,291,292,293,294,295,313,315,320,342,343,355,390,392,],[155,163,166,170,171,172,173,177,183,170,185,170,188,170,170,170,250,252,170,282,284,296,297,298,301,312,170,170,170,335,336,337,338,339,340,356,357,362,385,386,400,250,413,]),'tagregresawhile':([372,],[407,]),'initFunctions':([8,21,],[20,33,]),'recEnv':([57,],[115,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2','program',6,'p_program','analizadorSintactico.py',437),
  ('initTop -> empty','initTop',1,'p_initTop','analizadorSintactico.py',442),
  ('p2 -> p3','p2',1,'p_p2','analizadorSintactico.py',450),
  ('p2 -> initFunctions p4','p2',2,'p_p2','analizadorSintactico.py',451),
  ('p2 -> p5','p2',1,'p_p2','analizadorSintactico.py',452),
  ('p3 -> declaracion p3','p3',2,'p_p3','analizadorSintactico.py',455),
  ('p3 -> initFunctions p4','p3',2,'p_p3','analizadorSintactico.py',456),
  ('initFunctions -> empty','initFunctions',1,'p_initFunctions','analizadorSintactico.py',459),
  ('p4 -> function p4','p4',2,'p_p4','analizadorSintactico.py',465),
  ('p4 -> p5','p4',1,'p_p4','analizadorSintactico.py',466),
  ('p5 -> cuadrupro2 bloque delMem','p5',3,'p_p5','analizadorSintactico.py',469),
  ('cuadrupro -> empty','cuadrupro',1,'p_cuadrupro','analizadorSintactico.py',472),
  ('cuadrupro2 -> empty','cuadrupro2',1,'p_cuadrupro2','analizadorSintactico.py',478),
  ('delMem -> empty','delMem',1,'p_delMem','analizadorSintactico.py',485),
  ('bloque -> iniEnv LKEY b3 b4 b5','bloque',5,'p_bloque','analizadorSintactico.py',491),
  ('iniEnv -> empty','iniEnv',1,'p_iniEnv','analizadorSintactico.py',494),
  ('b3 -> declaracion b3','b3',2,'p_b3','analizadorSintactico.py',505),
  ('b3 -> empty','b3',1,'p_b3','analizadorSintactico.py',506),
  ('b4 -> estatuto b4','b4',2,'p_b4','analizadorSintactico.py',509),
  ('b4 -> empty','b4',1,'p_b4','analizadorSintactico.py',510),
  ('b5 -> recEnv RKEY','b5',2,'p_b5','analizadorSintactico.py',513),
  ('recEnv -> empty','recEnv',1,'p_recEnv','analizadorSintactico.py',516),
  ('expresion -> expresion2 expre','expresion',2,'p_expresion','analizadorSintactico.py',536),
  ('expre -> expre2','expre',1,'p_expre','analizadorSintactico.py',539),
  ('expre -> empty','expre',1,'p_expre','analizadorSintactico.py',540),
  ('expre2 -> AND tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',543),
  ('expre2 -> OR tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',544),
  ('tagmetelog -> empty','tagmetelog',1,'p_tagmetelog','analizadorSintactico.py',547),
  ('tagsacalog -> empty','tagsacalog',1,'p_tagsacalog','analizadorSintactico.py',551),
  ('expresion2 -> exp e2','expresion2',2,'p_expresion2','analizadorSintactico.py',583),
  ('e2 -> e3','e2',1,'p_e2','analizadorSintactico.py',588),
  ('e2 -> empty','e2',1,'p_e2','analizadorSintactico.py',589),
  ('e3 -> GT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',592),
  ('e3 -> LT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',593),
  ('e3 -> LE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',594),
  ('e3 -> GE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',595),
  ('e3 -> DIF tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',596),
  ('e3 -> SAME tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',597),
  ('tagrel -> empty','tagrel',1,'p_tagrel','analizadorSintactico.py',600),
  ('tagsacrel -> empty','tagsacrel',1,'p_tagsacrel','analizadorSintactico.py',605),
  ('exp -> termino tagsacops exp2','exp',3,'p_exp','analizadorSintactico.py',637),
  ('exp2 -> SUMA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',641),
  ('exp2 -> RESTA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',642),
  ('exp2 -> empty','exp2',1,'p_exp2','analizadorSintactico.py',643),
  ('tagop -> empty','tagop',1,'p_tagop','analizadorSintactico.py',646),
  ('tagsacops -> empty','tagsacops',1,'p_tagsacops','analizadorSintactico.py',651),
  ('declaracion -> tipo ID savevar decla1','declaracion',4,'p_declaracion','analizadorSintactico.py',693),
  ('savevar -> empty','savevar',1,'p_savevar','analizadorSintactico.py',702),
  ('decla1 -> saveMemNormal declafinal','decla1',2,'p_decla1','analizadorSintactico.py',709),
  ('decla1 -> LBRACKET decDimensionada exp saveLimSup decla2','decla1',5,'p_decla1','analizadorSintactico.py',710),
  ('saveMemNormal -> empty','saveMemNormal',1,'p_saveMemNormal','analizadorSintactico.py',713),
  ('decDimensionada -> empty','decDimensionada',1,'p_decDimensionada','analizadorSintactico.py',721),
  ('saveLimSup -> empty','saveLimSup',1,'p_saveLimSup','analizadorSintactico.py',733),
  ('decla2 -> RBRACKET guardaMemDimen declafinal','decla2',3,'p_decla2','analizadorSintactico.py',749),
  ('decla2 -> COMA SigDimension exp saveLimSup decla2','decla2',5,'p_decla2','analizadorSintactico.py',750),
  ('SigDimension -> empty','SigDimension',1,'p_SigDimension','analizadorSintactico.py',757),
  ('guardaMemDimen -> empty','guardaMemDimen',1,'p_guardaMemDimen','analizadorSintactico.py',769),
  ('declafinal -> PUNTOCOMA','declafinal',1,'p_declafinal','analizadorSintactico.py',801),
  ('tipo -> INT','tipo',1,'p_tipo','analizadorSintactico.py',822),
  ('tipo -> FLOAT','tipo',1,'p_tipo','analizadorSintactico.py',823),
  ('tipo -> CHAR','tipo',1,'p_tipo','analizadorSintactico.py',824),
  ('tipo -> STRING','tipo',1,'p_tipo','analizadorSintactico.py',825),
  ('tipo -> BOOL','tipo',1,'p_tipo','analizadorSintactico.py',826),
  ('asignacion -> ID meteid asigfinal','asignacion',3,'p_asignacion','analizadorSintactico.py',836),
  ('asignacion -> f7 asigfinal','asignacion',2,'p_asignacion','analizadorSintactico.py',837),
  ('meteid -> empty','meteid',1,'p_meteid','analizadorSintactico.py',846),
  ('asig2 -> LBRACKET exp asig3','asig2',3,'p_asig2','analizadorSintactico.py',854),
  ('asig2 -> asigfinal','asig2',1,'p_asig2','analizadorSintactico.py',855),
  ('asig3 -> COMA exp asig3','asig3',3,'p_asig3','analizadorSintactico.py',858),
  ('asig3 -> RBRACKET asigfinal','asig3',2,'p_asig3','analizadorSintactico.py',859),
  ('asigfinal -> IGUAL tagmeteig asigf2','asigfinal',3,'p_asigfinal','analizadorSintactico.py',863),
  ('asigf2 -> expresion tagig PUNTOCOMA','asigf2',3,'p_asigf2','analizadorSintactico.py',867),
  ('asigf2 -> read tagig','asigf2',2,'p_asigf2','analizadorSintactico.py',868),
  ('asigf2 -> readint tagig','asigf2',2,'p_asigf2','analizadorSintactico.py',869),
  ('tagmeteig -> empty','tagmeteig',1,'p_tagmeteig','analizadorSintactico.py',872),
  ('tagig -> empty','tagig',1,'p_tagig','analizadorSintactico.py',877),
  ('print -> PRINT LPARENT pr2','print',3,'p_print','analizadorSintactico.py',904),
  ('pr2 -> expresion pr3','pr2',2,'p_pr2','analizadorSintactico.py',908),
  ('pr3 -> tagimprime RPARENT PUNTOCOMA','pr3',3,'p_pr3','analizadorSintactico.py',912),
  ('tagimprime -> empty','tagimprime',1,'p_tagimprime','analizadorSintactico.py',915),
  ('termino -> factor tagsacopm te2','termino',3,'p_termino','analizadorSintactico.py',921),
  ('te2 -> MULT tagm termino','te2',3,'p_te2','analizadorSintactico.py',925),
  ('te2 -> DIV tagm termino','te2',3,'p_te2','analizadorSintactico.py',926),
  ('te2 -> empty','te2',1,'p_te2','analizadorSintactico.py',927),
  ('tagm -> empty','tagm',1,'p_tagm','analizadorSintactico.py',932),
  ('tagsacopm -> empty','tagsacopm',1,'p_tagsacopm','analizadorSintactico.py',937),
  ('factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo','factor',5,'p_factor','analizadorSintactico.py',966),
  ('factor -> f2','factor',1,'p_factor','analizadorSintactico.py',967),
  ('factor -> f3','factor',1,'p_factor','analizadorSintactico.py',968),
  ('factor -> f6','factor',1,'p_factor','analizadorSintactico.py',969),
  ('factor -> f7','factor',1,'p_factor','analizadorSintactico.py',970),
  ('f2 -> varcte','f2',1,'p_f2','analizadorSintactico.py',979),
  ('f3 -> ID','f3',1,'p_f3','analizadorSintactico.py',985),
  ('tagfondofalso -> empty','tagfondofalso',1,'p_tagfondofalso','analizadorSintactico.py',992),
  ('tagsacafondo -> empty','tagsacafondo',1,'p_tagsacafondo','analizadorSintactico.py',996),
  ('f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8','f7',6,'p_f7','analizadorSintactico.py',1017),
  ('f8 -> COMA tagotradim exp tagmetedim f8','f8',5,'p_f8','analizadorSintactico.py',1021),
  ('f8 -> RBRACKET tagterminadim','f8',2,'p_f8','analizadorSintactico.py',1022),
  ('tagrevisadime -> empty','tagrevisadime',1,'p_tagrevisadime','analizadorSintactico.py',1025),
  ('tagmetedim -> empty','tagmetedim',1,'p_tagmetedim','analizadorSintactico.py',1037),
  ('tagotradim -> empty','tagotradim',1,'p_tagotradim','analizadorSintactico.py',1061),
  ('tagterminadim -> empty','tagterminadim',1,'p_tagterminadim','analizadorSintactico.py',1069),
  ('f6 -> llamafuncion','f6',1,'p_f6','analizadorSintactico.py',1090),
  ('guardafunc -> empty','guardafunc',1,'p_guardafunc','analizadorSintactico.py',1093),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','analizadorSintactico.py',1101),
  ('estatuto -> print','estatuto',1,'p_estatuto','analizadorSintactico.py',1102),
  ('estatuto -> ciclowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',1103),
  ('estatuto -> ciclodowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',1104),
  ('estatuto -> ciclofor','estatuto',1,'p_estatuto','analizadorSintactico.py',1105),
  ('estatuto -> read','estatuto',1,'p_estatuto','analizadorSintactico.py',1106),
  ('estatuto -> readint','estatuto',1,'p_estatuto','analizadorSintactico.py',1107),
  ('estatuto -> comentario','estatuto',1,'p_estatuto','analizadorSintactico.py',1108),
  ('estatuto -> cuadrado','estatuto',1,'p_estatuto','analizadorSintactico.py',1109),
  ('estatuto -> triangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',1110),
  ('estatuto -> casa','estatuto',1,'p_estatuto','analizadorSintactico.py',1111),
  ('estatuto -> rectangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',1112),
  ('estatuto -> cubo','estatuto',1,'p_estatuto','analizadorSintactico.py',1113),
  ('estatuto -> trapecio','estatuto',1,'p_estatuto','analizadorSintactico.py',1114),
  ('estatuto -> estrella','estatuto',1,'p_estatuto','analizadorSintactico.py',1115),
  ('estatuto -> mueve','estatuto',1,'p_estatuto','analizadorSintactico.py',1116),
  ('estatuto -> levanta','estatuto',1,'p_estatuto','analizadorSintactico.py',1117),
  ('estatuto -> apoya','estatuto',1,'p_estatuto','analizadorSintactico.py',1118),
  ('estatuto -> dimension','estatuto',1,'p_estatuto','analizadorSintactico.py',1119),
  ('estatuto -> llamafuncion','estatuto',1,'p_estatuto','analizadorSintactico.py',1120),
  ('estatuto -> return','estatuto',1,'p_estatuto','analizadorSintactico.py',1121),
  ('estatuto -> if','estatuto',1,'p_estatuto','analizadorSintactico.py',1122),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','analizadorSintactico.py',1130),
  ('varcte -> ENTERO tagint','varcte',2,'p_varcte','analizadorSintactico.py',1136),
  ('varcte -> FLOTANTE tagfloat','varcte',2,'p_varcte','analizadorSintactico.py',1137),
  ('varcte -> CADENA tagcad','varcte',2,'p_varcte','analizadorSintactico.py',1138),
  ('varcte -> CARACTER tagcar','varcte',2,'p_varcte','analizadorSintactico.py',1139),
  ('varcte -> TRUE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',1140),
  ('varcte -> FALSE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',1141),
  ('tagint -> empty','tagint',1,'p_tagint','analizadorSintactico.py',1144),
  ('tagfloat -> empty','tagfloat',1,'p_tagfloat','analizadorSintactico.py',1151),
  ('tagcad -> empty','tagcad',1,'p_tagcad','analizadorSintactico.py',1158),
  ('tagcar -> empty','tagcar',1,'p_tagcar','analizadorSintactico.py',1165),
  ('tagbol -> empty','tagbol',1,'p_tagbol','analizadorSintactico.py',1172),
  ('ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile','ciclowhile',8,'p_ciclowhile','analizadorSintactico.py',1181),
  ('taginiciawhile -> empty','taginiciawhile',1,'p_taginiciawhile','analizadorSintactico.py',1185),
  ('tagwhile -> empty','tagwhile',1,'p_tagwhile','analizadorSintactico.py',1189),
  ('tagregresawhile -> empty','tagregresawhile',1,'p_tagregresawhile','analizadorSintactico.py',1201),
  ('ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA','ciclodowhile',9,'p_ciclodowhile','analizadorSintactico.py',1210),
  ('taginiciado -> empty','taginiciado',1,'p_taginiciado','analizadorSintactico.py',1215),
  ('tagcondiciondo -> empty','tagcondiciondo',1,'p_tagcondiciondo','analizadorSintactico.py',1219),
  ('read -> READ LPARENT RPARENT PUNTOCOMA','read',4,'p_read','analizadorSintactico.py',1233),
  ('readint -> READINT LPARENT RPARENT PUNTOCOMA','readint',4,'p_readint','analizadorSintactico.py',1243),
  ('ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor','ciclofor',11,'p_ciclofor','analizadorSintactico.py',1252),
  ('tagevaluafor -> empty','tagevaluafor',1,'p_tagevaluafor','analizadorSintactico.py',1256),
  ('tagterminafor -> empty','tagterminafor',1,'p_tagterminafor','analizadorSintactico.py',1268),
  ('tagespera -> empty','tagespera',1,'p_tagespera','analizadorSintactico.py',1273),
  ('tagasigna -> empty','tagasigna',1,'p_tagasigna','analizadorSintactico.py',1277),
  ('if -> IF LPARENT expresion tagif RPARENT bloque if2','if',7,'p_if','analizadorSintactico.py',1285),
  ('if2 -> tagterminaif','if2',1,'p_if2','analizadorSintactico.py',1289),
  ('if2 -> ELSE tagelse bloque tagterminaif','if2',4,'p_if2','analizadorSintactico.py',1290),
  ('tagif -> empty','tagif',1,'p_tagif','analizadorSintactico.py',1293),
  ('tagelse -> empty','tagelse',1,'p_tagelse','analizadorSintactico.py',1304),
  ('tagterminaif -> empty','tagterminaif',1,'p_tagterminaif','analizadorSintactico.py',1312),
  ('return -> RETURN llegoRet expresion PUNTOCOMA','return',4,'p_return','analizadorSintactico.py',1317),
  ('llegoRet -> empty','llegoRet',1,'p_llegoRet','analizadorSintactico.py',1322),
  ('cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA','cuadrado',10,'p_cuadrado','analizadorSintactico.py',1349),
  ('tagcuadro -> empty','tagcuadro',1,'p_tagcuadro','analizadorSintactico.py',1353),
  ('triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA','triangulo',10,'p_triangulo','analizadorSintactico.py',1359),
  ('tagtriangulo -> empty','tagtriangulo',1,'p_tagtriangulo','analizadorSintactico.py',1363),
  ('rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA','rectangulo',7,'p_rectangulo','analizadorSintactico.py',1368),
  ('casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA','casa',7,'p_casa','analizadorSintactico.py',1372),
  ('estrella -> ESTRELLA LPARENT exp RPARENT tagestrella PUNTOCOMA','estrella',6,'p_estrella','analizadorSintactico.py',1376),
  ('tagestrella -> empty','tagestrella',1,'p_tagestrella','analizadorSintactico.py',1380),
  ('cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA','cubo',10,'p_cubo','analizadorSintactico.py',1386),
  ('tagcubo -> empty','tagcubo',1,'p_tagcubo','analizadorSintactico.py',1390),
  ('mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA','mueve',8,'p_mueve','analizadorSintactico.py',1395),
  ('tagmueve -> empty','tagmueve',1,'p_tagmueve','analizadorSintactico.py',1399),
  ('levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA','levanta',4,'p_levanta','analizadorSintactico.py',1404),
  ('apoya -> APOYA LPARENT RPARENT PUNTOCOMA','apoya',4,'p_apoya','analizadorSintactico.py',1410),
  ('trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA','trapecio',7,'p_trapecio','analizadorSintactico.py',1416),
  ('dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA','dimension',5,'p_dimension','analizadorSintactico.py',1420),
  ('function -> FUNCTION pfunc','function',2,'p_function','analizadorSintactico.py',1425),
  ('pfunc -> tipo ID buildFunc LPARENT funct11','pfunc',5,'p_pfunc','analizadorSintactico.py',1430),
  ('pfunc -> VOID ID buildFunc LPARENT funct11','pfunc',5,'p_pfunc','analizadorSintactico.py',1431),
  ('buildFunc -> empty','buildFunc',1,'p_buildFunc','analizadorSintactico.py',1434),
  ('funct11 -> function4','funct11',1,'p_funct11','analizadorSintactico.py',1450),
  ('funct11 -> initParamTable funct2','funct11',2,'p_funct111','analizadorSintactico.py',1453),
  ('initParamTable -> empty','initParamTable',1,'p_initParamTable','analizadorSintactico.py',1456),
  ('funct2 -> tipo ID initParams funct3','funct2',4,'p_funct2','analizadorSintactico.py',1467),
  ('initParams -> empty','initParams',1,'p_initParams','analizadorSintactico.py',1470),
  ('funct3 -> COMA funct2','funct3',2,'p_funtion3','analizadorSintactico.py',1491),
  ('funct3 -> function4','funct3',1,'p_function31','analizadorSintactico.py',1495),
  ('function4 -> RPARENT initFunc bloque noinitFunc','function4',4,'p_function4','analizadorSintactico.py',1499),
  ('initFunc -> empty','initFunc',1,'p_initFunc','analizadorSintactico.py',1502),
  ('noinitFunc -> empty','noinitFunc',1,'p_noinitFunc','analizadorSintactico.py',1510),
  ('llamafuncion -> ID LPARENT tagverificafuncion llamaf11','llamafuncion',4,'p_llamafuncion','analizadorSintactico.py',1528),
  ('llamaf11 -> llamaf2','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1531),
  ('llamaf11 -> llamaf4','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1532),
  ('llamaf2 -> exp tagrevisaparam llamaf3','llamaf2',3,'p_llamaf2','analizadorSintactico.py',1535),
  ('llamaf3 -> COMA tagotroargumento llamaf2','llamaf3',3,'p_llamaf3','analizadorSintactico.py',1538),
  ('llamaf3 -> llamaf4','llamaf3',1,'p_llamaf3','analizadorSintactico.py',1539),
  ('llamaf4 -> RPARENT tagterminallamada PUNTOCOMA','llamaf4',3,'p_llamaf4','analizadorSintactico.py',1542),
  ('tagverificafuncion -> empty','tagverificafuncion',1,'p_tagverificafuncion','analizadorSintactico.py',1545),
  ('tagrevisaparam -> empty','tagrevisaparam',1,'p_tagrevisaparam','analizadorSintactico.py',1566),
  ('tagotroargumento -> empty','tagotroargumento',1,'p_tagotroargumento','analizadorSintactico.py',1581),
  ('tagterminallamada -> empty','tagterminallamada',1,'p_tagterminallamada','analizadorSintactico.py',1586),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',1602),
]
