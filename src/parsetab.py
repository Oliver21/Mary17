
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIGUALleftANDORleftLTGTLEGESAMEDIFleftSUMARESTAleftMULTDIVleftLBRACKETRBRACKETleftLPARENTRPARENTleftLKEYRKEYINT FLOAT IF ELSE VAR PRINT PROGRAM DO WHILE CHAR STRING BEGIN END FOR FUNCTION BOOL READ POW SQRT CUADRADO TRIANGULO RECTANGULO CASA TRAPECIO ESTRELLA CIRCULO LEVANTA APOYA CUBO FIRMA MUEVE DIMENSION VOID TRUE FALSE RETURN READINT FIND SORT ID MULT DIV SUMA RESTA LPARENT RPARENT COMA PUNTOCOMA DOSPUNTOS PUNTO LBRACKET RBRACKET LKEY RKEY IGUAL LT GT LE GE DIF SAME COMSIMPLE COMDOBLE ENTERO FLOTANTE CARACTER CADENA NOESNADA COMENTARIO BOLEANO RAIZ POTENCIA AND ORprogram : PROGRAM  cuadrupro ID initTop DOSPUNTOS p2initTop : emptyp2 : p3\n\t| initFunctions p4\n\t| p5p3 : declaracion p3\n\t| initFunctions p4initFunctions : emptyp4 : function p4\n\t| p5p5 : cuadrupro2 bloque delMemcuadrupro : emptycuadrupro2 : emptydelMem : emptybloque : iniEnv LKEY b3 b4 b5iniEnv : emptyb3 : declaracion b3\n\t| emptyb4 : estatuto b4\n\t| emptyb5 : recEnv RKEYrecEnv : emptyexpresion : expresion2 expreexpre : expre2\n\t| emptyexpre2 : AND tagmetelog expresion tagsacalog\n\t| OR tagmetelog expresion tagsacalogtagmetelog : emptytagsacalog : emptyexpresion2 : exp e2 e2 : e3 \n\t| emptye3 : GT tagrel exp tagsacrel\n\t| LT tagrel exp tagsacrel\n\t| LE tagrel exp tagsacrel\n\t| GE tagrel exp tagsacrel\n\t| DIF tagrel exp tagsacrel\n\t| SAME tagrel exp tagsacreltagrel : emptytagsacrel : emptyexp : termino tagsacops exp2exp2 : SUMA  tagop exp \n\t| RESTA tagop exp\n\t| emptytagop : emptytagsacops : emptydeclaracion : tipo ID savevar decla1savevar : emptydecla1 : saveMemNormal declafinal \n\t| LBRACKET decDimensionada exp saveLimSup decla2saveMemNormal : empty decDimensionada : emptysaveLimSup : emptydecla2 : RBRACKET guardaMemDimen declafinal\n\t| COMA SigDimension exp saveLimSup decla2SigDimension : empty guardaMemDimen : emptydeclafinal : PUNTOCOMAtipo : INT\n\t| FLOAT\n\t| CHAR\n\t| STRING\n\t| BOOLasignacion : ID meteid asigfinal\n\t| f7 asigfinalmeteid :  emptyasig2 : LBRACKET exp asig3\n\t| asigfinalasig3 : COMA exp asig3\n\t| RBRACKET asigfinalasigfinal : IGUAL tagmeteig asigf2asigf2 : expresion tagig PUNTOCOMA\n\t| read tagig\n\t| readint tagigtagmeteig : emptytagig : emptyprint : PRINT LPARENT pr2pr2 : expresion pr3pr3 : tagimprime RPARENT PUNTOCOMAtagimprime : emptytermino : factor tagsacopm te2te2 : MULT tagm termino \n\t| DIV tagm termino\n\t| emptytagm : emptytagsacopm : emptyfactor : LPARENT tagfondofalso expresion RPARENT tagsacafondo\n\t| f2\n\t| f3\n\t| f6\n\t| f7\n\t| f9f2 : varctef3 : IDtagfondofalso : emptytagsacafondo : emptyf7 : ID LBRACKET tagrevisadime exp tagmetedim f8f8 : COMA tagotradim exp tagmetedim f8\n\t| RBRACKET tagterminadimtagrevisadime : emptytagmetedim : emptytagotradim : emptytagterminadim : emptyf6 : llamafuncionguardafunc : emptyf9 : findfind : FIND  tagfon LPARENT tagfondofalso exp RPARENT tagsaca PUNTO ID LBRACKET tagfind RBRACKETtagfind : emptytagsaca : emptytagfon : emptyestatuto : asignacion\n\t| print\n\t| ciclowhile\n\t| ciclodowhile\n\t| ciclofor\n\t| read\n\t| readint\n\t| comentario\n\t| cuadrado\n\t| triangulo\n\t| casa\n\t| rectangulo\n\t| cubo\n\t| trapecio\n\t| estrella\n\t| firma\n\t| mueve\n\t| levanta\n\t| apoya\n\t| dimension\n\t| llamafuncion\n\t| return\n\t| ifcomentario : COMENTARIOvarcte : ENTERO tagint\n\t| FLOTANTE tagfloat\n\t| CADENA tagcad\n\t| CARACTER tagcar\n\t| TRUE tagbol\n\t| FALSE tagboltagint : emptytagfloat : emptytagcad : emptytagcar : emptytagbol : emptyciclowhile : WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhiletaginiciawhile : emptytagwhile : emptytagregresawhile : emptyciclodowhile : DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMAtaginiciado : emptytagcondiciondo : emptyread : READ LPARENT RPARENT PUNTOCOMAreadint : READINT LPARENT RPARENT PUNTOCOMAciclofor : FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafortagevaluafor : emptytagterminafor : emptytagespera : emptytagasigna : emptyif : IF LPARENT expresion tagif RPARENT bloque if2if2 : tagterminaif\n\t| ELSE tagelse bloque tagterminaiftagif : emptytagelse : emptytagterminaif : emptyreturn : RETURN llegoRet expresion PUNTOCOMAllegoRet : emptycuadrado : CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMAtagcuadro : emptytriangulo : TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMAtagtriangulo : emptyrectangulo : RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMAcasa : CASA LPARENT exp COMA exp RPARENT PUNTOCOMAestrella : ESTRELLA LPARENT exp COMA exp COMA exp RPARENT tagestrella PUNTOCOMAtagestrella : emptyfirma : FIRMA LPARENT RPARENT PUNTOCOMAcubo : CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMAtagcubo : emptymueve : MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMAtagmueve : emptylevanta : LEVANTA LPARENT RPARENT PUNTOCOMAapoya : APOYA LPARENT RPARENT PUNTOCOMAtrapecio : TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMAdimension : DIMENSION LPARENT exp RPARENT PUNTOCOMAfunction : FUNCTION pfuncpfunc : tipo ID buildFunc LPARENT funct11\n\t| VOID ID buildFunc LPARENT funct11buildFunc : emptyfunct11 : function4funct11 : initParamTable funct2initParamTable : emptyfunct2 : tipo ID initParams funct3initParams : emptyfunct3 : COMA funct2funct3 : function4function4 : RPARENT initFunc bloque noinitFuncinitFunc : emptynoinitFunc : emptyllamafuncion : ID LPARENT tagverificafuncion llamaf11llamaf11 : llamaf2\n\t| llamaf4llamaf2 : exp tagrevisaparam llamaf3llamaf3 : COMA tagotroargumento llamaf2\n\t| llamaf4llamaf4 : RPARENT  tagterminallamada PUNTOCOMAtagverificafuncion : emptytagrevisaparam : emptytagotroargumento : emptytagterminallamada : emptyempty :'
    
_lr_action_items = {'DO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,90,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,90,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'RETURN':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,78,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,78,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'READ':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,137,138,170,172,188,191,192,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,76,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,76,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-210,-65,-21,-77,-64,-75,76,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'VOID':([27,],[42,]),'MUEVE':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,65,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,65,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'IGUAL':([86,91,132,133,176,359,361,404,405,454,],[-210,137,137,-66,-210,-97,-210,-99,-103,-98,]),'LBRACKET':([25,37,38,86,159,176,457,],[-210,-48,47,131,131,131,460,]),'WHILE':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,190,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,77,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,77,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,261,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'PROGRAM':([0,],[2,]),'RPARENT':([110,112,120,122,130,138,139,143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,163,164,171,173,174,184,185,188,195,196,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,230,231,233,235,236,243,244,245,247,249,250,255,256,257,258,262,263,264,269,270,271,272,275,277,278,288,290,306,310,311,314,316,317,318,326,336,340,341,343,344,345,346,347,348,349,355,356,357,359,361,363,364,367,368,369,370,371,372,373,378,379,381,384,385,386,387,388,389,390,391,392,393,394,395,396,399,404,405,407,408,409,426,454,463,],[165,167,177,179,-210,-65,193,-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,220,220,-210,-210,-210,-206,254,-64,268,-210,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-23,-24,-25,294,-80,-31,-32,-30,-154,-153,305,-200,-201,-210,-199,-71,-210,-210,322,-163,-41,-44,326,-84,-81,337,339,353,254,-207,362,-74,-76,-73,-210,-210,-210,-210,-210,-210,-210,-210,-210,-210,-210,-205,-204,-202,-97,-210,-210,-72,-43,-42,-87,-96,-83,-82,414,-193,220,419,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,421,-158,422,425,-99,-103,428,-152,429,-203,-98,-107,]),'PRINT':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,68,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,68,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'TRAPECIO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,54,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,54,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'RESTA':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,255,256,258,277,278,326,355,356,357,359,361,369,370,371,372,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,273,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-200,-201,-199,-84,-81,-210,-205,-204,-202,-97,-210,-87,-96,-83,-82,-99,-103,-203,-98,-107,]),'PUNTO':([414,432,433,],[-210,448,-109,]),'TRUE':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,151,175,180,184,185,186,187,188,191,192,201,202,225,227,228,229,232,237,238,239,240,241,242,247,248,249,252,253,260,262,263,264,267,273,274,276,279,280,282,291,292,293,295,296,297,298,299,300,301,315,316,317,318,323,324,325,327,328,329,330,331,332,338,350,354,358,360,364,365,400,401,402,403,],[-210,-210,-52,149,149,149,149,149,149,149,-167,149,149,-210,-210,149,-210,-65,149,149,149,-210,149,149,-206,149,149,-100,-64,-75,149,149,-95,149,149,149,-210,-210,-210,-210,-210,-210,-210,-210,-154,149,-153,149,149,149,-71,-210,-210,149,-210,-210,-210,-210,-210,-210,149,-28,149,149,-39,149,149,149,149,149,149,-74,-76,-73,149,-45,149,149,-85,149,149,149,-56,149,149,149,-210,-210,-72,149,149,-208,149,-102,]),'COMENTARIO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,69,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,69,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'MULT':([143,144,145,146,147,149,150,152,153,154,155,156,158,159,160,162,199,200,203,204,205,206,207,208,211,212,213,216,217,255,256,258,326,355,356,357,359,361,369,370,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,-139,-145,-137,-143,279,-86,-135,-141,-138,-144,-140,-142,-136,-200,-201,-199,-210,-205,-204,-202,-97,-210,-87,-96,-99,-103,-203,-98,-107,]),'STRING':([8,21,27,34,46,48,105,106,163,164,221,222,281,375,418,434,],[13,13,13,13,13,-47,-49,-58,-210,-210,13,-191,-50,-54,13,-55,]),'TRIANGULO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,85,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,85,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'LPARENT':([47,51,52,53,54,58,63,65,68,72,73,75,76,77,78,82,85,86,89,96,97,99,100,103,104,107,108,109,111,113,114,118,121,123,124,125,126,127,129,130,131,134,137,138,140,141,142,151,157,159,175,180,184,185,186,187,188,191,192,201,202,209,210,225,227,228,229,232,237,238,239,240,241,242,247,248,249,252,253,260,261,262,263,264,267,273,274,276,279,280,282,291,292,293,295,296,297,298,299,300,301,315,316,317,318,323,324,325,327,328,329,330,331,332,338,350,354,358,360,364,365,400,401,402,403,],[-210,-210,-210,110,111,112,113,114,118,119,120,121,122,-210,-210,127,129,130,134,139,140,141,142,-52,151,163,-188,164,151,151,151,151,151,180,-147,151,-167,151,151,-210,-210,151,-210,-65,151,151,151,-210,-210,130,151,151,-206,151,151,-100,-64,-75,151,151,-95,280,-110,151,151,151,-210,-210,-210,-210,-210,-210,-210,-210,-154,151,-153,151,151,151,315,-71,-210,-210,151,-210,-210,-210,-210,-210,-210,151,-28,151,151,-39,151,151,151,151,151,151,-74,-76,-73,151,-45,151,151,-85,151,151,151,-56,151,151,151,-210,-210,-72,151,151,-208,151,-102,]),'CASA':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,82,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,82,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'PUNTOCOMA':([25,37,38,49,50,143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,165,167,171,174,177,179,181,193,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,230,231,233,243,244,245,254,255,256,258,265,268,271,272,277,278,283,294,308,309,317,319,326,333,334,337,339,340,341,343,344,345,346,347,348,353,355,356,357,359,361,362,367,368,369,370,371,372,382,383,384,385,386,387,388,389,390,391,392,393,404,405,419,422,425,426,428,429,436,437,439,440,441,442,445,446,454,463,],[-210,-48,-210,106,-51,-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,224,226,-210,-210,247,249,251,266,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-23,-24,-25,-31,-32,-30,-210,-200,-201,-199,-210,321,-41,-44,-84,-81,-210,342,355,-209,-76,364,-210,106,-57,380,-210,-210,-210,-210,-210,-210,-210,-210,-210,398,-205,-204,-202,-97,-210,406,-43,-42,-87,-96,-83,-82,420,-180,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,-99,-103,-210,-210,-210,-203,444,-210,-169,449,452,-175,-171,453,455,-178,-98,-107,]),'LT':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,174,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,255,256,258,271,272,277,278,326,355,356,357,359,361,367,368,369,370,371,372,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,241,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-200,-201,-199,-41,-44,-84,-81,-210,-205,-204,-202,-97,-210,-43,-42,-87,-96,-83,-82,-99,-103,-203,-98,-107,]),'DIMENSION':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,99,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,99,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'CADENA':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,151,175,180,184,185,186,187,188,191,192,201,202,225,227,228,229,232,237,238,239,240,241,242,247,248,249,252,253,260,262,263,264,267,273,274,276,279,280,282,291,292,293,295,296,297,298,299,300,301,315,316,317,318,323,324,325,327,328,329,330,331,332,338,350,354,358,360,364,365,400,401,402,403,],[-210,-210,-52,153,153,153,153,153,153,153,-167,153,153,-210,-210,153,-210,-65,153,153,153,-210,153,153,-206,153,153,-100,-64,-75,153,153,-95,153,153,153,-210,-210,-210,-210,-210,-210,-210,-210,-154,153,-153,153,153,153,-71,-210,-210,153,-210,-210,-210,-210,-210,-210,153,-28,153,153,-39,153,153,153,153,153,153,-74,-76,-73,153,-45,153,153,-85,153,153,153,-56,153,153,153,-210,-210,-72,153,153,-208,153,-102,]),'FIRMA':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,53,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,53,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'DOSPUNTOS':([5,6,7,],[-210,8,-2,]),'APOYA':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,58,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,58,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'DIF':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,174,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,255,256,258,271,272,277,278,326,355,356,357,359,361,367,368,369,370,371,372,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,238,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-200,-201,-199,-41,-44,-84,-81,-210,-205,-204,-202,-97,-210,-43,-42,-87,-96,-83,-82,-99,-103,-203,-98,-107,]),'LEVANTA':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,96,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,96,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'$end':([1,14,15,16,23,28,29,31,35,36,39,43,115,170,],[0,-1,-3,-5,-210,-4,-10,-6,-11,-14,-9,-7,-15,-21,]),'FUNCTION':([8,12,20,21,26,32,33,41,48,105,106,115,170,218,219,223,281,287,335,375,376,377,416,417,434,435,],[-210,-8,27,-210,27,-8,27,-185,-47,-49,-58,-15,-21,-189,-186,-187,-50,-190,-210,-54,-196,-198,-195,-192,-55,-194,]),'AND':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,171,174,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,243,244,245,255,256,258,271,272,277,278,326,343,344,345,346,347,348,355,356,357,359,361,367,368,369,370,371,372,387,388,389,390,391,392,393,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,229,-210,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-31,-32,-30,-200,-201,-199,-41,-44,-84,-81,-210,-210,-210,-210,-210,-210,-210,-205,-204,-202,-97,-210,-43,-42,-87,-96,-83,-82,-36,-40,-37,-35,-38,-34,-33,-99,-103,-203,-98,-107,]),'GT':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,174,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,255,256,258,271,272,277,278,326,355,356,357,359,361,367,368,369,370,371,372,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,242,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-200,-201,-199,-41,-44,-84,-81,-210,-205,-204,-202,-97,-210,-43,-42,-87,-96,-83,-82,-99,-103,-203,-98,-107,]),'LKEY':([8,9,12,20,21,22,24,26,30,32,33,41,48,90,105,106,115,135,136,170,218,219,220,223,281,284,285,287,305,322,335,351,352,375,376,377,412,416,417,421,430,431,434,435,],[-210,-210,-8,-210,-210,34,-16,-210,-13,-8,-210,-185,-47,-210,-49,-58,-15,-151,-210,-21,-189,-186,-210,-187,-50,-210,-197,-190,-210,-210,-210,-210,-148,-54,-196,-198,-210,-195,-192,-210,-210,-164,-55,-194,]),'FOR':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,72,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,72,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'READINT':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,137,138,170,172,188,191,192,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,73,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,73,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-210,-65,-21,-77,-64,-75,73,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'CUBO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,97,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,97,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'RKEY':([34,44,45,46,48,55,56,57,59,60,61,62,64,66,67,69,70,71,74,79,80,81,83,84,87,88,92,93,94,95,98,101,102,105,106,115,116,117,128,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,-210,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-210,-129,-134,-117,-112,-115,-113,-128,-120,-210,-20,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,170,-22,-19,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'ELSE':([115,170,366,],[-15,-21,412,]),'ESTRELLA':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,75,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,75,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'GE':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,174,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,255,256,258,271,272,277,278,326,355,356,357,359,361,367,368,369,370,371,372,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,237,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-200,-201,-199,-41,-44,-84,-81,-210,-205,-204,-202,-97,-210,-43,-42,-87,-96,-83,-82,-99,-103,-203,-98,-107,]),'LE':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,174,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,255,256,258,271,272,277,278,326,355,356,357,359,361,367,368,369,370,371,372,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,239,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-200,-201,-199,-41,-44,-84,-81,-210,-205,-204,-202,-97,-210,-43,-42,-87,-96,-83,-82,-99,-103,-203,-98,-107,]),'CARACTER':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,151,175,180,184,185,186,187,188,191,192,201,202,225,227,228,229,232,237,238,239,240,241,242,247,248,249,252,253,260,262,263,264,267,273,274,276,279,280,282,291,292,293,295,296,297,298,299,300,301,315,316,317,318,323,324,325,327,328,329,330,331,332,338,350,354,358,360,364,365,400,401,402,403,],[-210,-210,-52,158,158,158,158,158,158,158,-167,158,158,-210,-210,158,-210,-65,158,158,158,-210,158,158,-206,158,158,-100,-64,-75,158,158,-95,158,158,158,-210,-210,-210,-210,-210,-210,-210,-210,-154,158,-153,158,158,158,-71,-210,-210,158,-210,-210,-210,-210,-210,-210,158,-28,158,158,-39,158,158,158,158,158,158,-74,-76,-73,158,-45,158,158,-85,158,158,158,-56,158,158,158,-210,-210,-72,158,158,-208,158,-102,]),'COMA':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,161,162,166,168,169,178,182,183,189,194,197,198,199,200,203,204,205,206,207,208,211,212,213,214,215,216,217,255,256,257,258,259,271,272,277,278,289,304,307,310,311,312,313,320,326,336,355,356,357,359,361,367,368,369,370,371,372,374,378,379,404,405,415,426,427,443,454,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,-210,225,227,228,248,252,253,260,267,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,282,-53,-142,-136,-200,-201,-210,-199,-210,-41,-44,-84,-81,338,350,354,358,-207,360,-101,365,-210,-210,-205,-204,-202,-97,-210,-43,-42,-87,-96,-83,-82,-210,-193,418,-99,-103,282,-203,-210,360,-98,-107,]),'ID':([2,3,4,10,11,13,17,18,19,34,40,42,44,45,46,47,48,55,56,57,59,60,61,62,64,67,69,70,71,74,78,79,80,81,83,87,88,92,93,94,95,98,101,102,103,104,105,106,111,113,114,115,118,119,121,125,126,127,129,130,131,134,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,158,159,160,162,170,171,172,174,175,180,184,185,186,187,188,191,192,197,198,199,200,201,202,203,204,205,206,207,208,211,212,213,216,217,224,225,226,227,228,229,230,231,232,233,234,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,255,256,258,260,262,263,264,266,267,271,272,273,274,276,277,278,279,280,281,282,286,291,292,293,295,296,297,298,299,300,301,302,303,315,316,317,318,321,323,324,325,326,327,328,329,330,331,332,338,340,341,342,343,344,345,346,347,348,350,354,355,356,357,358,359,360,361,364,365,366,367,368,369,370,371,372,375,380,384,385,386,387,388,389,390,391,392,393,397,398,400,401,402,403,404,405,406,410,411,413,420,423,424,426,434,438,444,447,448,449,450,451,452,453,454,455,456,458,459,463,],[-210,5,-12,-61,25,-62,-59,-60,-63,-210,51,52,-18,86,-210,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-210,-113,-128,-120,86,-121,-111,-124,-133,-127,-131,-114,-130,-17,-52,159,-49,-58,159,159,159,-15,159,176,159,159,-167,159,159,-210,-210,159,-210,-65,159,159,159,-88,-89,-90,-91,-92,-210,-210,-106,-210,-93,-210,-104,-210,-210,-210,-94,-210,-210,-21,-210,-77,-210,159,159,-206,159,159,-100,-64,-75,159,-210,-46,-139,-145,159,-95,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-176,159,-182,159,159,-210,-23,-24,-210,-25,-78,-210,-210,-210,-210,-210,-210,-31,-32,-30,-210,-154,159,-153,-166,159,159,-200,-201,-199,159,-71,-210,-210,-181,159,-41,-44,-210,-210,-210,-84,-81,-210,-210,-50,-210,336,159,-28,159,159,-39,159,159,159,159,159,176,-156,159,-74,-76,-73,-184,159,-45,159,-210,159,-85,159,159,159,-56,159,-210,-210,-79,-210,-210,-210,-210,-210,-210,159,159,-205,-204,-202,-210,-97,-210,-210,-72,159,-210,-43,-42,-87,-96,-83,-82,-54,-183,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,-210,-173,159,-208,159,-102,-99,-103,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,457,-168,-210,-159,-174,-170,-98,-177,-162,-155,-157,-107,]),'IF':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,100,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,100,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'FIND':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,151,175,180,184,185,186,187,188,191,192,201,202,225,227,228,229,232,237,238,239,240,241,242,247,248,249,252,253,260,262,263,264,267,273,274,276,279,280,282,291,292,293,295,296,297,298,299,300,301,315,316,317,318,323,324,325,327,328,329,330,331,332,338,350,354,358,360,364,365,400,401,402,403,],[-210,-210,-52,157,157,157,157,157,157,157,-167,157,157,-210,-210,157,-210,-65,157,157,157,-210,157,157,-206,157,157,-100,-64,-75,157,157,-95,157,157,157,-210,-210,-210,-210,-210,-210,-210,-210,-154,157,-153,157,157,157,-71,-210,-210,157,-210,-210,-210,-210,-210,-210,157,-28,157,157,-39,157,157,157,157,157,157,-74,-76,-73,157,-45,157,157,-85,157,157,157,-56,157,157,157,-210,-210,-72,157,157,-208,157,-102,]),'CHAR':([8,21,27,34,46,48,105,106,163,164,221,222,281,375,418,434,],[10,10,10,10,10,-47,-49,-58,-210,-210,10,-191,-50,-54,10,-55,]),'FALSE':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,151,175,180,184,185,186,187,188,191,192,201,202,225,227,228,229,232,237,238,239,240,241,242,247,248,249,252,253,260,262,263,264,267,273,274,276,279,280,282,291,292,293,295,296,297,298,299,300,301,315,316,317,318,323,324,325,327,328,329,330,331,332,338,350,354,358,360,364,365,400,401,402,403,],[-210,-210,-52,160,160,160,160,160,160,160,-167,160,160,-210,-210,160,-210,-65,160,160,160,-210,160,160,-206,160,160,-100,-64,-75,160,160,-95,160,160,160,-210,-210,-210,-210,-210,-210,-210,-210,-154,160,-153,160,160,160,-71,-210,-210,160,-210,-210,-210,-210,-210,-210,160,-28,160,160,-39,160,160,160,160,160,160,-74,-76,-73,160,-45,160,160,-85,160,160,160,-56,160,160,160,-210,-210,-72,160,160,-208,160,-102,]),'INT':([8,21,27,34,46,48,105,106,163,164,221,222,281,375,418,434,],[17,17,17,17,17,-47,-49,-58,-210,-210,17,-191,-50,-54,17,-55,]),'FLOAT':([8,21,27,34,46,48,105,106,163,164,221,222,281,375,418,434,],[18,18,18,18,18,-47,-49,-58,-210,-210,18,-191,-50,-54,18,-55,]),'SAME':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,174,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,255,256,258,271,272,277,278,326,355,356,357,359,361,367,368,369,370,371,372,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,240,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-200,-201,-199,-41,-44,-84,-81,-210,-205,-204,-202,-97,-210,-43,-42,-87,-96,-83,-82,-99,-103,-203,-98,-107,]),'CUADRADO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,63,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,63,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'BOOL':([8,21,27,34,46,48,105,106,163,164,221,222,281,375,418,434,],[19,19,19,19,19,-47,-49,-58,-210,-210,19,-191,-50,-54,19,-55,]),'SUMA':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,255,256,258,277,278,326,355,356,357,359,361,369,370,371,372,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,274,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-200,-201,-199,-84,-81,-210,-205,-204,-202,-97,-210,-87,-96,-83,-82,-99,-103,-203,-98,-107,]),'RECTANGULO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,170,172,188,224,226,234,247,249,251,255,256,258,262,263,264,266,281,316,317,318,321,342,355,356,357,364,366,375,380,397,398,406,410,411,413,420,423,424,426,434,438,444,447,449,450,451,452,453,455,456,458,459,],[-210,-18,89,-210,-47,-118,-119,-122,-132,-116,-123,-125,-126,-129,-134,-117,-112,-115,-113,-128,-120,89,-121,-111,-124,-133,-127,-131,-114,-130,-17,-49,-58,-15,-65,-21,-77,-64,-176,-182,-78,-154,-153,-166,-200,-201,-199,-71,-210,-210,-181,-50,-74,-76,-73,-184,-79,-205,-204,-202,-72,-210,-54,-183,-210,-173,-172,-160,-161,-165,-179,-146,-149,-203,-55,-210,-150,-210,-168,-210,-159,-174,-170,-177,-162,-155,-157,]),'FLOTANTE':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,151,175,180,184,185,186,187,188,191,192,201,202,225,227,228,229,232,237,238,239,240,241,242,247,248,249,252,253,260,262,263,264,267,273,274,276,279,280,282,291,292,293,295,296,297,298,299,300,301,315,316,317,318,323,324,325,327,328,329,330,331,332,338,350,354,358,360,364,365,400,401,402,403,],[-210,-210,-52,162,162,162,162,162,162,162,-167,162,162,-210,-210,162,-210,-65,162,162,162,-210,162,162,-206,162,162,-100,-64,-75,162,162,-95,162,162,162,-210,-210,-210,-210,-210,-210,-210,-210,-154,162,-153,162,162,162,-71,-210,-210,162,-210,-210,-210,-210,-210,-210,162,-28,162,162,-39,162,162,162,162,162,162,-74,-76,-73,162,-45,162,162,-85,162,162,162,-56,162,162,162,-210,-210,-72,162,162,-208,162,-102,]),'RBRACKET':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,161,162,197,198,199,200,203,204,205,206,207,208,211,212,213,214,215,216,217,255,256,258,259,271,272,277,278,312,313,326,355,356,357,359,361,367,368,369,370,371,372,374,404,405,415,426,427,443,454,460,461,462,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,-210,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,283,-53,-142,-136,-200,-201,-199,-210,-41,-44,-84,-81,361,-101,-210,-205,-204,-202,-97,-210,-43,-42,-87,-96,-83,-82,-210,-99,-103,283,-203,-210,361,-98,-210,463,-108,-107,]),'ENTERO':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,151,175,180,184,185,186,187,188,191,192,201,202,225,227,228,229,232,237,238,239,240,241,242,247,248,249,252,253,260,262,263,264,267,273,274,276,279,280,282,291,292,293,295,296,297,298,299,300,301,315,316,317,318,323,324,325,327,328,329,330,331,332,338,350,354,358,360,364,365,400,401,402,403,],[-210,-210,-52,156,156,156,156,156,156,156,-167,156,156,-210,-210,156,-210,-65,156,156,156,-210,156,156,-206,156,156,-100,-64,-75,156,156,-95,156,156,156,-210,-210,-210,-210,-210,-210,-210,-210,-154,156,-153,156,156,156,-71,-210,-210,156,-210,-210,-210,-210,-210,-210,156,-28,156,156,-39,156,156,156,156,156,156,-74,-76,-73,156,-45,156,156,-85,156,156,156,-56,156,156,156,-210,-210,-72,156,156,-208,156,-102,]),'OR':([143,144,145,146,147,148,149,150,152,153,154,155,156,158,159,160,162,171,174,197,198,199,200,203,204,205,206,207,208,211,212,213,216,217,243,244,245,255,256,258,271,272,277,278,326,343,344,345,346,347,348,355,356,357,359,361,367,368,369,370,371,372,387,388,389,390,391,392,393,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,232,-210,-210,-46,-139,-145,-137,-143,-210,-86,-135,-141,-138,-144,-140,-142,-136,-31,-32,-30,-200,-201,-199,-41,-44,-84,-81,-210,-210,-210,-210,-210,-210,-210,-205,-204,-202,-97,-210,-43,-42,-87,-96,-83,-82,-36,-40,-37,-35,-38,-34,-33,-99,-103,-203,-98,-107,]),'DIV':([143,144,145,146,147,149,150,152,153,154,155,156,158,159,160,162,199,200,203,204,205,206,207,208,211,212,213,216,217,255,256,258,326,355,356,357,359,361,369,370,404,405,426,454,463,],[-88,-89,-90,-91,-92,-210,-106,-93,-210,-104,-210,-210,-210,-94,-210,-210,-139,-145,-137,-143,276,-86,-135,-141,-138,-144,-140,-142,-136,-200,-201,-199,-210,-205,-204,-202,-97,-210,-87,-96,-99,-103,-203,-98,-107,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'tagsacrel':([343,344,345,346,347,348,],[387,389,390,391,392,393,]),'tagasigna':([438,],[450,]),'tagfondofalso':([151,280,],[201,330,]),'tagmetedim':([259,427,],[312,443,]),'expre2':([171,],[231,]),'tagfind':([460,],[461,]),'bloque':([9,136,284,322,351,421,430,],[23,190,335,366,397,438,447,]),'taginiciawhile':([77,],[123,]),'find':([104,111,113,114,118,121,125,127,129,134,140,141,142,175,180,185,186,192,201,225,227,228,248,252,253,260,267,291,293,295,297,298,299,300,301,315,323,325,327,329,330,331,338,350,354,365,400,402,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'if2':([366,],[410,]),'tagop':([273,274,],[323,325,]),'tagrevisaparam':([257,],[310,]),'program':([0,],[1,]),'rectangulo':([45,83,],[57,57,]),'factor':([104,111,113,114,118,121,125,127,129,134,140,141,142,175,180,185,186,192,201,225,227,228,248,252,253,260,267,291,293,295,297,298,299,300,301,315,323,325,327,329,330,331,338,350,354,365,400,402,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,]),'saveMemNormal':([38,],[49,]),'SigDimension':([282,],[331,]),'return':([45,83,],[59,59,]),'p3':([8,21,],[15,31,]),'read':([45,83,192,],[60,60,264,]),'cubo':([45,83,],[61,61,]),'buildFunc':([51,52,],[107,109,]),'estrella':([45,83,],[62,62,]),'meteid':([86,176,],[132,132,]),'decDimensionada':([47,],[104,]),'expresion':([118,125,142,175,180,192,201,291,293,315,],[173,181,196,246,250,265,275,340,341,363,]),'tagbol':([149,160,],[199,213,]),'p4':([20,26,33,],[28,39,43,]),'tagcad':([153,],[203,]),'tagevaluafor':([246,],[302,]),'tagtriangulo':([425,],[442,]),'tagimprime':([173,],[235,]),'tagcar':([158,],[211,]),'taginiciado':([90,],[136,]),'tagespera':([349,],[394,]),'llegoRet':([78,],[125,]),'tagwhile':([305,],[351,]),'initTop':([5,],[6,]),'b5':([66,],[115,]),'asigf2':([192,],[262,]),'apoya':([45,83,],[67,67,]),'b3':([34,46,],[45,102,]),'tagterminafor':([450,],[458,]),'tagsacops':([148,],[197,]),'varcte':([104,111,113,114,118,121,125,127,129,134,140,141,142,175,180,185,186,192,201,225,227,228,248,252,253,260,267,291,293,295,297,298,299,300,301,315,323,325,327,329,330,331,338,350,354,365,400,402,],[152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'tipo':([8,21,27,34,46,221,418,],[11,11,40,11,11,286,286,]),'readint':([45,83,192,],[70,70,263,]),'tagig':([263,264,265,],[316,318,319,]),'comentario':([45,83,],[55,55,]),'funct2':([221,418,],[287,435,]),'funct3':([379,],[417,]),'declafinal':([49,333,],[105,375,]),'print':([45,83,],[71,71,]),'tagsacopm':([155,],[205,]),'tagcuadro':([419,],[437,]),'tagrel':([237,238,239,240,241,242,],[295,297,298,299,300,301,]),'initFunc':([220,],[284,]),'tagelse':([412,],[430,]),'ciclofor':([45,83,],[74,74,]),'tagverificafuncion':([130,],[185,]),'tagm':([276,279,],[327,329,]),'te2':([205,],[278,]),'e3':([174,],[243,]),'e2':([174,],[245,]),'tagsacalog':([340,341,],[384,386,]),'tagfon':([157,],[209,]),'initParams':([336,],[379,]),'declaracion':([8,21,34,46,],[21,21,46,46,]),'tagmueve':([339,],[382,]),'cuadrupro2':([8,20,26,33,],[9,9,9,9,]),'tagterminallamada':([254,],[308,]),'guardaMemDimen':([283,],[333,]),'tagestrella':([422,],[439,]),'termino':([104,111,113,114,118,121,125,127,129,134,140,141,142,175,180,185,186,192,201,225,227,228,248,252,253,260,267,291,293,295,297,298,299,300,301,315,323,325,327,329,330,331,338,350,354,365,400,402,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,371,372,148,148,148,148,148,148,148,148,]),'tagfloat':([162,],[217,]),'ciclowhile':([45,83,],[79,79,]),'levanta':([45,83,],[80,80,]),'triangulo':([45,83,],[81,81,]),'exp2':([197,],[271,]),'estatuto':([45,83,],[83,83,]),'tagcondiciondo':([363,],[407,]),'cuadrado':([45,83,],[56,56,]),'delMem':([23,],[35,]),'empty':([2,5,8,9,20,21,23,25,26,33,34,38,45,46,47,51,52,66,77,78,83,86,90,130,131,136,137,148,149,151,153,155,156,157,158,160,161,162,163,164,171,173,174,176,196,197,205,220,229,232,237,238,239,240,241,242,246,254,257,259,263,264,265,273,274,276,279,280,282,283,284,305,322,326,335,336,339,340,341,343,344,345,346,347,348,349,351,358,360,361,363,366,374,397,412,414,419,421,422,425,427,429,430,438,447,450,460,],[4,7,12,24,30,32,36,37,30,30,44,50,84,44,103,108,108,117,124,126,84,133,135,184,187,24,191,198,200,202,204,206,208,210,212,200,215,216,222,222,233,236,244,133,270,272,277,285,292,292,296,296,296,296,296,296,303,309,311,313,317,317,317,324,324,328,328,202,332,334,24,352,24,370,377,378,383,385,385,388,388,388,388,388,388,395,24,401,403,405,408,413,215,424,431,433,436,24,440,441,313,446,24,451,413,459,462,]),'function':([20,26,33,],[26,26,26,]),'expresion2':([118,125,142,175,180,192,201,291,293,315,],[171,171,171,171,171,171,171,171,171,171,]),'tagterminaif':([366,447,],[411,456,]),'tagterminadim':([361,],[404,]),'cuadrupro':([2,],[3,]),'tagint':([156,],[207,]),'p2':([8,],[14,]),'b4':([45,83,],[66,128,]),'casa':([45,83,],[87,87,]),'asignacion':([45,83,119,302,],[88,88,175,349,]),'p5':([8,20,26,33,],[16,29,29,29,]),'llamaf2':([185,400,],[255,426,]),'llamaf3':([310,],[357,]),'llamaf4':([185,310,],[256,356,]),'tagcubo':([429,],[445,]),'noinitFunc':([335,],[376,]),'llamaf11':([185,],[258,]),'iniEnv':([9,136,284,322,351,421,430,],[22,22,22,22,22,22,22,]),'f2':([104,111,113,114,118,121,125,127,129,134,140,141,142,175,180,185,186,192,201,225,227,228,248,252,253,260,267,291,293,295,297,298,299,300,301,315,323,325,327,329,330,331,338,350,354,365,400,402,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'f3':([104,111,113,114,118,121,125,127,129,134,140,141,142,175,180,185,186,192,201,225,227,228,248,252,253,260,267,291,293,295,297,298,299,300,301,315,323,325,327,329,330,331,338,350,354,365,400,402,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'f6':([104,111,113,114,118,121,125,127,129,134,140,141,142,175,180,185,186,192,201,225,227,228,248,252,253,260,267,291,293,295,297,298,299,300,301,315,323,325,327,329,330,331,338,350,354,365,400,402,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'f7':([45,83,104,111,113,114,118,119,121,125,127,129,134,140,141,142,175,180,185,186,192,201,225,227,228,248,252,253,260,267,291,293,295,297,298,299,300,301,302,315,323,325,327,329,330,331,338,350,354,365,400,402,],[91,91,146,146,146,146,146,91,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,91,146,146,146,146,146,146,146,146,146,146,146,146,146,]),'f8':([312,443,],[359,454,]),'f9':([104,111,113,114,118,121,125,127,129,134,140,141,142,175,180,185,186,192,201,225,227,228,248,252,253,260,267,291,293,295,297,298,299,300,301,315,323,325,327,329,330,331,338,350,354,365,400,402,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,]),'tagif':([196,],[269,]),'trapecio':([45,83,],[92,92,]),'tagsacafondo':([326,],[369,]),'if':([45,83,],[93,93,]),'pfunc':([27,],[41,]),'mueve':([45,83,],[94,94,]),'decla1':([38,],[48,]),'llamafuncion':([45,83,104,111,113,114,118,121,125,127,129,134,140,141,142,175,180,185,186,192,201,225,227,228,248,252,253,260,267,291,293,295,297,298,299,300,301,315,323,325,327,329,330,331,338,350,354,365,400,402,],[95,95,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,154,]),'decla2':([214,415,],[281,434,]),'tagsaca':([414,],[432,]),'initParamTable':([163,164,],[221,221,]),'tagotradim':([360,],[402,]),'tagotroargumento':([358,],[400,]),'tagrevisadime':([131,],[186,]),'saveLimSup':([161,374,],[214,415,]),'tagmeteig':([137,],[192,]),'funct11':([163,164,],[219,223,]),'pr3':([173,],[234,]),'pr2':([118,],[172,]),'ciclodowhile':([45,83,],[98,98,]),'asigfinal':([91,132,],[138,188,]),'function4':([163,164,379,],[218,218,416,]),'expre':([171,],[230,]),'tagmetelog':([229,232,],[291,293,]),'dimension':([45,83,],[101,101,]),'firma':([45,83,],[64,64,]),'savevar':([25,],[38,]),'exp':([104,111,113,114,118,121,125,127,129,134,140,141,142,175,180,185,186,192,201,225,227,228,248,252,253,260,267,291,293,295,297,298,299,300,301,315,323,325,330,331,338,350,354,365,400,402,],[161,166,168,169,174,178,174,182,183,189,194,195,174,174,174,257,259,174,174,288,289,290,304,306,307,314,320,174,174,343,344,345,346,347,348,174,367,368,373,374,381,396,399,409,257,427,]),'tagregresawhile':([397,],[423,]),'initFunctions':([8,21,],[20,33,]),'recEnv':([66,],[116,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2','program',6,'p_program','analizadorSintactico.py',426),
  ('initTop -> empty','initTop',1,'p_initTop','analizadorSintactico.py',429),
  ('p2 -> p3','p2',1,'p_p2','analizadorSintactico.py',437),
  ('p2 -> initFunctions p4','p2',2,'p_p2','analizadorSintactico.py',438),
  ('p2 -> p5','p2',1,'p_p2','analizadorSintactico.py',439),
  ('p3 -> declaracion p3','p3',2,'p_p3','analizadorSintactico.py',442),
  ('p3 -> initFunctions p4','p3',2,'p_p3','analizadorSintactico.py',443),
  ('initFunctions -> empty','initFunctions',1,'p_initFunctions','analizadorSintactico.py',446),
  ('p4 -> function p4','p4',2,'p_p4','analizadorSintactico.py',452),
  ('p4 -> p5','p4',1,'p_p4','analizadorSintactico.py',453),
  ('p5 -> cuadrupro2 bloque delMem','p5',3,'p_p5','analizadorSintactico.py',456),
  ('cuadrupro -> empty','cuadrupro',1,'p_cuadrupro','analizadorSintactico.py',460),
  ('cuadrupro2 -> empty','cuadrupro2',1,'p_cuadrupro2','analizadorSintactico.py',466),
  ('delMem -> empty','delMem',1,'p_delMem','analizadorSintactico.py',473),
  ('bloque -> iniEnv LKEY b3 b4 b5','bloque',5,'p_bloque','analizadorSintactico.py',479),
  ('iniEnv -> empty','iniEnv',1,'p_iniEnv','analizadorSintactico.py',482),
  ('b3 -> declaracion b3','b3',2,'p_b3','analizadorSintactico.py',491),
  ('b3 -> empty','b3',1,'p_b3','analizadorSintactico.py',492),
  ('b4 -> estatuto b4','b4',2,'p_b4','analizadorSintactico.py',495),
  ('b4 -> empty','b4',1,'p_b4','analizadorSintactico.py',496),
  ('b5 -> recEnv RKEY','b5',2,'p_b5','analizadorSintactico.py',499),
  ('recEnv -> empty','recEnv',1,'p_recEnv','analizadorSintactico.py',502),
  ('expresion -> expresion2 expre','expresion',2,'p_expresion','analizadorSintactico.py',514),
  ('expre -> expre2','expre',1,'p_expre','analizadorSintactico.py',517),
  ('expre -> empty','expre',1,'p_expre','analizadorSintactico.py',518),
  ('expre2 -> AND tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',521),
  ('expre2 -> OR tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',522),
  ('tagmetelog -> empty','tagmetelog',1,'p_tagmetelog','analizadorSintactico.py',525),
  ('tagsacalog -> empty','tagsacalog',1,'p_tagsacalog','analizadorSintactico.py',531),
  ('expresion2 -> exp e2','expresion2',2,'p_expresion2','analizadorSintactico.py',564),
  ('e2 -> e3','e2',1,'p_e2','analizadorSintactico.py',569),
  ('e2 -> empty','e2',1,'p_e2','analizadorSintactico.py',570),
  ('e3 -> GT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',573),
  ('e3 -> LT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',574),
  ('e3 -> LE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',575),
  ('e3 -> GE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',576),
  ('e3 -> DIF tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',577),
  ('e3 -> SAME tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',578),
  ('tagrel -> empty','tagrel',1,'p_tagrel','analizadorSintactico.py',581),
  ('tagsacrel -> empty','tagsacrel',1,'p_tagsacrel','analizadorSintactico.py',587),
  ('exp -> termino tagsacops exp2','exp',3,'p_exp','analizadorSintactico.py',620),
  ('exp2 -> SUMA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',624),
  ('exp2 -> RESTA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',625),
  ('exp2 -> empty','exp2',1,'p_exp2','analizadorSintactico.py',626),
  ('tagop -> empty','tagop',1,'p_tagop','analizadorSintactico.py',629),
  ('tagsacops -> empty','tagsacops',1,'p_tagsacops','analizadorSintactico.py',635),
  ('declaracion -> tipo ID savevar decla1','declaracion',4,'p_declaracion','analizadorSintactico.py',670),
  ('savevar -> empty','savevar',1,'p_savevar','analizadorSintactico.py',679),
  ('decla1 -> saveMemNormal declafinal','decla1',2,'p_decla1','analizadorSintactico.py',685),
  ('decla1 -> LBRACKET decDimensionada exp saveLimSup decla2','decla1',5,'p_decla1','analizadorSintactico.py',686),
  ('saveMemNormal -> empty','saveMemNormal',1,'p_saveMemNormal','analizadorSintactico.py',689),
  ('decDimensionada -> empty','decDimensionada',1,'p_decDimensionada','analizadorSintactico.py',697),
  ('saveLimSup -> empty','saveLimSup',1,'p_saveLimSup','analizadorSintactico.py',711),
  ('decla2 -> RBRACKET guardaMemDimen declafinal','decla2',3,'p_decla2','analizadorSintactico.py',727),
  ('decla2 -> COMA SigDimension exp saveLimSup decla2','decla2',5,'p_decla2','analizadorSintactico.py',728),
  ('SigDimension -> empty','SigDimension',1,'p_SigDimension','analizadorSintactico.py',734),
  ('guardaMemDimen -> empty','guardaMemDimen',1,'p_guardaMemDimen','analizadorSintactico.py',746),
  ('declafinal -> PUNTOCOMA','declafinal',1,'p_declafinal','analizadorSintactico.py',771),
  ('tipo -> INT','tipo',1,'p_tipo','analizadorSintactico.py',787),
  ('tipo -> FLOAT','tipo',1,'p_tipo','analizadorSintactico.py',788),
  ('tipo -> CHAR','tipo',1,'p_tipo','analizadorSintactico.py',789),
  ('tipo -> STRING','tipo',1,'p_tipo','analizadorSintactico.py',790),
  ('tipo -> BOOL','tipo',1,'p_tipo','analizadorSintactico.py',791),
  ('asignacion -> ID meteid asigfinal','asignacion',3,'p_asignacion','analizadorSintactico.py',798),
  ('asignacion -> f7 asigfinal','asignacion',2,'p_asignacion','analizadorSintactico.py',799),
  ('meteid -> empty','meteid',1,'p_meteid','analizadorSintactico.py',806),
  ('asig2 -> LBRACKET exp asig3','asig2',3,'p_asig2','analizadorSintactico.py',812),
  ('asig2 -> asigfinal','asig2',1,'p_asig2','analizadorSintactico.py',813),
  ('asig3 -> COMA exp asig3','asig3',3,'p_asig3','analizadorSintactico.py',816),
  ('asig3 -> RBRACKET asigfinal','asig3',2,'p_asig3','analizadorSintactico.py',817),
  ('asigfinal -> IGUAL tagmeteig asigf2','asigfinal',3,'p_asigfinal','analizadorSintactico.py',820),
  ('asigf2 -> expresion tagig PUNTOCOMA','asigf2',3,'p_asigf2','analizadorSintactico.py',824),
  ('asigf2 -> read tagig','asigf2',2,'p_asigf2','analizadorSintactico.py',825),
  ('asigf2 -> readint tagig','asigf2',2,'p_asigf2','analizadorSintactico.py',826),
  ('tagmeteig -> empty','tagmeteig',1,'p_tagmeteig','analizadorSintactico.py',830),
  ('tagig -> empty','tagig',1,'p_tagig','analizadorSintactico.py',835),
  ('print -> PRINT LPARENT pr2','print',3,'p_print','analizadorSintactico.py',857),
  ('pr2 -> expresion pr3','pr2',2,'p_pr2','analizadorSintactico.py',860),
  ('pr3 -> tagimprime RPARENT PUNTOCOMA','pr3',3,'p_pr3','analizadorSintactico.py',863),
  ('tagimprime -> empty','tagimprime',1,'p_tagimprime','analizadorSintactico.py',867),
  ('termino -> factor tagsacopm te2','termino',3,'p_termino','analizadorSintactico.py',873),
  ('te2 -> MULT tagm termino','te2',3,'p_te2','analizadorSintactico.py',876),
  ('te2 -> DIV tagm termino','te2',3,'p_te2','analizadorSintactico.py',877),
  ('te2 -> empty','te2',1,'p_te2','analizadorSintactico.py',878),
  ('tagm -> empty','tagm',1,'p_tagm','analizadorSintactico.py',882),
  ('tagsacopm -> empty','tagsacopm',1,'p_tagsacopm','analizadorSintactico.py',886),
  ('factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo','factor',5,'p_factor','analizadorSintactico.py',918),
  ('factor -> f2','factor',1,'p_factor','analizadorSintactico.py',919),
  ('factor -> f3','factor',1,'p_factor','analizadorSintactico.py',920),
  ('factor -> f6','factor',1,'p_factor','analizadorSintactico.py',921),
  ('factor -> f7','factor',1,'p_factor','analizadorSintactico.py',922),
  ('factor -> f9','factor',1,'p_factor','analizadorSintactico.py',923),
  ('f2 -> varcte','f2',1,'p_f2','analizadorSintactico.py',931),
  ('f3 -> ID','f3',1,'p_f3','analizadorSintactico.py',937),
  ('tagfondofalso -> empty','tagfondofalso',1,'p_tagfondofalso','analizadorSintactico.py',942),
  ('tagsacafondo -> empty','tagsacafondo',1,'p_tagsacafondo','analizadorSintactico.py',946),
  ('f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8','f7',6,'p_f7','analizadorSintactico.py',954),
  ('f8 -> COMA tagotradim exp tagmetedim f8','f8',5,'p_f8','analizadorSintactico.py',957),
  ('f8 -> RBRACKET tagterminadim','f8',2,'p_f8','analizadorSintactico.py',958),
  ('tagrevisadime -> empty','tagrevisadime',1,'p_tagrevisadime','analizadorSintactico.py',961),
  ('tagmetedim -> empty','tagmetedim',1,'p_tagmetedim','analizadorSintactico.py',975),
  ('tagotradim -> empty','tagotradim',1,'p_tagotradim','analizadorSintactico.py',999),
  ('tagterminadim -> empty','tagterminadim',1,'p_tagterminadim','analizadorSintactico.py',1012),
  ('f6 -> llamafuncion','f6',1,'p_f6','analizadorSintactico.py',1032),
  ('guardafunc -> empty','guardafunc',1,'p_guardafunc','analizadorSintactico.py',1035),
  ('f9 -> find','f9',1,'p_f9','analizadorSintactico.py',1040),
  ('find -> FIND tagfon LPARENT tagfondofalso exp RPARENT tagsaca PUNTO ID LBRACKET tagfind RBRACKET','find',12,'p_find','analizadorSintactico.py',1044),
  ('tagfind -> empty','tagfind',1,'p_tagfind','analizadorSintactico.py',1048),
  ('tagsaca -> empty','tagsaca',1,'p_tagsaca','analizadorSintactico.py',1063),
  ('tagfon -> empty','tagfon',1,'p_tagfon','analizadorSintactico.py',1067),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','analizadorSintactico.py',1072),
  ('estatuto -> print','estatuto',1,'p_estatuto','analizadorSintactico.py',1073),
  ('estatuto -> ciclowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',1074),
  ('estatuto -> ciclodowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',1075),
  ('estatuto -> ciclofor','estatuto',1,'p_estatuto','analizadorSintactico.py',1076),
  ('estatuto -> read','estatuto',1,'p_estatuto','analizadorSintactico.py',1077),
  ('estatuto -> readint','estatuto',1,'p_estatuto','analizadorSintactico.py',1078),
  ('estatuto -> comentario','estatuto',1,'p_estatuto','analizadorSintactico.py',1079),
  ('estatuto -> cuadrado','estatuto',1,'p_estatuto','analizadorSintactico.py',1080),
  ('estatuto -> triangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',1081),
  ('estatuto -> casa','estatuto',1,'p_estatuto','analizadorSintactico.py',1082),
  ('estatuto -> rectangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',1083),
  ('estatuto -> cubo','estatuto',1,'p_estatuto','analizadorSintactico.py',1084),
  ('estatuto -> trapecio','estatuto',1,'p_estatuto','analizadorSintactico.py',1085),
  ('estatuto -> estrella','estatuto',1,'p_estatuto','analizadorSintactico.py',1086),
  ('estatuto -> firma','estatuto',1,'p_estatuto','analizadorSintactico.py',1087),
  ('estatuto -> mueve','estatuto',1,'p_estatuto','analizadorSintactico.py',1088),
  ('estatuto -> levanta','estatuto',1,'p_estatuto','analizadorSintactico.py',1089),
  ('estatuto -> apoya','estatuto',1,'p_estatuto','analizadorSintactico.py',1090),
  ('estatuto -> dimension','estatuto',1,'p_estatuto','analizadorSintactico.py',1091),
  ('estatuto -> llamafuncion','estatuto',1,'p_estatuto','analizadorSintactico.py',1092),
  ('estatuto -> return','estatuto',1,'p_estatuto','analizadorSintactico.py',1093),
  ('estatuto -> if','estatuto',1,'p_estatuto','analizadorSintactico.py',1094),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','analizadorSintactico.py',1101),
  ('varcte -> ENTERO tagint','varcte',2,'p_varcte','analizadorSintactico.py',1106),
  ('varcte -> FLOTANTE tagfloat','varcte',2,'p_varcte','analizadorSintactico.py',1107),
  ('varcte -> CADENA tagcad','varcte',2,'p_varcte','analizadorSintactico.py',1108),
  ('varcte -> CARACTER tagcar','varcte',2,'p_varcte','analizadorSintactico.py',1109),
  ('varcte -> TRUE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',1110),
  ('varcte -> FALSE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',1111),
  ('tagint -> empty','tagint',1,'p_tagint','analizadorSintactico.py',1116),
  ('tagfloat -> empty','tagfloat',1,'p_tagfloat','analizadorSintactico.py',1126),
  ('tagcad -> empty','tagcad',1,'p_tagcad','analizadorSintactico.py',1134),
  ('tagcar -> empty','tagcar',1,'p_tagcar','analizadorSintactico.py',1142),
  ('tagbol -> empty','tagbol',1,'p_tagbol','analizadorSintactico.py',1150),
  ('ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile','ciclowhile',8,'p_ciclowhile','analizadorSintactico.py',1158),
  ('taginiciawhile -> empty','taginiciawhile',1,'p_taginiciawhile','analizadorSintactico.py',1162),
  ('tagwhile -> empty','tagwhile',1,'p_tagwhile','analizadorSintactico.py',1167),
  ('tagregresawhile -> empty','tagregresawhile',1,'p_tagregresawhile','analizadorSintactico.py',1179),
  ('ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA','ciclodowhile',9,'p_ciclodowhile','analizadorSintactico.py',1188),
  ('taginiciado -> empty','taginiciado',1,'p_taginiciado','analizadorSintactico.py',1192),
  ('tagcondiciondo -> empty','tagcondiciondo',1,'p_tagcondiciondo','analizadorSintactico.py',1197),
  ('read -> READ LPARENT RPARENT PUNTOCOMA','read',4,'p_read','analizadorSintactico.py',1211),
  ('readint -> READINT LPARENT RPARENT PUNTOCOMA','readint',4,'p_readint','analizadorSintactico.py',1220),
  ('ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor','ciclofor',11,'p_ciclofor','analizadorSintactico.py',1229),
  ('tagevaluafor -> empty','tagevaluafor',1,'p_tagevaluafor','analizadorSintactico.py',1233),
  ('tagterminafor -> empty','tagterminafor',1,'p_tagterminafor','analizadorSintactico.py',1245),
  ('tagespera -> empty','tagespera',1,'p_tagespera','analizadorSintactico.py',1250),
  ('tagasigna -> empty','tagasigna',1,'p_tagasigna','analizadorSintactico.py',1254),
  ('if -> IF LPARENT expresion tagif RPARENT bloque if2','if',7,'p_if','analizadorSintactico.py',1262),
  ('if2 -> tagterminaif','if2',1,'p_if2','analizadorSintactico.py',1265),
  ('if2 -> ELSE tagelse bloque tagterminaif','if2',4,'p_if2','analizadorSintactico.py',1266),
  ('tagif -> empty','tagif',1,'p_tagif','analizadorSintactico.py',1270),
  ('tagelse -> empty','tagelse',1,'p_tagelse','analizadorSintactico.py',1281),
  ('tagterminaif -> empty','tagterminaif',1,'p_tagterminaif','analizadorSintactico.py',1289),
  ('return -> RETURN llegoRet expresion PUNTOCOMA','return',4,'p_return','analizadorSintactico.py',1294),
  ('llegoRet -> empty','llegoRet',1,'p_llegoRet','analizadorSintactico.py',1299),
  ('cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA','cuadrado',10,'p_cuadrado','analizadorSintactico.py',1327),
  ('tagcuadro -> empty','tagcuadro',1,'p_tagcuadro','analizadorSintactico.py',1330),
  ('triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA','triangulo',10,'p_triangulo','analizadorSintactico.py',1336),
  ('tagtriangulo -> empty','tagtriangulo',1,'p_tagtriangulo','analizadorSintactico.py',1339),
  ('rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA','rectangulo',7,'p_rectangulo','analizadorSintactico.py',1344),
  ('casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA','casa',7,'p_casa','analizadorSintactico.py',1347),
  ('estrella -> ESTRELLA LPARENT exp COMA exp COMA exp RPARENT tagestrella PUNTOCOMA','estrella',10,'p_estrella','analizadorSintactico.py',1350),
  ('tagestrella -> empty','tagestrella',1,'p_tagestrella','analizadorSintactico.py',1353),
  ('firma -> FIRMA LPARENT RPARENT PUNTOCOMA','firma',4,'p_firma','analizadorSintactico.py',1358),
  ('cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA','cubo',10,'p_cubo','analizadorSintactico.py',1364),
  ('tagcubo -> empty','tagcubo',1,'p_tagcubo','analizadorSintactico.py',1367),
  ('mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA','mueve',8,'p_mueve','analizadorSintactico.py',1372),
  ('tagmueve -> empty','tagmueve',1,'p_tagmueve','analizadorSintactico.py',1375),
  ('levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA','levanta',4,'p_levanta','analizadorSintactico.py',1380),
  ('apoya -> APOYA LPARENT RPARENT PUNTOCOMA','apoya',4,'p_apoya','analizadorSintactico.py',1385),
  ('trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA','trapecio',7,'p_trapecio','analizadorSintactico.py',1390),
  ('dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA','dimension',5,'p_dimension','analizadorSintactico.py',1393),
  ('function -> FUNCTION pfunc','function',2,'p_function','analizadorSintactico.py',1397),
  ('pfunc -> tipo ID buildFunc LPARENT funct11','pfunc',5,'p_pfunc','analizadorSintactico.py',1400),
  ('pfunc -> VOID ID buildFunc LPARENT funct11','pfunc',5,'p_pfunc','analizadorSintactico.py',1401),
  ('buildFunc -> empty','buildFunc',1,'p_buildFunc','analizadorSintactico.py',1404),
  ('funct11 -> function4','funct11',1,'p_funct11','analizadorSintactico.py',1420),
  ('funct11 -> initParamTable funct2','funct11',2,'p_funct111','analizadorSintactico.py',1423),
  ('initParamTable -> empty','initParamTable',1,'p_initParamTable','analizadorSintactico.py',1426),
  ('funct2 -> tipo ID initParams funct3','funct2',4,'p_funct2','analizadorSintactico.py',1437),
  ('initParams -> empty','initParams',1,'p_initParams','analizadorSintactico.py',1440),
  ('funct3 -> COMA funct2','funct3',2,'p_funtion3','analizadorSintactico.py',1461),
  ('funct3 -> function4','funct3',1,'p_function31','analizadorSintactico.py',1465),
  ('function4 -> RPARENT initFunc bloque noinitFunc','function4',4,'p_function4','analizadorSintactico.py',1469),
  ('initFunc -> empty','initFunc',1,'p_initFunc','analizadorSintactico.py',1472),
  ('noinitFunc -> empty','noinitFunc',1,'p_noinitFunc','analizadorSintactico.py',1480),
  ('llamafuncion -> ID LPARENT tagverificafuncion llamaf11','llamafuncion',4,'p_llamafuncion','analizadorSintactico.py',1496),
  ('llamaf11 -> llamaf2','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1499),
  ('llamaf11 -> llamaf4','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1500),
  ('llamaf2 -> exp tagrevisaparam llamaf3','llamaf2',3,'p_llamaf2','analizadorSintactico.py',1503),
  ('llamaf3 -> COMA tagotroargumento llamaf2','llamaf3',3,'p_llamaf3','analizadorSintactico.py',1506),
  ('llamaf3 -> llamaf4','llamaf3',1,'p_llamaf3','analizadorSintactico.py',1507),
  ('llamaf4 -> RPARENT tagterminallamada PUNTOCOMA','llamaf4',3,'p_llamaf4','analizadorSintactico.py',1510),
  ('tagverificafuncion -> empty','tagverificafuncion',1,'p_tagverificafuncion','analizadorSintactico.py',1514),
  ('tagrevisaparam -> empty','tagrevisaparam',1,'p_tagrevisaparam','analizadorSintactico.py',1530),
  ('tagotroargumento -> empty','tagotroargumento',1,'p_tagotroargumento','analizadorSintactico.py',1546),
  ('tagterminallamada -> empty','tagterminallamada',1,'p_tagterminallamada','analizadorSintactico.py',1553),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',1569),
]
