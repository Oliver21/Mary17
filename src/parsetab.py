
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIGUALleftANDORleftLTGTLEGESAMEDIFleftSUMARESTAleftMULTDIVleftLBRACKETRBRACKETleftLPARENTRPARENTleftLKEYRKEYINT FLOAT IF ELSE VAR PRINT PROGRAM DO WHILE CHAR STRING BEGIN END FOR FUNCTION BOOL READ POW SQRT CUADRADO TRIANGULO RECTANGULO CASA TRAPECIO ESTRELLA CIRCULO LEVANTA APOYA CUBO MUEVE DIMENSION VOID ID MULT DIV SUMA RESTA LPARENT RPARENT COMA PUNTOCOMA DOSPUNTOS PUNTO LBRACKET RBRACKET LKEY RKEY IGUAL LT GT LE GE DIF SAME COMSIMPLE COMDOBLE ENTERO FLOTANTE CARACTER CADENA NOESNADA COMENTARIO BOLEANO RAIZ POTENCIA AND ORprogram : PROGRAM  cuadrupro ID initTop DOSPUNTOS p2initTop : emptyp2 : p3\n\t| p4\n\t| p5p3 : declaracion p3\n\t|  p4p4 : function p4\n\t| p5p5 : cuadrupro2 bloquecuadrupro : emptycuadrupro2 : emptybloque : LKEY  iniEnv b3 b4 b5iniEnv : emptyb3 : declaracion b3\n\t| emptyb4 : estatuto b4\n\t| emptyb5 : RKEYexpresion : expresion2 expreexpre : expre2\n\t| emptyexpre2 : AND tagmetelog expresion tagsacalog\n\t| OR tagmetelog expresion tagsacalogtagmetelog : emptytagsacalog : emptyexpresion2 : exp e2 e2 : e3 \n\t| emptye3 : GT tagrel exp tagsacrel\n\t| LT tagrel exp tagsacrel\n\t| LE tagrel exp tagsacrel\n\t| GE tagrel exp tagsacrel\n\t| DIF tagrel exp tagsacrel\n\t| SAME tagrel exp tagsacreltagrel : emptytagsacrel : emptyexp : termino tagsacops exp2exp2 : SUMA  tagop exp \n\t| RESTA tagop exp\n\t| emptytagop : emptytagsacops : emptydeclaracion : tipo ID savevar decla1savevar : emptydecla1 : declafinal\n\t| LBRACKET exp decla2decla2 : RBRACKET declafinal\n\t| COMA exp decla2declafinal : PUNTOCOMAtipo : INT\n\t| FLOAT\n\t| CHAR\n\t| STRING\n\t| BOOLasignacion : ID meteid asig2meteid :  emptyasig2 : LBRACKET exp asig3\n\t| asigfinalasig3 : COMA exp asig3\n\t| RBRACKET asigfinalasigfinal : IGUAL tagmeteig expresion tagig PUNTOCOMAtagmeteig : emptytagig : emptyprint : PRINT LPARENT pr2pr2 : expresion pr3pr3 : tagimprime RPARENT PUNTOCOMAtagimprime : emptytermino : factor tagsacopm te2te2 : MULT tagm termino \n\t| DIV tagm termino\n\t| emptytagm : emptytagsacopm : emptyfactor : LPARENT tagfondofalso expresion RPARENT tagsacafondo\n\t| f2\n\t| f3\n\t| f6\n\t| f7f2 : varctef3 : IDtagfondofalso : emptytagsacafondo : emptyf7 : ID LBRACKET exp f8f8 : COMA exp f8\n\t| RBRACKETf6 : llamafuncionestatuto : asignacion\n\t| print\n\t| ciclowhile\n\t| ciclodowhile\n\t| ciclofor\n\t| read\n\t| comentario\n\t| cuadrado\n\t| triangulo\n\t| casa\n\t| rectangulo\n\t| cubo\n\t| trapecio\n\t| estrella\n\t| mueve\n\t| levanta\n\t| apoya\n\t| dimension\n\t| llamafuncion\n\t| ifcomentario : COMENTARIOvarcte : ENTERO tagint\n\t| FLOTANTE tagfloat\n\t| CADENA tagcad\n\t| CARACTER tagcartagint : emptytagfloat : emptytagcad : emptytagcar : emptyciclowhile : WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhiletaginiciawhile : emptytagwhile : emptytagregresawhile : emptyciclodowhile : DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMAtaginiciado : emptytagcondiciondo : emptyread : READ LPARENT RPARENT PUNTOCOMAciclofor : FOR LPARENT asignacion expresion asignacion RPARENT bloqueif : IF LPARENT expresion tagif RPARENT bloque if2if2 : tagterminaif\n\t| ELSE tagelse bloque tagterminaiftagif : emptytagelse : emptytagterminaif : emptycuadrado : CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMAtagcuadro : emptytriangulo : TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMAtagtriangulo : emptyrectangulo : RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMAcasa : CASA LPARENT exp COMA exp RPARENT PUNTOCOMAestrella : ESTRELLA LPARENT exp RPARENT PUNTOCOMAcubo : CUBO LPARENT exp RPARENT PUNTOCOMAmueve : MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMAtagmueve : emptylevanta : LEVANTA LPARENT RPARENT PUNTOCOMAapoya : APOYA LPARENT RPARENT PUNTOCOMAtrapecio : TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMAdimension : DIMENSION LPARENT exp RPARENT PUNTOCOMAfunction : tipo ID buildFunc LPARENT funct11\n\t| VOID ID buildFunc LPARENT funct11buildFunc : emptyfunct11 : function4funct11 : initParamTable funct2initParamTable : emptyfunct2 : tipo ID initParams funct3initParams : emptyfunct3 : COMA funct2funct3 : function4function4 : RPARENT initFunc bloque noinitFuncinitFunc : emptynoinitFunc : emptyllamafuncion : ID LPARENT llamaf11llamaf11 : llamaf2\n\t| llamaf4llamaf2 : exp llamaf3llamaf3 : COMA llamaf2\n\t| llamaf4llamaf4 : RPARENTempty :'
    
_lr_action_items = {'DO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,52,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,52,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'READ':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,53,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,53,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'VOID':([8,13,23,48,49,50,95,96,100,121,122,145,159,194,207,248,249,262,292,293,326,],[10,10,10,-50,-44,-46,-149,-147,-146,-19,-13,-150,-47,-166,-48,-156,-158,-49,-155,-152,-154,]),'MUEVE':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,54,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,54,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'IGUAL':([85,135,136,178,286,],[-166,188,-57,-166,188,]),'CHAR':([8,13,23,24,33,34,44,45,46,48,49,50,95,96,98,99,100,121,122,145,159,194,207,248,249,262,292,293,294,326,],[17,17,17,-166,17,-14,17,-166,-166,-50,-44,-46,-149,-147,17,-151,-146,-19,-13,-150,-47,-166,-48,-156,-158,-49,-155,-152,17,-154,]),'WHILE':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,164,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,56,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,56,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,208,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'PROGRAM':([0,],[2,]),'PRINT':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,59,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,59,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'TRAPECIO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,58,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,58,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'RESTA':([101,102,103,104,105,107,108,109,110,111,112,113,115,146,147,150,151,152,153,154,155,156,157,162,163,180,181,182,184,202,203,236,237,255,259,261,283,297,298,299,300,327,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,198,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,-165,-160,-161,-159,-72,-69,-162,-164,-166,-84,-86,-163,-75,-83,-71,-70,-85,]),'COMENTARIO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,77,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,77,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'MULT':([101,102,103,104,107,108,109,110,111,112,113,115,150,151,152,153,154,155,156,157,162,163,180,181,182,184,236,237,255,259,261,283,297,298,327,],[-76,-77,-78,-79,-80,-87,-166,-166,-166,-166,-81,-166,-111,-115,204,-74,-109,-113,-112,-116,-114,-110,-165,-160,-161,-159,-162,-164,-166,-84,-86,-163,-75,-83,-85,]),'LKEY':([8,9,12,13,23,48,49,50,52,95,96,97,100,117,118,121,122,142,143,145,159,194,207,248,249,262,265,289,292,293,304,305,319,326,352,360,361,],[-166,24,-12,-166,-166,-50,-44,-46,-166,-149,-147,-166,-146,-122,24,-19,-13,24,-157,-150,-47,-166,-48,-156,-158,-49,-166,24,-155,-152,24,-119,24,-154,-166,24,-130,]),'LPARENT':([26,27,35,36,37,39,40,47,53,54,56,58,59,65,66,73,76,78,79,85,86,87,88,91,92,106,113,120,123,124,125,126,127,128,130,131,134,137,138,139,141,148,149,158,160,167,177,185,186,187,188,198,199,201,204,208,210,212,213,216,221,222,223,224,225,226,230,231,233,238,240,241,247,252,253,254,256,257,258,260,263,267,268,269,271,272,273,274,275,276,277,284,285,318,321,325,348,349,],[-166,-166,45,-148,46,-148,-166,106,119,120,-166,125,126,127,128,130,131,132,133,134,137,138,139,140,141,-166,134,106,167,-118,106,106,106,106,106,106,106,106,106,106,106,106,-82,106,106,106,106,-59,106,-56,-166,-166,-166,-166,-166,263,106,106,-166,-166,-166,-166,-166,-166,-166,-166,106,106,106,106,106,-63,106,106,-42,106,106,-73,106,106,106,106,-25,106,106,-36,106,106,106,106,106,-58,106,106,-61,106,-60,-62,]),'CASA':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,65,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,65,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'PUNTOCOMA':([27,38,39,51,101,102,103,104,105,107,108,109,110,111,112,113,115,116,146,147,150,151,152,153,154,155,156,157,161,162,163,165,169,172,179,180,181,182,184,192,196,197,202,203,214,215,217,227,228,229,232,236,237,242,245,255,259,261,270,283,287,295,296,297,298,299,300,303,306,307,308,310,311,312,313,314,315,316,317,322,323,327,330,331,334,335,336,337,338,339,340,341,342,343,355,359,362,364,365,367,368,],[-166,48,-45,-166,-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,-45,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,48,-114,-110,209,-166,-166,235,-165,-160,-161,-159,246,-38,-41,-72,-69,-20,-21,-22,-28,-29,-27,280,-162,-164,288,290,-166,-84,-86,309,-163,-166,-40,-39,-75,-83,-71,-70,-166,333,-166,-166,-166,-166,-166,-166,-166,-166,344,345,349,-64,-85,356,-141,-23,-26,-24,-33,-37,-34,-32,-35,-31,-30,363,-166,-166,-135,369,-133,371,]),'LT':([101,102,103,104,105,107,108,109,110,111,112,113,115,146,147,150,151,152,153,154,155,156,157,162,163,172,180,181,182,184,196,197,202,203,236,237,255,259,261,283,295,296,297,298,299,300,327,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,225,-165,-160,-161,-159,-38,-41,-72,-69,-162,-164,-166,-84,-86,-163,-40,-39,-75,-83,-71,-70,-85,]),'ID':([2,3,4,10,11,14,17,20,21,22,24,29,33,34,41,42,43,44,47,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,121,122,125,126,127,128,130,131,132,134,137,138,139,141,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,167,169,170,172,177,180,181,182,184,185,186,187,188,196,197,198,199,201,202,203,204,207,209,210,212,213,214,215,216,217,218,221,222,223,224,225,226,227,228,229,230,231,233,234,235,236,237,238,240,241,246,247,252,253,254,255,256,257,258,259,260,261,262,263,267,268,269,271,272,273,274,275,276,277,280,283,284,285,288,290,295,296,297,298,299,300,307,308,309,310,311,312,313,314,315,318,321,324,325,327,332,333,334,335,336,337,338,339,340,341,342,343,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,5,-11,26,27,-54,-53,-51,-52,-55,-166,40,-166,-14,51,-16,85,-166,113,-50,-44,-46,-104,-100,-94,-103,-107,-96,85,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-76,-77,-78,-79,-166,-166,-80,-87,-166,-166,-166,-166,-81,-166,113,-19,-13,113,113,113,113,113,113,178,113,113,113,113,113,195,-166,-43,113,-82,-111,-115,-166,-74,-109,-113,-112,-116,113,-47,113,-114,-110,113,-166,-65,-166,113,-165,-160,-161,-159,-59,113,-56,-166,-38,-41,-166,-166,-166,-72,-69,-166,-48,-124,113,113,-166,-20,-21,-166,-22,-66,-166,-166,-166,-166,-166,-166,-28,-29,-27,113,113,113,178,-142,-162,-164,113,113,-63,-143,113,113,-42,113,-166,113,-73,113,-84,113,-86,-49,113,113,-25,113,113,-36,113,113,113,113,113,-139,-163,-58,113,-145,-138,-40,-39,-75,-83,-71,-70,-166,-166,-67,-166,-166,-166,-166,-166,-166,113,-61,-166,113,-85,-166,-144,-23,-26,-24,-33,-37,-34,-32,-35,-31,-30,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'CADENA':([47,106,120,125,126,127,128,130,131,134,137,138,139,141,148,149,158,160,167,177,185,186,187,188,198,199,201,204,210,212,213,216,221,222,223,224,225,226,230,231,233,238,240,241,247,252,253,254,256,257,258,260,263,267,268,269,271,272,273,274,275,276,277,284,285,318,321,325,348,349,],[109,-166,109,109,109,109,109,109,109,109,109,109,109,109,109,-82,109,109,109,109,-59,109,-56,-166,-166,-166,-166,-166,109,109,-166,-166,-166,-166,-166,-166,-166,-166,109,109,109,109,109,-63,109,109,-42,109,109,-73,109,109,109,109,-25,109,109,-36,109,109,109,109,109,-58,109,109,-61,109,-60,-62,]),'DOSPUNTOS':([5,6,7,],[-166,8,-2,]),'APOYA':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,91,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,91,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'DIF':([101,102,103,104,105,107,108,109,110,111,112,113,115,146,147,150,151,152,153,154,155,156,157,162,163,172,180,181,182,184,196,197,202,203,236,237,255,259,261,283,295,296,297,298,299,300,327,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,222,-165,-160,-161,-159,-38,-41,-72,-69,-162,-164,-166,-84,-86,-163,-40,-39,-75,-83,-71,-70,-85,]),'LEVANTA':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,79,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,79,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'$end':([1,15,16,18,19,25,28,30,31,32,121,122,],[0,-1,-3,-4,-5,-10,-8,-9,-6,-7,-19,-13,]),'TRIANGULO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,76,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,76,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'AND':([101,102,103,104,105,107,108,109,110,111,112,113,115,146,147,150,151,152,153,154,155,156,157,162,163,169,172,180,181,182,184,196,197,202,203,227,228,229,236,237,255,259,261,283,295,296,297,298,299,300,310,311,312,313,314,315,327,337,338,339,340,341,342,343,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,213,-166,-165,-160,-161,-159,-38,-41,-72,-69,-28,-29,-27,-162,-164,-166,-84,-86,-163,-40,-39,-75,-83,-71,-70,-166,-166,-166,-166,-166,-166,-85,-33,-37,-34,-32,-35,-31,-30,]),'GT':([101,102,103,104,105,107,108,109,110,111,112,113,115,146,147,150,151,152,153,154,155,156,157,162,163,172,180,181,182,184,196,197,202,203,236,237,255,259,261,283,295,296,297,298,299,300,327,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,226,-165,-160,-161,-159,-38,-41,-72,-69,-162,-164,-166,-84,-86,-163,-40,-39,-75,-83,-71,-70,-85,]),'STRING':([8,13,23,24,33,34,44,45,46,48,49,50,95,96,98,99,100,121,122,145,159,194,207,248,249,262,292,293,294,326,],[14,14,14,-166,14,-14,14,-166,-166,-50,-44,-46,-149,-147,14,-151,-146,-19,-13,-150,-47,-166,-48,-156,-158,-49,-155,-152,14,-154,]),'FOR':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,78,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,78,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'CUBO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,73,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,73,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'RKEY':([24,33,34,42,43,44,48,49,50,55,57,60,61,62,63,64,67,68,69,70,71,72,74,75,77,80,81,82,83,84,89,90,93,94,121,122,129,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,-166,-166,-50,-44,-46,121,-104,-100,-94,-103,-107,-96,-166,-102,-90,-106,-95,-98,-89,-18,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-17,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'ELSE':([121,122,324,],[-19,-13,352,]),'ESTRELLA':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,88,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,88,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'GE':([101,102,103,104,105,107,108,109,110,111,112,113,115,146,147,150,151,152,153,154,155,156,157,162,163,172,180,181,182,184,196,197,202,203,236,237,255,259,261,283,295,296,297,298,299,300,327,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,221,-165,-160,-161,-159,-38,-41,-72,-69,-162,-164,-166,-84,-86,-163,-40,-39,-75,-83,-71,-70,-85,]),'LE':([101,102,103,104,105,107,108,109,110,111,112,113,115,146,147,150,151,152,153,154,155,156,157,162,163,172,180,181,182,184,196,197,202,203,236,237,255,259,261,283,295,296,297,298,299,300,327,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,223,-165,-160,-161,-159,-38,-41,-72,-69,-162,-164,-166,-84,-86,-163,-40,-39,-75,-83,-71,-70,-85,]),'CARACTER':([47,106,120,125,126,127,128,130,131,134,137,138,139,141,148,149,158,160,167,177,185,186,187,188,198,199,201,204,210,212,213,216,221,222,223,224,225,226,230,231,233,238,240,241,247,252,253,254,256,257,258,260,263,267,268,269,271,272,273,274,275,276,277,284,285,318,321,325,348,349,],[112,-166,112,112,112,112,112,112,112,112,112,112,112,112,112,-82,112,112,112,112,-59,112,-56,-166,-166,-166,-166,-166,112,112,-166,-166,-166,-166,-166,-166,-166,-166,112,112,112,112,112,-63,112,112,-42,112,112,-73,112,112,112,112,-25,112,112,-36,112,112,112,112,112,-58,112,112,-61,112,-60,-62,]),'COMA':([101,102,103,104,105,107,108,109,110,111,112,113,114,115,146,147,150,151,152,153,154,155,156,157,162,163,166,168,173,174,176,180,181,182,183,184,193,195,196,197,202,203,205,206,236,237,239,250,251,255,259,261,281,283,291,295,296,297,298,299,300,301,320,327,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,160,-166,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,210,212,230,231,233,-165,-160,-161,238,-159,247,-166,-38,-41,-72,-69,260,160,-162,-164,285,-153,294,-166,-84,-86,318,-163,325,-40,-39,-75,-83,-71,-70,260,285,-85,]),'DIMENSION':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,86,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,86,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'IF':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,87,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,87,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'RPARENT':([45,46,101,102,103,104,105,107,108,109,110,111,112,113,115,119,133,134,140,146,147,150,151,152,153,154,155,156,157,162,163,169,171,172,175,180,181,182,183,184,185,187,189,190,191,195,196,197,200,202,203,211,214,215,217,219,220,227,228,229,236,237,243,244,250,251,255,259,261,264,266,278,279,282,283,284,295,296,297,298,299,300,302,307,308,310,311,312,313,314,315,321,327,328,329,334,335,336,337,338,339,340,341,342,343,346,348,349,354,],[97,97,-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,165,179,180,192,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,-166,-166,-166,232,-165,-160,-161,180,-159,-59,-56,242,-166,245,-166,-38,-41,255,-72,-69,265,-20,-21,-22,270,-68,-28,-29,-27,-162,-164,289,-129,-153,97,-166,-84,-86,303,306,316,317,319,-163,-58,-40,-39,-75,-83,-71,-70,-166,-166,-166,-166,-166,-166,-166,-166,-166,-61,-85,355,-123,-23,-26,-24,-33,-37,-34,-32,-35,-31,-30,359,-60,-62,362,]),'LBRACKET':([27,38,39,51,85,113,116,135,136,178,],[-166,47,-45,-166,-166,158,-45,186,-57,-166,]),'INT':([8,13,23,24,33,34,44,45,46,48,49,50,95,96,98,99,100,121,122,145,159,194,207,248,249,262,292,293,294,326,],[20,20,20,-166,20,-14,20,-166,-166,-50,-44,-46,-149,-147,20,-151,-146,-19,-13,-150,-47,-166,-48,-156,-158,-49,-155,-152,20,-154,]),'FLOAT':([8,13,23,24,33,34,44,45,46,48,49,50,95,96,98,99,100,121,122,145,159,194,207,248,249,262,292,293,294,326,],[21,21,21,-166,21,-14,21,-166,-166,-50,-44,-46,-149,-147,21,-151,-146,-19,-13,-150,-47,-166,-48,-156,-158,-49,-155,-152,21,-154,]),'SAME':([101,102,103,104,105,107,108,109,110,111,112,113,115,146,147,150,151,152,153,154,155,156,157,162,163,172,180,181,182,184,196,197,202,203,236,237,255,259,261,283,295,296,297,298,299,300,327,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,224,-165,-160,-161,-159,-38,-41,-72,-69,-162,-164,-166,-84,-86,-163,-40,-39,-75,-83,-71,-70,-85,]),'CUADRADO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,92,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,92,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'BOOL':([8,13,23,24,33,34,44,45,46,48,49,50,95,96,98,99,100,121,122,145,159,194,207,248,249,262,292,293,294,326,],[22,22,22,-166,22,-14,22,-166,-166,-50,-44,-46,-149,-147,22,-151,-146,-19,-13,-150,-47,-166,-48,-156,-158,-49,-155,-152,22,-154,]),'SUMA':([101,102,103,104,105,107,108,109,110,111,112,113,115,146,147,150,151,152,153,154,155,156,157,162,163,180,181,182,184,202,203,236,237,255,259,261,283,297,298,299,300,327,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,199,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,-165,-160,-161,-159,-72,-69,-162,-164,-166,-84,-86,-163,-75,-83,-71,-70,-85,]),'RECTANGULO':([24,33,34,42,43,44,48,49,50,57,60,61,62,63,64,67,68,69,70,71,72,74,77,80,81,82,83,84,89,90,93,94,121,122,159,170,180,181,182,184,185,187,207,209,218,235,236,237,246,262,280,283,284,288,290,309,321,324,332,333,344,345,347,348,349,350,351,353,356,357,358,363,366,369,370,371,],[-166,-166,-14,-16,66,-166,-50,-44,-46,-104,-100,-94,-103,-107,-96,66,-102,-90,-106,-95,-98,-89,-108,-93,-99,-92,-101,-91,-97,-88,-105,-15,-19,-13,-47,-65,-165,-160,-161,-159,-59,-56,-48,-124,-66,-142,-162,-164,-143,-49,-139,-163,-58,-145,-138,-67,-61,-166,-166,-144,-137,-136,-125,-60,-62,-126,-127,-131,-140,-117,-120,-121,-166,-134,-128,-132,]),'FLOTANTE':([47,106,120,125,126,127,128,130,131,134,137,138,139,141,148,149,158,160,167,177,185,186,187,188,198,199,201,204,210,212,213,216,221,222,223,224,225,226,230,231,233,238,240,241,247,252,253,254,256,257,258,260,263,267,268,269,271,272,273,274,275,276,277,284,285,318,321,325,348,349,],[115,-166,115,115,115,115,115,115,115,115,115,115,115,115,115,-82,115,115,115,115,-59,115,-56,-166,-166,-166,-166,-166,115,115,-166,-166,-166,-166,-166,-166,-166,-166,115,115,115,115,115,-63,115,115,-42,115,115,-73,115,115,115,115,-25,115,115,-36,115,115,115,115,115,-58,115,115,-61,115,-60,-62,]),'RBRACKET':([101,102,103,104,105,107,108,109,110,111,112,113,114,115,146,147,150,151,152,153,154,155,156,157,162,163,180,181,182,184,196,197,202,203,205,206,236,237,239,255,259,261,283,295,296,297,298,299,300,301,320,327,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,161,-166,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,-165,-160,-161,-159,-38,-41,-72,-69,261,161,-162,-164,286,-166,-84,-86,-163,-40,-39,-75,-83,-71,-70,261,286,-85,]),'ENTERO':([47,106,120,125,126,127,128,130,131,134,137,138,139,141,148,149,158,160,167,177,185,186,187,188,198,199,201,204,210,212,213,216,221,222,223,224,225,226,230,231,233,238,240,241,247,252,253,254,256,257,258,260,263,267,268,269,271,272,273,274,275,276,277,284,285,318,321,325,348,349,],[111,-166,111,111,111,111,111,111,111,111,111,111,111,111,111,-82,111,111,111,111,-59,111,-56,-166,-166,-166,-166,-166,111,111,-166,-166,-166,-166,-166,-166,-166,-166,111,111,111,111,111,-63,111,111,-42,111,111,-73,111,111,111,111,-25,111,111,-36,111,111,111,111,111,-58,111,111,-61,111,-60,-62,]),'OR':([101,102,103,104,105,107,108,109,110,111,112,113,115,146,147,150,151,152,153,154,155,156,157,162,163,169,172,180,181,182,184,196,197,202,203,227,228,229,236,237,255,259,261,283,295,296,297,298,299,300,310,311,312,313,314,315,327,337,338,339,340,341,342,343,],[-76,-77,-78,-79,-166,-80,-87,-166,-166,-166,-166,-81,-166,-166,-43,-111,-115,-166,-74,-109,-113,-112,-116,-114,-110,216,-166,-165,-160,-161,-159,-38,-41,-72,-69,-28,-29,-27,-162,-164,-166,-84,-86,-163,-40,-39,-75,-83,-71,-70,-166,-166,-166,-166,-166,-166,-85,-33,-37,-34,-32,-35,-31,-30,]),'DIV':([101,102,103,104,107,108,109,110,111,112,113,115,150,151,152,153,154,155,156,157,162,163,180,181,182,184,236,237,255,259,261,283,297,298,327,],[-76,-77,-78,-79,-80,-87,-166,-166,-166,-166,-81,-166,-111,-115,201,-74,-109,-113,-112,-116,-114,-110,-165,-160,-161,-159,-162,-164,-166,-84,-86,-163,-75,-83,-85,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuadrado':([43,67,],[71,71,]),'tagsacrel':([310,311,312,313,314,315,],[337,339,340,341,342,343,]),'tagfondofalso':([106,],[148,]),'expre2':([169,],[215,]),'bloque':([9,118,142,289,304,319,360,],[25,164,194,324,332,347,366,]),'taginiciawhile':([56,],[123,]),'comentario':([43,67,],[61,61,]),'if2':([324,],[350,]),'tagop':([198,199,],[252,254,]),'program':([0,],[1,]),'rectangulo':([43,67,],[72,72,]),'factor':([47,120,125,126,127,128,130,131,134,137,138,139,141,148,158,160,167,177,186,210,212,230,231,233,238,240,247,252,254,256,258,260,263,267,269,271,273,274,275,276,277,285,318,325,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'p3':([8,23,],[16,31,]),'read':([43,67,],[80,80,]),'cubo':([43,67,],[81,81,]),'buildFunc':([26,27,40,],[35,37,37,]),'estrella':([43,67,],[83,83,]),'meteid':([85,178,],[135,135,]),'expresion':([126,138,148,167,177,240,263,267,269,],[171,190,200,211,234,287,302,307,308,]),'p4':([8,13,23,],[18,28,32,]),'tagcad':([109,],[150,]),'tagtriangulo':([359,],[365,]),'tagimprime':([171,],[219,]),'tagcar':([112,],[156,]),'taginiciado':([52,],[118,]),'tagwhile':([265,],[304,]),'initTop':([5,],[6,]),'b5':([55,],[122,]),'apoya':([43,67,],[57,57,]),'b3':([33,44,],[43,94,]),'tagsacops':([105,],[146,]),'varcte':([47,120,125,126,127,128,130,131,134,137,138,139,141,148,158,160,167,177,186,210,212,230,231,233,238,240,247,252,254,256,258,260,263,267,269,271,273,274,275,276,277,285,318,325,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'tipo':([8,13,23,33,44,98,294,],[11,29,11,41,41,144,144,]),'tagif':([190,],[243,]),'tagig':([287,],[322,]),'funct2':([98,294,],[145,326,]),'funct3':([251,],[293,]),'declafinal':([38,161,],[50,207,]),'print':([43,67,],[74,74,]),'tagsacopm':([110,],[152,]),'tagcuadro':([362,],[368,]),'tagrel':([221,222,223,224,225,226,],[271,273,274,275,276,277,]),'initFunc':([97,],[142,]),'ciclofor':([43,67,],[82,82,]),'tagm':([201,204,],[256,258,]),'te2':([152,],[203,]),'e3':([172,],[227,]),'e2':([172,],[229,]),'tagsacalog':([307,308,],[334,336,]),'initParams':([195,],[251,]),'declaracion':([8,23,33,44,],[23,23,44,44,]),'tagmueve':([303,],[330,]),'cuadrupro2':([8,13,23,],[9,9,9,]),'termino':([47,120,125,126,127,128,130,131,134,137,138,139,141,148,158,160,167,177,186,210,212,230,231,233,238,240,247,252,254,256,258,260,263,267,269,271,273,274,275,276,277,285,318,325,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,299,300,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'tagfloat':([115,],[163,]),'ciclowhile':([43,67,],[69,69,]),'levanta':([43,67,],[62,62,]),'triangulo':([43,67,],[64,64,]),'exp2':([146,],[196,]),'estatuto':([43,67,],[67,67,]),'tagcondiciondo':([302,],[328,]),'asig3':([239,320,],[284,348,]),'asig2':([135,],[187,]),'tagelse':([352,],[360,]),'empty':([2,5,8,13,23,24,26,27,33,40,43,44,45,46,51,52,56,67,85,97,105,106,109,110,111,112,115,146,152,169,171,172,178,188,190,194,195,198,199,201,204,213,216,221,222,223,224,225,226,255,265,287,302,303,307,308,310,311,312,313,314,315,324,332,352,359,362,366,],[4,7,12,12,12,34,36,39,42,36,75,42,99,99,116,117,124,75,136,143,147,149,151,153,155,157,162,197,202,217,220,228,136,241,244,249,250,253,253,257,257,268,268,272,272,272,272,272,272,298,305,323,329,331,335,335,338,338,338,338,338,338,353,358,361,364,367,353,]),'function':([8,13,23,],[13,13,13,]),'expresion2':([126,138,148,167,177,240,263,267,269,],[169,169,169,169,169,169,169,169,169,]),'tagterminaif':([324,366,],[351,370,]),'cuadrupro':([2,],[3,]),'tagint':([111,],[154,]),'p2':([8,],[15,]),'b4':([43,67,],[55,129,]),'casa':([43,67,],[89,89,]),'asignacion':([43,67,132,234,],[90,90,177,282,]),'p5':([8,13,23,],[19,30,30,]),'llamaf2':([134,238,],[181,283,]),'llamaf3':([183,],[236,]),'llamaf4':([134,183,],[182,237,]),'noinitFunc':([194,],[248,]),'llamaf11':([134,],[184,]),'iniEnv':([24,],[33,]),'f2':([47,120,125,126,127,128,130,131,134,137,138,139,141,148,158,160,167,177,186,210,212,230,231,233,238,240,247,252,254,256,258,260,263,267,269,271,273,274,275,276,277,285,318,325,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'f3':([47,120,125,126,127,128,130,131,134,137,138,139,141,148,158,160,167,177,186,210,212,230,231,233,238,240,247,252,254,256,258,260,263,267,269,271,273,274,275,276,277,285,318,325,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'f6':([47,120,125,126,127,128,130,131,134,137,138,139,141,148,158,160,167,177,186,210,212,230,231,233,238,240,247,252,254,256,258,260,263,267,269,271,273,274,275,276,277,285,318,325,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'f7':([47,120,125,126,127,128,130,131,134,137,138,139,141,148,158,160,167,177,186,210,212,230,231,233,238,240,247,252,254,256,258,260,263,267,269,271,273,274,275,276,277,285,318,325,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'f8':([205,301,],[259,327,]),'trapecio':([43,67,],[60,60,]),'tagsacafondo':([255,],[297,]),'if':([43,67,],[63,63,]),'mueve':([43,67,],[68,68,]),'decla1':([38,],[49,]),'llamafuncion':([43,47,67,120,125,126,127,128,130,131,134,137,138,139,141,148,158,160,167,177,186,210,212,230,231,233,238,240,247,252,254,256,258,260,263,267,269,271,273,274,275,276,277,285,318,325,],[70,108,70,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'decla2':([114,206,],[159,262,]),'initParamTable':([45,46,],[98,98,]),'tagmeteig':([188,],[240,]),'funct11':([45,46,],[96,100,]),'pr3':([171,],[218,]),'pr2':([126,],[170,]),'ciclodowhile':([43,67,],[84,84,]),'asigfinal':([135,286,],[185,321,]),'function4':([45,46,251,],[95,95,292,]),'expre':([169,],[214,]),'tagmetelog':([213,216,],[267,269,]),'savevar':([27,51,],[38,38,]),'exp':([47,120,125,126,127,128,130,131,134,137,138,139,141,148,158,160,167,177,186,210,212,230,231,233,238,240,247,252,254,260,263,267,269,271,273,274,275,276,277,285,318,325,],[114,166,168,172,173,174,175,176,183,189,172,191,193,172,205,206,172,172,239,264,266,278,279,281,183,172,291,295,296,301,172,172,172,310,311,312,313,314,315,320,346,354,]),'tagregresawhile':([332,],[357,]),'dimension':([43,67,],[93,93,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2','program',6,'p_program','analizadorSintactico.py',235),
  ('initTop -> empty','initTop',1,'p_initTop','analizadorSintactico.py',240),
  ('p2 -> p3','p2',1,'p_p2','analizadorSintactico.py',248),
  ('p2 -> p4','p2',1,'p_p2','analizadorSintactico.py',249),
  ('p2 -> p5','p2',1,'p_p2','analizadorSintactico.py',250),
  ('p3 -> declaracion p3','p3',2,'p_p3','analizadorSintactico.py',253),
  ('p3 -> p4','p3',1,'p_p3','analizadorSintactico.py',254),
  ('p4 -> function p4','p4',2,'p_p4','analizadorSintactico.py',257),
  ('p4 -> p5','p4',1,'p_p4','analizadorSintactico.py',258),
  ('p5 -> cuadrupro2 bloque','p5',2,'p_p5','analizadorSintactico.py',261),
  ('cuadrupro -> empty','cuadrupro',1,'p_cuadrupro','analizadorSintactico.py',264),
  ('cuadrupro2 -> empty','cuadrupro2',1,'p_cuadrupro2','analizadorSintactico.py',270),
  ('bloque -> LKEY iniEnv b3 b4 b5','bloque',5,'p_bloque','analizadorSintactico.py',275),
  ('iniEnv -> empty','iniEnv',1,'p_iniEnv','analizadorSintactico.py',279),
  ('b3 -> declaracion b3','b3',2,'p_b3','analizadorSintactico.py',289),
  ('b3 -> empty','b3',1,'p_b3','analizadorSintactico.py',290),
  ('b4 -> estatuto b4','b4',2,'p_b4','analizadorSintactico.py',293),
  ('b4 -> empty','b4',1,'p_b4','analizadorSintactico.py',294),
  ('b5 -> RKEY','b5',1,'p_b5','analizadorSintactico.py',297),
  ('expresion -> expresion2 expre','expresion',2,'p_expresion','analizadorSintactico.py',312),
  ('expre -> expre2','expre',1,'p_expre','analizadorSintactico.py',315),
  ('expre -> empty','expre',1,'p_expre','analizadorSintactico.py',316),
  ('expre2 -> AND tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',319),
  ('expre2 -> OR tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',320),
  ('tagmetelog -> empty','tagmetelog',1,'p_tagmetelog','analizadorSintactico.py',323),
  ('tagsacalog -> empty','tagsacalog',1,'p_tagsacalog','analizadorSintactico.py',327),
  ('expresion2 -> exp e2','expresion2',2,'p_expresion2','analizadorSintactico.py',359),
  ('e2 -> e3','e2',1,'p_e2','analizadorSintactico.py',364),
  ('e2 -> empty','e2',1,'p_e2','analizadorSintactico.py',365),
  ('e3 -> GT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',368),
  ('e3 -> LT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',369),
  ('e3 -> LE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',370),
  ('e3 -> GE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',371),
  ('e3 -> DIF tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',372),
  ('e3 -> SAME tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',373),
  ('tagrel -> empty','tagrel',1,'p_tagrel','analizadorSintactico.py',376),
  ('tagsacrel -> empty','tagsacrel',1,'p_tagsacrel','analizadorSintactico.py',381),
  ('exp -> termino tagsacops exp2','exp',3,'p_exp','analizadorSintactico.py',412),
  ('exp2 -> SUMA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',416),
  ('exp2 -> RESTA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',417),
  ('exp2 -> empty','exp2',1,'p_exp2','analizadorSintactico.py',418),
  ('tagop -> empty','tagop',1,'p_tagop','analizadorSintactico.py',421),
  ('tagsacops -> empty','tagsacops',1,'p_tagsacops','analizadorSintactico.py',426),
  ('declaracion -> tipo ID savevar decla1','declaracion',4,'p_declaracion','analizadorSintactico.py',469),
  ('savevar -> empty','savevar',1,'p_savevar','analizadorSintactico.py',473),
  ('decla1 -> declafinal','decla1',1,'p_decla1','analizadorSintactico.py',484),
  ('decla1 -> LBRACKET exp decla2','decla1',3,'p_decla1','analizadorSintactico.py',485),
  ('decla2 -> RBRACKET declafinal','decla2',2,'p_decla2','analizadorSintactico.py',488),
  ('decla2 -> COMA exp decla2','decla2',3,'p_decla2','analizadorSintactico.py',489),
  ('declafinal -> PUNTOCOMA','declafinal',1,'p_declafinal','analizadorSintactico.py',493),
  ('tipo -> INT','tipo',1,'p_tipo','analizadorSintactico.py',503),
  ('tipo -> FLOAT','tipo',1,'p_tipo','analizadorSintactico.py',504),
  ('tipo -> CHAR','tipo',1,'p_tipo','analizadorSintactico.py',505),
  ('tipo -> STRING','tipo',1,'p_tipo','analizadorSintactico.py',506),
  ('tipo -> BOOL','tipo',1,'p_tipo','analizadorSintactico.py',507),
  ('asignacion -> ID meteid asig2','asignacion',3,'p_asignacion','analizadorSintactico.py',517),
  ('meteid -> empty','meteid',1,'p_meteid','analizadorSintactico.py',526),
  ('asig2 -> LBRACKET exp asig3','asig2',3,'p_asig2','analizadorSintactico.py',533),
  ('asig2 -> asigfinal','asig2',1,'p_asig2','analizadorSintactico.py',534),
  ('asig3 -> COMA exp asig3','asig3',3,'p_asig3','analizadorSintactico.py',537),
  ('asig3 -> RBRACKET asigfinal','asig3',2,'p_asig3','analizadorSintactico.py',538),
  ('asigfinal -> IGUAL tagmeteig expresion tagig PUNTOCOMA','asigfinal',5,'p_asigfinal','analizadorSintactico.py',542),
  ('tagmeteig -> empty','tagmeteig',1,'p_tagmeteig','analizadorSintactico.py',546),
  ('tagig -> empty','tagig',1,'p_tagig','analizadorSintactico.py',551),
  ('print -> PRINT LPARENT pr2','print',3,'p_print','analizadorSintactico.py',578),
  ('pr2 -> expresion pr3','pr2',2,'p_pr2','analizadorSintactico.py',582),
  ('pr3 -> tagimprime RPARENT PUNTOCOMA','pr3',3,'p_pr3','analizadorSintactico.py',586),
  ('tagimprime -> empty','tagimprime',1,'p_tagimprime','analizadorSintactico.py',589),
  ('termino -> factor tagsacopm te2','termino',3,'p_termino','analizadorSintactico.py',595),
  ('te2 -> MULT tagm termino','te2',3,'p_te2','analizadorSintactico.py',599),
  ('te2 -> DIV tagm termino','te2',3,'p_te2','analizadorSintactico.py',600),
  ('te2 -> empty','te2',1,'p_te2','analizadorSintactico.py',601),
  ('tagm -> empty','tagm',1,'p_tagm','analizadorSintactico.py',606),
  ('tagsacopm -> empty','tagsacopm',1,'p_tagsacopm','analizadorSintactico.py',611),
  ('factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo','factor',5,'p_factor','analizadorSintactico.py',640),
  ('factor -> f2','factor',1,'p_factor','analizadorSintactico.py',641),
  ('factor -> f3','factor',1,'p_factor','analizadorSintactico.py',642),
  ('factor -> f6','factor',1,'p_factor','analizadorSintactico.py',643),
  ('factor -> f7','factor',1,'p_factor','analizadorSintactico.py',644),
  ('f2 -> varcte','f2',1,'p_f2','analizadorSintactico.py',653),
  ('f3 -> ID','f3',1,'p_f3','analizadorSintactico.py',659),
  ('tagfondofalso -> empty','tagfondofalso',1,'p_tagfondofalso','analizadorSintactico.py',666),
  ('tagsacafondo -> empty','tagsacafondo',1,'p_tagsacafondo','analizadorSintactico.py',670),
  ('f7 -> ID LBRACKET exp f8','f7',4,'p_f7','analizadorSintactico.py',691),
  ('f8 -> COMA exp f8','f8',3,'p_f8','analizadorSintactico.py',695),
  ('f8 -> RBRACKET','f8',1,'p_f8','analizadorSintactico.py',696),
  ('f6 -> llamafuncion','f6',1,'p_f6','analizadorSintactico.py',700),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','analizadorSintactico.py',706),
  ('estatuto -> print','estatuto',1,'p_estatuto','analizadorSintactico.py',707),
  ('estatuto -> ciclowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',708),
  ('estatuto -> ciclodowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',709),
  ('estatuto -> ciclofor','estatuto',1,'p_estatuto','analizadorSintactico.py',710),
  ('estatuto -> read','estatuto',1,'p_estatuto','analizadorSintactico.py',711),
  ('estatuto -> comentario','estatuto',1,'p_estatuto','analizadorSintactico.py',712),
  ('estatuto -> cuadrado','estatuto',1,'p_estatuto','analizadorSintactico.py',713),
  ('estatuto -> triangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',714),
  ('estatuto -> casa','estatuto',1,'p_estatuto','analizadorSintactico.py',715),
  ('estatuto -> rectangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',716),
  ('estatuto -> cubo','estatuto',1,'p_estatuto','analizadorSintactico.py',717),
  ('estatuto -> trapecio','estatuto',1,'p_estatuto','analizadorSintactico.py',718),
  ('estatuto -> estrella','estatuto',1,'p_estatuto','analizadorSintactico.py',719),
  ('estatuto -> mueve','estatuto',1,'p_estatuto','analizadorSintactico.py',720),
  ('estatuto -> levanta','estatuto',1,'p_estatuto','analizadorSintactico.py',721),
  ('estatuto -> apoya','estatuto',1,'p_estatuto','analizadorSintactico.py',722),
  ('estatuto -> dimension','estatuto',1,'p_estatuto','analizadorSintactico.py',723),
  ('estatuto -> llamafuncion','estatuto',1,'p_estatuto','analizadorSintactico.py',724),
  ('estatuto -> if','estatuto',1,'p_estatuto','analizadorSintactico.py',725),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','analizadorSintactico.py',733),
  ('varcte -> ENTERO tagint','varcte',2,'p_varcte','analizadorSintactico.py',739),
  ('varcte -> FLOTANTE tagfloat','varcte',2,'p_varcte','analizadorSintactico.py',740),
  ('varcte -> CADENA tagcad','varcte',2,'p_varcte','analizadorSintactico.py',741),
  ('varcte -> CARACTER tagcar','varcte',2,'p_varcte','analizadorSintactico.py',742),
  ('tagint -> empty','tagint',1,'p_tagint','analizadorSintactico.py',745),
  ('tagfloat -> empty','tagfloat',1,'p_tagfloat','analizadorSintactico.py',751),
  ('tagcad -> empty','tagcad',1,'p_tagcad','analizadorSintactico.py',757),
  ('tagcar -> empty','tagcar',1,'p_tagcar','analizadorSintactico.py',763),
  ('ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile','ciclowhile',8,'p_ciclowhile','analizadorSintactico.py',771),
  ('taginiciawhile -> empty','taginiciawhile',1,'p_taginiciawhile','analizadorSintactico.py',775),
  ('tagwhile -> empty','tagwhile',1,'p_tagwhile','analizadorSintactico.py',779),
  ('tagregresawhile -> empty','tagregresawhile',1,'p_tagregresawhile','analizadorSintactico.py',791),
  ('ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA','ciclodowhile',9,'p_ciclodowhile','analizadorSintactico.py',800),
  ('taginiciado -> empty','taginiciado',1,'p_taginiciado','analizadorSintactico.py',805),
  ('tagcondiciondo -> empty','tagcondiciondo',1,'p_tagcondiciondo','analizadorSintactico.py',809),
  ('read -> READ LPARENT RPARENT PUNTOCOMA','read',4,'p_read','analizadorSintactico.py',823),
  ('ciclofor -> FOR LPARENT asignacion expresion asignacion RPARENT bloque','ciclofor',7,'p_ciclofor','analizadorSintactico.py',829),
  ('if -> IF LPARENT expresion tagif RPARENT bloque if2','if',7,'p_if','analizadorSintactico.py',833),
  ('if2 -> tagterminaif','if2',1,'p_if2','analizadorSintactico.py',837),
  ('if2 -> ELSE tagelse bloque tagterminaif','if2',4,'p_if2','analizadorSintactico.py',838),
  ('tagif -> empty','tagif',1,'p_tagif','analizadorSintactico.py',841),
  ('tagelse -> empty','tagelse',1,'p_tagelse','analizadorSintactico.py',852),
  ('tagterminaif -> empty','tagterminaif',1,'p_tagterminaif','analizadorSintactico.py',860),
  ('cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA','cuadrado',10,'p_cuadrado','analizadorSintactico.py',881),
  ('tagcuadro -> empty','tagcuadro',1,'p_tagcuadro','analizadorSintactico.py',885),
  ('triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA','triangulo',10,'p_triangulo','analizadorSintactico.py',891),
  ('tagtriangulo -> empty','tagtriangulo',1,'p_tagtriangulo','analizadorSintactico.py',895),
  ('rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA','rectangulo',7,'p_rectangulo','analizadorSintactico.py',900),
  ('casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA','casa',7,'p_casa','analizadorSintactico.py',904),
  ('estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA','estrella',5,'p_estrella','analizadorSintactico.py',908),
  ('cubo -> CUBO LPARENT exp RPARENT PUNTOCOMA','cubo',5,'p_cubo','analizadorSintactico.py',912),
  ('mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA','mueve',8,'p_mueve','analizadorSintactico.py',916),
  ('tagmueve -> empty','tagmueve',1,'p_tagmueve','analizadorSintactico.py',920),
  ('levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA','levanta',4,'p_levanta','analizadorSintactico.py',925),
  ('apoya -> APOYA LPARENT RPARENT PUNTOCOMA','apoya',4,'p_apoya','analizadorSintactico.py',929),
  ('trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA','trapecio',7,'p_trapecio','analizadorSintactico.py',933),
  ('dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA','dimension',5,'p_dimension','analizadorSintactico.py',937),
  ('function -> tipo ID buildFunc LPARENT funct11','function',5,'p_function','analizadorSintactico.py',942),
  ('function -> VOID ID buildFunc LPARENT funct11','function',5,'p_function','analizadorSintactico.py',943),
  ('buildFunc -> empty','buildFunc',1,'p_buildFunc','analizadorSintactico.py',947),
  ('funct11 -> function4','funct11',1,'p_funct11','analizadorSintactico.py',953),
  ('funct11 -> initParamTable funct2','funct11',2,'p_funct111','analizadorSintactico.py',956),
  ('initParamTable -> empty','initParamTable',1,'p_initParamTable','analizadorSintactico.py',959),
  ('funct2 -> tipo ID initParams funct3','funct2',4,'p_funct2','analizadorSintactico.py',962),
  ('initParams -> empty','initParams',1,'p_initParams','analizadorSintactico.py',965),
  ('funct3 -> COMA funct2','funct3',2,'p_funtion3','analizadorSintactico.py',973),
  ('funct3 -> function4','funct3',1,'p_function31','analizadorSintactico.py',977),
  ('function4 -> RPARENT initFunc bloque noinitFunc','function4',4,'p_function4','analizadorSintactico.py',981),
  ('initFunc -> empty','initFunc',1,'p_initFunc','analizadorSintactico.py',984),
  ('noinitFunc -> empty','noinitFunc',1,'p_noinitFunc','analizadorSintactico.py',993),
  ('llamafuncion -> ID LPARENT llamaf11','llamafuncion',3,'p_llamafuncion','analizadorSintactico.py',1003),
  ('llamaf11 -> llamaf2','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1007),
  ('llamaf11 -> llamaf4','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1008),
  ('llamaf2 -> exp llamaf3','llamaf2',2,'p_llamaf2','analizadorSintactico.py',1011),
  ('llamaf3 -> COMA llamaf2','llamaf3',2,'p_llamaf3','analizadorSintactico.py',1014),
  ('llamaf3 -> llamaf4','llamaf3',1,'p_llamaf3','analizadorSintactico.py',1015),
  ('llamaf4 -> RPARENT','llamaf4',1,'p_llamaf4','analizadorSintactico.py',1018),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',1022),
]
