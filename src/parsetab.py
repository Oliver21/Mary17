
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIGUALleftANDORleftLTGTLEGESAMEDIFleftSUMARESTAleftMULTDIVleftLBRACKETRBRACKETleftLPARENTRPARENTleftLKEYRKEYINT FLOAT IF ELSE VAR PRINT PROGRAM DO WHILE CHAR STRING BEGIN END FOR FUNCTION BOOL READ POW SQRT CUADRADO TRIANGULO RECTANGULO CASA TRAPECIO ESTRELLA CIRCULO LEVANTA APOYA CUBO FIRMA MUEVE DIMENSION VOID TRUE FALSE RETURN READINT ID MULT DIV SUMA RESTA LPARENT RPARENT COMA PUNTOCOMA DOSPUNTOS PUNTO LBRACKET RBRACKET LKEY RKEY IGUAL LT GT LE GE DIF SAME COMSIMPLE COMDOBLE ENTERO FLOTANTE CARACTER CADENA NOESNADA COMENTARIO BOLEANO RAIZ POTENCIA AND ORprogram : PROGRAM  cuadrupro ID initTop DOSPUNTOS p2initTop : emptyp2 : p3\n\t| initFunctions p4\n\t| p5p3 : declaracion p3\n\t| initFunctions p4initFunctions : emptyp4 : function p4\n\t| p5p5 : cuadrupro2 bloque delMemcuadrupro : emptycuadrupro2 : emptydelMem : emptybloque : iniEnv LKEY b3 b4 b5iniEnv : emptyb3 : declaracion b3\n\t| emptyb4 : estatuto b4\n\t| emptyb5 : recEnv RKEYrecEnv : emptyexpresion : expresion2 expreexpre : expre2\n\t| emptyexpre2 : AND tagmetelog expresion tagsacalog\n\t| OR tagmetelog expresion tagsacalogtagmetelog : emptytagsacalog : emptyexpresion2 : exp e2 e2 : e3 \n\t| emptye3 : GT tagrel exp tagsacrel\n\t| LT tagrel exp tagsacrel\n\t| LE tagrel exp tagsacrel\n\t| GE tagrel exp tagsacrel\n\t| DIF tagrel exp tagsacrel\n\t| SAME tagrel exp tagsacreltagrel : emptytagsacrel : emptyexp : termino tagsacops exp2exp2 : SUMA  tagop exp \n\t| RESTA tagop exp\n\t| emptytagop : emptytagsacops : emptydeclaracion : tipo ID savevar decla1savevar : emptydecla1 : saveMemNormal declafinal \n\t| LBRACKET decDimensionada exp saveLimSup decla2saveMemNormal : empty decDimensionada : emptysaveLimSup : emptydecla2 : RBRACKET guardaMemDimen declafinal\n\t| COMA SigDimension exp saveLimSup decla2SigDimension : empty guardaMemDimen : emptydeclafinal : PUNTOCOMAtipo : INT\n\t| FLOAT\n\t| CHAR\n\t| STRING\n\t| BOOLasignacion : ID meteid asigfinal\n\t| f7 asigfinalmeteid :  emptyasig2 : LBRACKET exp asig3\n\t| asigfinalasig3 : COMA exp asig3\n\t| RBRACKET asigfinalasigfinal : IGUAL tagmeteig asigf2asigf2 : expresion tagig PUNTOCOMA\n\t| read tagig\n\t| readint tagigtagmeteig : emptytagig : emptyprint : PRINT LPARENT pr2pr2 : expresion pr3pr3 : tagimprime RPARENT PUNTOCOMAtagimprime : emptytermino : factor tagsacopm te2te2 : MULT tagm termino \n\t| DIV tagm termino\n\t| emptytagm : emptytagsacopm : emptyfactor : LPARENT tagfondofalso expresion RPARENT tagsacafondo\n\t| f2\n\t| f3\n\t| f6\n\t| f7f2 : varctef3 : IDtagfondofalso : emptytagsacafondo : emptyf7 : ID LBRACKET tagrevisadime exp tagmetedim f8f8 : COMA tagotradim exp tagmetedim f8\n\t| RBRACKET tagterminadimtagrevisadime : emptytagmetedim : emptytagotradim : emptytagterminadim : emptyf6 : llamafuncionguardafunc : emptyestatuto : asignacion\n\t| print\n\t| ciclowhile\n\t| ciclodowhile\n\t| ciclofor\n\t| read\n\t| readint\n\t| comentario\n\t| cuadrado\n\t| triangulo\n\t| casa\n\t| rectangulo\n\t| cubo\n\t| trapecio\n\t| estrella\n\t| firma\n\t| mueve\n\t| levanta\n\t| apoya\n\t| dimension\n\t| llamafuncion\n\t| return\n\t| ifcomentario : COMENTARIOvarcte : ENTERO tagint\n\t| FLOTANTE tagfloat\n\t| CADENA tagcad\n\t| CARACTER tagcar\n\t| TRUE tagbol\n\t| FALSE tagboltagint : emptytagfloat : emptytagcad : emptytagcar : emptytagbol : emptyciclowhile : WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhiletaginiciawhile : emptytagwhile : emptytagregresawhile : emptyciclodowhile : DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMAtaginiciado : emptytagcondiciondo : emptyread : READ LPARENT RPARENT PUNTOCOMAreadint : READINT LPARENT RPARENT PUNTOCOMAciclofor : FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafortagevaluafor : emptytagterminafor : emptytagespera : emptytagasigna : emptyif : IF LPARENT expresion tagif RPARENT bloque if2if2 : tagterminaif\n\t| ELSE tagelse bloque tagterminaiftagif : emptytagelse : emptytagterminaif : emptyreturn : RETURN llegoRet expresion PUNTOCOMAllegoRet : emptycuadrado : CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMAtagcuadro : emptytriangulo : TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMAtagtriangulo : emptyrectangulo : RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMAcasa : CASA LPARENT exp COMA exp RPARENT PUNTOCOMAestrella : ESTRELLA LPARENT exp COMA exp COMA exp RPARENT tagestrella PUNTOCOMAtagestrella : emptyfirma : FIRMA LPARENT RPARENT PUNTOCOMAcubo : CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMAtagcubo : emptymueve : MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMAtagmueve : emptylevanta : LEVANTA LPARENT RPARENT PUNTOCOMAapoya : APOYA LPARENT RPARENT PUNTOCOMAtrapecio : TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMAdimension : DIMENSION LPARENT exp RPARENT PUNTOCOMAfunction : FUNCTION pfuncpfunc : tipo ID buildFunc LPARENT funct11\n\t| VOID ID buildFunc LPARENT funct11buildFunc : emptyfunct11 : function4funct11 : initParamTable funct2initParamTable : emptyfunct2 : tipo ID initParams funct3initParams : emptyfunct3 : COMA funct2funct3 : function4function4 : RPARENT initFunc bloque noinitFuncinitFunc : emptynoinitFunc : emptyllamafuncion : ID LPARENT tagverificafuncion llamaf11llamaf11 : llamaf2\n\t| llamaf4llamaf2 : exp tagrevisaparam llamaf3llamaf3 : COMA tagotroargumento llamaf2\n\t| llamaf4llamaf4 : RPARENT  tagterminallamada PUNTOCOMAtagverificafuncion : emptytagrevisaparam : emptytagotroargumento : emptytagterminallamada : emptyempty :'
    
_lr_action_items = {'DO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,90,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,90,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'RETURN':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,78,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,78,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'READ':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,137,138,167,169,185,188,189,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,76,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,76,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-204,-65,-21,-77,-64,-75,76,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'VOID':([27,],[42,]),'MUEVE':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,65,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,65,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'IGUAL':([86,91,132,133,173,352,354,396,397,442,],[-204,137,137,-66,-204,-96,-204,-98,-102,-97,]),'LBRACKET':([25,37,38,86,156,173,],[-204,-48,47,131,131,131,]),'WHILE':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,187,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,77,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,77,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,256,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'PROGRAM':([0,],[2,]),'PRINT':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,68,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,68,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'TRAPECIO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,54,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,54,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'RESTA':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,250,251,253,272,273,320,348,349,350,352,354,362,363,364,365,396,397,417,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,268,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-194,-195,-193,-84,-81,-204,-199,-198,-196,-96,-204,-87,-95,-83,-82,-98,-102,-197,-97,]),'TRUE':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,149,172,177,181,182,183,184,185,188,189,198,199,220,222,223,224,227,232,233,234,235,236,237,242,243,244,247,248,255,257,258,259,262,268,269,271,274,276,285,286,287,289,290,291,292,293,294,295,309,310,311,312,317,318,319,321,322,323,324,325,331,343,347,351,353,357,358,392,393,394,395,],[-204,-204,-52,148,148,148,148,148,148,148,-161,148,148,-204,-204,148,-204,-65,148,148,148,-204,148,148,-200,148,148,-99,-64,-75,148,148,-94,148,148,148,-204,-204,-204,-204,-204,-204,-204,-204,-148,148,-147,148,148,148,-71,-204,-204,148,-204,-204,-204,-204,-204,148,-28,148,148,-39,148,148,148,148,148,148,-74,-76,-73,148,-45,148,148,-85,148,148,-56,148,148,148,-204,-204,-72,148,148,-202,148,-101,]),'COMENTARIO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,69,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,69,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'MULT':([143,144,145,146,148,150,151,152,153,154,155,156,157,159,196,197,200,201,202,203,204,205,206,207,208,211,212,250,251,253,320,348,349,350,352,354,362,363,396,397,417,442,],[-88,-89,-90,-91,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,-133,-139,-131,-137,274,-86,-129,-135,-132,-138,-134,-136,-130,-194,-195,-193,-204,-199,-198,-196,-96,-204,-87,-95,-98,-102,-197,-97,]),'STRING':([8,21,27,34,46,48,105,106,160,161,216,217,275,367,409,423,],[13,13,13,13,13,-47,-49,-58,-204,-204,13,-185,-50,-54,13,-55,]),'TRIANGULO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,85,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,85,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'LPARENT':([47,51,52,53,54,58,63,65,68,72,73,75,76,77,78,82,85,86,89,96,97,99,100,103,104,107,108,109,111,113,114,118,121,123,124,125,126,127,129,130,131,134,137,138,140,141,142,149,156,172,177,181,182,183,184,185,188,189,198,199,220,222,223,224,227,232,233,234,235,236,237,242,243,244,247,248,255,256,257,258,259,262,268,269,271,274,276,285,286,287,289,290,291,292,293,294,295,309,310,311,312,317,318,319,321,322,323,324,325,331,343,347,351,353,357,358,392,393,394,395,],[-204,-204,-204,110,111,112,113,114,118,119,120,121,122,-204,-204,127,129,130,134,139,140,141,142,-52,149,160,-182,161,149,149,149,149,149,177,-141,149,-161,149,149,-204,-204,149,-204,-65,149,149,149,-204,130,149,149,-200,149,149,-99,-64,-75,149,149,-94,149,149,149,-204,-204,-204,-204,-204,-204,-204,-204,-148,149,-147,149,149,149,309,-71,-204,-204,149,-204,-204,-204,-204,-204,149,-28,149,149,-39,149,149,149,149,149,149,-74,-76,-73,149,-45,149,149,-85,149,149,-56,149,149,149,-204,-204,-72,149,149,-202,149,-101,]),'CASA':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,82,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,82,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'PUNTOCOMA':([25,37,38,49,50,143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,162,164,168,171,174,176,178,190,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,225,226,228,238,239,240,249,250,251,253,260,263,266,267,272,273,277,288,302,303,311,313,320,326,327,330,332,333,334,336,337,338,339,340,341,346,348,349,350,352,354,355,360,361,362,363,364,365,374,375,376,377,378,379,380,381,382,383,384,385,396,397,410,413,416,417,419,420,425,426,428,429,430,431,434,435,442,],[-204,-48,-204,106,-51,-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,219,221,-204,-204,242,244,246,261,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-23,-24,-25,-31,-32,-30,-204,-194,-195,-193,-204,315,-41,-44,-84,-81,-204,335,348,-203,-76,357,-204,106,-57,372,-204,-204,-204,-204,-204,-204,-204,-204,-204,390,-199,-198,-196,-96,-204,398,-43,-42,-87,-95,-83,-82,411,-174,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,-98,-102,-204,-204,-204,-197,433,-204,-163,437,440,-169,-165,441,443,-172,-97,]),'LT':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,171,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,250,251,253,266,267,272,273,320,348,349,350,352,354,360,361,362,363,364,365,396,397,417,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,236,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-194,-195,-193,-41,-44,-84,-81,-204,-199,-198,-196,-96,-204,-43,-42,-87,-95,-83,-82,-98,-102,-197,-97,]),'DIMENSION':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,99,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,99,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'CADENA':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,149,172,177,181,182,183,184,185,188,189,198,199,220,222,223,224,227,232,233,234,235,236,237,242,243,244,247,248,255,257,258,259,262,268,269,271,274,276,285,286,287,289,290,291,292,293,294,295,309,310,311,312,317,318,319,321,322,323,324,325,331,343,347,351,353,357,358,392,393,394,395,],[-204,-204,-52,151,151,151,151,151,151,151,-161,151,151,-204,-204,151,-204,-65,151,151,151,-204,151,151,-200,151,151,-99,-64,-75,151,151,-94,151,151,151,-204,-204,-204,-204,-204,-204,-204,-204,-148,151,-147,151,151,151,-71,-204,-204,151,-204,-204,-204,-204,-204,151,-28,151,151,-39,151,151,151,151,151,151,-74,-76,-73,151,-45,151,151,-85,151,151,-56,151,151,151,-204,-204,-72,151,151,-202,151,-101,]),'FIRMA':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,53,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,53,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'DOSPUNTOS':([5,6,7,],[-204,8,-2,]),'APOYA':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,58,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,58,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'DIF':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,171,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,250,251,253,266,267,272,273,320,348,349,350,352,354,360,361,362,363,364,365,396,397,417,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,233,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-194,-195,-193,-41,-44,-84,-81,-204,-199,-198,-196,-96,-204,-43,-42,-87,-95,-83,-82,-98,-102,-197,-97,]),'LEVANTA':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,96,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,96,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'$end':([1,14,15,16,23,28,29,31,35,36,39,43,115,167,],[0,-1,-3,-5,-204,-4,-10,-6,-11,-14,-9,-7,-15,-21,]),'FUNCTION':([8,12,20,21,26,32,33,41,48,105,106,115,167,213,214,218,275,281,328,367,368,369,407,408,423,424,],[-204,-8,27,-204,27,-8,27,-179,-47,-49,-58,-15,-21,-183,-180,-181,-50,-184,-204,-54,-190,-192,-189,-186,-55,-188,]),'AND':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,168,171,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,238,239,240,250,251,253,266,267,272,273,320,336,337,338,339,340,341,348,349,350,352,354,360,361,362,363,364,365,379,380,381,382,383,384,385,396,397,417,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,224,-204,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-31,-32,-30,-194,-195,-193,-41,-44,-84,-81,-204,-204,-204,-204,-204,-204,-204,-199,-198,-196,-96,-204,-43,-42,-87,-95,-83,-82,-36,-40,-37,-35,-38,-34,-33,-98,-102,-197,-97,]),'GT':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,171,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,250,251,253,266,267,272,273,320,348,349,350,352,354,360,361,362,363,364,365,396,397,417,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,237,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-194,-195,-193,-41,-44,-84,-81,-204,-199,-198,-196,-96,-204,-43,-42,-87,-95,-83,-82,-98,-102,-197,-97,]),'LKEY':([8,9,12,20,21,22,24,26,30,32,33,41,48,90,105,106,115,135,136,167,213,214,215,218,275,278,279,281,299,316,328,344,345,367,368,369,404,407,408,412,421,422,423,424,],[-204,-204,-8,-204,-204,34,-16,-204,-13,-8,-204,-179,-47,-204,-49,-58,-15,-145,-204,-21,-183,-180,-204,-181,-50,-204,-191,-184,-204,-204,-204,-204,-142,-54,-190,-192,-204,-189,-186,-204,-204,-158,-55,-188,]),'FOR':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,72,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,72,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'READINT':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,137,138,167,169,185,188,189,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,73,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,73,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-204,-65,-21,-77,-64,-75,73,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'CUBO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,97,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,97,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'RKEY':([34,44,45,46,48,55,56,57,59,60,61,62,64,66,67,69,70,71,74,79,80,81,83,84,87,88,92,93,94,95,98,101,102,105,106,115,116,117,128,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,-204,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-204,-123,-128,-111,-106,-109,-107,-122,-114,-204,-20,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,167,-22,-19,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'ELSE':([115,167,359,],[-15,-21,404,]),'ESTRELLA':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,75,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,75,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'GE':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,171,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,250,251,253,266,267,272,273,320,348,349,350,352,354,360,361,362,363,364,365,396,397,417,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,232,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-194,-195,-193,-41,-44,-84,-81,-204,-199,-198,-196,-96,-204,-43,-42,-87,-95,-83,-82,-98,-102,-197,-97,]),'LE':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,171,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,250,251,253,266,267,272,273,320,348,349,350,352,354,360,361,362,363,364,365,396,397,417,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,234,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-194,-195,-193,-41,-44,-84,-81,-204,-199,-198,-196,-96,-204,-43,-42,-87,-95,-83,-82,-98,-102,-197,-97,]),'CARACTER':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,149,172,177,181,182,183,184,185,188,189,198,199,220,222,223,224,227,232,233,234,235,236,237,242,243,244,247,248,255,257,258,259,262,268,269,271,274,276,285,286,287,289,290,291,292,293,294,295,309,310,311,312,317,318,319,321,322,323,324,325,331,343,347,351,353,357,358,392,393,394,395,],[-204,-204,-52,155,155,155,155,155,155,155,-161,155,155,-204,-204,155,-204,-65,155,155,155,-204,155,155,-200,155,155,-99,-64,-75,155,155,-94,155,155,155,-204,-204,-204,-204,-204,-204,-204,-204,-148,155,-147,155,155,155,-71,-204,-204,155,-204,-204,-204,-204,-204,155,-28,155,155,-39,155,155,155,155,155,155,-74,-76,-73,155,-45,155,155,-85,155,155,-56,155,155,155,-204,-204,-72,155,155,-202,155,-101,]),'COMA':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,163,165,166,175,179,180,186,191,194,195,196,197,200,201,202,203,204,205,206,207,208,209,210,211,212,250,251,252,253,254,266,267,272,273,283,298,301,304,305,306,307,314,320,329,348,349,350,352,354,360,361,362,363,364,365,366,370,371,396,397,406,417,418,432,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,-204,220,222,223,243,247,248,255,262,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,276,-53,-136,-130,-194,-195,-204,-193,-204,-41,-44,-84,-81,331,343,347,351,-201,353,-100,358,-204,-204,-199,-198,-196,-96,-204,-43,-42,-87,-95,-83,-82,-204,-187,409,-98,-102,276,-197,-204,353,-97,]),'ID':([2,3,4,10,11,13,17,18,19,34,40,42,44,45,46,47,48,55,56,57,59,60,61,62,64,67,69,70,71,74,78,79,80,81,83,87,88,92,93,94,95,98,101,102,103,104,105,106,111,113,114,115,118,119,121,125,126,127,129,130,131,134,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,159,167,168,169,171,172,177,181,182,183,184,185,188,189,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,211,212,219,220,221,222,223,224,225,226,227,228,229,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,248,250,251,253,255,257,258,259,261,262,266,267,268,269,271,272,273,274,275,276,280,285,286,287,289,290,291,292,293,294,295,296,297,309,310,311,312,315,317,318,319,320,321,322,323,324,325,331,333,334,335,336,337,338,339,340,341,343,347,348,349,350,351,352,353,354,357,358,359,360,361,362,363,364,365,367,372,376,377,378,379,380,381,382,383,384,385,389,390,392,393,394,395,396,397,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,442,443,444,445,446,],[-204,5,-12,-61,25,-62,-59,-60,-63,-204,51,52,-18,86,-204,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-204,-107,-122,-114,86,-115,-105,-118,-127,-121,-125,-108,-124,-17,-52,156,-49,-58,156,156,156,-15,156,173,156,156,-161,156,156,-204,-204,156,-204,-65,156,156,156,-88,-89,-90,-91,-204,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,-21,-204,-77,-204,156,156,-200,156,156,-99,-64,-75,156,-204,-46,-133,-139,156,-94,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-170,156,-176,156,156,-204,-23,-24,-204,-25,-78,-204,-204,-204,-204,-204,-204,-31,-32,-30,-204,-148,156,-147,-160,156,156,-194,-195,-193,156,-71,-204,-204,-175,156,-41,-44,-204,-204,-204,-84,-81,-204,-50,-204,329,156,-28,156,156,-39,156,156,156,156,156,173,-150,156,-74,-76,-73,-178,156,-45,156,-204,156,-85,156,156,-56,156,-204,-204,-79,-204,-204,-204,-204,-204,-204,156,156,-199,-198,-196,-204,-96,-204,-204,-72,156,-204,-43,-42,-87,-95,-83,-82,-54,-177,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,-204,-167,156,-202,156,-101,-98,-102,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-97,-171,-156,-149,-151,]),'IF':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,100,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,100,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'RPARENT':([110,112,120,122,130,138,139,143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,160,161,168,170,171,181,182,185,192,193,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,225,226,228,230,231,238,239,240,242,244,245,250,251,252,253,257,258,259,264,265,266,267,270,272,273,282,284,300,304,305,308,310,311,312,320,329,333,334,336,337,338,339,340,341,342,348,349,350,352,354,356,357,360,361,362,363,364,365,370,371,373,376,377,378,379,380,381,382,383,384,385,386,387,388,391,396,397,399,400,401,417,442,],[162,164,174,176,-204,-65,190,-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,215,215,-204,-204,-204,-200,249,-64,263,-204,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-23,-24,-25,288,-80,-31,-32,-30,-148,-147,299,-194,-195,-204,-193,-71,-204,-204,316,-157,-41,-44,320,-84,-81,330,332,346,249,-201,355,-74,-76,-73,-204,-204,-204,-204,-204,-204,-204,-204,-204,-204,-204,-199,-198,-196,-96,-204,-204,-72,-43,-42,-87,-95,-83,-82,-187,215,410,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,412,-152,413,416,-98,-102,419,-146,420,-197,-97,]),'CHAR':([8,21,27,34,46,48,105,106,160,161,216,217,275,367,409,423,],[10,10,10,10,10,-47,-49,-58,-204,-204,10,-185,-50,-54,10,-55,]),'FALSE':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,149,172,177,181,182,183,184,185,188,189,198,199,220,222,223,224,227,232,233,234,235,236,237,242,243,244,247,248,255,257,258,259,262,268,269,271,274,276,285,286,287,289,290,291,292,293,294,295,309,310,311,312,317,318,319,321,322,323,324,325,331,343,347,351,353,357,358,392,393,394,395,],[-204,-204,-52,157,157,157,157,157,157,157,-161,157,157,-204,-204,157,-204,-65,157,157,157,-204,157,157,-200,157,157,-99,-64,-75,157,157,-94,157,157,157,-204,-204,-204,-204,-204,-204,-204,-204,-148,157,-147,157,157,157,-71,-204,-204,157,-204,-204,-204,-204,-204,157,-28,157,157,-39,157,157,157,157,157,157,-74,-76,-73,157,-45,157,157,-85,157,157,-56,157,157,157,-204,-204,-72,157,157,-202,157,-101,]),'INT':([8,21,27,34,46,48,105,106,160,161,216,217,275,367,409,423,],[17,17,17,17,17,-47,-49,-58,-204,-204,17,-185,-50,-54,17,-55,]),'FLOAT':([8,21,27,34,46,48,105,106,160,161,216,217,275,367,409,423,],[18,18,18,18,18,-47,-49,-58,-204,-204,18,-185,-50,-54,18,-55,]),'SAME':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,171,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,250,251,253,266,267,272,273,320,348,349,350,352,354,360,361,362,363,364,365,396,397,417,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,235,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-194,-195,-193,-41,-44,-84,-81,-204,-199,-198,-196,-96,-204,-43,-42,-87,-95,-83,-82,-98,-102,-197,-97,]),'CUADRADO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,63,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,63,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'BOOL':([8,21,27,34,46,48,105,106,160,161,216,217,275,367,409,423,],[19,19,19,19,19,-47,-49,-58,-204,-204,19,-185,-50,-54,19,-55,]),'SUMA':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,250,251,253,272,273,320,348,349,350,352,354,362,363,364,365,396,397,417,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,269,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-194,-195,-193,-84,-81,-204,-199,-198,-196,-96,-204,-87,-95,-83,-82,-98,-102,-197,-97,]),'RECTANGULO':([34,44,45,46,48,55,56,57,59,60,61,62,64,67,69,70,71,74,79,80,81,83,87,88,92,93,94,95,98,101,102,105,106,115,138,167,169,185,219,221,229,242,244,246,250,251,253,257,258,259,261,275,310,311,312,315,335,348,349,350,357,359,367,372,389,390,398,402,403,405,411,414,415,417,423,427,433,436,437,438,439,440,441,443,444,445,446,],[-204,-18,89,-204,-47,-112,-113,-116,-126,-110,-117,-119,-120,-123,-128,-111,-106,-109,-107,-122,-114,89,-115,-105,-118,-127,-121,-125,-108,-124,-17,-49,-58,-15,-65,-21,-77,-64,-170,-176,-78,-148,-147,-160,-194,-195,-193,-71,-204,-204,-175,-50,-74,-76,-73,-178,-79,-199,-198,-196,-72,-204,-54,-177,-204,-167,-166,-154,-155,-159,-173,-140,-143,-197,-55,-204,-144,-204,-162,-204,-153,-168,-164,-171,-156,-149,-151,]),'FLOTANTE':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,149,172,177,181,182,183,184,185,188,189,198,199,220,222,223,224,227,232,233,234,235,236,237,242,243,244,247,248,255,257,258,259,262,268,269,271,274,276,285,286,287,289,290,291,292,293,294,295,309,310,311,312,317,318,319,321,322,323,324,325,331,343,347,351,353,357,358,392,393,394,395,],[-204,-204,-52,159,159,159,159,159,159,159,-161,159,159,-204,-204,159,-204,-65,159,159,159,-204,159,159,-200,159,159,-99,-64,-75,159,159,-94,159,159,159,-204,-204,-204,-204,-204,-204,-204,-204,-148,159,-147,159,159,159,-71,-204,-204,159,-204,-204,-204,-204,-204,159,-28,159,159,-39,159,159,159,159,159,159,-74,-76,-73,159,-45,159,159,-85,159,159,-56,159,159,159,-204,-204,-72,159,159,-202,159,-101,]),'RBRACKET':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,158,159,194,195,196,197,200,201,202,203,204,205,206,207,208,209,210,211,212,250,251,253,254,266,267,272,273,306,307,320,348,349,350,352,354,360,361,362,363,364,365,366,396,397,406,417,418,432,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,-204,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,277,-53,-136,-130,-194,-195,-193,-204,-41,-44,-84,-81,354,-100,-204,-199,-198,-196,-96,-204,-43,-42,-87,-95,-83,-82,-204,-98,-102,277,-197,-204,354,-97,]),'ENTERO':([47,78,103,104,111,113,114,118,121,125,126,127,129,130,131,134,137,138,140,141,142,149,172,177,181,182,183,184,185,188,189,198,199,220,222,223,224,227,232,233,234,235,236,237,242,243,244,247,248,255,257,258,259,262,268,269,271,274,276,285,286,287,289,290,291,292,293,294,295,309,310,311,312,317,318,319,321,322,323,324,325,331,343,347,351,353,357,358,392,393,394,395,],[-204,-204,-52,154,154,154,154,154,154,154,-161,154,154,-204,-204,154,-204,-65,154,154,154,-204,154,154,-200,154,154,-99,-64,-75,154,154,-94,154,154,154,-204,-204,-204,-204,-204,-204,-204,-204,-148,154,-147,154,154,154,-71,-204,-204,154,-204,-204,-204,-204,-204,154,-28,154,154,-39,154,154,154,154,154,154,-74,-76,-73,154,-45,154,154,-85,154,154,-56,154,154,154,-204,-204,-72,154,154,-202,154,-101,]),'OR':([143,144,145,146,147,148,150,151,152,153,154,155,156,157,159,168,171,194,195,196,197,200,201,202,203,204,205,206,207,208,211,212,238,239,240,250,251,253,266,267,272,273,320,336,337,338,339,340,341,348,349,350,352,354,360,361,362,363,364,365,379,380,381,382,383,384,385,396,397,417,442,],[-88,-89,-90,-91,-204,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,227,-204,-204,-46,-133,-139,-131,-137,-204,-86,-129,-135,-132,-138,-134,-136,-130,-31,-32,-30,-194,-195,-193,-41,-44,-84,-81,-204,-204,-204,-204,-204,-204,-204,-199,-198,-196,-96,-204,-43,-42,-87,-95,-83,-82,-36,-40,-37,-35,-38,-34,-33,-98,-102,-197,-97,]),'DIV':([143,144,145,146,148,150,151,152,153,154,155,156,157,159,196,197,200,201,202,203,204,205,206,207,208,211,212,250,251,253,320,348,349,350,352,354,362,363,396,397,417,442,],[-88,-89,-90,-91,-204,-92,-204,-103,-204,-204,-204,-93,-204,-204,-133,-139,-131,-137,271,-86,-129,-135,-132,-138,-134,-136,-130,-194,-195,-193,-204,-199,-198,-196,-96,-204,-87,-95,-98,-102,-197,-97,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'tagsacrel':([336,337,338,339,340,341,],[379,381,382,383,384,385,]),'tagasigna':([427,],[438,]),'tagfondofalso':([149,],[198,]),'tagmetedim':([254,418,],[306,432,]),'expre2':([168,],[226,]),'bloque':([9,136,278,316,344,412,421,],[23,187,328,359,389,427,436,]),'taginiciawhile':([77,],[123,]),'comentario':([45,83,],[55,55,]),'if2':([359,],[402,]),'tagop':([268,269,],[317,319,]),'tagrevisaparam':([252,],[304,]),'program':([0,],[1,]),'rectangulo':([45,83,],[57,57,]),'factor':([104,111,113,114,118,121,125,127,129,134,140,141,142,172,177,182,183,189,198,220,222,223,243,247,248,255,262,285,287,289,291,292,293,294,295,309,317,319,321,323,324,331,343,347,358,392,394,],[153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,153,]),'saveMemNormal':([38,],[49,]),'return':([45,83,],[59,59,]),'p3':([8,21,],[15,31,]),'read':([45,83,189,],[60,60,259,]),'cubo':([45,83,],[61,61,]),'buildFunc':([51,52,],[107,109,]),'estrella':([45,83,],[62,62,]),'meteid':([86,173,],[132,132,]),'decDimensionada':([47,],[104,]),'expresion':([118,125,142,172,177,189,198,285,287,309,],[170,178,193,241,245,260,270,333,334,356,]),'tagbol':([148,157,],[196,208,]),'p4':([20,26,33,],[28,39,43,]),'tagcad':([151,],[200,]),'tagevaluafor':([241,],[296,]),'tagtriangulo':([416,],[431,]),'tagimprime':([170,],[230,]),'tagcar':([155,],[206,]),'taginiciado':([90,],[136,]),'tagespera':([342,],[386,]),'llegoRet':([78,],[125,]),'tagwhile':([299,],[344,]),'initTop':([5,],[6,]),'b5':([66,],[115,]),'asigf2':([189,],[257,]),'apoya':([45,83,],[67,67,]),'b3':([34,46,],[45,102,]),'tagterminafor':([438,],[445,]),'tagsacops':([147,],[194,]),'varcte':([104,111,113,114,118,121,125,127,129,134,140,141,142,172,177,182,183,189,198,220,222,223,243,247,248,255,262,285,287,289,291,292,293,294,295,309,317,319,321,323,324,331,343,347,358,392,394,],[150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,150,]),'tipo':([8,21,27,34,46,216,409,],[11,11,40,11,11,280,280,]),'readint':([45,83,189,],[70,70,258,]),'tagig':([258,259,260,],[310,312,313,]),'SigDimension':([276,],[324,]),'funct2':([216,409,],[281,424,]),'funct3':([371,],[408,]),'declafinal':([49,326,],[105,367,]),'print':([45,83,],[71,71,]),'tagsacopm':([153,],[202,]),'tagcuadro':([410,],[426,]),'tagrel':([232,233,234,235,236,237,],[289,291,292,293,294,295,]),'initFunc':([215,],[278,]),'tagelse':([404,],[421,]),'ciclofor':([45,83,],[74,74,]),'tagverificafuncion':([130,],[182,]),'tagm':([271,274,],[321,323,]),'te2':([202,],[273,]),'e3':([171,],[238,]),'e2':([171,],[240,]),'tagsacalog':([333,334,],[376,378,]),'initParams':([329,],[371,]),'declaracion':([8,21,34,46,],[21,21,46,46,]),'tagmueve':([332,],[374,]),'cuadrupro2':([8,20,26,33,],[9,9,9,9,]),'tagterminallamada':([249,],[302,]),'guardaMemDimen':([277,],[326,]),'tagestrella':([413,],[428,]),'termino':([104,111,113,114,118,121,125,127,129,134,140,141,142,172,177,182,183,189,198,220,222,223,243,247,248,255,262,285,287,289,291,292,293,294,295,309,317,319,321,323,324,331,343,347,358,392,394,],[147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,147,364,365,147,147,147,147,147,147,147,]),'tagfloat':([159,],[212,]),'ciclowhile':([45,83,],[79,79,]),'levanta':([45,83,],[80,80,]),'triangulo':([45,83,],[81,81,]),'exp2':([194,],[266,]),'estatuto':([45,83,],[83,83,]),'tagcondiciondo':([356,],[399,]),'cuadrado':([45,83,],[56,56,]),'delMem':([23,],[35,]),'empty':([2,5,8,9,20,21,23,25,26,33,34,38,45,46,47,51,52,66,77,78,83,86,90,130,131,136,137,147,148,149,151,153,154,155,157,158,159,160,161,168,170,171,173,193,194,202,215,224,227,232,233,234,235,236,237,241,249,252,254,258,259,260,268,269,271,274,276,277,278,299,316,320,328,329,332,333,334,336,337,338,339,340,341,342,344,351,353,354,356,359,366,389,404,410,412,413,416,418,420,421,427,436,438,],[4,7,12,24,30,32,36,37,30,30,44,50,84,44,103,108,108,117,124,126,84,133,135,181,184,24,188,195,197,199,201,203,205,207,197,210,211,217,217,228,231,239,133,265,267,272,279,286,286,290,290,290,290,290,290,297,303,305,307,311,311,311,318,318,322,322,325,327,24,345,24,363,369,370,375,377,377,380,380,380,380,380,380,387,24,393,395,397,400,405,210,415,422,425,24,429,430,307,435,24,439,405,446,]),'function':([20,26,33,],[26,26,26,]),'expresion2':([118,125,142,172,177,189,198,285,287,309,],[168,168,168,168,168,168,168,168,168,168,]),'tagterminaif':([359,436,],[403,444,]),'tagterminadim':([354,],[396,]),'cuadrupro':([2,],[3,]),'tagint':([154,],[204,]),'p2':([8,],[14,]),'b4':([45,83,],[66,128,]),'casa':([45,83,],[87,87,]),'asignacion':([45,83,119,296,],[88,88,172,342,]),'p5':([8,20,26,33,],[16,29,29,29,]),'llamaf2':([182,392,],[250,417,]),'llamaf3':([304,],[350,]),'llamaf4':([182,304,],[251,349,]),'tagcubo':([420,],[434,]),'noinitFunc':([328,],[368,]),'llamaf11':([182,],[253,]),'iniEnv':([9,136,278,316,344,412,421,],[22,22,22,22,22,22,22,]),'f2':([104,111,113,114,118,121,125,127,129,134,140,141,142,172,177,182,183,189,198,220,222,223,243,247,248,255,262,285,287,289,291,292,293,294,295,309,317,319,321,323,324,331,343,347,358,392,394,],[143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,143,]),'f3':([104,111,113,114,118,121,125,127,129,134,140,141,142,172,177,182,183,189,198,220,222,223,243,247,248,255,262,285,287,289,291,292,293,294,295,309,317,319,321,323,324,331,343,347,358,392,394,],[144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,144,]),'f6':([104,111,113,114,118,121,125,127,129,134,140,141,142,172,177,182,183,189,198,220,222,223,243,247,248,255,262,285,287,289,291,292,293,294,295,309,317,319,321,323,324,331,343,347,358,392,394,],[145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,145,]),'f7':([45,83,104,111,113,114,118,119,121,125,127,129,134,140,141,142,172,177,182,183,189,198,220,222,223,243,247,248,255,262,285,287,289,291,292,293,294,295,296,309,317,319,321,323,324,331,343,347,358,392,394,],[91,91,146,146,146,146,146,91,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,91,146,146,146,146,146,146,146,146,146,146,146,146,]),'f8':([306,432,],[352,442,]),'tagif':([193,],[264,]),'trapecio':([45,83,],[92,92,]),'tagsacafondo':([320,],[362,]),'if':([45,83,],[93,93,]),'pfunc':([27,],[41,]),'mueve':([45,83,],[94,94,]),'decla1':([38,],[48,]),'llamafuncion':([45,83,104,111,113,114,118,121,125,127,129,134,140,141,142,172,177,182,183,189,198,220,222,223,243,247,248,255,262,285,287,289,291,292,293,294,295,309,317,319,321,323,324,331,343,347,358,392,394,],[95,95,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,152,]),'decla2':([209,406,],[275,423,]),'initParamTable':([160,161,],[216,216,]),'tagotradim':([353,],[394,]),'tagotroargumento':([351,],[392,]),'tagrevisadime':([131,],[183,]),'saveLimSup':([158,366,],[209,406,]),'tagmeteig':([137,],[189,]),'funct11':([160,161,],[214,218,]),'pr3':([170,],[229,]),'pr2':([118,],[169,]),'ciclodowhile':([45,83,],[98,98,]),'asigfinal':([91,132,],[138,185,]),'function4':([160,161,371,],[213,213,407,]),'expre':([168,],[225,]),'tagmetelog':([224,227,],[285,287,]),'dimension':([45,83,],[101,101,]),'firma':([45,83,],[64,64,]),'savevar':([25,],[38,]),'exp':([104,111,113,114,118,121,125,127,129,134,140,141,142,172,177,182,183,189,198,220,222,223,243,247,248,255,262,285,287,289,291,292,293,294,295,309,317,319,324,331,343,347,358,392,394,],[158,163,165,166,171,175,171,179,180,186,191,192,171,171,171,252,254,171,171,282,283,284,298,300,301,308,314,171,171,336,337,338,339,340,341,171,360,361,366,373,388,391,401,252,418,]),'tagregresawhile':([389,],[414,]),'initFunctions':([8,21,],[20,33,]),'recEnv':([66,],[116,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2','program',6,'p_program','analizadorSintactico.py',440),
  ('initTop -> empty','initTop',1,'p_initTop','analizadorSintactico.py',445),
  ('p2 -> p3','p2',1,'p_p2','analizadorSintactico.py',453),
  ('p2 -> initFunctions p4','p2',2,'p_p2','analizadorSintactico.py',454),
  ('p2 -> p5','p2',1,'p_p2','analizadorSintactico.py',455),
  ('p3 -> declaracion p3','p3',2,'p_p3','analizadorSintactico.py',458),
  ('p3 -> initFunctions p4','p3',2,'p_p3','analizadorSintactico.py',459),
  ('initFunctions -> empty','initFunctions',1,'p_initFunctions','analizadorSintactico.py',462),
  ('p4 -> function p4','p4',2,'p_p4','analizadorSintactico.py',468),
  ('p4 -> p5','p4',1,'p_p4','analizadorSintactico.py',469),
  ('p5 -> cuadrupro2 bloque delMem','p5',3,'p_p5','analizadorSintactico.py',472),
  ('cuadrupro -> empty','cuadrupro',1,'p_cuadrupro','analizadorSintactico.py',475),
  ('cuadrupro2 -> empty','cuadrupro2',1,'p_cuadrupro2','analizadorSintactico.py',481),
  ('delMem -> empty','delMem',1,'p_delMem','analizadorSintactico.py',488),
  ('bloque -> iniEnv LKEY b3 b4 b5','bloque',5,'p_bloque','analizadorSintactico.py',494),
  ('iniEnv -> empty','iniEnv',1,'p_iniEnv','analizadorSintactico.py',497),
  ('b3 -> declaracion b3','b3',2,'p_b3','analizadorSintactico.py',508),
  ('b3 -> empty','b3',1,'p_b3','analizadorSintactico.py',509),
  ('b4 -> estatuto b4','b4',2,'p_b4','analizadorSintactico.py',512),
  ('b4 -> empty','b4',1,'p_b4','analizadorSintactico.py',513),
  ('b5 -> recEnv RKEY','b5',2,'p_b5','analizadorSintactico.py',516),
  ('recEnv -> empty','recEnv',1,'p_recEnv','analizadorSintactico.py',519),
  ('expresion -> expresion2 expre','expresion',2,'p_expresion','analizadorSintactico.py',539),
  ('expre -> expre2','expre',1,'p_expre','analizadorSintactico.py',542),
  ('expre -> empty','expre',1,'p_expre','analizadorSintactico.py',543),
  ('expre2 -> AND tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',546),
  ('expre2 -> OR tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',547),
  ('tagmetelog -> empty','tagmetelog',1,'p_tagmetelog','analizadorSintactico.py',550),
  ('tagsacalog -> empty','tagsacalog',1,'p_tagsacalog','analizadorSintactico.py',554),
  ('expresion2 -> exp e2','expresion2',2,'p_expresion2','analizadorSintactico.py',586),
  ('e2 -> e3','e2',1,'p_e2','analizadorSintactico.py',591),
  ('e2 -> empty','e2',1,'p_e2','analizadorSintactico.py',592),
  ('e3 -> GT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',595),
  ('e3 -> LT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',596),
  ('e3 -> LE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',597),
  ('e3 -> GE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',598),
  ('e3 -> DIF tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',599),
  ('e3 -> SAME tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',600),
  ('tagrel -> empty','tagrel',1,'p_tagrel','analizadorSintactico.py',603),
  ('tagsacrel -> empty','tagsacrel',1,'p_tagsacrel','analizadorSintactico.py',608),
  ('exp -> termino tagsacops exp2','exp',3,'p_exp','analizadorSintactico.py',640),
  ('exp2 -> SUMA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',644),
  ('exp2 -> RESTA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',645),
  ('exp2 -> empty','exp2',1,'p_exp2','analizadorSintactico.py',646),
  ('tagop -> empty','tagop',1,'p_tagop','analizadorSintactico.py',649),
  ('tagsacops -> empty','tagsacops',1,'p_tagsacops','analizadorSintactico.py',654),
  ('declaracion -> tipo ID savevar decla1','declaracion',4,'p_declaracion','analizadorSintactico.py',696),
  ('savevar -> empty','savevar',1,'p_savevar','analizadorSintactico.py',705),
  ('decla1 -> saveMemNormal declafinal','decla1',2,'p_decla1','analizadorSintactico.py',712),
  ('decla1 -> LBRACKET decDimensionada exp saveLimSup decla2','decla1',5,'p_decla1','analizadorSintactico.py',713),
  ('saveMemNormal -> empty','saveMemNormal',1,'p_saveMemNormal','analizadorSintactico.py',716),
  ('decDimensionada -> empty','decDimensionada',1,'p_decDimensionada','analizadorSintactico.py',724),
  ('saveLimSup -> empty','saveLimSup',1,'p_saveLimSup','analizadorSintactico.py',738),
  ('decla2 -> RBRACKET guardaMemDimen declafinal','decla2',3,'p_decla2','analizadorSintactico.py',756),
  ('decla2 -> COMA SigDimension exp saveLimSup decla2','decla2',5,'p_decla2','analizadorSintactico.py',757),
  ('SigDimension -> empty','SigDimension',1,'p_SigDimension','analizadorSintactico.py',764),
  ('guardaMemDimen -> empty','guardaMemDimen',1,'p_guardaMemDimen','analizadorSintactico.py',776),
  ('declafinal -> PUNTOCOMA','declafinal',1,'p_declafinal','analizadorSintactico.py',808),
  ('tipo -> INT','tipo',1,'p_tipo','analizadorSintactico.py',831),
  ('tipo -> FLOAT','tipo',1,'p_tipo','analizadorSintactico.py',832),
  ('tipo -> CHAR','tipo',1,'p_tipo','analizadorSintactico.py',833),
  ('tipo -> STRING','tipo',1,'p_tipo','analizadorSintactico.py',834),
  ('tipo -> BOOL','tipo',1,'p_tipo','analizadorSintactico.py',835),
  ('asignacion -> ID meteid asigfinal','asignacion',3,'p_asignacion','analizadorSintactico.py',845),
  ('asignacion -> f7 asigfinal','asignacion',2,'p_asignacion','analizadorSintactico.py',846),
  ('meteid -> empty','meteid',1,'p_meteid','analizadorSintactico.py',855),
  ('asig2 -> LBRACKET exp asig3','asig2',3,'p_asig2','analizadorSintactico.py',863),
  ('asig2 -> asigfinal','asig2',1,'p_asig2','analizadorSintactico.py',864),
  ('asig3 -> COMA exp asig3','asig3',3,'p_asig3','analizadorSintactico.py',867),
  ('asig3 -> RBRACKET asigfinal','asig3',2,'p_asig3','analizadorSintactico.py',868),
  ('asigfinal -> IGUAL tagmeteig asigf2','asigfinal',3,'p_asigfinal','analizadorSintactico.py',872),
  ('asigf2 -> expresion tagig PUNTOCOMA','asigf2',3,'p_asigf2','analizadorSintactico.py',876),
  ('asigf2 -> read tagig','asigf2',2,'p_asigf2','analizadorSintactico.py',877),
  ('asigf2 -> readint tagig','asigf2',2,'p_asigf2','analizadorSintactico.py',878),
  ('tagmeteig -> empty','tagmeteig',1,'p_tagmeteig','analizadorSintactico.py',881),
  ('tagig -> empty','tagig',1,'p_tagig','analizadorSintactico.py',886),
  ('print -> PRINT LPARENT pr2','print',3,'p_print','analizadorSintactico.py',913),
  ('pr2 -> expresion pr3','pr2',2,'p_pr2','analizadorSintactico.py',917),
  ('pr3 -> tagimprime RPARENT PUNTOCOMA','pr3',3,'p_pr3','analizadorSintactico.py',921),
  ('tagimprime -> empty','tagimprime',1,'p_tagimprime','analizadorSintactico.py',924),
  ('termino -> factor tagsacopm te2','termino',3,'p_termino','analizadorSintactico.py',930),
  ('te2 -> MULT tagm termino','te2',3,'p_te2','analizadorSintactico.py',934),
  ('te2 -> DIV tagm termino','te2',3,'p_te2','analizadorSintactico.py',935),
  ('te2 -> empty','te2',1,'p_te2','analizadorSintactico.py',936),
  ('tagm -> empty','tagm',1,'p_tagm','analizadorSintactico.py',941),
  ('tagsacopm -> empty','tagsacopm',1,'p_tagsacopm','analizadorSintactico.py',946),
  ('factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo','factor',5,'p_factor','analizadorSintactico.py',976),
  ('factor -> f2','factor',1,'p_factor','analizadorSintactico.py',977),
  ('factor -> f3','factor',1,'p_factor','analizadorSintactico.py',978),
  ('factor -> f6','factor',1,'p_factor','analizadorSintactico.py',979),
  ('factor -> f7','factor',1,'p_factor','analizadorSintactico.py',980),
  ('f2 -> varcte','f2',1,'p_f2','analizadorSintactico.py',989),
  ('f3 -> ID','f3',1,'p_f3','analizadorSintactico.py',995),
  ('tagfondofalso -> empty','tagfondofalso',1,'p_tagfondofalso','analizadorSintactico.py',1002),
  ('tagsacafondo -> empty','tagsacafondo',1,'p_tagsacafondo','analizadorSintactico.py',1006),
  ('f7 -> ID LBRACKET tagrevisadime exp tagmetedim f8','f7',6,'p_f7','analizadorSintactico.py',1027),
  ('f8 -> COMA tagotradim exp tagmetedim f8','f8',5,'p_f8','analizadorSintactico.py',1031),
  ('f8 -> RBRACKET tagterminadim','f8',2,'p_f8','analizadorSintactico.py',1032),
  ('tagrevisadime -> empty','tagrevisadime',1,'p_tagrevisadime','analizadorSintactico.py',1035),
  ('tagmetedim -> empty','tagmetedim',1,'p_tagmetedim','analizadorSintactico.py',1047),
  ('tagotradim -> empty','tagotradim',1,'p_tagotradim','analizadorSintactico.py',1071),
  ('tagterminadim -> empty','tagterminadim',1,'p_tagterminadim','analizadorSintactico.py',1083),
  ('f6 -> llamafuncion','f6',1,'p_f6','analizadorSintactico.py',1108),
  ('guardafunc -> empty','guardafunc',1,'p_guardafunc','analizadorSintactico.py',1111),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','analizadorSintactico.py',1119),
  ('estatuto -> print','estatuto',1,'p_estatuto','analizadorSintactico.py',1120),
  ('estatuto -> ciclowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',1121),
  ('estatuto -> ciclodowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',1122),
  ('estatuto -> ciclofor','estatuto',1,'p_estatuto','analizadorSintactico.py',1123),
  ('estatuto -> read','estatuto',1,'p_estatuto','analizadorSintactico.py',1124),
  ('estatuto -> readint','estatuto',1,'p_estatuto','analizadorSintactico.py',1125),
  ('estatuto -> comentario','estatuto',1,'p_estatuto','analizadorSintactico.py',1126),
  ('estatuto -> cuadrado','estatuto',1,'p_estatuto','analizadorSintactico.py',1127),
  ('estatuto -> triangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',1128),
  ('estatuto -> casa','estatuto',1,'p_estatuto','analizadorSintactico.py',1129),
  ('estatuto -> rectangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',1130),
  ('estatuto -> cubo','estatuto',1,'p_estatuto','analizadorSintactico.py',1131),
  ('estatuto -> trapecio','estatuto',1,'p_estatuto','analizadorSintactico.py',1132),
  ('estatuto -> estrella','estatuto',1,'p_estatuto','analizadorSintactico.py',1133),
  ('estatuto -> firma','estatuto',1,'p_estatuto','analizadorSintactico.py',1134),
  ('estatuto -> mueve','estatuto',1,'p_estatuto','analizadorSintactico.py',1135),
  ('estatuto -> levanta','estatuto',1,'p_estatuto','analizadorSintactico.py',1136),
  ('estatuto -> apoya','estatuto',1,'p_estatuto','analizadorSintactico.py',1137),
  ('estatuto -> dimension','estatuto',1,'p_estatuto','analizadorSintactico.py',1138),
  ('estatuto -> llamafuncion','estatuto',1,'p_estatuto','analizadorSintactico.py',1139),
  ('estatuto -> return','estatuto',1,'p_estatuto','analizadorSintactico.py',1140),
  ('estatuto -> if','estatuto',1,'p_estatuto','analizadorSintactico.py',1141),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','analizadorSintactico.py',1149),
  ('varcte -> ENTERO tagint','varcte',2,'p_varcte','analizadorSintactico.py',1155),
  ('varcte -> FLOTANTE tagfloat','varcte',2,'p_varcte','analizadorSintactico.py',1156),
  ('varcte -> CADENA tagcad','varcte',2,'p_varcte','analizadorSintactico.py',1157),
  ('varcte -> CARACTER tagcar','varcte',2,'p_varcte','analizadorSintactico.py',1158),
  ('varcte -> TRUE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',1159),
  ('varcte -> FALSE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',1160),
  ('tagint -> empty','tagint',1,'p_tagint','analizadorSintactico.py',1163),
  ('tagfloat -> empty','tagfloat',1,'p_tagfloat','analizadorSintactico.py',1172),
  ('tagcad -> empty','tagcad',1,'p_tagcad','analizadorSintactico.py',1179),
  ('tagcar -> empty','tagcar',1,'p_tagcar','analizadorSintactico.py',1186),
  ('tagbol -> empty','tagbol',1,'p_tagbol','analizadorSintactico.py',1193),
  ('ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile','ciclowhile',8,'p_ciclowhile','analizadorSintactico.py',1202),
  ('taginiciawhile -> empty','taginiciawhile',1,'p_taginiciawhile','analizadorSintactico.py',1206),
  ('tagwhile -> empty','tagwhile',1,'p_tagwhile','analizadorSintactico.py',1210),
  ('tagregresawhile -> empty','tagregresawhile',1,'p_tagregresawhile','analizadorSintactico.py',1222),
  ('ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA','ciclodowhile',9,'p_ciclodowhile','analizadorSintactico.py',1231),
  ('taginiciado -> empty','taginiciado',1,'p_taginiciado','analizadorSintactico.py',1236),
  ('tagcondiciondo -> empty','tagcondiciondo',1,'p_tagcondiciondo','analizadorSintactico.py',1240),
  ('read -> READ LPARENT RPARENT PUNTOCOMA','read',4,'p_read','analizadorSintactico.py',1254),
  ('readint -> READINT LPARENT RPARENT PUNTOCOMA','readint',4,'p_readint','analizadorSintactico.py',1264),
  ('ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion tagespera RPARENT bloque tagasigna tagterminafor','ciclofor',11,'p_ciclofor','analizadorSintactico.py',1273),
  ('tagevaluafor -> empty','tagevaluafor',1,'p_tagevaluafor','analizadorSintactico.py',1277),
  ('tagterminafor -> empty','tagterminafor',1,'p_tagterminafor','analizadorSintactico.py',1289),
  ('tagespera -> empty','tagespera',1,'p_tagespera','analizadorSintactico.py',1294),
  ('tagasigna -> empty','tagasigna',1,'p_tagasigna','analizadorSintactico.py',1298),
  ('if -> IF LPARENT expresion tagif RPARENT bloque if2','if',7,'p_if','analizadorSintactico.py',1306),
  ('if2 -> tagterminaif','if2',1,'p_if2','analizadorSintactico.py',1310),
  ('if2 -> ELSE tagelse bloque tagterminaif','if2',4,'p_if2','analizadorSintactico.py',1311),
  ('tagif -> empty','tagif',1,'p_tagif','analizadorSintactico.py',1314),
  ('tagelse -> empty','tagelse',1,'p_tagelse','analizadorSintactico.py',1325),
  ('tagterminaif -> empty','tagterminaif',1,'p_tagterminaif','analizadorSintactico.py',1333),
  ('return -> RETURN llegoRet expresion PUNTOCOMA','return',4,'p_return','analizadorSintactico.py',1338),
  ('llegoRet -> empty','llegoRet',1,'p_llegoRet','analizadorSintactico.py',1343),
  ('cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA','cuadrado',10,'p_cuadrado','analizadorSintactico.py',1371),
  ('tagcuadro -> empty','tagcuadro',1,'p_tagcuadro','analizadorSintactico.py',1375),
  ('triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA','triangulo',10,'p_triangulo','analizadorSintactico.py',1381),
  ('tagtriangulo -> empty','tagtriangulo',1,'p_tagtriangulo','analizadorSintactico.py',1385),
  ('rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA','rectangulo',7,'p_rectangulo','analizadorSintactico.py',1390),
  ('casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA','casa',7,'p_casa','analizadorSintactico.py',1394),
  ('estrella -> ESTRELLA LPARENT exp COMA exp COMA exp RPARENT tagestrella PUNTOCOMA','estrella',10,'p_estrella','analizadorSintactico.py',1398),
  ('tagestrella -> empty','tagestrella',1,'p_tagestrella','analizadorSintactico.py',1402),
  ('firma -> FIRMA LPARENT RPARENT PUNTOCOMA','firma',4,'p_firma','analizadorSintactico.py',1407),
  ('cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA','cubo',10,'p_cubo','analizadorSintactico.py',1414),
  ('tagcubo -> empty','tagcubo',1,'p_tagcubo','analizadorSintactico.py',1418),
  ('mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA','mueve',8,'p_mueve','analizadorSintactico.py',1423),
  ('tagmueve -> empty','tagmueve',1,'p_tagmueve','analizadorSintactico.py',1427),
  ('levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA','levanta',4,'p_levanta','analizadorSintactico.py',1432),
  ('apoya -> APOYA LPARENT RPARENT PUNTOCOMA','apoya',4,'p_apoya','analizadorSintactico.py',1438),
  ('trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA','trapecio',7,'p_trapecio','analizadorSintactico.py',1444),
  ('dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA','dimension',5,'p_dimension','analizadorSintactico.py',1448),
  ('function -> FUNCTION pfunc','function',2,'p_function','analizadorSintactico.py',1453),
  ('pfunc -> tipo ID buildFunc LPARENT funct11','pfunc',5,'p_pfunc','analizadorSintactico.py',1458),
  ('pfunc -> VOID ID buildFunc LPARENT funct11','pfunc',5,'p_pfunc','analizadorSintactico.py',1459),
  ('buildFunc -> empty','buildFunc',1,'p_buildFunc','analizadorSintactico.py',1462),
  ('funct11 -> function4','funct11',1,'p_funct11','analizadorSintactico.py',1478),
  ('funct11 -> initParamTable funct2','funct11',2,'p_funct111','analizadorSintactico.py',1481),
  ('initParamTable -> empty','initParamTable',1,'p_initParamTable','analizadorSintactico.py',1484),
  ('funct2 -> tipo ID initParams funct3','funct2',4,'p_funct2','analizadorSintactico.py',1495),
  ('initParams -> empty','initParams',1,'p_initParams','analizadorSintactico.py',1498),
  ('funct3 -> COMA funct2','funct3',2,'p_funtion3','analizadorSintactico.py',1519),
  ('funct3 -> function4','funct3',1,'p_function31','analizadorSintactico.py',1523),
  ('function4 -> RPARENT initFunc bloque noinitFunc','function4',4,'p_function4','analizadorSintactico.py',1527),
  ('initFunc -> empty','initFunc',1,'p_initFunc','analizadorSintactico.py',1530),
  ('noinitFunc -> empty','noinitFunc',1,'p_noinitFunc','analizadorSintactico.py',1538),
  ('llamafuncion -> ID LPARENT tagverificafuncion llamaf11','llamafuncion',4,'p_llamafuncion','analizadorSintactico.py',1556),
  ('llamaf11 -> llamaf2','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1559),
  ('llamaf11 -> llamaf4','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1560),
  ('llamaf2 -> exp tagrevisaparam llamaf3','llamaf2',3,'p_llamaf2','analizadorSintactico.py',1563),
  ('llamaf3 -> COMA tagotroargumento llamaf2','llamaf3',3,'p_llamaf3','analizadorSintactico.py',1566),
  ('llamaf3 -> llamaf4','llamaf3',1,'p_llamaf3','analizadorSintactico.py',1567),
  ('llamaf4 -> RPARENT tagterminallamada PUNTOCOMA','llamaf4',3,'p_llamaf4','analizadorSintactico.py',1570),
  ('tagverificafuncion -> empty','tagverificafuncion',1,'p_tagverificafuncion','analizadorSintactico.py',1573),
  ('tagrevisaparam -> empty','tagrevisaparam',1,'p_tagrevisaparam','analizadorSintactico.py',1594),
  ('tagotroargumento -> empty','tagotroargumento',1,'p_tagotroargumento','analizadorSintactico.py',1609),
  ('tagterminallamada -> empty','tagterminallamada',1,'p_tagterminallamada','analizadorSintactico.py',1614),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',1630),
]
