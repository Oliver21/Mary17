
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightIGUALleftANDORleftLTGTLEGESAMEDIFleftSUMARESTAleftMULTDIVleftLBRACKETRBRACKETleftLPARENTRPARENTleftLKEYRKEYINT FLOAT IF ELSE VAR PRINT PROGRAM DO WHILE CHAR STRING BEGIN END FOR FUNCTION BOOL READ POW SQRT CUADRADO TRIANGULO RECTANGULO CASA TRAPECIO ESTRELLA CIRCULO LEVANTA APOYA CUBO MUEVE DIMENSION VOID TRUE FALSE RETURN READINT ID MULT DIV SUMA RESTA LPARENT RPARENT COMA PUNTOCOMA DOSPUNTOS PUNTO LBRACKET RBRACKET LKEY RKEY IGUAL LT GT LE GE DIF SAME COMSIMPLE COMDOBLE ENTERO FLOTANTE CARACTER CADENA NOESNADA COMENTARIO BOLEANO RAIZ POTENCIA AND ORprogram : PROGRAM  cuadrupro ID initTop DOSPUNTOS p2initTop : emptyp2 : p3\n\t| initFunctions p4\n\t| p5p3 : declaracion p3\n\t| initFunctions p4initFunctions : emptyp4 : function p4\n\t| p5p5 : cuadrupro2 bloque delMemcuadrupro : emptycuadrupro2 : emptydelMem : emptybloque : iniEnv LKEY b3 b4 b5iniEnv : emptyb3 : declaracion b3\n\t| emptyb4 : estatuto b4\n\t| emptyb5 : recEnv RKEYrecEnv : emptyexpresion : expresion2 expreexpre : expre2\n\t| emptyexpre2 : AND tagmetelog expresion tagsacalog\n\t| OR tagmetelog expresion tagsacalogtagmetelog : emptytagsacalog : emptyexpresion2 : exp e2 e2 : e3 \n\t| emptye3 : GT tagrel exp tagsacrel\n\t| LT tagrel exp tagsacrel\n\t| LE tagrel exp tagsacrel\n\t| GE tagrel exp tagsacrel\n\t| DIF tagrel exp tagsacrel\n\t| SAME tagrel exp tagsacreltagrel : emptytagsacrel : emptyexp : termino tagsacops exp2exp2 : SUMA  tagop exp \n\t| RESTA tagop exp\n\t| emptytagop : emptytagsacops : emptydeclaracion : tipo ID savevar decla1savevar : emptydecla1 : declafinal\n\t| LBRACKET exp decla2decla2 : RBRACKET declafinal\n\t| COMA exp decla2declafinal : PUNTOCOMAtipo : INT\n\t| FLOAT\n\t| CHAR\n\t| STRING\n\t| BOOLasignacion : ID meteid asig2meteid :  emptyasig2 : LBRACKET exp asig3\n\t| asigfinalasig3 : COMA exp asig3\n\t| RBRACKET asigfinalasigfinal : IGUAL tagmeteig asigf2asigf2 : expresion tagig PUNTOCOMA\n\t| read tagig\n\t| readint tagigtagmeteig : emptytagig : emptyprint : PRINT LPARENT pr2pr2 : expresion pr3pr3 : tagimprime RPARENT PUNTOCOMAtagimprime : emptytermino : factor tagsacopm te2te2 : MULT tagm termino \n\t| DIV tagm termino\n\t| emptytagm : emptytagsacopm : emptyfactor : LPARENT tagfondofalso expresion RPARENT tagsacafondo\n\t| f2\n\t| f3\n\t| f6f2 : varctef3 : IDtagfondofalso : emptytagsacafondo : emptyf8 : COMA exp f8\n\t| RBRACKETf6 : llamafuncionestatuto : asignacion\n\t| print\n\t| ciclowhile\n\t| ciclodowhile\n\t| ciclofor\n\t| read\n\t| readint\n\t| comentario\n\t| cuadrado\n\t| triangulo\n\t| casa\n\t| rectangulo\n\t| cubo\n\t| trapecio\n\t| estrella\n\t| mueve\n\t| levanta\n\t| apoya\n\t| dimension\n\t| llamafuncion\n\t| return\n\t| ifcomentario : COMENTARIOvarcte : ENTERO tagint\n\t| FLOTANTE tagfloat\n\t| CADENA tagcad\n\t| CARACTER tagcar\n\t| TRUE tagbol\n\t| FALSE tagboltagint : emptytagfloat : emptytagcad : emptytagcar : emptytagbol : emptyciclowhile : WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhiletaginiciawhile : emptytagwhile : emptytagregresawhile : emptyciclodowhile : DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMAtaginiciado : emptytagcondiciondo : emptyread : READ LPARENT RPARENT PUNTOCOMAreadint : READINT LPARENT RPARENT PUNTOCOMAciclofor : FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafortagevaluafor : emptytagterminafor : emptytagasigna : emptyif : IF LPARENT expresion tagif RPARENT bloque if2if2 : tagterminaif\n\t| ELSE tagelse bloque tagterminaiftagif : emptytagelse : emptytagterminaif : emptyreturn : RETURN llegoRet expresion PUNTOCOMAllegoRet : emptycuadrado : CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMAtagcuadro : emptytriangulo : TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMAtagtriangulo : emptyrectangulo : RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMAcasa : CASA LPARENT exp COMA exp RPARENT PUNTOCOMAestrella : ESTRELLA LPARENT exp RPARENT PUNTOCOMAcubo : CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMAtagcubo : emptymueve : MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMAtagmueve : emptylevanta : LEVANTA LPARENT RPARENT PUNTOCOMAapoya : APOYA LPARENT RPARENT PUNTOCOMAtrapecio : TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMAdimension : DIMENSION LPARENT exp RPARENT PUNTOCOMAfunction : FUNCTION pfuncpfunc : tipo ID buildFunc LPARENT funct11\n\t| VOID ID buildFunc LPARENT funct11buildFunc : emptyfunct11 : function4funct11 : initParamTable funct2initParamTable : emptyfunct2 : tipo ID initParams funct3initParams : emptyfunct3 : COMA funct2funct3 : function4function4 : RPARENT initFunc bloque noinitFuncinitFunc : emptynoinitFunc : emptyllamafuncion : ID LPARENT tagverificafuncion llamaf11llamaf11 : llamaf2\n\t| llamaf4llamaf2 : exp tagrevisaparam llamaf3llamaf3 : COMA tagotroargumento llamaf2\n\t| llamaf4llamaf4 : RPARENT  tagterminallamada PUNTOCOMAtagverificafuncion : emptytagrevisaparam : emptytagotroargumento : emptytagterminallamada : emptyempty :'
    
_lr_action_items = {'DO':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,53,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,53,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'RETURN':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,92,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,92,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'READ':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,192,210,218,227,243,246,247,249,251,252,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,54,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,54,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-187,-51,-133,-72,-158,-177,-178,-176,-69,54,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'VOID':([27,],[42,]),'MUEVE':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,55,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,55,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'IGUAL':([88,138,139,184,300,],[-187,192,-60,-187,192,]),'LBRACKET':([25,37,38,88,138,139,184,],[-187,-48,47,-187,190,-60,-187,]),'WHILE':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,170,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,57,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,57,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,217,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'PROGRAM':([0,],[2,]),'RPARENT':([100,101,102,103,104,106,107,108,109,110,111,112,113,115,121,135,137,145,147,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,168,169,176,178,179,187,188,189,191,193,194,195,200,201,204,206,207,218,220,223,224,226,228,229,236,237,238,246,247,248,249,254,255,258,264,274,276,288,293,296,297,298,301,302,303,309,310,311,312,313,314,316,317,322,323,325,326,327,328,329,330,334,336,337,338,341,342,343,344,350,351,352,353,358,359,360,361,362,363,364,365,366,367,369,370,375,376,381,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,171,185,-187,197,199,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,213,213,-187,-187,-187,-183,245,-62,-59,253,-187,256,-41,-44,264,-78,-75,-133,275,-23,-24,-25,280,-74,-31,-32,-30,-177,-178,-187,-176,306,-142,-134,-187,318,321,331,335,245,-184,-61,-65,-187,-187,-43,-42,-81,-88,-77,-76,-187,-187,-187,-187,-187,-187,-187,-187,-187,-187,371,-182,-181,-179,-64,-68,-70,-67,-170,213,385,-132,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,389,390,-63,-66,395,-180,]),'PRINT':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,60,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,60,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'TRAPECIO':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,59,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,59,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'RESTA':([100,101,102,103,104,106,107,108,109,110,111,112,113,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,206,207,246,247,249,264,311,312,313,314,336,337,338,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,202,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,-78,-75,-177,-178,-176,-187,-81,-88,-77,-76,-182,-181,-179,-180,]),'TRUE':([47,92,105,122,128,129,130,132,133,136,137,140,141,142,143,144,146,152,153,164,174,183,187,188,189,190,191,192,202,203,205,208,218,219,221,222,225,230,231,232,233,234,235,239,240,241,244,251,252,258,259,261,262,263,265,266,267,273,277,278,279,281,282,283,284,285,286,287,298,299,301,302,303,332,333,339,341,342,343,344,347,373,374,375,376,],[104,-187,-187,104,104,104,104,104,104,104,-187,104,104,104,104,-146,104,104,-87,104,104,104,-183,104,-62,104,-59,-187,-187,-187,-187,-187,-133,104,104,-187,-187,-187,-187,-187,-187,-187,-187,104,104,104,104,-69,104,-134,104,104,-45,104,104,-79,104,104,104,-28,104,104,-39,104,104,104,104,104,-61,104,-65,-187,-187,104,104,-187,-64,-68,-70,-67,104,104,-185,-63,-66,]),'COMENTARIO':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,78,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,78,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'MULT':([100,101,102,104,106,107,108,109,110,111,112,113,115,150,151,154,155,156,157,158,159,160,161,162,166,167,246,247,249,264,311,312,336,337,338,392,],[-82,-83,-84,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,-119,-125,-117,-123,208,-80,-115,-121,-118,-124,-120,-122,-116,-177,-178,-176,-187,-81,-88,-182,-181,-179,-180,]),'STRING':([8,21,27,34,46,48,49,50,163,168,169,210,214,215,268,384,],[13,13,13,13,13,-53,-47,-49,-50,-187,-187,-51,13,-168,-52,13,]),'TRIANGULO':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,77,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,77,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'LPARENT':([47,51,52,54,55,57,59,60,66,74,77,80,81,86,88,89,90,91,92,95,96,97,105,107,116,117,118,122,126,127,128,129,130,132,133,136,137,140,141,142,143,144,146,152,153,164,174,183,187,188,189,190,191,192,202,203,205,208,217,218,219,221,222,225,230,231,232,233,234,235,239,240,241,244,251,252,258,259,261,262,263,265,266,267,273,277,278,279,281,282,283,284,285,286,287,298,299,301,302,303,332,333,339,341,342,343,344,347,373,374,375,376,],[105,-187,-187,121,122,-187,128,129,130,132,133,134,135,136,137,140,141,142,-187,145,146,147,-187,137,168,-165,169,105,174,-127,105,105,105,105,105,105,-187,105,105,105,105,-146,105,105,-87,105,105,105,-183,105,-62,105,-59,-187,-187,-187,-187,-187,273,-133,105,105,-187,-187,-187,-187,-187,-187,-187,-187,105,105,105,105,-69,105,-134,105,105,-45,105,105,-79,105,105,105,-28,105,105,-39,105,105,105,105,105,-61,105,-65,-187,-187,105,105,-187,-64,-68,-70,-67,105,105,-185,-63,-66,]),'CASA':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,66,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,66,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'PUNTOCOMA':([25,37,38,100,101,102,103,104,106,107,108,109,110,111,112,113,115,148,149,150,151,154,155,156,157,158,159,160,161,162,165,166,167,171,176,179,185,196,197,199,200,201,206,207,223,224,226,236,237,238,245,246,247,249,253,256,264,280,294,295,304,309,310,311,312,313,314,318,321,322,323,325,326,327,328,329,330,331,335,336,337,338,343,345,354,355,358,359,360,361,362,363,364,365,366,367,385,389,390,392,395,398,399,400,401,405,406,],[-187,-48,48,-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,48,-122,-116,218,-187,-187,243,257,258,260,-41,-44,-78,-75,-23,-24,-25,-31,-32,-30,-187,-177,-178,-176,305,307,-187,324,336,-186,-187,-43,-42,-81,-88,-77,-76,-187,357,-187,-187,-187,-187,-187,-187,-187,-187,368,372,-182,-181,-179,-70,376,386,-157,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,397,-187,-187,-180,-187,407,-155,-150,408,-148,412,]),'LT':([100,101,102,103,104,106,107,108,109,110,111,112,113,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,179,200,201,206,207,246,247,249,264,309,310,311,312,313,314,336,337,338,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,234,-41,-44,-78,-75,-177,-178,-176,-187,-43,-42,-81,-88,-77,-76,-182,-181,-179,-180,]),'DIMENSION':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,89,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,89,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'CADENA':([47,92,105,122,128,129,130,132,133,136,137,140,141,142,143,144,146,152,153,164,174,183,187,188,189,190,191,192,202,203,205,208,218,219,221,222,225,230,231,232,233,234,235,239,240,241,244,251,252,258,259,261,262,263,265,266,267,273,277,278,279,281,282,283,284,285,286,287,298,299,301,302,303,332,333,339,341,342,343,344,347,373,374,375,376,],[108,-187,-187,108,108,108,108,108,108,108,-187,108,108,108,108,-146,108,108,-87,108,108,108,-183,108,-62,108,-59,-187,-187,-187,-187,-187,-133,108,108,-187,-187,-187,-187,-187,-187,-187,-187,108,108,108,108,-69,108,-134,108,108,-45,108,108,-79,108,108,108,-28,108,108,-39,108,108,108,108,108,-61,108,-65,-187,-187,108,108,-187,-64,-68,-70,-67,108,108,-185,-63,-66,]),'DOSPUNTOS':([5,6,7,],[-187,8,-2,]),'APOYA':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,97,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,97,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'DIF':([100,101,102,103,104,106,107,108,109,110,111,112,113,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,179,200,201,206,207,246,247,249,264,309,310,311,312,313,314,336,337,338,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,231,-41,-44,-78,-75,-177,-178,-176,-187,-43,-42,-81,-88,-77,-76,-182,-181,-179,-180,]),'LEVANTA':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,81,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,81,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'$end':([1,14,15,16,23,28,29,31,35,36,39,43,123,173,],[0,-1,-3,-5,-187,-4,-10,-6,-11,-14,-9,-7,-15,-21,]),'FUNCTION':([8,12,20,21,26,32,33,41,48,49,50,123,163,173,210,211,212,216,268,272,315,348,349,382,383,396,],[-187,-8,27,-187,27,-8,27,-162,-53,-47,-49,-15,-50,-21,-51,-166,-163,-164,-52,-167,-187,-173,-175,-172,-169,-171,]),'GT':([100,101,102,103,104,106,107,108,109,110,111,112,113,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,179,200,201,206,207,246,247,249,264,309,310,311,312,313,314,336,337,338,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,235,-41,-44,-78,-75,-177,-178,-176,-187,-43,-42,-81,-88,-77,-76,-182,-181,-179,-180,]),'LKEY':([8,9,12,20,21,22,24,26,30,32,33,41,48,49,50,53,119,120,123,163,173,210,211,212,213,216,268,269,270,272,275,306,315,319,320,348,349,371,379,382,383,393,394,396,],[-187,-187,-8,-187,-187,34,-16,-187,-13,-8,-187,-162,-53,-47,-49,-187,-131,-187,-15,-50,-21,-51,-166,-163,-187,-164,-52,-187,-174,-167,-187,-187,-187,-187,-128,-173,-175,-187,-187,-172,-169,-187,-143,-171,]),'FOR':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,80,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,80,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'READINT':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,192,210,218,227,243,246,247,249,251,252,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,95,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,95,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-187,-51,-133,-72,-158,-177,-178,-176,-69,95,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'CUBO':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,74,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,74,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'RKEY':([34,44,45,46,48,49,50,56,58,61,62,63,64,65,67,68,69,70,71,72,73,75,76,78,79,82,83,84,85,87,93,94,98,99,123,124,125,131,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,-187,-187,-53,-47,-49,-187,-109,-105,-99,-108,-113,-101,-98,-187,-107,-94,-111,-100,-103,-93,-20,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,173,-22,-19,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'ELSE':([123,173,346,],[-15,-21,379,]),'ESTRELLA':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,91,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,91,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'GE':([100,101,102,103,104,106,107,108,109,110,111,112,113,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,179,200,201,206,207,246,247,249,264,309,310,311,312,313,314,336,337,338,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,230,-41,-44,-78,-75,-177,-178,-176,-187,-43,-42,-81,-88,-77,-76,-182,-181,-179,-180,]),'LE':([100,101,102,103,104,106,107,108,109,110,111,112,113,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,179,200,201,206,207,246,247,249,264,309,310,311,312,313,314,336,337,338,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,232,-41,-44,-78,-75,-177,-178,-176,-187,-43,-42,-81,-88,-77,-76,-182,-181,-179,-180,]),'CARACTER':([47,92,105,122,128,129,130,132,133,136,137,140,141,142,143,144,146,152,153,164,174,183,187,188,189,190,191,192,202,203,205,208,218,219,221,222,225,230,231,232,233,234,235,239,240,241,244,251,252,258,259,261,262,263,265,266,267,273,277,278,279,281,282,283,284,285,286,287,298,299,301,302,303,332,333,339,341,342,343,344,347,373,374,375,376,],[112,-187,-187,112,112,112,112,112,112,112,-187,112,112,112,112,-146,112,112,-87,112,112,112,-183,112,-62,112,-59,-187,-187,-187,-187,-187,-133,112,112,-187,-187,-187,-187,-187,-187,-187,-187,112,112,112,112,-69,112,-134,112,112,-45,112,112,-79,112,112,112,-28,112,112,-39,112,112,112,112,112,-61,112,-65,-187,-187,112,112,-187,-64,-68,-70,-67,112,112,-185,-63,-66,]),'COMA':([100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,172,175,180,181,182,186,198,200,201,206,207,209,246,247,248,249,250,264,289,290,296,297,308,309,310,311,312,313,314,316,336,337,338,340,350,351,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,164,-187,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,219,221,239,240,241,244,259,-41,-44,-78,-75,164,-177,-178,-187,-176,299,-187,332,333,339,-184,347,-43,-42,-81,-88,-77,-76,-187,-182,-181,-179,299,-170,384,-180,]),'ID':([2,3,4,10,11,13,17,18,19,34,40,42,44,45,46,47,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,92,93,94,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,122,123,128,129,130,132,133,134,136,137,140,141,142,143,144,146,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,166,167,173,174,176,177,179,183,187,188,189,190,191,192,200,201,202,203,205,206,207,208,210,218,219,221,222,223,224,225,226,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,246,247,249,251,252,257,258,259,260,261,262,263,264,265,266,267,268,271,273,277,278,279,281,282,283,284,285,286,287,291,292,298,299,301,302,303,305,307,309,310,311,312,313,314,322,323,324,325,326,327,328,329,330,332,333,336,337,338,339,341,342,343,344,346,347,356,357,358,359,360,361,362,363,364,365,366,367,368,372,373,374,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,5,-12,-56,25,-57,-54,-55,-58,-187,51,52,-18,88,-187,107,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,88,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-187,-102,-92,-110,-17,-82,-83,-84,-187,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,107,-15,107,107,107,107,107,184,107,-187,107,107,107,107,-146,107,-187,-46,-119,-125,107,-87,-117,-123,-187,-80,-115,-121,-118,-124,-120,-50,107,-122,-116,-21,107,-187,-71,-187,107,-183,107,-62,107,-59,-187,-41,-44,-187,-187,-187,-78,-75,-187,-51,-133,107,107,-187,-23,-24,-187,-25,-72,-187,-187,-187,-187,-187,-187,-31,-32,-30,107,107,107,-187,-158,107,-177,-178,-176,-69,107,-145,-134,107,-159,107,-45,107,-187,107,-79,107,-52,316,107,107,-28,107,107,-39,107,107,107,107,107,184,-136,-61,107,-65,-187,-187,-161,-153,-43,-42,-81,-88,-77,-76,-187,-187,-73,-187,-187,-187,-187,-187,-187,107,107,-182,-181,-179,-187,-64,-68,-70,-67,-187,107,-187,-160,-26,-29,-27,-36,-40,-37,-35,-38,-34,-33,-152,-151,107,-185,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'IF':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,90,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,90,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'AND':([100,101,102,103,104,106,107,108,109,110,111,112,113,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,176,179,200,201,206,207,236,237,238,246,247,249,264,309,310,311,312,313,314,325,326,327,328,329,330,336,337,338,361,362,363,364,365,366,367,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,222,-187,-41,-44,-78,-75,-31,-32,-30,-177,-178,-176,-187,-43,-42,-81,-88,-77,-76,-187,-187,-187,-187,-187,-187,-182,-181,-179,-36,-40,-37,-35,-38,-34,-33,-180,]),'CHAR':([8,21,27,34,46,48,49,50,163,168,169,210,214,215,268,384,],[10,10,10,10,10,-53,-47,-49,-50,-187,-187,-51,10,-168,-52,10,]),'FALSE':([47,92,105,122,128,129,130,132,133,136,137,140,141,142,143,144,146,152,153,164,174,183,187,188,189,190,191,192,202,203,205,208,218,219,221,222,225,230,231,232,233,234,235,239,240,241,244,251,252,258,259,261,262,263,265,266,267,273,277,278,279,281,282,283,284,285,286,287,298,299,301,302,303,332,333,339,341,342,343,344,347,373,374,375,376,],[113,-187,-187,113,113,113,113,113,113,113,-187,113,113,113,113,-146,113,113,-87,113,113,113,-183,113,-62,113,-59,-187,-187,-187,-187,-187,-133,113,113,-187,-187,-187,-187,-187,-187,-187,-187,113,113,113,113,-69,113,-134,113,113,-45,113,113,-79,113,113,113,-28,113,113,-39,113,113,113,113,113,-61,113,-65,-187,-187,113,113,-187,-64,-68,-70,-67,113,113,-185,-63,-66,]),'INT':([8,21,27,34,46,48,49,50,163,168,169,210,214,215,268,384,],[17,17,17,17,17,-53,-47,-49,-50,-187,-187,-51,17,-168,-52,17,]),'FLOAT':([8,21,27,34,46,48,49,50,163,168,169,210,214,215,268,384,],[18,18,18,18,18,-53,-47,-49,-50,-187,-187,-51,18,-168,-52,18,]),'SAME':([100,101,102,103,104,106,107,108,109,110,111,112,113,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,179,200,201,206,207,246,247,249,264,309,310,311,312,313,314,336,337,338,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,233,-41,-44,-78,-75,-177,-178,-176,-187,-43,-42,-81,-88,-77,-76,-182,-181,-179,-180,]),'CUADRADO':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,96,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,96,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'BOOL':([8,21,27,34,46,48,49,50,163,168,169,210,214,215,268,384,],[19,19,19,19,19,-53,-47,-49,-50,-187,-187,-51,19,-168,-52,19,]),'SUMA':([100,101,102,103,104,106,107,108,109,110,111,112,113,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,206,207,246,247,249,264,311,312,313,314,336,337,338,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,203,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,-78,-75,-177,-178,-176,-187,-81,-88,-77,-76,-182,-181,-179,-180,]),'RECTANGULO':([34,44,45,46,48,49,50,58,61,62,63,64,65,67,68,69,70,71,72,73,75,78,79,82,83,84,85,87,93,94,98,99,123,163,173,177,189,191,210,218,227,243,246,247,249,257,258,260,268,298,301,302,303,305,307,324,336,337,338,341,342,343,344,346,356,357,368,372,375,376,377,378,380,386,387,388,391,392,397,402,403,404,407,408,409,410,411,412,],[-187,-18,86,-187,-53,-47,-49,-109,-105,-99,-108,-113,-101,-98,86,-107,-94,-111,-100,-103,-93,-114,-112,-97,-104,-96,-106,-95,-102,-92,-110,-17,-15,-50,-21,-71,-62,-59,-51,-133,-72,-158,-177,-178,-176,-145,-134,-159,-52,-61,-65,-187,-187,-161,-153,-73,-182,-181,-179,-64,-68,-70,-67,-187,-187,-160,-152,-151,-63,-66,-139,-140,-144,-156,-126,-129,-187,-180,-130,-187,-138,-187,-154,-149,-135,-137,-141,-147,]),'FLOTANTE':([47,92,105,122,128,129,130,132,133,136,137,140,141,142,143,144,146,152,153,164,174,183,187,188,189,190,191,192,202,203,205,208,218,219,221,222,225,230,231,232,233,234,235,239,240,241,244,251,252,258,259,261,262,263,265,266,267,273,277,278,279,281,282,283,284,285,286,287,298,299,301,302,303,332,333,339,341,342,343,344,347,373,374,375,376,],[115,-187,-187,115,115,115,115,115,115,115,-187,115,115,115,115,-146,115,115,-87,115,115,115,-183,115,-62,115,-59,-187,-187,-187,-187,-187,-133,115,115,-187,-187,-187,-187,-187,-187,-187,-187,115,115,115,115,-69,115,-134,115,115,-45,115,115,-79,115,115,115,-28,115,115,-39,115,115,115,115,115,-61,115,-65,-187,-187,115,115,-187,-64,-68,-70,-67,115,115,-185,-63,-66,]),'RBRACKET':([100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,200,201,206,207,209,246,247,249,250,264,309,310,311,312,313,314,336,337,338,340,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,165,-187,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,-41,-44,-78,-75,165,-177,-178,-176,300,-187,-43,-42,-81,-88,-77,-76,-182,-181,-179,300,-180,]),'ENTERO':([47,92,105,122,128,129,130,132,133,136,137,140,141,142,143,144,146,152,153,164,174,183,187,188,189,190,191,192,202,203,205,208,218,219,221,222,225,230,231,232,233,234,235,239,240,241,244,251,252,258,259,261,262,263,265,266,267,273,277,278,279,281,282,283,284,285,286,287,298,299,301,302,303,332,333,339,341,342,343,344,347,373,374,375,376,],[111,-187,-187,111,111,111,111,111,111,111,-187,111,111,111,111,-146,111,111,-87,111,111,111,-183,111,-62,111,-59,-187,-187,-187,-187,-187,-133,111,111,-187,-187,-187,-187,-187,-187,-187,-187,111,111,111,111,-69,111,-134,111,111,-45,111,111,-79,111,111,111,-28,111,111,-39,111,111,111,111,111,-61,111,-65,-187,-187,111,111,-187,-64,-68,-70,-67,111,111,-185,-63,-66,]),'OR':([100,101,102,103,104,106,107,108,109,110,111,112,113,115,148,149,150,151,154,155,156,157,158,159,160,161,162,166,167,176,179,200,201,206,207,236,237,238,246,247,249,264,309,310,311,312,313,314,325,326,327,328,329,330,336,337,338,361,362,363,364,365,366,367,392,],[-82,-83,-84,-187,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,-187,-46,-119,-125,-117,-123,-187,-80,-115,-121,-118,-124,-120,-122,-116,225,-187,-41,-44,-78,-75,-31,-32,-30,-177,-178,-176,-187,-43,-42,-81,-88,-77,-76,-187,-187,-187,-187,-187,-187,-182,-181,-179,-36,-40,-37,-35,-38,-34,-33,-180,]),'DIV':([100,101,102,104,106,107,108,109,110,111,112,113,115,150,151,154,155,156,157,158,159,160,161,162,166,167,246,247,249,264,311,312,336,337,338,392,],[-82,-83,-84,-187,-85,-86,-187,-91,-187,-187,-187,-187,-187,-119,-125,-117,-123,205,-80,-115,-121,-118,-124,-120,-122,-116,-177,-178,-176,-187,-81,-88,-182,-181,-179,-180,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'cuadrado':([45,68,],[72,72,]),'tagasigna':([391,],[402,]),'tagsacrel':([325,326,327,328,329,330,],[361,363,364,365,366,367,]),'tagfondofalso':([105,],[152,]),'expre2':([176,],[224,]),'bloque':([9,120,269,306,319,371,393,],[23,170,315,346,356,391,404,]),'taginiciawhile':([57,],[126,]),'comentario':([45,68,],[62,62,]),'if2':([346,],[377,]),'tagop':([202,203,],[261,263,]),'tagrevisaparam':([248,],[296,]),'program':([0,],[1,]),'rectangulo':([45,68,],[73,73,]),'factor':([47,122,128,129,130,132,133,136,140,141,142,143,146,152,164,174,183,188,190,219,221,239,240,241,244,252,259,261,263,265,267,273,277,279,281,283,284,285,286,287,299,332,333,347,373,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'return':([45,68,],[79,79,]),'p3':([8,21,],[15,31,]),'read':([45,68,252,],[82,82,303,]),'cubo':([45,68,],[83,83,]),'buildFunc':([51,52,],[116,118,]),'estrella':([45,68,],[85,85,]),'meteid':([88,184,],[138,138,]),'expresion':([129,141,143,152,174,183,252,273,277,279,],[178,194,196,204,220,242,304,317,322,323,]),'tagbol':([104,113,],[150,162,]),'p4':([20,26,33,],[28,39,43,]),'tagcad':([108,],[154,]),'tagevaluafor':([242,],[291,]),'tagtriangulo':([390,],[401,]),'tagimprime':([178,],[228,]),'tagcar':([112,],[160,]),'taginiciado':([53,],[120,]),'llegoRet':([92,],[143,]),'tagwhile':([275,],[319,]),'b4':([45,68,],[56,131,]),'b5':([56,],[123,]),'asigf2':([252,],[301,]),'apoya':([45,68,],[58,58,]),'b3':([34,46,],[45,99,]),'tagterminafor':([402,],[409,]),'tagsacops':([103,],[148,]),'varcte':([47,122,128,129,130,132,133,136,140,141,142,143,146,152,164,174,183,188,190,219,221,239,240,241,244,252,259,261,263,265,267,273,277,279,281,283,284,285,286,287,299,332,333,347,373,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,]),'tipo':([8,21,27,34,46,214,384,],[11,11,40,11,11,271,271,]),'readint':([45,68,252,],[67,67,302,]),'tagig':([302,303,304,],[342,344,345,]),'funct2':([214,384,],[272,396,]),'funct3':([351,],[383,]),'declafinal':([38,165,],[50,210,]),'print':([45,68,],[75,75,]),'tagsacopm':([110,],[156,]),'tagcuadro':([395,],[406,]),'tagrel':([230,231,232,233,234,235,],[281,283,284,285,286,287,]),'initFunc':([213,],[269,]),'tagelse':([379,],[393,]),'ciclofor':([45,68,],[84,84,]),'tagverificafuncion':([137,],[188,]),'tagm':([205,208,],[265,267,]),'te2':([156,],[207,]),'e3':([179,],[236,]),'e2':([179,],[238,]),'tagsacalog':([322,323,],[358,360,]),'initParams':([316,],[351,]),'declaracion':([8,21,34,46,],[21,21,46,46,]),'tagmueve':([318,],[354,]),'cuadrupro2':([8,20,26,33,],[9,9,9,9,]),'tagterminallamada':([245,],[294,]),'termino':([47,122,128,129,130,132,133,136,140,141,142,143,146,152,164,174,183,188,190,219,221,239,240,241,244,252,259,261,263,265,267,273,277,279,281,283,284,285,286,287,299,332,333,347,373,],[103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,313,314,103,103,103,103,103,103,103,103,103,103,103,103,103,103,]),'tagfloat':([115,],[167,]),'ciclowhile':([45,68,],[70,70,]),'levanta':([45,68,],[63,63,]),'triangulo':([45,68,],[65,65,]),'exp2':([148,],[200,]),'estatuto':([45,68,],[68,68,]),'tagcondiciondo':([317,],[352,]),'asig3':([250,340,],[298,375,]),'asig2':([138,],[191,]),'delMem':([23,],[35,]),'empty':([2,5,8,9,20,21,23,25,26,33,34,45,46,51,52,53,56,57,68,88,92,103,104,105,108,110,111,112,113,115,120,137,148,156,168,169,176,178,179,184,192,194,202,203,205,208,213,222,225,230,231,232,233,234,235,242,245,248,264,269,275,302,303,304,306,315,316,317,318,319,322,323,325,326,327,328,329,330,339,346,356,371,379,389,390,391,393,395,402,404,],[4,7,12,24,30,32,36,37,30,30,44,76,44,117,117,119,125,127,76,139,144,149,151,153,155,157,159,161,151,166,24,187,201,206,215,215,226,229,237,139,251,255,262,262,266,266,270,278,278,282,282,282,282,282,282,292,295,297,312,24,320,343,343,343,24,349,350,353,355,24,359,359,362,362,362,362,362,362,374,380,388,24,394,399,400,403,24,405,410,380,]),'function':([20,26,33,],[26,26,26,]),'expresion2':([129,141,143,152,174,183,252,273,277,279,],[176,176,176,176,176,176,176,176,176,176,]),'tagterminaif':([346,404,],[378,411,]),'cuadrupro':([2,],[3,]),'tagint':([111,],[158,]),'p2':([8,],[14,]),'initTop':([5,],[6,]),'casa':([45,68,],[93,93,]),'asignacion':([45,68,134,291,],[94,94,183,334,]),'p5':([8,20,26,33,],[16,29,29,29,]),'llamaf2':([188,373,],[246,392,]),'llamaf3':([296,],[338,]),'llamaf4':([188,296,],[247,337,]),'tagcubo':([389,],[398,]),'noinitFunc':([315,],[348,]),'llamaf11':([188,],[249,]),'iniEnv':([9,120,269,306,319,371,393,],[22,22,22,22,22,22,22,]),'f2':([47,122,128,129,130,132,133,136,140,141,142,143,146,152,164,174,183,188,190,219,221,239,240,241,244,252,259,261,263,265,267,273,277,279,281,283,284,285,286,287,299,332,333,347,373,],[100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,]),'f3':([47,122,128,129,130,132,133,136,140,141,142,143,146,152,164,174,183,188,190,219,221,239,240,241,244,252,259,261,263,265,267,273,277,279,281,283,284,285,286,287,299,332,333,347,373,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'f6':([47,122,128,129,130,132,133,136,140,141,142,143,146,152,164,174,183,188,190,219,221,239,240,241,244,252,259,261,263,265,267,273,277,279,281,283,284,285,286,287,299,332,333,347,373,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'trapecio':([45,68,],[61,61,]),'tagsacafondo':([264,],[311,]),'if':([45,68,],[64,64,]),'pfunc':([27,],[41,]),'mueve':([45,68,],[69,69,]),'decla1':([38,],[49,]),'llamafuncion':([45,47,68,122,128,129,130,132,133,136,140,141,142,143,146,152,164,174,183,188,190,219,221,239,240,241,244,252,259,261,263,265,267,273,277,279,281,283,284,285,286,287,299,332,333,347,373,],[71,109,71,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'decla2':([114,209,],[163,268,]),'initParamTable':([168,169,],[214,214,]),'tagotroargumento':([339,],[373,]),'tagmeteig':([192,],[252,]),'funct11':([168,169,],[212,216,]),'pr3':([178,],[227,]),'pr2':([129,],[177,]),'ciclodowhile':([45,68,],[87,87,]),'asigfinal':([138,300,],[189,341,]),'function4':([168,169,351,],[211,211,382,]),'expre':([176,],[223,]),'tagmetelog':([222,225,],[277,279,]),'dimension':([45,68,],[98,98,]),'tagif':([194,],[254,]),'savevar':([25,],[38,]),'exp':([47,122,128,129,130,132,133,136,140,141,142,143,146,152,164,174,183,188,190,219,221,239,240,241,244,252,259,261,263,273,277,279,281,283,284,285,286,287,299,332,333,347,373,],[114,172,175,179,180,181,182,186,193,179,195,179,198,179,209,179,179,248,250,274,276,288,289,290,293,179,308,309,310,179,179,179,325,326,327,328,329,330,340,369,370,381,248,]),'tagregresawhile':([356,],[387,]),'initFunctions':([8,21,],[20,33,]),'recEnv':([56,],[124,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM cuadrupro ID initTop DOSPUNTOS p2','program',6,'p_program','analizadorSintactico.py',345),
  ('initTop -> empty','initTop',1,'p_initTop','analizadorSintactico.py',350),
  ('p2 -> p3','p2',1,'p_p2','analizadorSintactico.py',358),
  ('p2 -> initFunctions p4','p2',2,'p_p2','analizadorSintactico.py',359),
  ('p2 -> p5','p2',1,'p_p2','analizadorSintactico.py',360),
  ('p3 -> declaracion p3','p3',2,'p_p3','analizadorSintactico.py',363),
  ('p3 -> initFunctions p4','p3',2,'p_p3','analizadorSintactico.py',364),
  ('initFunctions -> empty','initFunctions',1,'p_initFunctions','analizadorSintactico.py',367),
  ('p4 -> function p4','p4',2,'p_p4','analizadorSintactico.py',373),
  ('p4 -> p5','p4',1,'p_p4','analizadorSintactico.py',374),
  ('p5 -> cuadrupro2 bloque delMem','p5',3,'p_p5','analizadorSintactico.py',377),
  ('cuadrupro -> empty','cuadrupro',1,'p_cuadrupro','analizadorSintactico.py',380),
  ('cuadrupro2 -> empty','cuadrupro2',1,'p_cuadrupro2','analizadorSintactico.py',386),
  ('delMem -> empty','delMem',1,'p_delMem','analizadorSintactico.py',393),
  ('bloque -> iniEnv LKEY b3 b4 b5','bloque',5,'p_bloque','analizadorSintactico.py',399),
  ('iniEnv -> empty','iniEnv',1,'p_iniEnv','analizadorSintactico.py',402),
  ('b3 -> declaracion b3','b3',2,'p_b3','analizadorSintactico.py',413),
  ('b3 -> empty','b3',1,'p_b3','analizadorSintactico.py',414),
  ('b4 -> estatuto b4','b4',2,'p_b4','analizadorSintactico.py',417),
  ('b4 -> empty','b4',1,'p_b4','analizadorSintactico.py',418),
  ('b5 -> recEnv RKEY','b5',2,'p_b5','analizadorSintactico.py',421),
  ('recEnv -> empty','recEnv',1,'p_recEnv','analizadorSintactico.py',424),
  ('expresion -> expresion2 expre','expresion',2,'p_expresion','analizadorSintactico.py',444),
  ('expre -> expre2','expre',1,'p_expre','analizadorSintactico.py',447),
  ('expre -> empty','expre',1,'p_expre','analizadorSintactico.py',448),
  ('expre2 -> AND tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',451),
  ('expre2 -> OR tagmetelog expresion tagsacalog','expre2',4,'p_expre2','analizadorSintactico.py',452),
  ('tagmetelog -> empty','tagmetelog',1,'p_tagmetelog','analizadorSintactico.py',455),
  ('tagsacalog -> empty','tagsacalog',1,'p_tagsacalog','analizadorSintactico.py',459),
  ('expresion2 -> exp e2','expresion2',2,'p_expresion2','analizadorSintactico.py',491),
  ('e2 -> e3','e2',1,'p_e2','analizadorSintactico.py',496),
  ('e2 -> empty','e2',1,'p_e2','analizadorSintactico.py',497),
  ('e3 -> GT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',500),
  ('e3 -> LT tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',501),
  ('e3 -> LE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',502),
  ('e3 -> GE tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',503),
  ('e3 -> DIF tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',504),
  ('e3 -> SAME tagrel exp tagsacrel','e3',4,'p_e3','analizadorSintactico.py',505),
  ('tagrel -> empty','tagrel',1,'p_tagrel','analizadorSintactico.py',508),
  ('tagsacrel -> empty','tagsacrel',1,'p_tagsacrel','analizadorSintactico.py',513),
  ('exp -> termino tagsacops exp2','exp',3,'p_exp','analizadorSintactico.py',545),
  ('exp2 -> SUMA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',549),
  ('exp2 -> RESTA tagop exp','exp2',3,'p_exp2','analizadorSintactico.py',550),
  ('exp2 -> empty','exp2',1,'p_exp2','analizadorSintactico.py',551),
  ('tagop -> empty','tagop',1,'p_tagop','analizadorSintactico.py',554),
  ('tagsacops -> empty','tagsacops',1,'p_tagsacops','analizadorSintactico.py',559),
  ('declaracion -> tipo ID savevar decla1','declaracion',4,'p_declaracion','analizadorSintactico.py',601),
  ('savevar -> empty','savevar',1,'p_savevar','analizadorSintactico.py',605),
  ('decla1 -> declafinal','decla1',1,'p_decla1','analizadorSintactico.py',620),
  ('decla1 -> LBRACKET exp decla2','decla1',3,'p_decla1','analizadorSintactico.py',621),
  ('decla2 -> RBRACKET declafinal','decla2',2,'p_decla2','analizadorSintactico.py',624),
  ('decla2 -> COMA exp decla2','decla2',3,'p_decla2','analizadorSintactico.py',625),
  ('declafinal -> PUNTOCOMA','declafinal',1,'p_declafinal','analizadorSintactico.py',629),
  ('tipo -> INT','tipo',1,'p_tipo','analizadorSintactico.py',639),
  ('tipo -> FLOAT','tipo',1,'p_tipo','analizadorSintactico.py',640),
  ('tipo -> CHAR','tipo',1,'p_tipo','analizadorSintactico.py',641),
  ('tipo -> STRING','tipo',1,'p_tipo','analizadorSintactico.py',642),
  ('tipo -> BOOL','tipo',1,'p_tipo','analizadorSintactico.py',643),
  ('asignacion -> ID meteid asig2','asignacion',3,'p_asignacion','analizadorSintactico.py',653),
  ('meteid -> empty','meteid',1,'p_meteid','analizadorSintactico.py',661),
  ('asig2 -> LBRACKET exp asig3','asig2',3,'p_asig2','analizadorSintactico.py',669),
  ('asig2 -> asigfinal','asig2',1,'p_asig2','analizadorSintactico.py',670),
  ('asig3 -> COMA exp asig3','asig3',3,'p_asig3','analizadorSintactico.py',673),
  ('asig3 -> RBRACKET asigfinal','asig3',2,'p_asig3','analizadorSintactico.py',674),
  ('asigfinal -> IGUAL tagmeteig asigf2','asigfinal',3,'p_asigfinal','analizadorSintactico.py',678),
  ('asigf2 -> expresion tagig PUNTOCOMA','asigf2',3,'p_asigf2','analizadorSintactico.py',682),
  ('asigf2 -> read tagig','asigf2',2,'p_asigf2','analizadorSintactico.py',683),
  ('asigf2 -> readint tagig','asigf2',2,'p_asigf2','analizadorSintactico.py',684),
  ('tagmeteig -> empty','tagmeteig',1,'p_tagmeteig','analizadorSintactico.py',687),
  ('tagig -> empty','tagig',1,'p_tagig','analizadorSintactico.py',692),
  ('print -> PRINT LPARENT pr2','print',3,'p_print','analizadorSintactico.py',719),
  ('pr2 -> expresion pr3','pr2',2,'p_pr2','analizadorSintactico.py',723),
  ('pr3 -> tagimprime RPARENT PUNTOCOMA','pr3',3,'p_pr3','analizadorSintactico.py',727),
  ('tagimprime -> empty','tagimprime',1,'p_tagimprime','analizadorSintactico.py',730),
  ('termino -> factor tagsacopm te2','termino',3,'p_termino','analizadorSintactico.py',736),
  ('te2 -> MULT tagm termino','te2',3,'p_te2','analizadorSintactico.py',740),
  ('te2 -> DIV tagm termino','te2',3,'p_te2','analizadorSintactico.py',741),
  ('te2 -> empty','te2',1,'p_te2','analizadorSintactico.py',742),
  ('tagm -> empty','tagm',1,'p_tagm','analizadorSintactico.py',747),
  ('tagsacopm -> empty','tagsacopm',1,'p_tagsacopm','analizadorSintactico.py',752),
  ('factor -> LPARENT tagfondofalso expresion RPARENT tagsacafondo','factor',5,'p_factor','analizadorSintactico.py',781),
  ('factor -> f2','factor',1,'p_factor','analizadorSintactico.py',782),
  ('factor -> f3','factor',1,'p_factor','analizadorSintactico.py',783),
  ('factor -> f6','factor',1,'p_factor','analizadorSintactico.py',784),
  ('f2 -> varcte','f2',1,'p_f2','analizadorSintactico.py',793),
  ('f3 -> ID','f3',1,'p_f3','analizadorSintactico.py',799),
  ('tagfondofalso -> empty','tagfondofalso',1,'p_tagfondofalso','analizadorSintactico.py',806),
  ('tagsacafondo -> empty','tagsacafondo',1,'p_tagsacafondo','analizadorSintactico.py',810),
  ('f8 -> COMA exp f8','f8',3,'p_f8','analizadorSintactico.py',835),
  ('f8 -> RBRACKET','f8',1,'p_f8','analizadorSintactico.py',836),
  ('f6 -> llamafuncion','f6',1,'p_f6','analizadorSintactico.py',840),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','analizadorSintactico.py',846),
  ('estatuto -> print','estatuto',1,'p_estatuto','analizadorSintactico.py',847),
  ('estatuto -> ciclowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',848),
  ('estatuto -> ciclodowhile','estatuto',1,'p_estatuto','analizadorSintactico.py',849),
  ('estatuto -> ciclofor','estatuto',1,'p_estatuto','analizadorSintactico.py',850),
  ('estatuto -> read','estatuto',1,'p_estatuto','analizadorSintactico.py',851),
  ('estatuto -> readint','estatuto',1,'p_estatuto','analizadorSintactico.py',852),
  ('estatuto -> comentario','estatuto',1,'p_estatuto','analizadorSintactico.py',853),
  ('estatuto -> cuadrado','estatuto',1,'p_estatuto','analizadorSintactico.py',854),
  ('estatuto -> triangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',855),
  ('estatuto -> casa','estatuto',1,'p_estatuto','analizadorSintactico.py',856),
  ('estatuto -> rectangulo','estatuto',1,'p_estatuto','analizadorSintactico.py',857),
  ('estatuto -> cubo','estatuto',1,'p_estatuto','analizadorSintactico.py',858),
  ('estatuto -> trapecio','estatuto',1,'p_estatuto','analizadorSintactico.py',859),
  ('estatuto -> estrella','estatuto',1,'p_estatuto','analizadorSintactico.py',860),
  ('estatuto -> mueve','estatuto',1,'p_estatuto','analizadorSintactico.py',861),
  ('estatuto -> levanta','estatuto',1,'p_estatuto','analizadorSintactico.py',862),
  ('estatuto -> apoya','estatuto',1,'p_estatuto','analizadorSintactico.py',863),
  ('estatuto -> dimension','estatuto',1,'p_estatuto','analizadorSintactico.py',864),
  ('estatuto -> llamafuncion','estatuto',1,'p_estatuto','analizadorSintactico.py',865),
  ('estatuto -> return','estatuto',1,'p_estatuto','analizadorSintactico.py',866),
  ('estatuto -> if','estatuto',1,'p_estatuto','analizadorSintactico.py',867),
  ('comentario -> COMENTARIO','comentario',1,'p_comentario','analizadorSintactico.py',875),
  ('varcte -> ENTERO tagint','varcte',2,'p_varcte','analizadorSintactico.py',881),
  ('varcte -> FLOTANTE tagfloat','varcte',2,'p_varcte','analizadorSintactico.py',882),
  ('varcte -> CADENA tagcad','varcte',2,'p_varcte','analizadorSintactico.py',883),
  ('varcte -> CARACTER tagcar','varcte',2,'p_varcte','analizadorSintactico.py',884),
  ('varcte -> TRUE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',885),
  ('varcte -> FALSE tagbol','varcte',2,'p_varcte','analizadorSintactico.py',886),
  ('tagint -> empty','tagint',1,'p_tagint','analizadorSintactico.py',889),
  ('tagfloat -> empty','tagfloat',1,'p_tagfloat','analizadorSintactico.py',896),
  ('tagcad -> empty','tagcad',1,'p_tagcad','analizadorSintactico.py',903),
  ('tagcar -> empty','tagcar',1,'p_tagcar','analizadorSintactico.py',910),
  ('tagbol -> empty','tagbol',1,'p_tagbol','analizadorSintactico.py',917),
  ('ciclowhile -> WHILE taginiciawhile LPARENT expresion RPARENT tagwhile bloque tagregresawhile','ciclowhile',8,'p_ciclowhile','analizadorSintactico.py',926),
  ('taginiciawhile -> empty','taginiciawhile',1,'p_taginiciawhile','analizadorSintactico.py',930),
  ('tagwhile -> empty','tagwhile',1,'p_tagwhile','analizadorSintactico.py',934),
  ('tagregresawhile -> empty','tagregresawhile',1,'p_tagregresawhile','analizadorSintactico.py',946),
  ('ciclodowhile -> DO taginiciado bloque WHILE LPARENT expresion tagcondiciondo RPARENT PUNTOCOMA','ciclodowhile',9,'p_ciclodowhile','analizadorSintactico.py',955),
  ('taginiciado -> empty','taginiciado',1,'p_taginiciado','analizadorSintactico.py',960),
  ('tagcondiciondo -> empty','tagcondiciondo',1,'p_tagcondiciondo','analizadorSintactico.py',964),
  ('read -> READ LPARENT RPARENT PUNTOCOMA','read',4,'p_read','analizadorSintactico.py',978),
  ('readint -> READINT LPARENT RPARENT PUNTOCOMA','readint',4,'p_readint','analizadorSintactico.py',988),
  ('ciclofor -> FOR LPARENT asignacion expresion tagevaluafor asignacion RPARENT bloque tagasigna tagterminafor','ciclofor',10,'p_ciclofor','analizadorSintactico.py',997),
  ('tagevaluafor -> empty','tagevaluafor',1,'p_tagevaluafor','analizadorSintactico.py',1001),
  ('tagterminafor -> empty','tagterminafor',1,'p_tagterminafor','analizadorSintactico.py',1013),
  ('tagasigna -> empty','tagasigna',1,'p_tagasigna','analizadorSintactico.py',1018),
  ('if -> IF LPARENT expresion tagif RPARENT bloque if2','if',7,'p_if','analizadorSintactico.py',1025),
  ('if2 -> tagterminaif','if2',1,'p_if2','analizadorSintactico.py',1029),
  ('if2 -> ELSE tagelse bloque tagterminaif','if2',4,'p_if2','analizadorSintactico.py',1030),
  ('tagif -> empty','tagif',1,'p_tagif','analizadorSintactico.py',1033),
  ('tagelse -> empty','tagelse',1,'p_tagelse','analizadorSintactico.py',1044),
  ('tagterminaif -> empty','tagterminaif',1,'p_tagterminaif','analizadorSintactico.py',1052),
  ('return -> RETURN llegoRet expresion PUNTOCOMA','return',4,'p_return','analizadorSintactico.py',1057),
  ('llegoRet -> empty','llegoRet',1,'p_llegoRet','analizadorSintactico.py',1062),
  ('cuadrado -> CUADRADO LPARENT exp COMA exp COMA exp RPARENT tagcuadro PUNTOCOMA','cuadrado',10,'p_cuadrado','analizadorSintactico.py',1089),
  ('tagcuadro -> empty','tagcuadro',1,'p_tagcuadro','analizadorSintactico.py',1093),
  ('triangulo -> TRIANGULO LPARENT exp COMA exp COMA exp RPARENT tagtriangulo PUNTOCOMA','triangulo',10,'p_triangulo','analizadorSintactico.py',1099),
  ('tagtriangulo -> empty','tagtriangulo',1,'p_tagtriangulo','analizadorSintactico.py',1103),
  ('rectangulo -> RECTANGULO LPARENT exp COMA exp RPARENT PUNTOCOMA','rectangulo',7,'p_rectangulo','analizadorSintactico.py',1108),
  ('casa -> CASA LPARENT exp COMA exp RPARENT PUNTOCOMA','casa',7,'p_casa','analizadorSintactico.py',1112),
  ('estrella -> ESTRELLA LPARENT exp RPARENT PUNTOCOMA','estrella',5,'p_estrella','analizadorSintactico.py',1116),
  ('cubo -> CUBO LPARENT exp COMA exp COMA exp RPARENT tagcubo PUNTOCOMA','cubo',10,'p_cubo','analizadorSintactico.py',1120),
  ('tagcubo -> empty','tagcubo',1,'p_tagcubo','analizadorSintactico.py',1124),
  ('mueve -> MUEVE LPARENT exp COMA exp RPARENT tagmueve PUNTOCOMA','mueve',8,'p_mueve','analizadorSintactico.py',1129),
  ('tagmueve -> empty','tagmueve',1,'p_tagmueve','analizadorSintactico.py',1133),
  ('levanta -> LEVANTA LPARENT RPARENT PUNTOCOMA','levanta',4,'p_levanta','analizadorSintactico.py',1138),
  ('apoya -> APOYA LPARENT RPARENT PUNTOCOMA','apoya',4,'p_apoya','analizadorSintactico.py',1144),
  ('trapecio -> TRAPECIO LPARENT exp COMA exp RPARENT PUNTOCOMA','trapecio',7,'p_trapecio','analizadorSintactico.py',1150),
  ('dimension -> DIMENSION LPARENT exp RPARENT PUNTOCOMA','dimension',5,'p_dimension','analizadorSintactico.py',1154),
  ('function -> FUNCTION pfunc','function',2,'p_function','analizadorSintactico.py',1159),
  ('pfunc -> tipo ID buildFunc LPARENT funct11','pfunc',5,'p_pfunc','analizadorSintactico.py',1164),
  ('pfunc -> VOID ID buildFunc LPARENT funct11','pfunc',5,'p_pfunc','analizadorSintactico.py',1165),
  ('buildFunc -> empty','buildFunc',1,'p_buildFunc','analizadorSintactico.py',1168),
  ('funct11 -> function4','funct11',1,'p_funct11','analizadorSintactico.py',1184),
  ('funct11 -> initParamTable funct2','funct11',2,'p_funct111','analizadorSintactico.py',1187),
  ('initParamTable -> empty','initParamTable',1,'p_initParamTable','analizadorSintactico.py',1190),
  ('funct2 -> tipo ID initParams funct3','funct2',4,'p_funct2','analizadorSintactico.py',1201),
  ('initParams -> empty','initParams',1,'p_initParams','analizadorSintactico.py',1204),
  ('funct3 -> COMA funct2','funct3',2,'p_funtion3','analizadorSintactico.py',1226),
  ('funct3 -> function4','funct3',1,'p_function31','analizadorSintactico.py',1230),
  ('function4 -> RPARENT initFunc bloque noinitFunc','function4',4,'p_function4','analizadorSintactico.py',1234),
  ('initFunc -> empty','initFunc',1,'p_initFunc','analizadorSintactico.py',1237),
  ('noinitFunc -> empty','noinitFunc',1,'p_noinitFunc','analizadorSintactico.py',1245),
  ('llamafuncion -> ID LPARENT tagverificafuncion llamaf11','llamafuncion',4,'p_llamafuncion','analizadorSintactico.py',1263),
  ('llamaf11 -> llamaf2','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1266),
  ('llamaf11 -> llamaf4','llamaf11',1,'p_llamaf11','analizadorSintactico.py',1267),
  ('llamaf2 -> exp tagrevisaparam llamaf3','llamaf2',3,'p_llamaf2','analizadorSintactico.py',1270),
  ('llamaf3 -> COMA tagotroargumento llamaf2','llamaf3',3,'p_llamaf3','analizadorSintactico.py',1273),
  ('llamaf3 -> llamaf4','llamaf3',1,'p_llamaf3','analizadorSintactico.py',1274),
  ('llamaf4 -> RPARENT tagterminallamada PUNTOCOMA','llamaf4',3,'p_llamaf4','analizadorSintactico.py',1277),
  ('tagverificafuncion -> empty','tagverificafuncion',1,'p_tagverificafuncion','analizadorSintactico.py',1280),
  ('tagrevisaparam -> empty','tagrevisaparam',1,'p_tagrevisaparam','analizadorSintactico.py',1300),
  ('tagotroargumento -> empty','tagotroargumento',1,'p_tagotroargumento','analizadorSintactico.py',1315),
  ('tagterminallamada -> empty','tagterminallamada',1,'p_tagterminallamada','analizadorSintactico.py',1320),
  ('empty -> <empty>','empty',0,'p_empty','analizadorSintactico.py',1335),
]
